2025-06-12 09:30:56 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final MDC:[traceId=, spanId=]
2025-06-12 09:30:56 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-06-12 09:30:56 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-06-12 09:30:56 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-06-12 09:30:56 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-06-12 09:30:56 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-06-12 09:30:56 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-06-12 09:30:56 [background-preinit] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-06-12 09:30:56 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-06-12 09:30:56 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-06-12 09:30:56 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-06-12 09:30:56 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-06-12 09:30:56 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-06-12 09:30:56 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-06-12 09:31:11 [restartedMain] DEBUG o.h.jpa.internal.util.LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@2639bdce
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Study/java-banking-phase2/backend/transaction-service/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.example.transaction_service.entity.Transaction]
	Mapping files names []
	Properties [] MDC:[traceId=, spanId=]
2025-06-12 09:31:11 [restartedMain] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator]. MDC:[traceId=, spanId=]
2025-06-12 09:31:11 [restartedMain] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator]. MDC:[traceId=, spanId=]
2025-06-12 09:31:11 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final MDC:[traceId=, spanId=]
2025-06-12 09:31:11 [restartedMain] DEBUG org.hibernate.cfg.Environment - HHH000206: 'hibernate.properties' not found MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator] MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator] MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator] MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator] MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned] MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator] MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator] MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator] MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator] MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator] MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.h.c.i.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@69583073 MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@69583073 MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@69583073 MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@1cc34e5d MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@1cc34e5d MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@4da7cebb MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@4da7cebb MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@b9267b0 MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@b9267b0 MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@23e10519 MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@23e10519 MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@23e10519 MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@25d6169e MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@25d6169e MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@25d6169e MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@5677c689 MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@5677c689 MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@4ec09410 MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@6522891c MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@6522891c MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@705511c0 MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@187ec2cd MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@52d4a5c6 MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@52d4a5c6 MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@52d4a5c6 MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@234face9 MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@234face9 MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@234face9 MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@7bcc7251 MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@7bcc7251 MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@7bcc7251 MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@15caaf4f MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@15caaf4f MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@15caaf4f MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@62c7d2a5 MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@62c7d2a5 MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@62c7d2a5 MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@3c3112f0 MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@3c3112f0 MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@24f7a1dd MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@24f7a1dd MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@6487c2db MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@6487c2db MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@6487c2db MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@38897614 MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@c1b5567 MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@c1b5567 MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@157bf470 MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@4f307d1e MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@4f307d1e MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@4f307d1e MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@3cfa8b3a MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@6a1c51af MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@200ef0e8 MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@6c9ab17a MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@6c9ab17a MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@4d15488 MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@4d15488 MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@cc8ec94 MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@5b96c455 MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@62bebf3c MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@6c45d2f7 MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@27222fa7 MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@4a7bf37a MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@5dabf256 MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@5dabf256 MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@1fbb417e MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@1fbb417e MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@29d21a39 MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@29d21a39 MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@3c27cc5a MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@3c27cc5a MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@3e1ca0ca MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@3e1ca0ca MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7be9b6c6 MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@42d37850 MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@4014394c MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@4014394c MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@1b55db74 MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2dbc015e MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@74f4fd41 MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@15cb64ca MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@15cb64ca MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@20f0937c MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6d0bc0cd MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@3e4636d8 MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@3e4636d8 MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@70e5f8ee MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@70e5f8ee MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@54aafefd MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@54aafefd MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@54aafefd MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@6714410d MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@6714410d MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@6714410d MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@686b4bc1 MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@3796fcaa MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@3448b1b3 MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@3448b1b3 MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@7191921e MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@7191921e MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@7191921e MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4316eaae MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@43e52dca MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@32d1c92c MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@32d1c92c MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@4f2dbc0a MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@4f2dbc0a MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@4f2dbc0a MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@3b1a6cdb MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@3b1a6cdb MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@51fb9d0f MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@51fb9d0f MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@6d5fa6b5 MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@6d5fa6b5 MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@4fb08af8 MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@4fb08af8 MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@27244b61 MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@27244b61 MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@2abaa96f MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@3a40c883 MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@66e85394 MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@66e85394 MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@7505549b MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@2ac8f67 MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@6a60f2b1 MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@1d110477 MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@42ef2ac2 MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@24de424f MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@4946d91f MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@5ce14efc MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@6763c698 MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@526e657] into BootstrapContext; was [null] MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@526e657) [was null] MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@61d3cc8f] into BootstrapContext; was [null] MDC:[traceId=, spanId=]
2025-06-12 09:31:12 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@7dcfaf97] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@12743600] MDC:[traceId=, spanId=]
2025-06-12 09:31:13 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@526e657] MDC:[traceId=, spanId=]
2025-06-12 09:31:13 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@526e657] MDC:[traceId=, spanId=]
2025-06-12 09:31:13 [restartedMain] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Database ->
	   name : MySQL
	version : 8.0.42
	  major : 8
	  minor : 0 MDC:[traceId=, spanId=]
2025-06-12 09:31:13 [restartedMain] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Driver ->
	   name : MySQL Connector/J
	version : mysql-connector-j-8.3.0 (Revision: 805f872a57875f311cb82487efcfb070411a3fa0)
	  major : 8
	  minor : 3 MDC:[traceId=, spanId=]
2025-06-12 09:31:13 [restartedMain] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - JDBC version : 4.2 MDC:[traceId=, spanId=]
2025-06-12 09:31:13 [restartedMain] DEBUG org.hibernate.orm.dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQLDialect, version: 8.0.42 MDC:[traceId=, spanId=]
2025-06-12 09:31:13 [restartedMain] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case MDC:[traceId=, spanId=]
2025-06-12 09:31:13 [restartedMain] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers MDC:[traceId=, spanId=]
2025-06-12 09:31:13 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@465c6959) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@30565145) MDC:[traceId=, spanId=]
2025-06-12 09:31:13 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@317c512e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@126f5f05) MDC:[traceId=, spanId=]
2025-06-12 09:31:13 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@375cfab0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@35024967) MDC:[traceId=, spanId=]
2025-06-12 09:31:13 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@66a49bc8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@edb776e) MDC:[traceId=, spanId=]
2025-06-12 09:31:13 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5e02957f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@796cb6a9) MDC:[traceId=, spanId=]
2025-06-12 09:31:13 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3b540897) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6e617894) MDC:[traceId=, spanId=]
2025-06-12 09:31:13 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2402a14a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3847829d) MDC:[traceId=, spanId=]
2025-06-12 09:31:13 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@234c35b2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@460c5c97) MDC:[traceId=, spanId=]
2025-06-12 09:31:13 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7735aded) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@73e29afc) MDC:[traceId=, spanId=]
2025-06-12 09:31:13 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor) MDC:[traceId=, spanId=]
2025-06-12 09:31:13 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor) MDC:[traceId=, spanId=]
2025-06-12 09:31:13 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor) MDC:[traceId=, spanId=]
2025-06-12 09:31:13 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT)) MDC:[traceId=, spanId=]
2025-06-12 09:31:13 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT)) MDC:[traceId=, spanId=]
2025-06-12 09:31:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@a882e26 MDC:[traceId=, spanId=]
2025-06-12 09:31:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@7505549b` MDC:[traceId=, spanId=]
2025-06-12 09:31:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-06-12 09:31:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-06-12 09:31:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-06-12 09:31:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-06-12 09:31:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-06-12 09:31:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-06-12 09:31:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-06-12 09:31:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-06-12 09:31:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-06-12 09:31:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-06-12 09:31:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-06-12 09:31:13 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-06-12 09:31:13 [restartedMain] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4b3b425f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@12705561] MDC:[traceId=, spanId=]
2025-06-12 09:31:13 [restartedMain] DEBUG o.h.boot.model.relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}] MDC:[traceId=, spanId=]
2025-06-12 09:31:13 [restartedMain] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Transaction MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity com.example.transaction_service.entity.Transaction on table tbl_transaction MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE') MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.example.transaction_service.entity.Transaction] is safe MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property id with lazy=false MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:id] MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for id MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.id MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property id MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, assigned, , ...) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property amount with lazy=false MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:amount] MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for amount MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.amount MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property amount MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property bankType with lazy=false MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:bankType] MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for bankType MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.bank_type MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property bankType MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property currency with lazy=false MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:currency] MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for currency MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.currency MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property currency MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property description with lazy=false MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:description] MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for description MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.description MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property description MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property destinationBankCode with lazy=false MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:destinationBankCode] MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for destinationBankCode MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.destination_bank_code MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property destinationBankCode MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property destinationBankName with lazy=false MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:destinationBankName] MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for destinationBankName MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.destination_bank_name MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property destinationBankName MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property failedReason with lazy=false MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:failedReason] MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for failedReason MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.failed_reason MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property failedReason MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property fromAccountNumber with lazy=false MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:fromAccountNumber] MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for fromAccountNumber MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.from_account_number MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property fromAccountNumber MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property referenceCode with lazy=false MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:referenceCode] MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for referenceCode MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.reference_code MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property referenceCode MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property status with lazy=false MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:status] MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for status MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.status MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property status MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property timestamp with lazy=false MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:timestamp] MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for timestamp MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.timestamp MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property timestamp MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property toAccountNumber with lazy=false MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:toAccountNumber] MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for toAccountNumber MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.to_account_number MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property toAccountNumber MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property type with lazy=false MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:type] MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for type MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.type MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property type MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: com.example.transaction_service.entity MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.j.e.i.CallbackDefinitionResolverLegacyImpl - Adding prePersist as PrePersist callback for entity com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bankType MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for currency MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for description MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for destinationBankCode MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for destinationBankName MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for failedReason MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for fromAccountNumber MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for referenceCode MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for timestamp MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for toAccountNumber MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for type MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [tbl_transaction] MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Building session factory MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Instantiating SessionFactory with settings: {jdk.tls.rejectClientInitiatedRenegotiation=true, java.specification.version=17, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@75121623, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1258, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Study\java-banking-phase2\backend\transaction-service\target\classes;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-starter-actuator\3.3.11\spring-boot-starter-actuator-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-starter\3.3.11\spring-boot-starter-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.3.11\spring-boot-starter-logging-3.3.11.jar;C:\Users\thienvy\.m2\repository\ch\qos\logback\logback-classic\1.5.18\logback-classic-1.5.18.jar;C:\Users\thienvy\.m2\repository\ch\qos\logback\logback-core\1.5.18\logback-core-1.5.18.jar;C:\Users\thienvy\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.23.1\log4j-to-slf4j-2.23.1.jar;C:\Users\thienvy\.m2\repository\org\apache\logging\log4j\log4j-api\2.23.1\log4j-api-2.23.1.jar;C:\Users\thienvy\.m2\repository\org\slf4j\jul-to-slf4j\2.0.17\jul-to-slf4j-2.0.17.jar;C:\Users\thienvy\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\thienvy\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-actuator-autoconfigure\3.3.11\spring-boot-actuator-autoconfigure-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-actuator\3.3.11\spring-boot-actuator-3.3.11.jar;C:\Users\thienvy\.m2\repository\io\micrometer\micrometer-observation\1.13.13\micrometer-observation-1.13.13.jar;C:\Users\thienvy\.m2\repository\io\micrometer\micrometer-commons\1.13.13\micrometer-commons-1.13.13.jar;C:\Users\thienvy\.m2\repository\io\micrometer\micrometer-jakarta9\1.13.13\micrometer-jakarta9-1.13.13.jar;C:\Users\thienvy\.m2\repository\io\micrometer\micrometer-core\1.13.13\micrometer-core-1.13.13.jar;C:\Users\thienvy\.m2\repository\org\hdrhistogram\HdrHistogram\2.2.2\HdrHistogram-2.2.2.jar;C:\Users\thienvy\.m2\repository\org\latencyutils\LatencyUtils\2.0.3\LatencyUtils-2.0.3.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.3.11\spring-boot-starter-data-jpa-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.3.11\spring-boot-starter-aop-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\aspectj\aspectjweaver\1.9.24\aspectjweaver-1.9.24.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.3.11\spring-boot-starter-jdbc-3.3.11.jar;C:\Users\thienvy\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\thienvy\.m2\repository\org\springframework\spring-jdbc\6.1.19\spring-jdbc-6.1.19.jar;C:\Users\thienvy\.m2\repository\org\hibernate\orm\hibernate-core\6.5.3.Final\hibernate-core-6.5.3.Final.jar;C:\Users\thienvy\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\thienvy\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\thienvy\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\thienvy\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\thienvy\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\thienvy\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\thienvy\.m2\repository\net\bytebuddy\byte-buddy\1.14.19\byte-buddy-1.14.19.jar;C:\Users\thienvy\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\thienvy\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\thienvy\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\thienvy\.m2\repository\org\springframework\data\spring-data-jpa\3.3.11\spring-data-jpa-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\springframework\data\spring-data-commons\3.3.11\spring-data-commons-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\springframework\spring-orm\6.1.19\spring-orm-6.1.19.jar;C:\Users\thienvy\.m2\repository\org\springframework\spring-context\6.1.19\spring-context-6.1.19.jar;C:\Users\thienvy\.m2\repository\org\springframework\spring-tx\6.1.19\spring-tx-6.1.19.jar;C:\Users\thienvy\.m2\repository\org\springframework\spring-beans\6.1.19\spring-beans-6.1.19.jar;C:\Users\thienvy\.m2\repository\org\springframework\spring-aspects\6.1.19\spring-aspects-6.1.19.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.3.11\spring-boot-starter-web-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.3.11\spring-boot-starter-json-3.3.11.jar;C:\Users\thienvy\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.17.3\jackson-module-parameter-names-2.17.3.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.3.11\spring-boot-starter-tomcat-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.40\tomcat-embed-core-10.1.40.jar;C:\Users\thienvy\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.40\tomcat-embed-websocket-10.1.40.jar;C:\Users\thienvy\.m2\repository\org\springframework\spring-web\6.1.19\spring-web-6.1.19.jar;C:\Users\thienvy\.m2\repository\org\springframework\spring-webmvc\6.1.19\spring-webmvc-6.1.19.jar;C:\Users\thienvy\.m2\repository\org\springframework\spring-expression\6.1.19\spring-expression-6.1.19.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-devtools\3.3.11\spring-boot-devtools-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot\3.3.11\spring-boot-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.3.11\spring-boot-autoconfigure-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.3.11\spring-boot-starter-security-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\springframework\spring-aop\6.1.19\spring-aop-6.1.19.jar;C:\Users\thienvy\.m2\repository\org\springframework\security\spring-security-config\6.3.9\spring-security-config-6.3.9.jar;C:\Users\thienvy\.m2\repository\org\springframework\security\spring-security-web\6.3.9\spring-security-web-6.3.9.jar;C:\Users\thienvy\.m2\repository\org\springframework\security\spring-security-oauth2-resource-server\6.3.9\spring-security-oauth2-resource-server-6.3.9.jar;C:\Users\thienvy\.m2\repository\org\springframework\security\spring-security-core\6.3.9\spring-security-core-6.3.9.jar;C:\Users\thienvy\.m2\repository\org\springframework\security\spring-security-crypto\6.3.9\spring-security-crypto-6.3.9.jar;C:\Users\thienvy\.m2\repository\org\springframework\spring-core\6.1.19\spring-core-6.1.19.jar;C:\Users\thienvy\.m2\repository\org\springframework\spring-jcl\6.1.19\spring-jcl-6.1.19.jar;C:\Users\thienvy\.m2\repository\org\springframework\security\spring-security-oauth2-jose\6.3.9\spring-security-oauth2-jose-6.3.9.jar;C:\Users\thienvy\.m2\repository\com\nimbusds\nimbus-jose-jwt\9.37.3\nimbus-jose-jwt-9.37.3.jar;C:\Users\thienvy\.m2\repository\com\github\stephenc\jcip\jcip-annotations\1.0-1\jcip-annotations-1.0-1.jar;C:\Users\thienvy\.m2\repository\org\springframework\security\spring-security-oauth2-core\6.3.9\spring-security-oauth2-core-6.3.9.jar;C:\Users\thienvy\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\thienvy\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\thienvy\.m2\repository\com\mysql\mysql-connector-j\8.3.0\mysql-connector-j-8.3.0.jar;C:\Users\thienvy\.m2\repository\org\projectlombok\lombok\1.18.38\lombok-1.18.38.jar;C:\Users\thienvy\.m2\repository\org\mapstruct\mapstruct\1.5.5.Final\mapstruct-1.5.5.Final.jar;C:\Users\thienvy\.m2\repository\org\mapstruct\mapstruct-processor\1.5.5.Final\mapstruct-processor-1.5.5.Final.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-starter-validation\3.3.11\spring-boot-starter-validation-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.40\tomcat-embed-el-10.1.40.jar;C:\Users\thienvy\.m2\repository\org\hibernate\validator\hibernate-validator\8.0.2.Final\hibernate-validator-8.0.2.Final.jar;C:\Users\thienvy\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\thienvy\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-ui\2.0.2\springdoc-openapi-starter-webmvc-ui-2.0.2.jar;C:\Users\thienvy\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-api\2.0.2\springdoc-openapi-starter-webmvc-api-2.0.2.jar;C:\Users\thienvy\.m2\repository\org\springdoc\springdoc-openapi-starter-common\2.0.2\springdoc-openapi-starter-common-2.0.2.jar;C:\Users\thienvy\.m2\repository\io\swagger\core\v3\swagger-core-jakarta\2.2.7\swagger-core-jakarta-2.2.7.jar;C:\Users\thienvy\.m2\repository\org\apache\commons\commons-lang3\3.14.0\commons-lang3-3.14.0.jar;C:\Users\thienvy\.m2\repository\io\swagger\core\v3\swagger-annotations-jakarta\2.2.7\swagger-annotations-jakarta-2.2.7.jar;C:\Users\thienvy\.m2\repository\io\swagger\core\v3\swagger-models-jakarta\2.2.7\swagger-models-jakarta-2.2.7.jar;C:\Users\thienvy\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-yaml\2.17.3\jackson-dataformat-yaml-2.17.3.jar;C:\Users\thienvy\.m2\repository\org\webjars\swagger-ui\4.15.5\swagger-ui-4.15.5.jar;C:\Users\thienvy\.m2\repository\org\webjars\webjars-locator-core\0.58\webjars-locator-core-0.58.jar;C:\Users\thienvy\.m2\repository\io\github\classgraph\classgraph\4.8.149\classgraph-4.8.149.jar;C:\Study\java-banking-phase2\backend\common-service\target\classes;C:\Users\thienvy\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.17.3\jackson-databind-2.17.3.jar;C:\Users\thienvy\.m2\repository\org\apache\dubbo\dubbo-spring-boot-starter\3.3.2\dubbo-spring-boot-starter-3.3.2.jar;C:\Users\thienvy\.m2\repository\org\apache\dubbo\dubbo-spring-boot-autoconfigure\3.3.2\dubbo-spring-boot-autoconfigure-3.3.2.jar;C:\Users\thienvy\.m2\repository\org\apache\dubbo\dubbo-spring-boot-autoconfigure-compatible\3.3.2\dubbo-spring-boot-autoconfigure-compatible-3.3.2.jar;C:\Users\thienvy\.m2\repository\org\apache\dubbo\dubbo\3.3.2\dubbo-3.3.2.jar;C:\Users\thienvy\.m2\repository\org\javassist\javassist\3.30.2-GA\javassist-3.30.2-GA.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-all\4.1.119.Final\netty-all-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-codec-dns\4.1.119.Final\netty-codec-dns-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-codec-haproxy\4.1.119.Final\netty-codec-haproxy-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-codec-http\4.1.119.Final\netty-codec-http-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-codec-http2\4.1.119.Final\netty-codec-http2-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-codec-memcache\4.1.119.Final\netty-codec-memcache-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-codec-mqtt\4.1.119.Final\netty-codec-mqtt-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-codec-redis\4.1.119.Final\netty-codec-redis-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-codec-smtp\4.1.119.Final\netty-codec-smtp-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-codec-socks\4.1.119.Final\netty-codec-socks-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-codec-stomp\4.1.119.Final\netty-codec-stomp-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-codec-xml\4.1.119.Final\netty-codec-xml-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-handler-proxy\4.1.119.Final\netty-handler-proxy-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-handler-ssl-ocsp\4.1.119.Final\netty-handler-ssl-ocsp-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-resolver-dns\4.1.119.Final\netty-resolver-dns-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-transport-rxtx\4.1.119.Final\netty-transport-rxtx-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-transport-sctp\4.1.119.Final\netty-transport-sctp-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-transport-udt\4.1.119.Final\netty-transport-udt-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-transport-classes-kqueue\4.1.119.Final\netty-transport-classes-kqueue-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-resolver-dns-classes-macos\4.1.119.Final\netty-resolver-dns-classes-macos-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final-linux-x86_64.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final-linux-aarch_64.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final-linux-riscv64.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-transport-native-kqueue\4.1.119.Final\netty-transport-native-kqueue-4.1.119.Final-osx-x86_64.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-transport-native-kqueue\4.1.119.Final\netty-transport-native-kqueue-4.1.119.Final-osx-aarch_64.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-resolver-dns-native-macos\4.1.119.Final\netty-resolver-dns-native-macos-4.1.119.Final-osx-x86_64.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-resolver-dns-native-macos\4.1.119.Final\netty-resolver-dns-native-macos-4.1.119.Final-osx-aarch_64.jar;C:\Users\thienvy\.m2\repository\org\apache\dubbo\hessian-lite\4.0.3\hessian-lite-4.0.3.jar;C:\Users\thienvy\.m2\repository\com\alibaba\fastjson2\fastjson2\2.0.53\fastjson2-2.0.53.jar;C:\Users\thienvy\.m2\repository\com\google\protobuf\protobuf-java\3.25.5\protobuf-java-3.25.5.jar;C:\Users\thienvy\.m2\repository\org\apache\curator\curator-framework\5.1.0\curator-framework-5.1.0.jar;C:\Users\thienvy\.m2\repository\org\apache\curator\curator-client\5.1.0\curator-client-5.1.0.jar;C:\Users\thienvy\.m2\repository\com\google\guava\guava\27.0.1-jre\guava-27.0.1-jre.jar;C:\Users\thienvy\.m2\repository\com\google\guava\failureaccess\1.0.1\failureaccess-1.0.1.jar;C:\Users\thienvy\.m2\repository\com\google\guava\listenablefuture\9999.0-empty-to-avoid-conflict-with-guava\listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar;C:\Users\thienvy\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\thienvy\.m2\repository\org\checkerframework\checker-qual\2.5.2\checker-qual-2.5.2.jar;C:\Users\thienvy\.m2\repository\com\google\errorprone\error_prone_annotations\2.2.0\error_prone_annotations-2.2.0.jar;C:\Users\thienvy\.m2\repository\com\google\j2objc\j2objc-annotations\1.1\j2objc-annotations-1.1.jar;C:\Users\thienvy\.m2\repository\org\codehaus\mojo\animal-sniffer-annotations\1.17\animal-sniffer-annotations-1.17.jar;C:\Users\thienvy\.m2\repository\org\apache\zookeeper\zookeeper\3.7.1\zookeeper-3.7.1.jar;C:\Users\thienvy\.m2\repository\org\apache\zookeeper\zookeeper-jute\3.7.1\zookeeper-jute-3.7.1.jar;C:\Users\thienvy\.m2\repository\org\apache\yetus\audience-annotations\0.12.0\audience-annotations-0.12.0.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-handler\4.1.119.Final\netty-handler-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-common\4.1.119.Final\netty-common-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-resolver\4.1.119.Final\netty-resolver-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-buffer\4.1.119.Final\netty-buffer-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-transport\4.1.119.Final\netty-transport-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-transport-native-unix-common\4.1.119.Final\netty-transport-native-unix-common-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-codec\4.1.119.Final\netty-codec-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-transport-classes-epoll\4.1.119.Final\netty-transport-classes-epoll-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\org\slf4j\slf4j-api\2.0.17\slf4j-api-2.0.17.jar;C:\Users\thienvy\.m2\repository\org\apache\curator\curator-recipes\5.5.0\curator-recipes-5.5.0.jar;C:\Users\thienvy\.m2\repository\org\apache\curator\curator-x-discovery\5.5.0\curator-x-discovery-5.5.0.jar;C:\Users\thienvy\.m2\repository\org\springframework\cloud\spring-cloud-starter-vault-config\4.1.1\spring-cloud-starter-vault-config-4.1.1.jar;C:\Users\thienvy\.m2\repository\org\apache\httpcomponents\client5\httpclient5\5.3.1\httpclient5-5.3.1.jar;C:\Users\thienvy\.m2\repository\org\apache\httpcomponents\core5\httpcore5-h2\5.2.5\httpcore5-h2-5.2.5.jar;C:\Users\thienvy\.m2\repository\org\apache\httpcomponents\core5\httpcore5\5.2.5\httpcore5-5.2.5.jar;C:\Users\thienvy\.m2\repository\org\springframework\cloud\spring-cloud-starter\4.1.2\spring-cloud-starter-4.1.2.jar;C:\Users\thienvy\.m2\repository\org\springframework\cloud\spring-cloud-context\4.1.2\spring-cloud-context-4.1.2.jar;C:\Users\thienvy\.m2\repository\org\springframework\cloud\spring-cloud-commons\4.1.2\spring-cloud-commons-4.1.2.jar;C:\Users\thienvy\.m2\repository\org\springframework\security\spring-security-rsa\1.1.2\spring-security-rsa-1.1.2.jar;C:\Users\thienvy\.m2\repository\org\bouncycastle\bcprov-jdk18on\1.77\bcprov-jdk18on-1.77.jar;C:\Users\thienvy\.m2\repository\org\springframework\cloud\spring-cloud-vault-config\4.1.1\spring-cloud-vault-config-4.1.1.jar;C:\Users\thienvy\.m2\repository\org\springframework\vault\spring-vault-core\3.1.1\spring-vault-core-3.1.1.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-starter-data-redis\3.3.11\spring-boot-starter-data-redis-3.3.11.jar;C:\Users\thienvy\.m2\repository\io\lettuce\lettuce-core\6.3.2.RELEASE\lettuce-core-6.3.2.RELEASE.jar;C:\Users\thienvy\.m2\repository\io\projectreactor\reactor-core\3.6.16\reactor-core-3.6.16.jar;C:\Users\thienvy\.m2\repository\org\springframework\data\spring-data-redis\3.3.11\spring-data-redis-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\springframework\data\spring-data-keyvalue\3.3.11\spring-data-keyvalue-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\springframework\spring-oxm\6.1.19\spring-oxm-6.1.19.jar;C:\Users\thienvy\.m2\repository\org\springframework\spring-context-support\6.1.19\spring-context-support-6.1.19.jar;C:\Users\thienvy\.m2\repository\org\springframework\cloud\spring-cloud-stream\4.2.1\spring-cloud-stream-4.2.1.jar;C:\Users\thienvy\.m2\repository\org\springframework\spring-messaging\6.1.19\spring-messaging-6.1.19.jar;C:\Users\thienvy\.m2\repository\org\springframework\integration\spring-integration-core\6.3.9\spring-integration-core-6.3.9.jar;C:\Users\thienvy\.m2\repository\org\springframework\integration\spring-integration-jmx\6.3.9\spring-integration-jmx-6.3.9.jar;C:\Users\thienvy\.m2\repository\org\springframework\retry\spring-retry\2.0.11\spring-retry-2.0.11.jar;C:\Users\thienvy\.m2\repository\org\springframework\cloud\spring-cloud-function-context\4.2.2\spring-cloud-function-context-4.2.2.jar;C:\Users\thienvy\.m2\repository\org\springframework\cloud\spring-cloud-function-core\4.2.2\spring-cloud-function-core-4.2.2.jar;C:\Users\thienvy\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-joda\2.17.3\jackson-datatype-joda-2.17.3.jar;C:\Users\thienvy\.m2\repository\joda-time\joda-time\2.10.14\joda-time-2.10.14.jar;C:\Users\thienvy\.m2\repository\org\springframework\cloud\spring-cloud-starter-stream-kafka\4.2.1\spring-cloud-starter-stream-kafka-4.2.1.jar;C:\Users\thienvy\.m2\repository\org\springframework\cloud\spring-cloud-stream-binder-kafka\4.2.1\spring-cloud-stream-binder-kafka-4.2.1.jar;C:\Users\thienvy\.m2\repository\org\springframework\cloud\spring-cloud-stream-binder-kafka-core\4.2.1\spring-cloud-stream-binder-kafka-core-4.2.1.jar;C:\Users\thienvy\.m2\repository\org\springframework\integration\spring-integration-kafka\6.3.9\spring-integration-kafka-6.3.9.jar;C:\Users\thienvy\.m2\repository\org\springframework\kafka\spring-kafka\3.2.8\spring-kafka-3.2.8.jar;C:\Users\thienvy\.m2\repository\org\apache\kafka\kafka-clients\3.7.2\kafka-clients-3.7.2.jar;C:\Users\thienvy\.m2\repository\com\github\luben\zstd-jni\1.5.6-4\zstd-jni-1.5.6-4.jar;C:\Users\thienvy\.m2\repository\org\lz4\lz4-java\1.8.0\lz4-java-1.8.0.jar;C:\Users\thienvy\.m2\repository\org\xerial\snappy\snappy-java\1.1.10.5\snappy-java-1.1.10.5.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-starter-oauth2-resource-server\3.3.11\spring-boot-starter-oauth2-resource-server-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\keycloak\keycloak-admin-client\26.0.0\keycloak-admin-client-26.0.0.jar;C:\Users\thienvy\.m2\repository\org\keycloak\keycloak-client-common-synced\26.0.0\keycloak-client-common-synced-26.0.0.jar;C:\Users\thienvy\.m2\repository\org\jboss\logging\commons-logging-jboss-logging\1.0.0.Final\commons-logging-jboss-logging-1.0.0.Final.jar;C:\Users\thienvy\.m2\repository\org\apache\httpcomponents\httpclient\4.5.14\httpclient-4.5.14.jar;C:\Users\thienvy\.m2\repository\org\apache\httpcomponents\httpcore\4.4.16\httpcore-4.4.16.jar;C:\Users\thienvy\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.17.3\jackson-core-2.17.3.jar;C:\Users\thienvy\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.17.3\jackson-annotations-2.17.3.jar;C:\Users\thienvy\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.17.3\jackson-datatype-jdk8-2.17.3.jar;C:\Users\thienvy\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.17.3\jackson-datatype-jsr310-2.17.3.jar;C:\Users\thienvy\.m2\repository\org\eclipse\microprofile\openapi\microprofile-openapi-api\3.1.1\microprofile-openapi-api-3.1.1.jar;C:\Users\thienvy\.m2\repository\org\jboss\resteasy\resteasy-client\6.2.9.Final\resteasy-client-6.2.9.Final.jar;C:\Users\thienvy\.m2\repository\org\jboss\resteasy\resteasy-client-api\6.2.9.Final\resteasy-client-api-6.2.9.Final.jar;C:\Users\thienvy\.m2\repository\org\jboss\resteasy\resteasy-core-spi\6.2.9.Final\resteasy-core-spi-6.2.9.Final.jar;C:\Users\thienvy\.m2\repository\org\jboss\resteasy\resteasy-core\6.2.9.Final\resteasy-core-6.2.9.Final.jar;C:\Users\thienvy\.m2\repository\org\jboss\jandex\2.4.5.Final\jandex-2.4.5.Final.jar;C:\Users\thienvy\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\thienvy\.m2\repository\com\ibm\async\asyncutil\0.1.0\asyncutil-0.1.0.jar;C:\Users\thienvy\.m2\repository\commons-codec\commons-codec\1.16.1\commons-codec-1.16.1.jar;C:\Users\thienvy\.m2\repository\jakarta\ws\rs\jakarta.ws.rs-api\3.1.0\jakarta.ws.rs-api-3.1.0.jar;C:\Users\thienvy\.m2\repository\org\reactivestreams\reactive-streams\1.0.4\reactive-streams-1.0.4.jar;C:\Users\thienvy\.m2\repository\org\jboss\resteasy\resteasy-multipart-provider\6.2.9.Final\resteasy-multipart-provider-6.2.9.Final.jar;C:\Users\thienvy\.m2\repository\jakarta\mail\jakarta.mail-api\2.1.3\jakarta.mail-api-2.1.3.jar;C:\Users\thienvy\.m2\repository\org\eclipse\angus\angus-mail\2.0.3\angus-mail-2.0.3.jar;C:\Users\thienvy\.m2\repository\org\apache\james\apache-mime4j-dom\0.8.11\apache-mime4j-dom-0.8.11.jar;C:\Users\thienvy\.m2\repository\org\apache\james\apache-mime4j-core\0.8.11\apache-mime4j-core-0.8.11.jar;C:\Users\thienvy\.m2\repository\org\apache\james\apache-mime4j-storage\0.8.11\apache-mime4j-storage-0.8.11.jar;C:\Users\thienvy\.m2\repository\commons-io\commons-io\2.11.0\commons-io-2.11.0.jar;C:\Users\thienvy\.m2\repository\org\jboss\resteasy\resteasy-jackson2-provider\6.2.9.Final\resteasy-jackson2-provider-6.2.9.Final.jar;C:\Users\thienvy\.m2\repository\com\fasterxml\jackson\jakarta\rs\jackson-jakarta-rs-base\2.17.3\jackson-jakarta-rs-base-2.17.3.jar;C:\Users\thienvy\.m2\repository\com\fasterxml\jackson\jakarta\rs\jackson-jakarta-rs-json-provider\2.17.3\jackson-jakarta-rs-json-provider-2.17.3.jar;C:\Users\thienvy\.m2\repository\com\fasterxml\jackson\module\jackson-module-jakarta-xmlbind-annotations\2.17.3\jackson-module-jakarta-xmlbind-annotations-2.17.3.jar;C:\Users\thienvy\.m2\repository\com\github\java-json-tools\json-patch\1.13\json-patch-1.13.jar;C:\Users\thienvy\.m2\repository\com\github\java-json-tools\msg-simple\1.2\msg-simple-1.2.jar;C:\Users\thienvy\.m2\repository\com\github\java-json-tools\btf\1.3\btf-1.3.jar;C:\Users\thienvy\.m2\repository\com\github\java-json-tools\jackson-coreutils\2.0\jackson-coreutils-2.0.jar;C:\Users\thienvy\.m2\repository\org\jboss\resteasy\resteasy-jaxb-provider\6.2.9.Final\resteasy-jaxb-provider-6.2.9.Final.jar;C:\Users\thienvy\.m2\repository\org\glassfish\jaxb\codemodel\4.0.5\codemodel-4.0.5.jar;C:\Users\thienvy\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\thienvy\.m2\repository\org\glassfish\jaxb\jaxb-jxc\4.0.5\jaxb-jxc-4.0.5.jar;C:\Users\thienvy\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\thienvy\.m2\repository\org\glassfish\jaxb\jaxb-xjc\4.0.5\jaxb-xjc-4.0.5.jar;C:\Users\thienvy\.m2\repository\org\glassfish\jaxb\xsom\4.0.5\xsom-4.0.5.jar;C:\Users\thienvy\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\thienvy\.m2\repository\com\sun\istack\istack-commons-tools\4.1.2\istack-commons-tools-4.1.2.jar;C:\Users\thienvy\.m2\repository\com\sun\xml\bind\external\relaxng-datatype\4.0.3\relaxng-datatype-4.0.3.jar;C:\Users\thienvy\.m2\repository\com\sun\xml\bind\external\rngom\4.0.3\rngom-4.0.3.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Saigon, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, java.vm.specification.version=17, os.name=Windows 11, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-17\bin, sun.java.command=com.example.transaction_service.TransactionServiceApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@2027569d, com.sun.management.jmxremote=, jdk.debug=release, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, hibernate.cdi.extensions=true, user.home=C:\Users\thienvy, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2024-04-16, java.home=C:\Program Files\Java\jdk-17, file.separator=\, spring.output.ansi.enabled=always, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.11+7-LTS-207, user.name=Thiên Vỹ, spring.jmx.enabled=true, path.separator=;, management.endpoints.jmx.exposure.include=*, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\thienvy\AppData\Local\Temp\, catalina.home=C:\Users\thienvy\AppData\Local\Temp\tomcat.8088.4532500966980502832, java.version=17.0.11, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Study\java-banking-phase2, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=23404, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\thienvy\AppData\Local\Temp\tomcat.8088.4532500966980502832, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@2887de09, native.encoding=Cp1258, java.library.path=C:\Program Files\Java\jdk-17\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Java\jdk-17\bin;C:\Program Files (x86)\Microsoft SQL Server\160\Tools\Binn\;C:\Program Files\Microsoft SQL Server\160\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Microsoft SQL Server\160\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\160\DTS\Binn\;C:\Program Files\Git\cmd;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Docker\Docker\resources\bin;C:\ApacheMaven\apache-maven-3.9.9\bin;C:\vault_1.19.2_windows_amd64;C:\Users\thienvy\AppData\Roaming\fnm\node-versions\v22.15.0\installation\node_modules\npm;C:\Users\thienvy\AppData\Roaming\fnm;C:\Users\thienvy\AppData\Local\fnm_multishells\9464_1747193909934;;c:\Users\thienvy\AppData\Local\Programs\cursor\resources\app\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\thienvy\AppData\Local\Microsoft\WindowsApps;C:\Users\thienvy\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\thienvy\AppData\Local\JetBrains\Toolbox\scripts;C:\Users\thienvy\AppData\Local\Microsoft\WinGet\Packages\Schniz.fnm_Microsoft.Winget.Source_8wekyb3d8bbwe;C:\Users\thienvy\AppData\Local\Programs\cursor\resources\app\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, emulated-client, sharing, java.vm.version=17.0.11+7-LTS-207, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=61.0, LOGGED_APPLICATION_NAME=[transaction-service] } MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {} MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.example.transaction_service.entity.Transaction] is safe MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@3ece700d] under count; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@240116d6] under every; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@29c8f71] under any; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1b269558] under sinh; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4f6384f3] under cosh; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@196ec1a2] under tanh; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1e82dd1f] under pi; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@312117c2] under log; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : length -> character_length MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@29e7cd0b] under position; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@75e8e7c3] under overlay; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@696e0507] under trim; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@38796f13] under cast; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4e5c920e] under collate; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@79b57765] under extract; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@b649ab3] under ifnull; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@366d7ef1] under pad; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@4c5c6704] under str; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@38da49e4] under format; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@7498a400] under timestampadd; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@11579baa] under timestampdiff; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1aefd0ec] under current_date; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4158e0bb] under current_time; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1a73a50d] under current_timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current date -> current_date MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current time -> current_time MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@69f37280] under local_date; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@d7fb7e2] under local_time; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@b24d3ce] under local_datetime; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@cf8446a] under offset_datetime; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local date -> local_date MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local time -> local_time MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7eed4007] under instant; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current_instant -> instant MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@79a673fa] under sql; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@312117c2 MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@34868025] under lpad; prior registration was NamedSqmFunctionTemplate(lpad) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@6fa94f19] under rpad; prior registration was NamedSqmFunctionTemplate(rpad) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : day -> dayofmonth MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@f00d6ba] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@29e7cd0b MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@541eb701] under trunc; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : truncate -> trunc MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4a792582] under bitand; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3ca38269] under bitor; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3e815c8c] under bitxor; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1f0642e2] under bitnot; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@1cd021b5] under format; prior registration was org.hibernate.dialect.function.FormatFunction@38da49e4 MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@d7fb7e2 MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@b24d3ce MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3cc0488c] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1e82dd1f MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@89116a4] under chr; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : char -> chr MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@25ad5406] under sysdate; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@6cfd87c6] under rank; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@21550cd5] under dense_rank; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@2d4d239e] under percent_rank; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@4e30e02b] under cume_dist; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@4aa4006f] under listagg; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - abs(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double acos(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - addtime(TIME datetime, TIME time) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean any(BOOLEAN arg) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer ascii(STRING arg) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double asin(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - avg(arg) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bit_and(arg) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bit_or(arg) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitand(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitnot(arg) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitor(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitxor(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - cast(arg as Type) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - ceiling(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Character char(INTEGER arg) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Character chr(INTEGER arg) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]]) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String collate(STRING string as COLLATION collation) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]]) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double cos(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double cosh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double cot(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Long count([distinct ]{arg|*}) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer crc32(arg) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double cume_dist([arg0[, ...]]) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date curdate() MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date current date MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time current time MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current timestamp MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date current_date MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Instant current_instant MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time current_time MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current_timestamp MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time curtime() MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date date(arg) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer datediff(DATE end, DATE start) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer day(DATE arg) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String dayname(DATE arg) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofmonth(DATE arg) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofweek(DATE arg) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofyear(DATE arg) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double degrees(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Long dense_rank([arg0[, ...]]) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean every(BOOLEAN arg) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double exp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - first_valueANY value MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - floor(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]]) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer hour(TIME arg) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - ifnull(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Instant instant MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]]) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]] MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date last_day(DATE arg) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - last_valueANY value MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]] MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]]) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String left(STRING string, INTEGER length) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double ln(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local date MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local datetime MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local time MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local_date MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local_datetime MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local_time MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtime MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtimestamp MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start]) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1]) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double log10(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double log2(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String lower(STRING string) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String lpad(string, length[, padding]) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters]) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - max(COMPARABLE arg) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String md5(arg) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer microsecond(TIME arg) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - min(COMPARABLE arg) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer minute(TIME arg) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer month(DATE arg) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String monthname(DATE arg) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp now() MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - nth_valueANY value, INTEGER nth MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - nullif(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset datetime MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset_datetime MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length]) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character]) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double percent_rank([arg0[, ...]]) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double pi MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer position(STRING pattern in STRING string) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer quarter(DATE arg) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double radians(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double rand([INTEGER seed]) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Long rank([arg0[, ...]]) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String repeat(STRING string, INTEGER times) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String reverse(STRING arg) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String right(STRING string, INTEGER length) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places]) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Long row_number() MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String rpad(string, length[, padding]) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters]) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer second(TIME arg) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String sha(arg) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String sha1(arg) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String sha2(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer sign(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double sin(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double sinh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String soundex(arg) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String space(INTEGER arg) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Object sql MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double sqrt(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String str(arg) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length]) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length]) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - subtime(TIME datetime, TIME time) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - sum(arg) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp sysdate() MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double tan(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double tanh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String time(arg) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1]) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - trunc( ... ) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - truncate( ... ) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String upper(STRING string) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date utc_date MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time utc_time MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp utc_timestamp MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_pop(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_samp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double variance(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer week(DATE arg) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer year(DATE arg) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG org.hibernate.orm.query.plan.cache - Starting QueryInterpretationCache(2048) MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-06-12 09:31:14 [restartedMain] DEBUG o.h.e.i.EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow MDC:[traceId=, spanId=]
2025-06-12 09:31:15 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.example.transaction_service.entity.Transaction] is safe MDC:[traceId=, spanId=]
2025-06-12 09:31:15 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-12 09:31:15 [restartedMain] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.example.transaction_service.entity.Transaction]: private accessor [amount] MDC:[traceId=, spanId=]
2025-06-12 09:31:15 [restartedMain] DEBUG o.h.orm.model.mapping.creation - Starting post-init callbacks MDC:[traceId=, spanId=]
2025-06-12 09:31:15 [restartedMain] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(com.example.transaction_service.entity.Transaction) `staticFetchableList` generator MDC:[traceId=, spanId=]
2025-06-12 09:31:15 [restartedMain] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 09:31:15 [restartedMain] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction)] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 09:31:15 [restartedMain] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction.type]
 MDC:[traceId=, spanId=]
2025-06-12 09:31:15 [restartedMain] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 09:31:15 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-12 09:31:15 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select id from tbl_transaction where id=? MDC:[traceId=, spanId=]
2025-06-12 09:31:15 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into tbl_transaction (amount,bank_type,currency,description,destination_bank_code,destination_bank_name,failed_reason,from_account_number,reference_code,status,timestamp,to_account_number,type,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?) MDC:[traceId=, spanId=]
2025-06-12 09:31:15 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update tbl_transaction set amount=?,bank_type=?,currency=?,description=?,destination_bank_code=?,destination_bank_name=?,failed_reason=?,from_account_number=?,reference_code=?,status=?,timestamp=?,to_account_number=?,type=? where id=? MDC:[traceId=, spanId=]
2025-06-12 09:31:15 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from tbl_transaction where id=? MDC:[traceId=, spanId=]
2025-06-12 09:31:15 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration) MDC:[traceId=, spanId=]
2025-06-12 09:31:15 [restartedMain] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4b3b425f] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@3b6aa820] MDC:[traceId=, spanId=]
2025-06-12 09:31:15 [restartedMain] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named HQL queries MDC:[traceId=, spanId=]
2025-06-12 09:31:15 [restartedMain] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named SQL queries MDC:[traceId=, spanId=]
2025-06-12 09:31:16 [restartedMain] DEBUG org.hibernate.mapping.Table - No alter strings for table : tbl_transaction MDC:[traceId=, spanId=]
2025-06-12 09:31:16 [restartedMain] DEBUG o.h.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3de25a6a MDC:[traceId=, spanId=]
2025-06-12 09:31:16 [restartedMain] DEBUG o.h.internal.SessionFactoryRegistry - Registering SessionFactory: 1dc08ba5-8e51-4ac4-8175-172fafd9c513 (<unnamed>) MDC:[traceId=, spanId=]
2025-06-12 09:31:16 [restartedMain] DEBUG o.h.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured MDC:[traceId=, spanId=]
2025-06-12 09:31:16 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Instantiated SessionFactory MDC:[traceId=, spanId=]
2025-06-12 09:31:16 [restartedMain] DEBUG o.h.s.internal.StatisticsInitiator - Statistics initialized [enabled=false] MDC:[traceId=, spanId=]
2025-06-12 09:31:16 [restartedMain] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy3/jdk.proxy3.$Proxy207.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.example.transaction_service.TransactionServiceApplication.main(TransactionServiceApplication.java:15)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-06-12 09:31:16 [restartedMain] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy3/jdk.proxy3.$Proxy207.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.getCountQuery(JpaQueryLookupStrategy.java:204)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:171)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.example.transaction_service.TransactionServiceApplication.main(TransactionServiceApplication.java:15)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-06-12 09:31:16 [restartedMain] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy3/jdk.proxy3.$Proxy207.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.example.transaction_service.TransactionServiceApplication.main(TransactionServiceApplication.java:15)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-06-12 09:31:16 [restartedMain] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy3/jdk.proxy3.$Proxy207.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.getCountQuery(JpaQueryLookupStrategy.java:204)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:171)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.example.transaction_service.TransactionServiceApplication.main(TransactionServiceApplication.java:15)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-06-12 09:31:20 [restartedMain] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-06-12 09:31:20 [restartedMain] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator MDC:[traceId=, spanId=]
2025-06-12 09:31:20 [restartedMain] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory MDC:[traceId=, spanId=]
2025-06-12 09:31:21 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-06-12 09:31:21 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader MDC:[traceId=, spanId=]
2025-06-12 09:31:21 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-06-12 09:31:21 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-06-12 09:31:21 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-06-12 09:31:21 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-06-12 09:31:21 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-06-12 09:31:21 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-06-12 09:31:21 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-06-12 09:31:21 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-06-12 09:31:21 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-06-12 09:31:21 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-06-12 09:31:21 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-06-12 09:31:25 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 09:31:25 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 09:31:25 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 09:31:25 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 09:31:25 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1aed43fa MDC:[traceId=, spanId=]
2025-06-12 09:31:25 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-12 09:31:25 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2247e87 MDC:[traceId=, spanId=]
2025-06-12 09:31:25 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 09:31:25 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 MDC:[traceId=, spanId=]
2025-06-12 09:31:25 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 09:31:25 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 09:31:25 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@423081529 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 09:31:25 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 09:31:25 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 09:32:03 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - HHH000031: Closing MDC:[traceId=, spanId=]
2025-06-12 09:32:03 [restartedMain] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@1dc682a0] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@3b6aa820] MDC:[traceId=, spanId=]
2025-06-12 09:32:03 [restartedMain] DEBUG o.h.s.i.AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries MDC:[traceId=, spanId=]
2025-06-12 09:32:03 [restartedMain] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries MDC:[traceId=, spanId=]
2025-06-12 09:32:28 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final MDC:[traceId=, spanId=]
2025-06-12 09:32:28 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-06-12 09:32:28 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-06-12 09:32:28 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-06-12 09:32:28 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-06-12 09:32:28 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-06-12 09:32:28 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-06-12 09:32:28 [background-preinit] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-06-12 09:32:28 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-06-12 09:32:28 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-06-12 09:32:28 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-06-12 09:32:28 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-06-12 09:32:28 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-06-12 09:32:28 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-06-12 09:32:42 [restartedMain] DEBUG o.h.jpa.internal.util.LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@7d0c6fd0
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Study/java-banking-phase2/backend/transaction-service/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.example.transaction_service.entity.Transaction]
	Mapping files names []
	Properties [] MDC:[traceId=, spanId=]
2025-06-12 09:32:42 [restartedMain] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator]. MDC:[traceId=, spanId=]
2025-06-12 09:32:42 [restartedMain] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator]. MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG org.hibernate.cfg.Environment - HHH000206: 'hibernate.properties' not found MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator] MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator] MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator] MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator] MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned] MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator] MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator] MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator] MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator] MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator] MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.h.c.i.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@51636ad4 MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@51636ad4 MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@51636ad4 MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@1f338da0 MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@1f338da0 MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@710564a4 MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@710564a4 MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@2cd48523 MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@2cd48523 MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@662b7fa7 MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@662b7fa7 MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@662b7fa7 MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@65f6b04f MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@65f6b04f MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@65f6b04f MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@3f0cd811 MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@3f0cd811 MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@3779af4e MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@a123841 MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@a123841 MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@5ab69584 MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@3a30293 MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@795ace76 MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@795ace76 MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@795ace76 MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@6291212c MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@6291212c MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@6291212c MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@c65824f MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@c65824f MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@c65824f MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@1749beca MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@1749beca MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@1749beca MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@38cfeb2b MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@38cfeb2b MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@38cfeb2b MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@53bc255f MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@53bc255f MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@736ba29d MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@736ba29d MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@298eedd4 MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@298eedd4 MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@298eedd4 MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@6edfdd7d MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@5cfb9b24 MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@5cfb9b24 MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@722ab56c MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@2c1416b0 MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@2c1416b0 MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@2c1416b0 MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@3cb0027a MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@3c929c73 MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@1b34cf58 MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@1799fb18 MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@1799fb18 MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@2b868843 MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@2b868843 MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@35fe844 MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@3eaca978 MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6635c48e MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@796e9c9b MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@58f563a MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@5eb3d89a MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@166a6676 MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@166a6676 MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@1b6daa64 MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@1b6daa64 MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@642c01b5 MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@642c01b5 MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@241b62a2 MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@241b62a2 MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@6107f981 MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@6107f981 MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@17cf514f MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@136adbaa MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@6c1bb517 MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@6c1bb517 MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@320e92e4 MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5f26f8c3 MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1a54cf06 MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@2bd66256 MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@2bd66256 MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6d095c7a MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@58141f8 MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@399182b1 MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@399182b1 MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@214d8307 MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@214d8307 MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@600f1d8 MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@600f1d8 MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@600f1d8 MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@901fe61 MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@901fe61 MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@901fe61 MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@3cb061fa MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@712898d0 MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@70a7291c MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@70a7291c MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@76d3239f MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@76d3239f MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@76d3239f MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4953330e MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@7c88dcec MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@352ee5a8 MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@352ee5a8 MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@5a8ee749 MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@5a8ee749 MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@5a8ee749 MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@a157455 MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@a157455 MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@30c0b647 MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@30c0b647 MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@72011652 MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@72011652 MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@5f1813f4 MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@5f1813f4 MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@7e8e739e MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7e8e739e MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@4bc98086 MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@3180bc2b MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@173347d1 MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@173347d1 MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@31d7dc19 MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@5a25f0cc MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@7b2d7635 MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@62d2b0dd MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@6d6a9f8a MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@18bcb17b MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@830e087 MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@7f93fd04 MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@46bcabb3 MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@19ddda56] into BootstrapContext; was [null] MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@19ddda56) [was null] MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@379774cd] into BootstrapContext; was [null] MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@791d3838] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@295fce7f] MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@19ddda56] MDC:[traceId=, spanId=]
2025-06-12 09:32:43 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@19ddda56] MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Database ->
	   name : MySQL
	version : 8.0.42
	  major : 8
	  minor : 0 MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Driver ->
	   name : MySQL Connector/J
	version : mysql-connector-j-8.3.0 (Revision: 805f872a57875f311cb82487efcfb070411a3fa0)
	  major : 8
	  minor : 3 MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - JDBC version : 4.2 MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG org.hibernate.orm.dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQLDialect, version: 8.0.42 MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@549e9b42) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@659927aa) MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@36473f67) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@32770f00) MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1293d687) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3e1b0708) MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3128bbab) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3b2dad81) MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3786738d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@51431132) MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@25421d52) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@73d5fdde) MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@77cbe232) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3ec8b778) MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@b55957e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5732a2c7) MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7f400061) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4481b86) MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor) MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor) MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor) MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT)) MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT)) MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@38aae29 MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@31d7dc19` MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@759e91e2] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6020454a] MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.boot.model.relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}] MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Transaction MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity com.example.transaction_service.entity.Transaction on table tbl_transaction MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE') MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.example.transaction_service.entity.Transaction] is safe MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property id with lazy=false MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:id] MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for id MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.id MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property id MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, assigned, , ...) MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property amount with lazy=false MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:amount] MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for amount MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.amount MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property amount MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property bankType with lazy=false MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:bankType] MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for bankType MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.bank_type MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property bankType MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property currency with lazy=false MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:currency] MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for currency MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.currency MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property currency MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property description with lazy=false MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:description] MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for description MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.description MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property description MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property destinationBankCode with lazy=false MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:destinationBankCode] MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for destinationBankCode MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.destination_bank_code MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property destinationBankCode MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property destinationBankName with lazy=false MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:destinationBankName] MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for destinationBankName MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.destination_bank_name MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property destinationBankName MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property failedReason with lazy=false MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:failedReason] MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for failedReason MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.failed_reason MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property failedReason MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property fromAccountNumber with lazy=false MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:fromAccountNumber] MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for fromAccountNumber MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.from_account_number MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property fromAccountNumber MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property referenceCode with lazy=false MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:referenceCode] MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for referenceCode MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.reference_code MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property referenceCode MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property status with lazy=false MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:status] MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for status MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.status MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property status MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property timestamp with lazy=false MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:timestamp] MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for timestamp MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.timestamp MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property timestamp MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property toAccountNumber with lazy=false MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:toAccountNumber] MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for toAccountNumber MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.to_account_number MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property toAccountNumber MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property type with lazy=false MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:type] MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for type MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.type MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property type MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: com.example.transaction_service.entity MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.j.e.i.CallbackDefinitionResolverLegacyImpl - Adding prePersist as PrePersist callback for entity com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bankType MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for currency MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for description MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for destinationBankCode MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for destinationBankName MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for failedReason MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for fromAccountNumber MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for referenceCode MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for timestamp MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for toAccountNumber MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for type MDC:[traceId=, spanId=]
2025-06-12 09:32:44 [restartedMain] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [tbl_transaction] MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Building session factory MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Instantiating SessionFactory with settings: {jdk.tls.rejectClientInitiatedRenegotiation=true, java.specification.version=17, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@73bc984d, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1258, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Study\java-banking-phase2\backend\transaction-service\target\classes;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-starter-actuator\3.3.11\spring-boot-starter-actuator-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-starter\3.3.11\spring-boot-starter-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.3.11\spring-boot-starter-logging-3.3.11.jar;C:\Users\thienvy\.m2\repository\ch\qos\logback\logback-classic\1.5.18\logback-classic-1.5.18.jar;C:\Users\thienvy\.m2\repository\ch\qos\logback\logback-core\1.5.18\logback-core-1.5.18.jar;C:\Users\thienvy\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.23.1\log4j-to-slf4j-2.23.1.jar;C:\Users\thienvy\.m2\repository\org\apache\logging\log4j\log4j-api\2.23.1\log4j-api-2.23.1.jar;C:\Users\thienvy\.m2\repository\org\slf4j\jul-to-slf4j\2.0.17\jul-to-slf4j-2.0.17.jar;C:\Users\thienvy\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\thienvy\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-actuator-autoconfigure\3.3.11\spring-boot-actuator-autoconfigure-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-actuator\3.3.11\spring-boot-actuator-3.3.11.jar;C:\Users\thienvy\.m2\repository\io\micrometer\micrometer-observation\1.13.13\micrometer-observation-1.13.13.jar;C:\Users\thienvy\.m2\repository\io\micrometer\micrometer-commons\1.13.13\micrometer-commons-1.13.13.jar;C:\Users\thienvy\.m2\repository\io\micrometer\micrometer-jakarta9\1.13.13\micrometer-jakarta9-1.13.13.jar;C:\Users\thienvy\.m2\repository\io\micrometer\micrometer-core\1.13.13\micrometer-core-1.13.13.jar;C:\Users\thienvy\.m2\repository\org\hdrhistogram\HdrHistogram\2.2.2\HdrHistogram-2.2.2.jar;C:\Users\thienvy\.m2\repository\org\latencyutils\LatencyUtils\2.0.3\LatencyUtils-2.0.3.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.3.11\spring-boot-starter-data-jpa-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.3.11\spring-boot-starter-aop-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\aspectj\aspectjweaver\1.9.24\aspectjweaver-1.9.24.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.3.11\spring-boot-starter-jdbc-3.3.11.jar;C:\Users\thienvy\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\thienvy\.m2\repository\org\springframework\spring-jdbc\6.1.19\spring-jdbc-6.1.19.jar;C:\Users\thienvy\.m2\repository\org\hibernate\orm\hibernate-core\6.5.3.Final\hibernate-core-6.5.3.Final.jar;C:\Users\thienvy\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\thienvy\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\thienvy\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\thienvy\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\thienvy\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\thienvy\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\thienvy\.m2\repository\net\bytebuddy\byte-buddy\1.14.19\byte-buddy-1.14.19.jar;C:\Users\thienvy\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\thienvy\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\thienvy\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\thienvy\.m2\repository\org\springframework\data\spring-data-jpa\3.3.11\spring-data-jpa-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\springframework\data\spring-data-commons\3.3.11\spring-data-commons-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\springframework\spring-orm\6.1.19\spring-orm-6.1.19.jar;C:\Users\thienvy\.m2\repository\org\springframework\spring-context\6.1.19\spring-context-6.1.19.jar;C:\Users\thienvy\.m2\repository\org\springframework\spring-tx\6.1.19\spring-tx-6.1.19.jar;C:\Users\thienvy\.m2\repository\org\springframework\spring-beans\6.1.19\spring-beans-6.1.19.jar;C:\Users\thienvy\.m2\repository\org\springframework\spring-aspects\6.1.19\spring-aspects-6.1.19.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.3.11\spring-boot-starter-web-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.3.11\spring-boot-starter-json-3.3.11.jar;C:\Users\thienvy\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.17.3\jackson-module-parameter-names-2.17.3.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.3.11\spring-boot-starter-tomcat-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.40\tomcat-embed-core-10.1.40.jar;C:\Users\thienvy\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.40\tomcat-embed-websocket-10.1.40.jar;C:\Users\thienvy\.m2\repository\org\springframework\spring-web\6.1.19\spring-web-6.1.19.jar;C:\Users\thienvy\.m2\repository\org\springframework\spring-webmvc\6.1.19\spring-webmvc-6.1.19.jar;C:\Users\thienvy\.m2\repository\org\springframework\spring-expression\6.1.19\spring-expression-6.1.19.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-devtools\3.3.11\spring-boot-devtools-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot\3.3.11\spring-boot-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.3.11\spring-boot-autoconfigure-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.3.11\spring-boot-starter-security-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\springframework\spring-aop\6.1.19\spring-aop-6.1.19.jar;C:\Users\thienvy\.m2\repository\org\springframework\security\spring-security-config\6.3.9\spring-security-config-6.3.9.jar;C:\Users\thienvy\.m2\repository\org\springframework\security\spring-security-web\6.3.9\spring-security-web-6.3.9.jar;C:\Users\thienvy\.m2\repository\org\springframework\security\spring-security-oauth2-resource-server\6.3.9\spring-security-oauth2-resource-server-6.3.9.jar;C:\Users\thienvy\.m2\repository\org\springframework\security\spring-security-core\6.3.9\spring-security-core-6.3.9.jar;C:\Users\thienvy\.m2\repository\org\springframework\security\spring-security-crypto\6.3.9\spring-security-crypto-6.3.9.jar;C:\Users\thienvy\.m2\repository\org\springframework\spring-core\6.1.19\spring-core-6.1.19.jar;C:\Users\thienvy\.m2\repository\org\springframework\spring-jcl\6.1.19\spring-jcl-6.1.19.jar;C:\Users\thienvy\.m2\repository\org\springframework\security\spring-security-oauth2-jose\6.3.9\spring-security-oauth2-jose-6.3.9.jar;C:\Users\thienvy\.m2\repository\com\nimbusds\nimbus-jose-jwt\9.37.3\nimbus-jose-jwt-9.37.3.jar;C:\Users\thienvy\.m2\repository\com\github\stephenc\jcip\jcip-annotations\1.0-1\jcip-annotations-1.0-1.jar;C:\Users\thienvy\.m2\repository\org\springframework\security\spring-security-oauth2-core\6.3.9\spring-security-oauth2-core-6.3.9.jar;C:\Users\thienvy\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\thienvy\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\thienvy\.m2\repository\com\mysql\mysql-connector-j\8.3.0\mysql-connector-j-8.3.0.jar;C:\Users\thienvy\.m2\repository\org\projectlombok\lombok\1.18.38\lombok-1.18.38.jar;C:\Users\thienvy\.m2\repository\org\mapstruct\mapstruct\1.5.5.Final\mapstruct-1.5.5.Final.jar;C:\Users\thienvy\.m2\repository\org\mapstruct\mapstruct-processor\1.5.5.Final\mapstruct-processor-1.5.5.Final.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-starter-validation\3.3.11\spring-boot-starter-validation-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.40\tomcat-embed-el-10.1.40.jar;C:\Users\thienvy\.m2\repository\org\hibernate\validator\hibernate-validator\8.0.2.Final\hibernate-validator-8.0.2.Final.jar;C:\Users\thienvy\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\thienvy\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-ui\2.0.2\springdoc-openapi-starter-webmvc-ui-2.0.2.jar;C:\Users\thienvy\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-api\2.0.2\springdoc-openapi-starter-webmvc-api-2.0.2.jar;C:\Users\thienvy\.m2\repository\org\springdoc\springdoc-openapi-starter-common\2.0.2\springdoc-openapi-starter-common-2.0.2.jar;C:\Users\thienvy\.m2\repository\io\swagger\core\v3\swagger-core-jakarta\2.2.7\swagger-core-jakarta-2.2.7.jar;C:\Users\thienvy\.m2\repository\org\apache\commons\commons-lang3\3.14.0\commons-lang3-3.14.0.jar;C:\Users\thienvy\.m2\repository\io\swagger\core\v3\swagger-annotations-jakarta\2.2.7\swagger-annotations-jakarta-2.2.7.jar;C:\Users\thienvy\.m2\repository\io\swagger\core\v3\swagger-models-jakarta\2.2.7\swagger-models-jakarta-2.2.7.jar;C:\Users\thienvy\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-yaml\2.17.3\jackson-dataformat-yaml-2.17.3.jar;C:\Users\thienvy\.m2\repository\org\webjars\swagger-ui\4.15.5\swagger-ui-4.15.5.jar;C:\Users\thienvy\.m2\repository\org\webjars\webjars-locator-core\0.58\webjars-locator-core-0.58.jar;C:\Users\thienvy\.m2\repository\io\github\classgraph\classgraph\4.8.149\classgraph-4.8.149.jar;C:\Study\java-banking-phase2\backend\common-service\target\classes;C:\Users\thienvy\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.17.3\jackson-databind-2.17.3.jar;C:\Users\thienvy\.m2\repository\org\apache\dubbo\dubbo-spring-boot-starter\3.3.2\dubbo-spring-boot-starter-3.3.2.jar;C:\Users\thienvy\.m2\repository\org\apache\dubbo\dubbo-spring-boot-autoconfigure\3.3.2\dubbo-spring-boot-autoconfigure-3.3.2.jar;C:\Users\thienvy\.m2\repository\org\apache\dubbo\dubbo-spring-boot-autoconfigure-compatible\3.3.2\dubbo-spring-boot-autoconfigure-compatible-3.3.2.jar;C:\Users\thienvy\.m2\repository\org\apache\dubbo\dubbo\3.3.2\dubbo-3.3.2.jar;C:\Users\thienvy\.m2\repository\org\javassist\javassist\3.30.2-GA\javassist-3.30.2-GA.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-all\4.1.119.Final\netty-all-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-codec-dns\4.1.119.Final\netty-codec-dns-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-codec-haproxy\4.1.119.Final\netty-codec-haproxy-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-codec-http\4.1.119.Final\netty-codec-http-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-codec-http2\4.1.119.Final\netty-codec-http2-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-codec-memcache\4.1.119.Final\netty-codec-memcache-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-codec-mqtt\4.1.119.Final\netty-codec-mqtt-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-codec-redis\4.1.119.Final\netty-codec-redis-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-codec-smtp\4.1.119.Final\netty-codec-smtp-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-codec-socks\4.1.119.Final\netty-codec-socks-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-codec-stomp\4.1.119.Final\netty-codec-stomp-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-codec-xml\4.1.119.Final\netty-codec-xml-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-handler-proxy\4.1.119.Final\netty-handler-proxy-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-handler-ssl-ocsp\4.1.119.Final\netty-handler-ssl-ocsp-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-resolver-dns\4.1.119.Final\netty-resolver-dns-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-transport-rxtx\4.1.119.Final\netty-transport-rxtx-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-transport-sctp\4.1.119.Final\netty-transport-sctp-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-transport-udt\4.1.119.Final\netty-transport-udt-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-transport-classes-kqueue\4.1.119.Final\netty-transport-classes-kqueue-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-resolver-dns-classes-macos\4.1.119.Final\netty-resolver-dns-classes-macos-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final-linux-x86_64.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final-linux-aarch_64.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final-linux-riscv64.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-transport-native-kqueue\4.1.119.Final\netty-transport-native-kqueue-4.1.119.Final-osx-x86_64.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-transport-native-kqueue\4.1.119.Final\netty-transport-native-kqueue-4.1.119.Final-osx-aarch_64.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-resolver-dns-native-macos\4.1.119.Final\netty-resolver-dns-native-macos-4.1.119.Final-osx-x86_64.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-resolver-dns-native-macos\4.1.119.Final\netty-resolver-dns-native-macos-4.1.119.Final-osx-aarch_64.jar;C:\Users\thienvy\.m2\repository\org\apache\dubbo\hessian-lite\4.0.3\hessian-lite-4.0.3.jar;C:\Users\thienvy\.m2\repository\com\alibaba\fastjson2\fastjson2\2.0.53\fastjson2-2.0.53.jar;C:\Users\thienvy\.m2\repository\com\google\protobuf\protobuf-java\3.25.5\protobuf-java-3.25.5.jar;C:\Users\thienvy\.m2\repository\org\apache\curator\curator-framework\5.1.0\curator-framework-5.1.0.jar;C:\Users\thienvy\.m2\repository\org\apache\curator\curator-client\5.1.0\curator-client-5.1.0.jar;C:\Users\thienvy\.m2\repository\com\google\guava\guava\27.0.1-jre\guava-27.0.1-jre.jar;C:\Users\thienvy\.m2\repository\com\google\guava\failureaccess\1.0.1\failureaccess-1.0.1.jar;C:\Users\thienvy\.m2\repository\com\google\guava\listenablefuture\9999.0-empty-to-avoid-conflict-with-guava\listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar;C:\Users\thienvy\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\thienvy\.m2\repository\org\checkerframework\checker-qual\2.5.2\checker-qual-2.5.2.jar;C:\Users\thienvy\.m2\repository\com\google\errorprone\error_prone_annotations\2.2.0\error_prone_annotations-2.2.0.jar;C:\Users\thienvy\.m2\repository\com\google\j2objc\j2objc-annotations\1.1\j2objc-annotations-1.1.jar;C:\Users\thienvy\.m2\repository\org\codehaus\mojo\animal-sniffer-annotations\1.17\animal-sniffer-annotations-1.17.jar;C:\Users\thienvy\.m2\repository\org\apache\zookeeper\zookeeper\3.7.1\zookeeper-3.7.1.jar;C:\Users\thienvy\.m2\repository\org\apache\zookeeper\zookeeper-jute\3.7.1\zookeeper-jute-3.7.1.jar;C:\Users\thienvy\.m2\repository\org\apache\yetus\audience-annotations\0.12.0\audience-annotations-0.12.0.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-handler\4.1.119.Final\netty-handler-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-common\4.1.119.Final\netty-common-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-resolver\4.1.119.Final\netty-resolver-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-buffer\4.1.119.Final\netty-buffer-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-transport\4.1.119.Final\netty-transport-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-transport-native-unix-common\4.1.119.Final\netty-transport-native-unix-common-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-codec\4.1.119.Final\netty-codec-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-transport-classes-epoll\4.1.119.Final\netty-transport-classes-epoll-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\org\slf4j\slf4j-api\2.0.17\slf4j-api-2.0.17.jar;C:\Users\thienvy\.m2\repository\org\apache\curator\curator-recipes\5.5.0\curator-recipes-5.5.0.jar;C:\Users\thienvy\.m2\repository\org\apache\curator\curator-x-discovery\5.5.0\curator-x-discovery-5.5.0.jar;C:\Users\thienvy\.m2\repository\org\springframework\cloud\spring-cloud-starter-vault-config\4.1.1\spring-cloud-starter-vault-config-4.1.1.jar;C:\Users\thienvy\.m2\repository\org\apache\httpcomponents\client5\httpclient5\5.3.1\httpclient5-5.3.1.jar;C:\Users\thienvy\.m2\repository\org\apache\httpcomponents\core5\httpcore5-h2\5.2.5\httpcore5-h2-5.2.5.jar;C:\Users\thienvy\.m2\repository\org\apache\httpcomponents\core5\httpcore5\5.2.5\httpcore5-5.2.5.jar;C:\Users\thienvy\.m2\repository\org\springframework\cloud\spring-cloud-starter\4.1.2\spring-cloud-starter-4.1.2.jar;C:\Users\thienvy\.m2\repository\org\springframework\cloud\spring-cloud-context\4.1.2\spring-cloud-context-4.1.2.jar;C:\Users\thienvy\.m2\repository\org\springframework\cloud\spring-cloud-commons\4.1.2\spring-cloud-commons-4.1.2.jar;C:\Users\thienvy\.m2\repository\org\springframework\security\spring-security-rsa\1.1.2\spring-security-rsa-1.1.2.jar;C:\Users\thienvy\.m2\repository\org\bouncycastle\bcprov-jdk18on\1.77\bcprov-jdk18on-1.77.jar;C:\Users\thienvy\.m2\repository\org\springframework\cloud\spring-cloud-vault-config\4.1.1\spring-cloud-vault-config-4.1.1.jar;C:\Users\thienvy\.m2\repository\org\springframework\vault\spring-vault-core\3.1.1\spring-vault-core-3.1.1.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-starter-data-redis\3.3.11\spring-boot-starter-data-redis-3.3.11.jar;C:\Users\thienvy\.m2\repository\io\lettuce\lettuce-core\6.3.2.RELEASE\lettuce-core-6.3.2.RELEASE.jar;C:\Users\thienvy\.m2\repository\io\projectreactor\reactor-core\3.6.16\reactor-core-3.6.16.jar;C:\Users\thienvy\.m2\repository\org\springframework\data\spring-data-redis\3.3.11\spring-data-redis-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\springframework\data\spring-data-keyvalue\3.3.11\spring-data-keyvalue-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\springframework\spring-oxm\6.1.19\spring-oxm-6.1.19.jar;C:\Users\thienvy\.m2\repository\org\springframework\spring-context-support\6.1.19\spring-context-support-6.1.19.jar;C:\Users\thienvy\.m2\repository\org\springframework\cloud\spring-cloud-stream\4.2.1\spring-cloud-stream-4.2.1.jar;C:\Users\thienvy\.m2\repository\org\springframework\spring-messaging\6.1.19\spring-messaging-6.1.19.jar;C:\Users\thienvy\.m2\repository\org\springframework\integration\spring-integration-core\6.3.9\spring-integration-core-6.3.9.jar;C:\Users\thienvy\.m2\repository\org\springframework\integration\spring-integration-jmx\6.3.9\spring-integration-jmx-6.3.9.jar;C:\Users\thienvy\.m2\repository\org\springframework\retry\spring-retry\2.0.11\spring-retry-2.0.11.jar;C:\Users\thienvy\.m2\repository\org\springframework\cloud\spring-cloud-function-context\4.2.2\spring-cloud-function-context-4.2.2.jar;C:\Users\thienvy\.m2\repository\org\springframework\cloud\spring-cloud-function-core\4.2.2\spring-cloud-function-core-4.2.2.jar;C:\Users\thienvy\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-joda\2.17.3\jackson-datatype-joda-2.17.3.jar;C:\Users\thienvy\.m2\repository\joda-time\joda-time\2.10.14\joda-time-2.10.14.jar;C:\Users\thienvy\.m2\repository\org\springframework\cloud\spring-cloud-starter-stream-kafka\4.2.1\spring-cloud-starter-stream-kafka-4.2.1.jar;C:\Users\thienvy\.m2\repository\org\springframework\cloud\spring-cloud-stream-binder-kafka\4.2.1\spring-cloud-stream-binder-kafka-4.2.1.jar;C:\Users\thienvy\.m2\repository\org\springframework\cloud\spring-cloud-stream-binder-kafka-core\4.2.1\spring-cloud-stream-binder-kafka-core-4.2.1.jar;C:\Users\thienvy\.m2\repository\org\springframework\integration\spring-integration-kafka\6.3.9\spring-integration-kafka-6.3.9.jar;C:\Users\thienvy\.m2\repository\org\springframework\kafka\spring-kafka\3.2.8\spring-kafka-3.2.8.jar;C:\Users\thienvy\.m2\repository\org\apache\kafka\kafka-clients\3.7.2\kafka-clients-3.7.2.jar;C:\Users\thienvy\.m2\repository\com\github\luben\zstd-jni\1.5.6-4\zstd-jni-1.5.6-4.jar;C:\Users\thienvy\.m2\repository\org\lz4\lz4-java\1.8.0\lz4-java-1.8.0.jar;C:\Users\thienvy\.m2\repository\org\xerial\snappy\snappy-java\1.1.10.5\snappy-java-1.1.10.5.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-starter-oauth2-resource-server\3.3.11\spring-boot-starter-oauth2-resource-server-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\keycloak\keycloak-admin-client\26.0.0\keycloak-admin-client-26.0.0.jar;C:\Users\thienvy\.m2\repository\org\keycloak\keycloak-client-common-synced\26.0.0\keycloak-client-common-synced-26.0.0.jar;C:\Users\thienvy\.m2\repository\org\jboss\logging\commons-logging-jboss-logging\1.0.0.Final\commons-logging-jboss-logging-1.0.0.Final.jar;C:\Users\thienvy\.m2\repository\org\apache\httpcomponents\httpclient\4.5.14\httpclient-4.5.14.jar;C:\Users\thienvy\.m2\repository\org\apache\httpcomponents\httpcore\4.4.16\httpcore-4.4.16.jar;C:\Users\thienvy\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.17.3\jackson-core-2.17.3.jar;C:\Users\thienvy\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.17.3\jackson-annotations-2.17.3.jar;C:\Users\thienvy\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.17.3\jackson-datatype-jdk8-2.17.3.jar;C:\Users\thienvy\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.17.3\jackson-datatype-jsr310-2.17.3.jar;C:\Users\thienvy\.m2\repository\org\eclipse\microprofile\openapi\microprofile-openapi-api\3.1.1\microprofile-openapi-api-3.1.1.jar;C:\Users\thienvy\.m2\repository\org\jboss\resteasy\resteasy-client\6.2.9.Final\resteasy-client-6.2.9.Final.jar;C:\Users\thienvy\.m2\repository\org\jboss\resteasy\resteasy-client-api\6.2.9.Final\resteasy-client-api-6.2.9.Final.jar;C:\Users\thienvy\.m2\repository\org\jboss\resteasy\resteasy-core-spi\6.2.9.Final\resteasy-core-spi-6.2.9.Final.jar;C:\Users\thienvy\.m2\repository\org\jboss\resteasy\resteasy-core\6.2.9.Final\resteasy-core-6.2.9.Final.jar;C:\Users\thienvy\.m2\repository\org\jboss\jandex\2.4.5.Final\jandex-2.4.5.Final.jar;C:\Users\thienvy\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\thienvy\.m2\repository\com\ibm\async\asyncutil\0.1.0\asyncutil-0.1.0.jar;C:\Users\thienvy\.m2\repository\commons-codec\commons-codec\1.16.1\commons-codec-1.16.1.jar;C:\Users\thienvy\.m2\repository\jakarta\ws\rs\jakarta.ws.rs-api\3.1.0\jakarta.ws.rs-api-3.1.0.jar;C:\Users\thienvy\.m2\repository\org\reactivestreams\reactive-streams\1.0.4\reactive-streams-1.0.4.jar;C:\Users\thienvy\.m2\repository\org\jboss\resteasy\resteasy-multipart-provider\6.2.9.Final\resteasy-multipart-provider-6.2.9.Final.jar;C:\Users\thienvy\.m2\repository\jakarta\mail\jakarta.mail-api\2.1.3\jakarta.mail-api-2.1.3.jar;C:\Users\thienvy\.m2\repository\org\eclipse\angus\angus-mail\2.0.3\angus-mail-2.0.3.jar;C:\Users\thienvy\.m2\repository\org\apache\james\apache-mime4j-dom\0.8.11\apache-mime4j-dom-0.8.11.jar;C:\Users\thienvy\.m2\repository\org\apache\james\apache-mime4j-core\0.8.11\apache-mime4j-core-0.8.11.jar;C:\Users\thienvy\.m2\repository\org\apache\james\apache-mime4j-storage\0.8.11\apache-mime4j-storage-0.8.11.jar;C:\Users\thienvy\.m2\repository\commons-io\commons-io\2.11.0\commons-io-2.11.0.jar;C:\Users\thienvy\.m2\repository\org\jboss\resteasy\resteasy-jackson2-provider\6.2.9.Final\resteasy-jackson2-provider-6.2.9.Final.jar;C:\Users\thienvy\.m2\repository\com\fasterxml\jackson\jakarta\rs\jackson-jakarta-rs-base\2.17.3\jackson-jakarta-rs-base-2.17.3.jar;C:\Users\thienvy\.m2\repository\com\fasterxml\jackson\jakarta\rs\jackson-jakarta-rs-json-provider\2.17.3\jackson-jakarta-rs-json-provider-2.17.3.jar;C:\Users\thienvy\.m2\repository\com\fasterxml\jackson\module\jackson-module-jakarta-xmlbind-annotations\2.17.3\jackson-module-jakarta-xmlbind-annotations-2.17.3.jar;C:\Users\thienvy\.m2\repository\com\github\java-json-tools\json-patch\1.13\json-patch-1.13.jar;C:\Users\thienvy\.m2\repository\com\github\java-json-tools\msg-simple\1.2\msg-simple-1.2.jar;C:\Users\thienvy\.m2\repository\com\github\java-json-tools\btf\1.3\btf-1.3.jar;C:\Users\thienvy\.m2\repository\com\github\java-json-tools\jackson-coreutils\2.0\jackson-coreutils-2.0.jar;C:\Users\thienvy\.m2\repository\org\jboss\resteasy\resteasy-jaxb-provider\6.2.9.Final\resteasy-jaxb-provider-6.2.9.Final.jar;C:\Users\thienvy\.m2\repository\org\glassfish\jaxb\codemodel\4.0.5\codemodel-4.0.5.jar;C:\Users\thienvy\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\thienvy\.m2\repository\org\glassfish\jaxb\jaxb-jxc\4.0.5\jaxb-jxc-4.0.5.jar;C:\Users\thienvy\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\thienvy\.m2\repository\org\glassfish\jaxb\jaxb-xjc\4.0.5\jaxb-xjc-4.0.5.jar;C:\Users\thienvy\.m2\repository\org\glassfish\jaxb\xsom\4.0.5\xsom-4.0.5.jar;C:\Users\thienvy\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\thienvy\.m2\repository\com\sun\istack\istack-commons-tools\4.1.2\istack-commons-tools-4.1.2.jar;C:\Users\thienvy\.m2\repository\com\sun\xml\bind\external\relaxng-datatype\4.0.3\relaxng-datatype-4.0.3.jar;C:\Users\thienvy\.m2\repository\com\sun\xml\bind\external\rngom\4.0.3\rngom-4.0.3.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Saigon, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, java.vm.specification.version=17, os.name=Windows 11, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-17\bin, sun.java.command=com.example.transaction_service.TransactionServiceApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@11212c87, com.sun.management.jmxremote=, jdk.debug=release, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, hibernate.cdi.extensions=true, user.home=C:\Users\thienvy, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2024-04-16, java.home=C:\Program Files\Java\jdk-17, file.separator=\, spring.output.ansi.enabled=always, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.11+7-LTS-207, user.name=Thiên Vỹ, spring.jmx.enabled=true, path.separator=;, management.endpoints.jmx.exposure.include=*, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\thienvy\AppData\Local\Temp\, catalina.home=C:\Users\thienvy\AppData\Local\Temp\tomcat.8088.6936237184780194226, java.version=17.0.11, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Study\java-banking-phase2, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=31640, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\thienvy\AppData\Local\Temp\tomcat.8088.6936237184780194226, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@61024855, native.encoding=Cp1258, java.library.path=C:\Program Files\Java\jdk-17\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Java\jdk-17\bin;C:\Program Files (x86)\Microsoft SQL Server\160\Tools\Binn\;C:\Program Files\Microsoft SQL Server\160\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Microsoft SQL Server\160\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\160\DTS\Binn\;C:\Program Files\Git\cmd;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Docker\Docker\resources\bin;C:\ApacheMaven\apache-maven-3.9.9\bin;C:\vault_1.19.2_windows_amd64;C:\Users\thienvy\AppData\Roaming\fnm\node-versions\v22.15.0\installation\node_modules\npm;C:\Users\thienvy\AppData\Roaming\fnm;C:\Users\thienvy\AppData\Local\fnm_multishells\9464_1747193909934;;c:\Users\thienvy\AppData\Local\Programs\cursor\resources\app\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\thienvy\AppData\Local\Microsoft\WindowsApps;C:\Users\thienvy\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\thienvy\AppData\Local\JetBrains\Toolbox\scripts;C:\Users\thienvy\AppData\Local\Microsoft\WinGet\Packages\Schniz.fnm_Microsoft.Winget.Source_8wekyb3d8bbwe;C:\Users\thienvy\AppData\Local\Programs\cursor\resources\app\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, emulated-client, sharing, java.vm.version=17.0.11+7-LTS-207, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=61.0, LOGGED_APPLICATION_NAME=[transaction-service] } MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {} MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.example.transaction_service.entity.Transaction] is safe MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@67aa5806] under count; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@57a6dff5] under every; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@59c8894d] under any; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5045eec8] under sinh; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@edf2c4f] under cosh; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@150846b7] under tanh; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@385a8c4d] under pi; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@47161620] under log; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : length -> character_length MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@7b3ba77e] under position; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@7c30b124] under overlay; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@681c6866] under trim; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@23b24bba] under cast; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6f41e1a0] under collate; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@68ab301a] under extract; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@2bcbaa38] under ifnull; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@10873674] under pad; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@7b44bc13] under str; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@4cea0afd] under format; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@32b51710] under timestampadd; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@76e45f99] under timestampdiff; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@447dc693] under current_date; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6adcc459] under current_time; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@f54ed88] under current_timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current date -> current_date MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current time -> current_time MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@152382ea] under local_date; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3fc09783] under local_time; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3332722e] under local_datetime; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1ba2f16d] under offset_datetime; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local date -> local_date MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local time -> local_time MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@129f1421] under instant; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current_instant -> instant MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@6f2ac234] under sql; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@47161620 MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@193f0c9d] under lpad; prior registration was NamedSqmFunctionTemplate(lpad) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@25f90c79] under rpad; prior registration was NamedSqmFunctionTemplate(rpad) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : day -> dayofmonth MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@543faf3a] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@7b3ba77e MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@519f9154] under trunc; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : truncate -> trunc MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2f3e09f] under bitand; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@73f8f936] under bitor; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@29c2c525] under bitxor; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4faf478] under bitnot; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@19100b60] under format; prior registration was org.hibernate.dialect.function.FormatFunction@4cea0afd MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@3fc09783 MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@3332722e MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2d95603d] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@385a8c4d MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@12c16347] under chr; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : char -> chr MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@41cb1c53] under sysdate; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@4766d5db] under rank; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@1d1cc1e1] under dense_rank; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@647227fb] under percent_rank; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@66dce8ac] under cume_dist; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@18ad54e2] under listagg; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - abs(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double acos(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - addtime(TIME datetime, TIME time) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean any(BOOLEAN arg) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer ascii(STRING arg) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double asin(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - avg(arg) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bit_and(arg) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bit_or(arg) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitand(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitnot(arg) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitor(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitxor(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - cast(arg as Type) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - ceiling(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Character char(INTEGER arg) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Character chr(INTEGER arg) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]]) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String collate(STRING string as COLLATION collation) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]]) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double cos(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double cosh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double cot(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Long count([distinct ]{arg|*}) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer crc32(arg) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double cume_dist([arg0[, ...]]) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date curdate() MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date current date MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time current time MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current timestamp MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date current_date MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Instant current_instant MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time current_time MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current_timestamp MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time curtime() MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date date(arg) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer datediff(DATE end, DATE start) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer day(DATE arg) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String dayname(DATE arg) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofmonth(DATE arg) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofweek(DATE arg) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofyear(DATE arg) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double degrees(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Long dense_rank([arg0[, ...]]) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean every(BOOLEAN arg) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double exp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - first_valueANY value MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - floor(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]]) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer hour(TIME arg) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - ifnull(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Instant instant MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]]) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]] MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date last_day(DATE arg) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - last_valueANY value MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]] MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]]) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String left(STRING string, INTEGER length) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double ln(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local date MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local datetime MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local time MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local_date MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local_datetime MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local_time MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtime MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtimestamp MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start]) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1]) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double log10(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double log2(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String lower(STRING string) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String lpad(string, length[, padding]) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters]) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - max(COMPARABLE arg) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String md5(arg) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer microsecond(TIME arg) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - min(COMPARABLE arg) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer minute(TIME arg) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer month(DATE arg) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String monthname(DATE arg) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp now() MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - nth_valueANY value, INTEGER nth MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - nullif(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset datetime MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset_datetime MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length]) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character]) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double percent_rank([arg0[, ...]]) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double pi MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer position(STRING pattern in STRING string) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer quarter(DATE arg) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double radians(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double rand([INTEGER seed]) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Long rank([arg0[, ...]]) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String repeat(STRING string, INTEGER times) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String reverse(STRING arg) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String right(STRING string, INTEGER length) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places]) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Long row_number() MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String rpad(string, length[, padding]) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters]) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer second(TIME arg) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String sha(arg) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String sha1(arg) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String sha2(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer sign(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double sin(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double sinh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String soundex(arg) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String space(INTEGER arg) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Object sql MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double sqrt(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String str(arg) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length]) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length]) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - subtime(TIME datetime, TIME time) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - sum(arg) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp sysdate() MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double tan(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double tanh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String time(arg) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1]) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - trunc( ... ) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - truncate( ... ) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String upper(STRING string) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date utc_date MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time utc_time MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp utc_timestamp MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_pop(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_samp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double variance(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer week(DATE arg) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer year(DATE arg) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG org.hibernate.orm.query.plan.cache - Starting QueryInterpretationCache(2048) MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-06-12 09:32:45 [restartedMain] DEBUG o.h.e.i.EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow MDC:[traceId=, spanId=]
2025-06-12 09:32:46 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.example.transaction_service.entity.Transaction] is safe MDC:[traceId=, spanId=]
2025-06-12 09:32:46 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-12 09:32:46 [restartedMain] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.example.transaction_service.entity.Transaction]: private accessor [amount] MDC:[traceId=, spanId=]
2025-06-12 09:32:46 [restartedMain] DEBUG o.h.orm.model.mapping.creation - Starting post-init callbacks MDC:[traceId=, spanId=]
2025-06-12 09:32:46 [restartedMain] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(com.example.transaction_service.entity.Transaction) `staticFetchableList` generator MDC:[traceId=, spanId=]
2025-06-12 09:32:46 [restartedMain] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 09:32:46 [restartedMain] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction)] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 09:32:46 [restartedMain] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction.type]
 MDC:[traceId=, spanId=]
2025-06-12 09:32:46 [restartedMain] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 09:32:46 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-12 09:32:46 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select id from tbl_transaction where id=? MDC:[traceId=, spanId=]
2025-06-12 09:32:46 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into tbl_transaction (amount,bank_type,currency,description,destination_bank_code,destination_bank_name,failed_reason,from_account_number,reference_code,status,timestamp,to_account_number,type,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?) MDC:[traceId=, spanId=]
2025-06-12 09:32:46 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update tbl_transaction set amount=?,bank_type=?,currency=?,description=?,destination_bank_code=?,destination_bank_name=?,failed_reason=?,from_account_number=?,reference_code=?,status=?,timestamp=?,to_account_number=?,type=? where id=? MDC:[traceId=, spanId=]
2025-06-12 09:32:46 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from tbl_transaction where id=? MDC:[traceId=, spanId=]
2025-06-12 09:32:46 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration) MDC:[traceId=, spanId=]
2025-06-12 09:32:46 [restartedMain] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@759e91e2] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@1ebc8b0] MDC:[traceId=, spanId=]
2025-06-12 09:32:46 [restartedMain] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named HQL queries MDC:[traceId=, spanId=]
2025-06-12 09:32:46 [restartedMain] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named SQL queries MDC:[traceId=, spanId=]
2025-06-12 09:32:46 [restartedMain] DEBUG org.hibernate.mapping.Table - No alter strings for table : tbl_transaction MDC:[traceId=, spanId=]
2025-06-12 09:32:46 [restartedMain] DEBUG o.h.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@62f2a191 MDC:[traceId=, spanId=]
2025-06-12 09:32:46 [restartedMain] DEBUG o.h.internal.SessionFactoryRegistry - Registering SessionFactory: d14f36ed-fed1-4ee6-ae17-90a083b7b1b4 (<unnamed>) MDC:[traceId=, spanId=]
2025-06-12 09:32:46 [restartedMain] DEBUG o.h.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured MDC:[traceId=, spanId=]
2025-06-12 09:32:46 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Instantiated SessionFactory MDC:[traceId=, spanId=]
2025-06-12 09:32:47 [restartedMain] DEBUG o.h.s.internal.StatisticsInitiator - Statistics initialized [enabled=false] MDC:[traceId=, spanId=]
2025-06-12 09:32:48 [restartedMain] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy3/jdk.proxy3.$Proxy207.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.getCountQuery(JpaQueryLookupStrategy.java:204)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:171)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.example.transaction_service.TransactionServiceApplication.main(TransactionServiceApplication.java:15)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-06-12 09:32:48 [restartedMain] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy3/jdk.proxy3.$Proxy207.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.example.transaction_service.TransactionServiceApplication.main(TransactionServiceApplication.java:15)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-06-12 09:32:48 [restartedMain] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy3/jdk.proxy3.$Proxy207.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.getCountQuery(JpaQueryLookupStrategy.java:204)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:171)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.example.transaction_service.TransactionServiceApplication.main(TransactionServiceApplication.java:15)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-06-12 09:32:48 [restartedMain] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy3/jdk.proxy3.$Proxy207.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.example.transaction_service.TransactionServiceApplication.main(TransactionServiceApplication.java:15)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-06-12 09:32:58 [restartedMain] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-06-12 09:32:58 [restartedMain] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator MDC:[traceId=, spanId=]
2025-06-12 09:32:58 [restartedMain] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory MDC:[traceId=, spanId=]
2025-06-12 09:32:58 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-06-12 09:32:58 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader MDC:[traceId=, spanId=]
2025-06-12 09:32:58 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-06-12 09:32:58 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-06-12 09:32:58 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-06-12 09:32:58 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-06-12 09:32:58 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-06-12 09:32:58 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-06-12 09:32:58 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-06-12 09:32:58 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-06-12 09:32:58 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-06-12 09:32:58 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-06-12 09:32:58 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-06-12 09:33:04 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 09:33:04 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 09:33:06 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 09:33:06 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 09:33:06 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4e619902 MDC:[traceId=, spanId=]
2025-06-12 09:33:06 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 09:33:06 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@79adcbbc MDC:[traceId=, spanId=]
2025-06-12 09:33:06 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 09:33:06 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 09:33:06 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 09:33:06 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 09:33:06 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1684063063 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 09:33:06 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 09:33:06 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 09:33:56 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - HHH000031: Closing MDC:[traceId=, spanId=]
2025-06-12 09:33:56 [restartedMain] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@3d1c4bd3] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@1ebc8b0] MDC:[traceId=, spanId=]
2025-06-12 09:33:56 [restartedMain] DEBUG o.h.s.i.AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries MDC:[traceId=, spanId=]
2025-06-12 09:33:56 [restartedMain] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries MDC:[traceId=, spanId=]
2025-06-12 09:36:42 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final MDC:[traceId=, spanId=]
2025-06-12 09:36:42 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-06-12 09:36:42 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-06-12 09:36:42 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-06-12 09:36:42 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-06-12 09:36:42 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-06-12 09:36:42 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-06-12 09:36:42 [background-preinit] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-06-12 09:36:42 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-06-12 09:36:42 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-06-12 09:36:42 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-06-12 09:36:42 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-06-12 09:36:42 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-06-12 09:36:42 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.h.jpa.internal.util.LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@29c880e9
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Study/java-banking-phase2/backend/transaction-service/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.example.transaction_service.entity.Transaction]
	Mapping files names []
	Properties [] MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator]. MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator]. MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG org.hibernate.cfg.Environment - HHH000206: 'hibernate.properties' not found MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator] MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator] MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator] MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator] MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned] MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator] MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator] MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator] MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator] MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator] MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.h.c.i.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@44bf5652 MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@44bf5652 MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@44bf5652 MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@207355a MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@207355a MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@487ecc5b MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@487ecc5b MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@4dff5432 MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@4dff5432 MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@73cc9619 MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@73cc9619 MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@73cc9619 MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@485ad0df MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@485ad0df MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@485ad0df MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@76f8d19b MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@76f8d19b MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@411155b2 MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@567a7fd7 MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@567a7fd7 MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@483881ef MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@787ce57a MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@330b8302 MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@330b8302 MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@330b8302 MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@360ac673 MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@360ac673 MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@360ac673 MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@3a311ea4 MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@3a311ea4 MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@3a311ea4 MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@25796bad MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@25796bad MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@25796bad MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@4a05ff93 MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@4a05ff93 MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@4a05ff93 MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@2adc81fe MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@2adc81fe MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@182a7e3f MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@182a7e3f MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@76605a94 MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@76605a94 MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@76605a94 MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@137ccaac MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@5d617a4c MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@5d617a4c MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@16f12c59 MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@623160e9 MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@623160e9 MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@623160e9 MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@176defa9 MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@41884412 MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@5e843b9e MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@375b3e8f MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@375b3e8f MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@4f338f6a MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@4f338f6a MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@4c98fa4a MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@333f608c MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@5d7e9f22 MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@ee50338 MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@524f204 MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@4d57c92c MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@6479c82b MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@6479c82b MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@4223eb5f MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@4223eb5f MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@60b585cd MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@60b585cd MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@13583e5e MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@13583e5e MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@394a848e MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@394a848e MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@646ef9eb MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@28399346 MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@7ac1f2d1 MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@7ac1f2d1 MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@174267f3 MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4707551 MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6037753a MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@15154497 MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@15154497 MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@11ecd439 MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@16b1f1a8 MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@4d74d8e1 MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@4d74d8e1 MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@727a0c24 MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@727a0c24 MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@540434e MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@540434e MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@540434e MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@1c65deff MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@1c65deff MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@1c65deff MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@77bdae42 MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@558487bd MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@5259f470 MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5259f470 MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@60794ae2 MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@60794ae2 MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@60794ae2 MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@7aac2711 MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@be4ee96 MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@168361ee MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@168361ee MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@3c870786 MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@3c870786 MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@3c870786 MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@27882ba8 MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@27882ba8 MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@b34e191 MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@b34e191 MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@6357d08 MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@6357d08 MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@20ae17f MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@20ae17f MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@64b95ffd MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@64b95ffd MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@482d0292 MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@65ddfba2 MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@3c9090af MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@3c9090af MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@6ab44b4c MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@2eb3c0fb MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@3944a657 MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@791a8142 MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@313c4b06 MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@1b8f1c2 MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@1dd289bc MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@306f1bd5 MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@635802a5 MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@5175dfb6] into BootstrapContext; was [null] MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@5175dfb6) [was null] MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@38f4773e] into BootstrapContext; was [null] MDC:[traceId=, spanId=]
2025-06-12 09:36:51 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@1dfe8aa0] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@7ca2da30] MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@5175dfb6] MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@5175dfb6] MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Database ->
	   name : MySQL
	version : 8.0.42
	  major : 8
	  minor : 0 MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Driver ->
	   name : MySQL Connector/J
	version : mysql-connector-j-8.3.0 (Revision: 805f872a57875f311cb82487efcfb070411a3fa0)
	  major : 8
	  minor : 3 MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - JDBC version : 4.2 MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG org.hibernate.orm.dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQLDialect, version: 8.0.42 MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4e0fa776) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@39ca2ef9) MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7b43590f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@707c5aa1) MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@43fb77cf) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2bae34af) MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4ac49bf4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@58ff795f) MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@40a23880) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1af37777) MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@740654e6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5790feb8) MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6a7aaf2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@76e2d9e) MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4109f8f1) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@11bcab56) MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2a7773a9) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5c83b9a4) MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor) MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor) MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor) MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT)) MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT)) MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@20f6d22f MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@6ab44b4c` MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@42bfef5b] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@767907c1] MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.boot.model.relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}] MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Transaction MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity com.example.transaction_service.entity.Transaction on table tbl_transaction MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE') MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.example.transaction_service.entity.Transaction] is safe MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property id with lazy=false MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:id] MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for id MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.id MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property id MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, assigned, , ...) MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property amount with lazy=false MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:amount] MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for amount MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.amount MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property amount MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property bankType with lazy=false MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:bankType] MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for bankType MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.bank_type MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property bankType MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property currency with lazy=false MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:currency] MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for currency MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.currency MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property currency MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property description with lazy=false MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:description] MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for description MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.description MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property description MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property destinationBankCode with lazy=false MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:destinationBankCode] MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for destinationBankCode MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.destination_bank_code MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property destinationBankCode MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property destinationBankName with lazy=false MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:destinationBankName] MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for destinationBankName MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.destination_bank_name MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property destinationBankName MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property failedReason with lazy=false MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:failedReason] MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for failedReason MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.failed_reason MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property failedReason MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property fromAccountNumber with lazy=false MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:fromAccountNumber] MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for fromAccountNumber MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.from_account_number MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property fromAccountNumber MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property referenceCode with lazy=false MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:referenceCode] MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for referenceCode MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.reference_code MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property referenceCode MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property status with lazy=false MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:status] MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for status MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.status MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property status MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property timestamp with lazy=false MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:timestamp] MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for timestamp MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.timestamp MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property timestamp MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property toAccountNumber with lazy=false MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:toAccountNumber] MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for toAccountNumber MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.to_account_number MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property toAccountNumber MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property type with lazy=false MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:type] MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for type MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.type MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property type MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: com.example.transaction_service.entity MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.j.e.i.CallbackDefinitionResolverLegacyImpl - Adding prePersist as PrePersist callback for entity com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bankType MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for currency MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for description MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for destinationBankCode MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for destinationBankName MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for failedReason MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for fromAccountNumber MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for referenceCode MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for timestamp MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for toAccountNumber MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for type MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [tbl_transaction] MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Building session factory MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-06-12 09:36:52 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Instantiating SessionFactory with settings: {jdk.tls.rejectClientInitiatedRenegotiation=true, java.specification.version=17, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@67ba7ad6, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1258, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Study\java-banking-phase2\backend\transaction-service\target\classes;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-starter-actuator\3.3.11\spring-boot-starter-actuator-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-starter\3.3.11\spring-boot-starter-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.3.11\spring-boot-starter-logging-3.3.11.jar;C:\Users\thienvy\.m2\repository\ch\qos\logback\logback-classic\1.5.18\logback-classic-1.5.18.jar;C:\Users\thienvy\.m2\repository\ch\qos\logback\logback-core\1.5.18\logback-core-1.5.18.jar;C:\Users\thienvy\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.23.1\log4j-to-slf4j-2.23.1.jar;C:\Users\thienvy\.m2\repository\org\apache\logging\log4j\log4j-api\2.23.1\log4j-api-2.23.1.jar;C:\Users\thienvy\.m2\repository\org\slf4j\jul-to-slf4j\2.0.17\jul-to-slf4j-2.0.17.jar;C:\Users\thienvy\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\thienvy\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-actuator-autoconfigure\3.3.11\spring-boot-actuator-autoconfigure-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-actuator\3.3.11\spring-boot-actuator-3.3.11.jar;C:\Users\thienvy\.m2\repository\io\micrometer\micrometer-observation\1.13.13\micrometer-observation-1.13.13.jar;C:\Users\thienvy\.m2\repository\io\micrometer\micrometer-commons\1.13.13\micrometer-commons-1.13.13.jar;C:\Users\thienvy\.m2\repository\io\micrometer\micrometer-jakarta9\1.13.13\micrometer-jakarta9-1.13.13.jar;C:\Users\thienvy\.m2\repository\io\micrometer\micrometer-core\1.13.13\micrometer-core-1.13.13.jar;C:\Users\thienvy\.m2\repository\org\hdrhistogram\HdrHistogram\2.2.2\HdrHistogram-2.2.2.jar;C:\Users\thienvy\.m2\repository\org\latencyutils\LatencyUtils\2.0.3\LatencyUtils-2.0.3.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.3.11\spring-boot-starter-data-jpa-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.3.11\spring-boot-starter-aop-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\aspectj\aspectjweaver\1.9.24\aspectjweaver-1.9.24.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.3.11\spring-boot-starter-jdbc-3.3.11.jar;C:\Users\thienvy\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\thienvy\.m2\repository\org\springframework\spring-jdbc\6.1.19\spring-jdbc-6.1.19.jar;C:\Users\thienvy\.m2\repository\org\hibernate\orm\hibernate-core\6.5.3.Final\hibernate-core-6.5.3.Final.jar;C:\Users\thienvy\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\thienvy\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\thienvy\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\thienvy\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\thienvy\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\thienvy\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\thienvy\.m2\repository\net\bytebuddy\byte-buddy\1.14.19\byte-buddy-1.14.19.jar;C:\Users\thienvy\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\thienvy\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\thienvy\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\thienvy\.m2\repository\org\springframework\data\spring-data-jpa\3.3.11\spring-data-jpa-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\springframework\data\spring-data-commons\3.3.11\spring-data-commons-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\springframework\spring-orm\6.1.19\spring-orm-6.1.19.jar;C:\Users\thienvy\.m2\repository\org\springframework\spring-context\6.1.19\spring-context-6.1.19.jar;C:\Users\thienvy\.m2\repository\org\springframework\spring-tx\6.1.19\spring-tx-6.1.19.jar;C:\Users\thienvy\.m2\repository\org\springframework\spring-beans\6.1.19\spring-beans-6.1.19.jar;C:\Users\thienvy\.m2\repository\org\springframework\spring-aspects\6.1.19\spring-aspects-6.1.19.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.3.11\spring-boot-starter-web-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.3.11\spring-boot-starter-json-3.3.11.jar;C:\Users\thienvy\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.17.3\jackson-module-parameter-names-2.17.3.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.3.11\spring-boot-starter-tomcat-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.40\tomcat-embed-core-10.1.40.jar;C:\Users\thienvy\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.40\tomcat-embed-websocket-10.1.40.jar;C:\Users\thienvy\.m2\repository\org\springframework\spring-web\6.1.19\spring-web-6.1.19.jar;C:\Users\thienvy\.m2\repository\org\springframework\spring-webmvc\6.1.19\spring-webmvc-6.1.19.jar;C:\Users\thienvy\.m2\repository\org\springframework\spring-expression\6.1.19\spring-expression-6.1.19.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-devtools\3.3.11\spring-boot-devtools-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot\3.3.11\spring-boot-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.3.11\spring-boot-autoconfigure-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.3.11\spring-boot-starter-security-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\springframework\spring-aop\6.1.19\spring-aop-6.1.19.jar;C:\Users\thienvy\.m2\repository\org\springframework\security\spring-security-config\6.3.9\spring-security-config-6.3.9.jar;C:\Users\thienvy\.m2\repository\org\springframework\security\spring-security-web\6.3.9\spring-security-web-6.3.9.jar;C:\Users\thienvy\.m2\repository\org\springframework\security\spring-security-oauth2-resource-server\6.3.9\spring-security-oauth2-resource-server-6.3.9.jar;C:\Users\thienvy\.m2\repository\org\springframework\security\spring-security-core\6.3.9\spring-security-core-6.3.9.jar;C:\Users\thienvy\.m2\repository\org\springframework\security\spring-security-crypto\6.3.9\spring-security-crypto-6.3.9.jar;C:\Users\thienvy\.m2\repository\org\springframework\spring-core\6.1.19\spring-core-6.1.19.jar;C:\Users\thienvy\.m2\repository\org\springframework\spring-jcl\6.1.19\spring-jcl-6.1.19.jar;C:\Users\thienvy\.m2\repository\org\springframework\security\spring-security-oauth2-jose\6.3.9\spring-security-oauth2-jose-6.3.9.jar;C:\Users\thienvy\.m2\repository\com\nimbusds\nimbus-jose-jwt\9.37.3\nimbus-jose-jwt-9.37.3.jar;C:\Users\thienvy\.m2\repository\com\github\stephenc\jcip\jcip-annotations\1.0-1\jcip-annotations-1.0-1.jar;C:\Users\thienvy\.m2\repository\org\springframework\security\spring-security-oauth2-core\6.3.9\spring-security-oauth2-core-6.3.9.jar;C:\Users\thienvy\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\thienvy\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\thienvy\.m2\repository\com\mysql\mysql-connector-j\8.3.0\mysql-connector-j-8.3.0.jar;C:\Users\thienvy\.m2\repository\org\projectlombok\lombok\1.18.38\lombok-1.18.38.jar;C:\Users\thienvy\.m2\repository\org\mapstruct\mapstruct\1.5.5.Final\mapstruct-1.5.5.Final.jar;C:\Users\thienvy\.m2\repository\org\mapstruct\mapstruct-processor\1.5.5.Final\mapstruct-processor-1.5.5.Final.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-starter-validation\3.3.11\spring-boot-starter-validation-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.40\tomcat-embed-el-10.1.40.jar;C:\Users\thienvy\.m2\repository\org\hibernate\validator\hibernate-validator\8.0.2.Final\hibernate-validator-8.0.2.Final.jar;C:\Users\thienvy\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\thienvy\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-ui\2.0.2\springdoc-openapi-starter-webmvc-ui-2.0.2.jar;C:\Users\thienvy\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-api\2.0.2\springdoc-openapi-starter-webmvc-api-2.0.2.jar;C:\Users\thienvy\.m2\repository\org\springdoc\springdoc-openapi-starter-common\2.0.2\springdoc-openapi-starter-common-2.0.2.jar;C:\Users\thienvy\.m2\repository\io\swagger\core\v3\swagger-core-jakarta\2.2.7\swagger-core-jakarta-2.2.7.jar;C:\Users\thienvy\.m2\repository\org\apache\commons\commons-lang3\3.14.0\commons-lang3-3.14.0.jar;C:\Users\thienvy\.m2\repository\io\swagger\core\v3\swagger-annotations-jakarta\2.2.7\swagger-annotations-jakarta-2.2.7.jar;C:\Users\thienvy\.m2\repository\io\swagger\core\v3\swagger-models-jakarta\2.2.7\swagger-models-jakarta-2.2.7.jar;C:\Users\thienvy\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-yaml\2.17.3\jackson-dataformat-yaml-2.17.3.jar;C:\Users\thienvy\.m2\repository\org\webjars\swagger-ui\4.15.5\swagger-ui-4.15.5.jar;C:\Users\thienvy\.m2\repository\org\webjars\webjars-locator-core\0.58\webjars-locator-core-0.58.jar;C:\Users\thienvy\.m2\repository\io\github\classgraph\classgraph\4.8.149\classgraph-4.8.149.jar;C:\Study\java-banking-phase2\backend\common-service\target\classes;C:\Users\thienvy\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.17.3\jackson-databind-2.17.3.jar;C:\Users\thienvy\.m2\repository\org\apache\dubbo\dubbo-spring-boot-starter\3.3.2\dubbo-spring-boot-starter-3.3.2.jar;C:\Users\thienvy\.m2\repository\org\apache\dubbo\dubbo-spring-boot-autoconfigure\3.3.2\dubbo-spring-boot-autoconfigure-3.3.2.jar;C:\Users\thienvy\.m2\repository\org\apache\dubbo\dubbo-spring-boot-autoconfigure-compatible\3.3.2\dubbo-spring-boot-autoconfigure-compatible-3.3.2.jar;C:\Users\thienvy\.m2\repository\org\apache\dubbo\dubbo\3.3.2\dubbo-3.3.2.jar;C:\Users\thienvy\.m2\repository\org\javassist\javassist\3.30.2-GA\javassist-3.30.2-GA.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-all\4.1.119.Final\netty-all-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-codec-dns\4.1.119.Final\netty-codec-dns-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-codec-haproxy\4.1.119.Final\netty-codec-haproxy-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-codec-http\4.1.119.Final\netty-codec-http-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-codec-http2\4.1.119.Final\netty-codec-http2-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-codec-memcache\4.1.119.Final\netty-codec-memcache-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-codec-mqtt\4.1.119.Final\netty-codec-mqtt-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-codec-redis\4.1.119.Final\netty-codec-redis-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-codec-smtp\4.1.119.Final\netty-codec-smtp-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-codec-socks\4.1.119.Final\netty-codec-socks-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-codec-stomp\4.1.119.Final\netty-codec-stomp-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-codec-xml\4.1.119.Final\netty-codec-xml-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-handler-proxy\4.1.119.Final\netty-handler-proxy-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-handler-ssl-ocsp\4.1.119.Final\netty-handler-ssl-ocsp-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-resolver-dns\4.1.119.Final\netty-resolver-dns-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-transport-rxtx\4.1.119.Final\netty-transport-rxtx-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-transport-sctp\4.1.119.Final\netty-transport-sctp-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-transport-udt\4.1.119.Final\netty-transport-udt-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-transport-classes-kqueue\4.1.119.Final\netty-transport-classes-kqueue-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-resolver-dns-classes-macos\4.1.119.Final\netty-resolver-dns-classes-macos-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final-linux-x86_64.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final-linux-aarch_64.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final-linux-riscv64.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-transport-native-kqueue\4.1.119.Final\netty-transport-native-kqueue-4.1.119.Final-osx-x86_64.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-transport-native-kqueue\4.1.119.Final\netty-transport-native-kqueue-4.1.119.Final-osx-aarch_64.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-resolver-dns-native-macos\4.1.119.Final\netty-resolver-dns-native-macos-4.1.119.Final-osx-x86_64.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-resolver-dns-native-macos\4.1.119.Final\netty-resolver-dns-native-macos-4.1.119.Final-osx-aarch_64.jar;C:\Users\thienvy\.m2\repository\org\apache\dubbo\hessian-lite\4.0.3\hessian-lite-4.0.3.jar;C:\Users\thienvy\.m2\repository\com\alibaba\fastjson2\fastjson2\2.0.53\fastjson2-2.0.53.jar;C:\Users\thienvy\.m2\repository\com\google\protobuf\protobuf-java\3.25.5\protobuf-java-3.25.5.jar;C:\Users\thienvy\.m2\repository\org\apache\curator\curator-framework\5.1.0\curator-framework-5.1.0.jar;C:\Users\thienvy\.m2\repository\org\apache\curator\curator-client\5.1.0\curator-client-5.1.0.jar;C:\Users\thienvy\.m2\repository\com\google\guava\guava\27.0.1-jre\guava-27.0.1-jre.jar;C:\Users\thienvy\.m2\repository\com\google\guava\failureaccess\1.0.1\failureaccess-1.0.1.jar;C:\Users\thienvy\.m2\repository\com\google\guava\listenablefuture\9999.0-empty-to-avoid-conflict-with-guava\listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar;C:\Users\thienvy\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\thienvy\.m2\repository\org\checkerframework\checker-qual\2.5.2\checker-qual-2.5.2.jar;C:\Users\thienvy\.m2\repository\com\google\errorprone\error_prone_annotations\2.2.0\error_prone_annotations-2.2.0.jar;C:\Users\thienvy\.m2\repository\com\google\j2objc\j2objc-annotations\1.1\j2objc-annotations-1.1.jar;C:\Users\thienvy\.m2\repository\org\codehaus\mojo\animal-sniffer-annotations\1.17\animal-sniffer-annotations-1.17.jar;C:\Users\thienvy\.m2\repository\org\apache\zookeeper\zookeeper\3.7.1\zookeeper-3.7.1.jar;C:\Users\thienvy\.m2\repository\org\apache\zookeeper\zookeeper-jute\3.7.1\zookeeper-jute-3.7.1.jar;C:\Users\thienvy\.m2\repository\org\apache\yetus\audience-annotations\0.12.0\audience-annotations-0.12.0.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-handler\4.1.119.Final\netty-handler-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-common\4.1.119.Final\netty-common-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-resolver\4.1.119.Final\netty-resolver-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-buffer\4.1.119.Final\netty-buffer-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-transport\4.1.119.Final\netty-transport-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-transport-native-unix-common\4.1.119.Final\netty-transport-native-unix-common-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-codec\4.1.119.Final\netty-codec-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-transport-classes-epoll\4.1.119.Final\netty-transport-classes-epoll-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\org\slf4j\slf4j-api\2.0.17\slf4j-api-2.0.17.jar;C:\Users\thienvy\.m2\repository\org\apache\curator\curator-recipes\5.5.0\curator-recipes-5.5.0.jar;C:\Users\thienvy\.m2\repository\org\apache\curator\curator-x-discovery\5.5.0\curator-x-discovery-5.5.0.jar;C:\Users\thienvy\.m2\repository\org\springframework\cloud\spring-cloud-starter-vault-config\4.1.1\spring-cloud-starter-vault-config-4.1.1.jar;C:\Users\thienvy\.m2\repository\org\apache\httpcomponents\client5\httpclient5\5.3.1\httpclient5-5.3.1.jar;C:\Users\thienvy\.m2\repository\org\apache\httpcomponents\core5\httpcore5-h2\5.2.5\httpcore5-h2-5.2.5.jar;C:\Users\thienvy\.m2\repository\org\apache\httpcomponents\core5\httpcore5\5.2.5\httpcore5-5.2.5.jar;C:\Users\thienvy\.m2\repository\org\springframework\cloud\spring-cloud-starter\4.1.2\spring-cloud-starter-4.1.2.jar;C:\Users\thienvy\.m2\repository\org\springframework\cloud\spring-cloud-context\4.1.2\spring-cloud-context-4.1.2.jar;C:\Users\thienvy\.m2\repository\org\springframework\cloud\spring-cloud-commons\4.1.2\spring-cloud-commons-4.1.2.jar;C:\Users\thienvy\.m2\repository\org\springframework\security\spring-security-rsa\1.1.2\spring-security-rsa-1.1.2.jar;C:\Users\thienvy\.m2\repository\org\bouncycastle\bcprov-jdk18on\1.77\bcprov-jdk18on-1.77.jar;C:\Users\thienvy\.m2\repository\org\springframework\cloud\spring-cloud-vault-config\4.1.1\spring-cloud-vault-config-4.1.1.jar;C:\Users\thienvy\.m2\repository\org\springframework\vault\spring-vault-core\3.1.1\spring-vault-core-3.1.1.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-starter-data-redis\3.3.11\spring-boot-starter-data-redis-3.3.11.jar;C:\Users\thienvy\.m2\repository\io\lettuce\lettuce-core\6.3.2.RELEASE\lettuce-core-6.3.2.RELEASE.jar;C:\Users\thienvy\.m2\repository\io\projectreactor\reactor-core\3.6.16\reactor-core-3.6.16.jar;C:\Users\thienvy\.m2\repository\org\springframework\data\spring-data-redis\3.3.11\spring-data-redis-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\springframework\data\spring-data-keyvalue\3.3.11\spring-data-keyvalue-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\springframework\spring-oxm\6.1.19\spring-oxm-6.1.19.jar;C:\Users\thienvy\.m2\repository\org\springframework\spring-context-support\6.1.19\spring-context-support-6.1.19.jar;C:\Users\thienvy\.m2\repository\org\springframework\cloud\spring-cloud-stream\4.2.1\spring-cloud-stream-4.2.1.jar;C:\Users\thienvy\.m2\repository\org\springframework\spring-messaging\6.1.19\spring-messaging-6.1.19.jar;C:\Users\thienvy\.m2\repository\org\springframework\integration\spring-integration-core\6.3.9\spring-integration-core-6.3.9.jar;C:\Users\thienvy\.m2\repository\org\springframework\integration\spring-integration-jmx\6.3.9\spring-integration-jmx-6.3.9.jar;C:\Users\thienvy\.m2\repository\org\springframework\retry\spring-retry\2.0.11\spring-retry-2.0.11.jar;C:\Users\thienvy\.m2\repository\org\springframework\cloud\spring-cloud-function-context\4.2.2\spring-cloud-function-context-4.2.2.jar;C:\Users\thienvy\.m2\repository\org\springframework\cloud\spring-cloud-function-core\4.2.2\spring-cloud-function-core-4.2.2.jar;C:\Users\thienvy\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-joda\2.17.3\jackson-datatype-joda-2.17.3.jar;C:\Users\thienvy\.m2\repository\joda-time\joda-time\2.10.14\joda-time-2.10.14.jar;C:\Users\thienvy\.m2\repository\org\springframework\cloud\spring-cloud-starter-stream-kafka\4.2.1\spring-cloud-starter-stream-kafka-4.2.1.jar;C:\Users\thienvy\.m2\repository\org\springframework\cloud\spring-cloud-stream-binder-kafka\4.2.1\spring-cloud-stream-binder-kafka-4.2.1.jar;C:\Users\thienvy\.m2\repository\org\springframework\cloud\spring-cloud-stream-binder-kafka-core\4.2.1\spring-cloud-stream-binder-kafka-core-4.2.1.jar;C:\Users\thienvy\.m2\repository\org\springframework\integration\spring-integration-kafka\6.3.9\spring-integration-kafka-6.3.9.jar;C:\Users\thienvy\.m2\repository\org\springframework\kafka\spring-kafka\3.2.8\spring-kafka-3.2.8.jar;C:\Users\thienvy\.m2\repository\org\apache\kafka\kafka-clients\3.7.2\kafka-clients-3.7.2.jar;C:\Users\thienvy\.m2\repository\com\github\luben\zstd-jni\1.5.6-4\zstd-jni-1.5.6-4.jar;C:\Users\thienvy\.m2\repository\org\lz4\lz4-java\1.8.0\lz4-java-1.8.0.jar;C:\Users\thienvy\.m2\repository\org\xerial\snappy\snappy-java\1.1.10.5\snappy-java-1.1.10.5.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-starter-oauth2-resource-server\3.3.11\spring-boot-starter-oauth2-resource-server-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\keycloak\keycloak-admin-client\26.0.0\keycloak-admin-client-26.0.0.jar;C:\Users\thienvy\.m2\repository\org\keycloak\keycloak-client-common-synced\26.0.0\keycloak-client-common-synced-26.0.0.jar;C:\Users\thienvy\.m2\repository\org\jboss\logging\commons-logging-jboss-logging\1.0.0.Final\commons-logging-jboss-logging-1.0.0.Final.jar;C:\Users\thienvy\.m2\repository\org\apache\httpcomponents\httpclient\4.5.14\httpclient-4.5.14.jar;C:\Users\thienvy\.m2\repository\org\apache\httpcomponents\httpcore\4.4.16\httpcore-4.4.16.jar;C:\Users\thienvy\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.17.3\jackson-core-2.17.3.jar;C:\Users\thienvy\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.17.3\jackson-annotations-2.17.3.jar;C:\Users\thienvy\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.17.3\jackson-datatype-jdk8-2.17.3.jar;C:\Users\thienvy\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.17.3\jackson-datatype-jsr310-2.17.3.jar;C:\Users\thienvy\.m2\repository\org\eclipse\microprofile\openapi\microprofile-openapi-api\3.1.1\microprofile-openapi-api-3.1.1.jar;C:\Users\thienvy\.m2\repository\org\jboss\resteasy\resteasy-client\6.2.9.Final\resteasy-client-6.2.9.Final.jar;C:\Users\thienvy\.m2\repository\org\jboss\resteasy\resteasy-client-api\6.2.9.Final\resteasy-client-api-6.2.9.Final.jar;C:\Users\thienvy\.m2\repository\org\jboss\resteasy\resteasy-core-spi\6.2.9.Final\resteasy-core-spi-6.2.9.Final.jar;C:\Users\thienvy\.m2\repository\org\jboss\resteasy\resteasy-core\6.2.9.Final\resteasy-core-6.2.9.Final.jar;C:\Users\thienvy\.m2\repository\org\jboss\jandex\2.4.5.Final\jandex-2.4.5.Final.jar;C:\Users\thienvy\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\thienvy\.m2\repository\com\ibm\async\asyncutil\0.1.0\asyncutil-0.1.0.jar;C:\Users\thienvy\.m2\repository\commons-codec\commons-codec\1.16.1\commons-codec-1.16.1.jar;C:\Users\thienvy\.m2\repository\jakarta\ws\rs\jakarta.ws.rs-api\3.1.0\jakarta.ws.rs-api-3.1.0.jar;C:\Users\thienvy\.m2\repository\org\reactivestreams\reactive-streams\1.0.4\reactive-streams-1.0.4.jar;C:\Users\thienvy\.m2\repository\org\jboss\resteasy\resteasy-multipart-provider\6.2.9.Final\resteasy-multipart-provider-6.2.9.Final.jar;C:\Users\thienvy\.m2\repository\jakarta\mail\jakarta.mail-api\2.1.3\jakarta.mail-api-2.1.3.jar;C:\Users\thienvy\.m2\repository\org\eclipse\angus\angus-mail\2.0.3\angus-mail-2.0.3.jar;C:\Users\thienvy\.m2\repository\org\apache\james\apache-mime4j-dom\0.8.11\apache-mime4j-dom-0.8.11.jar;C:\Users\thienvy\.m2\repository\org\apache\james\apache-mime4j-core\0.8.11\apache-mime4j-core-0.8.11.jar;C:\Users\thienvy\.m2\repository\org\apache\james\apache-mime4j-storage\0.8.11\apache-mime4j-storage-0.8.11.jar;C:\Users\thienvy\.m2\repository\commons-io\commons-io\2.11.0\commons-io-2.11.0.jar;C:\Users\thienvy\.m2\repository\org\jboss\resteasy\resteasy-jackson2-provider\6.2.9.Final\resteasy-jackson2-provider-6.2.9.Final.jar;C:\Users\thienvy\.m2\repository\com\fasterxml\jackson\jakarta\rs\jackson-jakarta-rs-base\2.17.3\jackson-jakarta-rs-base-2.17.3.jar;C:\Users\thienvy\.m2\repository\com\fasterxml\jackson\jakarta\rs\jackson-jakarta-rs-json-provider\2.17.3\jackson-jakarta-rs-json-provider-2.17.3.jar;C:\Users\thienvy\.m2\repository\com\fasterxml\jackson\module\jackson-module-jakarta-xmlbind-annotations\2.17.3\jackson-module-jakarta-xmlbind-annotations-2.17.3.jar;C:\Users\thienvy\.m2\repository\com\github\java-json-tools\json-patch\1.13\json-patch-1.13.jar;C:\Users\thienvy\.m2\repository\com\github\java-json-tools\msg-simple\1.2\msg-simple-1.2.jar;C:\Users\thienvy\.m2\repository\com\github\java-json-tools\btf\1.3\btf-1.3.jar;C:\Users\thienvy\.m2\repository\com\github\java-json-tools\jackson-coreutils\2.0\jackson-coreutils-2.0.jar;C:\Users\thienvy\.m2\repository\org\jboss\resteasy\resteasy-jaxb-provider\6.2.9.Final\resteasy-jaxb-provider-6.2.9.Final.jar;C:\Users\thienvy\.m2\repository\org\glassfish\jaxb\codemodel\4.0.5\codemodel-4.0.5.jar;C:\Users\thienvy\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\thienvy\.m2\repository\org\glassfish\jaxb\jaxb-jxc\4.0.5\jaxb-jxc-4.0.5.jar;C:\Users\thienvy\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\thienvy\.m2\repository\org\glassfish\jaxb\jaxb-xjc\4.0.5\jaxb-xjc-4.0.5.jar;C:\Users\thienvy\.m2\repository\org\glassfish\jaxb\xsom\4.0.5\xsom-4.0.5.jar;C:\Users\thienvy\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\thienvy\.m2\repository\com\sun\istack\istack-commons-tools\4.1.2\istack-commons-tools-4.1.2.jar;C:\Users\thienvy\.m2\repository\com\sun\xml\bind\external\relaxng-datatype\4.0.3\relaxng-datatype-4.0.3.jar;C:\Users\thienvy\.m2\repository\com\sun\xml\bind\external\rngom\4.0.3\rngom-4.0.3.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Saigon, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, java.vm.specification.version=17, os.name=Windows 11, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-17\bin, sun.java.command=com.example.transaction_service.TransactionServiceApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@d8bee49, com.sun.management.jmxremote=, jdk.debug=release, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, hibernate.cdi.extensions=true, user.home=C:\Users\thienvy, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2024-04-16, java.home=C:\Program Files\Java\jdk-17, file.separator=\, spring.output.ansi.enabled=always, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.11+7-LTS-207, user.name=Thiên Vỹ, spring.jmx.enabled=true, path.separator=;, management.endpoints.jmx.exposure.include=*, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\thienvy\AppData\Local\Temp\, catalina.home=C:\Users\thienvy\AppData\Local\Temp\tomcat.8088.487092231039759982, java.version=17.0.11, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Study\java-banking-phase2, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=6544, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\thienvy\AppData\Local\Temp\tomcat.8088.487092231039759982, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@11265f09, native.encoding=Cp1258, java.library.path=C:\Program Files\Java\jdk-17\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Java\jdk-17\bin;C:\Program Files (x86)\Microsoft SQL Server\160\Tools\Binn\;C:\Program Files\Microsoft SQL Server\160\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Microsoft SQL Server\160\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\160\DTS\Binn\;C:\Program Files\Git\cmd;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Docker\Docker\resources\bin;C:\ApacheMaven\apache-maven-3.9.9\bin;C:\vault_1.19.2_windows_amd64;C:\Users\thienvy\AppData\Roaming\fnm\node-versions\v22.15.0\installation\node_modules\npm;C:\Users\thienvy\AppData\Roaming\fnm;C:\Users\thienvy\AppData\Local\fnm_multishells\9464_1747193909934;;c:\Users\thienvy\AppData\Local\Programs\cursor\resources\app\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\thienvy\AppData\Local\Microsoft\WindowsApps;C:\Users\thienvy\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\thienvy\AppData\Local\JetBrains\Toolbox\scripts;C:\Users\thienvy\AppData\Local\Microsoft\WinGet\Packages\Schniz.fnm_Microsoft.Winget.Source_8wekyb3d8bbwe;C:\Users\thienvy\AppData\Local\Programs\cursor\resources\app\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, emulated-client, sharing, java.vm.version=17.0.11+7-LTS-207, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=61.0, LOGGED_APPLICATION_NAME=[transaction-service] } MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {} MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.example.transaction_service.entity.Transaction] is safe MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@1efc77a] under count; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@2876441b] under every; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@5f83e711] under any; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5fce4614] under sinh; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6a74b422] under cosh; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5751660e] under tanh; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2925ac19] under pi; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4f6b1cf] under log; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : length -> character_length MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@785e988] under position; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@3ec3e1d1] under overlay; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@667ff21c] under trim; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@4b9e3f0b] under cast; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@75e4b55c] under collate; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@4dcb0550] under extract; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@1577393] under ifnull; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@711eb63c] under pad; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@41f956aa] under str; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@26dfe9ea] under format; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@406a4cc0] under timestampadd; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@2583b97a] under timestampdiff; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2707431a] under current_date; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@546f53f6] under current_time; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@76e34bda] under current_timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current date -> current_date MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current time -> current_time MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@523fe4a8] under local_date; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4fbd7266] under local_time; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@61636884] under local_datetime; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@d3242e9] under offset_datetime; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local date -> local_date MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local time -> local_time MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2005ed43] under instant; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current_instant -> instant MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@6e084c88] under sql; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4f6b1cf MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@74617dff] under lpad; prior registration was NamedSqmFunctionTemplate(lpad) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@44c13330] under rpad; prior registration was NamedSqmFunctionTemplate(rpad) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : day -> dayofmonth MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4ceda4da] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@785e988 MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@5faf6642] under trunc; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : truncate -> trunc MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7e470112] under bitand; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6cf2f22b] under bitor; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6752ec86] under bitxor; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@43eb1b58] under bitnot; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@5e2dda6] under format; prior registration was org.hibernate.dialect.function.FormatFunction@26dfe9ea MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@4fbd7266 MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@61636884 MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7e7a049b] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2925ac19 MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@e3ce10e] under chr; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : char -> chr MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@15960a4a] under sysdate; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@1b27c2ec] under rank; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@2e71191] under dense_rank; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@6e2168eb] under percent_rank; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@5459395d] under cume_dist; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@3310454e] under listagg; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - abs(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double acos(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - addtime(TIME datetime, TIME time) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean any(BOOLEAN arg) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer ascii(STRING arg) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double asin(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - avg(arg) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bit_and(arg) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bit_or(arg) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitand(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitnot(arg) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitor(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitxor(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - cast(arg as Type) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - ceiling(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Character char(INTEGER arg) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Character chr(INTEGER arg) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]]) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String collate(STRING string as COLLATION collation) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]]) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double cos(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double cosh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double cot(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Long count([distinct ]{arg|*}) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer crc32(arg) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double cume_dist([arg0[, ...]]) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date curdate() MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date current date MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time current time MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current timestamp MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date current_date MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Instant current_instant MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time current_time MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current_timestamp MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time curtime() MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date date(arg) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer datediff(DATE end, DATE start) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer day(DATE arg) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String dayname(DATE arg) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofmonth(DATE arg) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofweek(DATE arg) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofyear(DATE arg) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double degrees(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Long dense_rank([arg0[, ...]]) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean every(BOOLEAN arg) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double exp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - first_valueANY value MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - floor(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]]) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer hour(TIME arg) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - ifnull(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Instant instant MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]]) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]] MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date last_day(DATE arg) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - last_valueANY value MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]] MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]]) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String left(STRING string, INTEGER length) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double ln(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local date MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local datetime MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local time MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local_date MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local_datetime MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local_time MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtime MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtimestamp MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start]) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1]) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double log10(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double log2(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String lower(STRING string) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String lpad(string, length[, padding]) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters]) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - max(COMPARABLE arg) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String md5(arg) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer microsecond(TIME arg) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - min(COMPARABLE arg) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer minute(TIME arg) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer month(DATE arg) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String monthname(DATE arg) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp now() MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - nth_valueANY value, INTEGER nth MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - nullif(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset datetime MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset_datetime MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length]) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character]) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double percent_rank([arg0[, ...]]) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double pi MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer position(STRING pattern in STRING string) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer quarter(DATE arg) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double radians(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double rand([INTEGER seed]) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Long rank([arg0[, ...]]) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String repeat(STRING string, INTEGER times) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String reverse(STRING arg) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String right(STRING string, INTEGER length) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places]) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Long row_number() MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String rpad(string, length[, padding]) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters]) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer second(TIME arg) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String sha(arg) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String sha1(arg) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String sha2(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer sign(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double sin(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double sinh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String soundex(arg) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String space(INTEGER arg) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Object sql MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double sqrt(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String str(arg) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length]) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length]) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - subtime(TIME datetime, TIME time) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - sum(arg) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp sysdate() MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double tan(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double tanh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String time(arg) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1]) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - trunc( ... ) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - truncate( ... ) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String upper(STRING string) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date utc_date MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time utc_time MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp utc_timestamp MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_pop(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_samp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double variance(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer week(DATE arg) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer year(DATE arg) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG org.hibernate.orm.query.plan.cache - Starting QueryInterpretationCache(2048) MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.e.i.EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.example.transaction_service.entity.Transaction] is safe MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.example.transaction_service.entity.Transaction]: private accessor [amount] MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.orm.model.mapping.creation - Starting post-init callbacks MDC:[traceId=, spanId=]
2025-06-12 09:36:53 [restartedMain] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(com.example.transaction_service.entity.Transaction) `staticFetchableList` generator MDC:[traceId=, spanId=]
2025-06-12 09:36:54 [restartedMain] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 09:36:54 [restartedMain] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction)] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 09:36:54 [restartedMain] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction.type]
 MDC:[traceId=, spanId=]
2025-06-12 09:36:54 [restartedMain] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 09:36:54 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-12 09:36:54 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select id from tbl_transaction where id=? MDC:[traceId=, spanId=]
2025-06-12 09:36:54 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into tbl_transaction (amount,bank_type,currency,description,destination_bank_code,destination_bank_name,failed_reason,from_account_number,reference_code,status,timestamp,to_account_number,type,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?) MDC:[traceId=, spanId=]
2025-06-12 09:36:54 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update tbl_transaction set amount=?,bank_type=?,currency=?,description=?,destination_bank_code=?,destination_bank_name=?,failed_reason=?,from_account_number=?,reference_code=?,status=?,timestamp=?,to_account_number=?,type=? where id=? MDC:[traceId=, spanId=]
2025-06-12 09:36:54 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from tbl_transaction where id=? MDC:[traceId=, spanId=]
2025-06-12 09:36:54 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration) MDC:[traceId=, spanId=]
2025-06-12 09:36:54 [restartedMain] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@42bfef5b] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@3c72029a] MDC:[traceId=, spanId=]
2025-06-12 09:36:54 [restartedMain] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named HQL queries MDC:[traceId=, spanId=]
2025-06-12 09:36:54 [restartedMain] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named SQL queries MDC:[traceId=, spanId=]
2025-06-12 09:36:54 [restartedMain] DEBUG org.hibernate.mapping.Table - No alter strings for table : tbl_transaction MDC:[traceId=, spanId=]
2025-06-12 09:36:54 [restartedMain] DEBUG o.h.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@57aa8756 MDC:[traceId=, spanId=]
2025-06-12 09:36:54 [restartedMain] DEBUG o.h.internal.SessionFactoryRegistry - Registering SessionFactory: 85821b45-dfa0-4c57-a510-576c861e54c3 (<unnamed>) MDC:[traceId=, spanId=]
2025-06-12 09:36:54 [restartedMain] DEBUG o.h.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured MDC:[traceId=, spanId=]
2025-06-12 09:36:54 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Instantiated SessionFactory MDC:[traceId=, spanId=]
2025-06-12 09:36:55 [restartedMain] DEBUG o.h.s.internal.StatisticsInitiator - Statistics initialized [enabled=false] MDC:[traceId=, spanId=]
2025-06-12 09:36:55 [restartedMain] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy3/jdk.proxy3.$Proxy207.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.example.transaction_service.TransactionServiceApplication.main(TransactionServiceApplication.java:15)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-06-12 09:36:55 [restartedMain] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy3/jdk.proxy3.$Proxy207.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.getCountQuery(JpaQueryLookupStrategy.java:204)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:171)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.example.transaction_service.TransactionServiceApplication.main(TransactionServiceApplication.java:15)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-06-12 09:36:55 [restartedMain] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy3/jdk.proxy3.$Proxy207.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.example.transaction_service.TransactionServiceApplication.main(TransactionServiceApplication.java:15)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-06-12 09:36:55 [restartedMain] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy3/jdk.proxy3.$Proxy207.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.getCountQuery(JpaQueryLookupStrategy.java:204)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:171)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.example.transaction_service.TransactionServiceApplication.main(TransactionServiceApplication.java:15)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-06-12 09:36:58 [restartedMain] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-06-12 09:36:58 [restartedMain] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator MDC:[traceId=, spanId=]
2025-06-12 09:36:58 [restartedMain] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory MDC:[traceId=, spanId=]
2025-06-12 09:36:58 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-06-12 09:36:58 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader MDC:[traceId=, spanId=]
2025-06-12 09:36:58 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-06-12 09:36:58 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-06-12 09:36:58 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-06-12 09:36:58 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-06-12 09:36:58 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-06-12 09:36:58 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-06-12 09:36:58 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-06-12 09:36:58 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-06-12 09:36:58 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-06-12 09:36:58 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-06-12 09:36:58 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-06-12 09:37:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 09:37:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 09:37:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 09:37:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 09:37:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@60f301b4 MDC:[traceId=, spanId=]
2025-06-12 09:37:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 09:37:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6995a2e1 MDC:[traceId=, spanId=]
2025-06-12 09:37:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 09:37:01 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 09:37:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 09:37:01 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 09:37:01 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@420585477 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 09:37:01 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 09:37:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.query.plan.cache - Creating and caching NativeQuery ParameterInterpretation - ParameterInterpretationImpl (SELECT * FROM tbl_transaction WHERE (from_account_number = ? OR to_account_number = ?) AND status = 'COMPLETED' ORDER BY timestamp DESC) : {
    ,
    
} MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.SQL - SELECT * FROM tbl_transaction WHERE (from_account_number = ? OR to_account_number = ?) AND status = 'COMPLETED' ORDER BY timestamp DESC limit ? MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Disallowing positional selections : SELECT * FROM tbl_transaction WHERE (from_account_number = :accountNumber OR to_account_number = :accountNumber) AND status = 'COMPLETED' ORDER BY timestamp DESC MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction -> EntityResultInitializer(com.example.transaction_service.entity.Transaction)@812030477 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [12330f92-2dc0-4ec4-aa39-3cc7bc64dac6] MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction): 12330f92-2dc0-4ec4-aa39-3cc7bc64dac6 MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction#12330f92-2dc0-4ec4-aa39-3cc7bc64dac6] : 1942365750 MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [2000055.00] MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [VND] MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [Rút tiền tiết kiệm] MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [970452] MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [null] MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [TXN-970452999999999-2025061117205125b372cd] MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [2025-06-11T17:20:51.362093] MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [123456789890688] MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [WITHDRAW_ACCOUNT_SAVING] MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction#12330f92-2dc0-4ec4-aa39-3cc7bc64dac6 MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1f8051b3 MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [bbf7b6df-65bd-4476-9e91-8ca8cb6ecbc2] MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction): bbf7b6df-65bd-4476-9e91-8ca8cb6ecbc2 MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction#bbf7b6df-65bd-4476-9e91-8ca8cb6ecbc2] : 458932753 MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [2000000.00] MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [VND] MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [Gửi tiền tiết kiệm] MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [970452] MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [null] MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [123456789890688] MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [TXN-123456789890688-20250610130232123cc7a0] MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [2025-06-10T13:02:32.525836] MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [CREATE_ACCOUNT_SAVING] MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction#bbf7b6df-65bd-4476-9e91-8ca8cb6ecbc2 MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1f8051b3 MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [785e4e83-156c-4e0a-b667-af9f227dab64] MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction): 785e4e83-156c-4e0a-b667-af9f227dab64 MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction#785e4e83-156c-4e0a-b667-af9f227dab64] : 789474973 MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [5000000.00] MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [VND] MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [Gửi tiền tiết kiệm] MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [970452] MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [null] MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [123456789890688] MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [TXN-123456789890688-2025061011285630f075e6] MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [2025-06-10T11:28:56.192430] MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [CREATE_ACCOUNT_SAVING] MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction#785e4e83-156c-4e0a-b667-af9f227dab64 MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1f8051b3 MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [d544ace4-7eed-4bdf-9217-bbadae7dc7af] MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction): d544ace4-7eed-4bdf-9217-bbadae7dc7af MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction#d544ace4-7eed-4bdf-9217-bbadae7dc7af] : 553016462 MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [8000000.00] MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [VND] MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [Gửi tiền tiết kiệm] MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [970452] MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [null] MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [123456789890688] MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [TXN-123456789890688-2025060423430369f6f4e3] MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [2025-06-04T23:43:03.918680] MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [CIF000000030358] MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [CREATE_ACCOUNT_SAVING] MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction#d544ace4-7eed-4bdf-9217-bbadae7dc7af MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1f8051b3 MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [20967bd3-4795-42be-9147-fc4c9bb758a9] MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction): 20967bd3-4795-42be-9147-fc4c9bb758a9 MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction#20967bd3-4795-42be-9147-fc4c9bb758a9] : 1038519530 MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [12000000.00] MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [VND] MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [Gửi tiền tiết kiệm] MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [970452] MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [null] MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [123456789890688] MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [TXN-123456789890688-202506042320250c45034d] MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [2025-06-04T23:20:25.193151] MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [CIF000000030358] MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [CREATE_ACCOUNT_SAVING] MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction#20967bd3-4795-42be-9147-fc4c9bb758a9 MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1f8051b3 MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [33ef40f7-7f21-4a0b-b5de-a908e61d5233] MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction): 33ef40f7-7f21-4a0b-b5de-a908e61d5233 MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction#33ef40f7-7f21-4a0b-b5de-a908e61d5233] : 1893833485 MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [25000000.00] MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [VND] MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [Gửi tiền tiết kiệm] MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [970452] MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [null] MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [123456789890688] MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [TXN-123456789890688-202506041648165336c2c8] MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [2025-06-04T16:48:16.349980] MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [CIF000000030358] MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [CREATE_ACCOUNT_SAVING] MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction#33ef40f7-7f21-4a0b-b5de-a908e61d5233 MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1f8051b3 MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [9482b7ea-71c5-49eb-a050-da80f4d3fc19] MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction): 9482b7ea-71c5-49eb-a050-da80f4d3fc19 MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction#9482b7ea-71c5-49eb-a050-da80f4d3fc19] : 751270154 MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [25000000.00] MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [VND] MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [Gửi tiền tiết kiệm] MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [970452] MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [null] MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [123456789890688] MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [TXN-123456789890688-20250530102708c4b256d0] MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [2025-05-30T10:27:08.067398] MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [CIF000000030358] MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [CREATE_ACCOUNT_SAVING] MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction#9482b7ea-71c5-49eb-a050-da80f4d3fc19 MDC:[traceId=, spanId=]
2025-06-12 09:37:34 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1f8051b3 MDC:[traceId=, spanId=]
2025-06-12 09:38:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 09:38:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 09:38:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 09:38:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 09:38:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5e9040c4 MDC:[traceId=, spanId=]
2025-06-12 09:38:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 09:38:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@60a077e2 MDC:[traceId=, spanId=]
2025-06-12 09:38:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 09:38:01 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 09:38:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 09:38:01 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 09:38:01 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1426305087 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 09:38:01 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 09:38:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.SQL - SELECT * FROM tbl_transaction WHERE (from_account_number = ? OR to_account_number = ?) AND status = 'COMPLETED' ORDER BY timestamp DESC limit ? MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Disallowing positional selections : SELECT * FROM tbl_transaction WHERE (from_account_number = :accountNumber OR to_account_number = :accountNumber) AND status = 'COMPLETED' ORDER BY timestamp DESC MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction -> EntityResultInitializer(com.example.transaction_service.entity.Transaction)@1280640953 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [12330f92-2dc0-4ec4-aa39-3cc7bc64dac6] MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction): 12330f92-2dc0-4ec4-aa39-3cc7bc64dac6 MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction#12330f92-2dc0-4ec4-aa39-3cc7bc64dac6] : 1933060743 MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [2000055.00] MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [VND] MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [Rút tiền tiết kiệm] MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [970452] MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [null] MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [TXN-970452999999999-2025061117205125b372cd] MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [2025-06-11T17:20:51.362093] MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [123456789890688] MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [WITHDRAW_ACCOUNT_SAVING] MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction#12330f92-2dc0-4ec4-aa39-3cc7bc64dac6 MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1dcd8075 MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [bbf7b6df-65bd-4476-9e91-8ca8cb6ecbc2] MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction): bbf7b6df-65bd-4476-9e91-8ca8cb6ecbc2 MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction#bbf7b6df-65bd-4476-9e91-8ca8cb6ecbc2] : 1055835937 MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [2000000.00] MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [VND] MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [Gửi tiền tiết kiệm] MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [970452] MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [null] MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [123456789890688] MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [TXN-123456789890688-20250610130232123cc7a0] MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [2025-06-10T13:02:32.525836] MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [CREATE_ACCOUNT_SAVING] MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction#bbf7b6df-65bd-4476-9e91-8ca8cb6ecbc2 MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1dcd8075 MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [785e4e83-156c-4e0a-b667-af9f227dab64] MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction): 785e4e83-156c-4e0a-b667-af9f227dab64 MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction#785e4e83-156c-4e0a-b667-af9f227dab64] : 1516398474 MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [5000000.00] MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [VND] MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [Gửi tiền tiết kiệm] MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [970452] MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [null] MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [123456789890688] MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [TXN-123456789890688-2025061011285630f075e6] MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [2025-06-10T11:28:56.192430] MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [CREATE_ACCOUNT_SAVING] MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction#785e4e83-156c-4e0a-b667-af9f227dab64 MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1dcd8075 MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [d544ace4-7eed-4bdf-9217-bbadae7dc7af] MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction): d544ace4-7eed-4bdf-9217-bbadae7dc7af MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction#d544ace4-7eed-4bdf-9217-bbadae7dc7af] : 1748763219 MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [8000000.00] MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [VND] MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [Gửi tiền tiết kiệm] MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [970452] MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [null] MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [123456789890688] MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [TXN-123456789890688-2025060423430369f6f4e3] MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [2025-06-04T23:43:03.918680] MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [CIF000000030358] MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [CREATE_ACCOUNT_SAVING] MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction#d544ace4-7eed-4bdf-9217-bbadae7dc7af MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1dcd8075 MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [20967bd3-4795-42be-9147-fc4c9bb758a9] MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction): 20967bd3-4795-42be-9147-fc4c9bb758a9 MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction#20967bd3-4795-42be-9147-fc4c9bb758a9] : 428079369 MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [12000000.00] MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [VND] MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [Gửi tiền tiết kiệm] MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [970452] MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [null] MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [123456789890688] MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [TXN-123456789890688-202506042320250c45034d] MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [2025-06-04T23:20:25.193151] MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [CIF000000030358] MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [CREATE_ACCOUNT_SAVING] MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction#20967bd3-4795-42be-9147-fc4c9bb758a9 MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1dcd8075 MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [33ef40f7-7f21-4a0b-b5de-a908e61d5233] MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction): 33ef40f7-7f21-4a0b-b5de-a908e61d5233 MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction#33ef40f7-7f21-4a0b-b5de-a908e61d5233] : 1360851671 MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [25000000.00] MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [VND] MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [Gửi tiền tiết kiệm] MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [970452] MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [null] MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [123456789890688] MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [TXN-123456789890688-202506041648165336c2c8] MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [2025-06-04T16:48:16.349980] MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [CIF000000030358] MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [CREATE_ACCOUNT_SAVING] MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction#33ef40f7-7f21-4a0b-b5de-a908e61d5233 MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1dcd8075 MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [9482b7ea-71c5-49eb-a050-da80f4d3fc19] MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction): 9482b7ea-71c5-49eb-a050-da80f4d3fc19 MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction#9482b7ea-71c5-49eb-a050-da80f4d3fc19] : 411795785 MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [25000000.00] MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [VND] MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [Gửi tiền tiết kiệm] MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [970452] MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [null] MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [123456789890688] MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [TXN-123456789890688-20250530102708c4b256d0] MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [2025-05-30T10:27:08.067398] MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [CIF000000030358] MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [CREATE_ACCOUNT_SAVING] MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction#9482b7ea-71c5-49eb-a050-da80f4d3fc19 MDC:[traceId=, spanId=]
2025-06-12 09:38:04 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1dcd8075 MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.SQL - SELECT * FROM tbl_transaction WHERE (from_account_number = ? OR to_account_number = ?) AND status = 'COMPLETED' ORDER BY timestamp DESC limit ? MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Disallowing positional selections : SELECT * FROM tbl_transaction WHERE (from_account_number = :accountNumber OR to_account_number = :accountNumber) AND status = 'COMPLETED' ORDER BY timestamp DESC MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction -> EntityResultInitializer(com.example.transaction_service.entity.Transaction)@977564211 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [12330f92-2dc0-4ec4-aa39-3cc7bc64dac6] MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction): 12330f92-2dc0-4ec4-aa39-3cc7bc64dac6 MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction#12330f92-2dc0-4ec4-aa39-3cc7bc64dac6] : 1213290166 MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [2000055.00] MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [VND] MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [Rút tiền tiết kiệm] MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [970452] MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [null] MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [TXN-970452999999999-2025061117205125b372cd] MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [2025-06-11T17:20:51.362093] MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [123456789890688] MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [WITHDRAW_ACCOUNT_SAVING] MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction#12330f92-2dc0-4ec4-aa39-3cc7bc64dac6 MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6baae4f2 MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [bbf7b6df-65bd-4476-9e91-8ca8cb6ecbc2] MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction): bbf7b6df-65bd-4476-9e91-8ca8cb6ecbc2 MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction#bbf7b6df-65bd-4476-9e91-8ca8cb6ecbc2] : 1398085653 MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [2000000.00] MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [VND] MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [Gửi tiền tiết kiệm] MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [970452] MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [null] MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [123456789890688] MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [TXN-123456789890688-20250610130232123cc7a0] MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [2025-06-10T13:02:32.525836] MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [CREATE_ACCOUNT_SAVING] MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction#bbf7b6df-65bd-4476-9e91-8ca8cb6ecbc2 MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6baae4f2 MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [785e4e83-156c-4e0a-b667-af9f227dab64] MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction): 785e4e83-156c-4e0a-b667-af9f227dab64 MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction#785e4e83-156c-4e0a-b667-af9f227dab64] : 1877277689 MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [5000000.00] MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [VND] MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [Gửi tiền tiết kiệm] MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [970452] MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [null] MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [123456789890688] MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [TXN-123456789890688-2025061011285630f075e6] MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [2025-06-10T11:28:56.192430] MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [CREATE_ACCOUNT_SAVING] MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction#785e4e83-156c-4e0a-b667-af9f227dab64 MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6baae4f2 MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [d544ace4-7eed-4bdf-9217-bbadae7dc7af] MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction): d544ace4-7eed-4bdf-9217-bbadae7dc7af MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction#d544ace4-7eed-4bdf-9217-bbadae7dc7af] : 513794734 MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [8000000.00] MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [VND] MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [Gửi tiền tiết kiệm] MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [970452] MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [null] MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [123456789890688] MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [TXN-123456789890688-2025060423430369f6f4e3] MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [2025-06-04T23:43:03.918680] MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [CIF000000030358] MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [CREATE_ACCOUNT_SAVING] MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction#d544ace4-7eed-4bdf-9217-bbadae7dc7af MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6baae4f2 MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [20967bd3-4795-42be-9147-fc4c9bb758a9] MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction): 20967bd3-4795-42be-9147-fc4c9bb758a9 MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction#20967bd3-4795-42be-9147-fc4c9bb758a9] : 388403670 MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [12000000.00] MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [VND] MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [Gửi tiền tiết kiệm] MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [970452] MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [null] MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [123456789890688] MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [TXN-123456789890688-202506042320250c45034d] MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [2025-06-04T23:20:25.193151] MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [CIF000000030358] MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [CREATE_ACCOUNT_SAVING] MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction#20967bd3-4795-42be-9147-fc4c9bb758a9 MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6baae4f2 MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [33ef40f7-7f21-4a0b-b5de-a908e61d5233] MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction): 33ef40f7-7f21-4a0b-b5de-a908e61d5233 MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction#33ef40f7-7f21-4a0b-b5de-a908e61d5233] : 1825089175 MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [25000000.00] MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [VND] MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [Gửi tiền tiết kiệm] MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [970452] MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [null] MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [123456789890688] MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [TXN-123456789890688-202506041648165336c2c8] MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [2025-06-04T16:48:16.349980] MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [CIF000000030358] MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [CREATE_ACCOUNT_SAVING] MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction#33ef40f7-7f21-4a0b-b5de-a908e61d5233 MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6baae4f2 MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [9482b7ea-71c5-49eb-a050-da80f4d3fc19] MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction): 9482b7ea-71c5-49eb-a050-da80f4d3fc19 MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction#9482b7ea-71c5-49eb-a050-da80f4d3fc19] : 607892420 MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [25000000.00] MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [VND] MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [Gửi tiền tiết kiệm] MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [970452] MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [null] MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [123456789890688] MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [TXN-123456789890688-20250530102708c4b256d0] MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [2025-05-30T10:27:08.067398] MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [CIF000000030358] MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [CREATE_ACCOUNT_SAVING] MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction#9482b7ea-71c5-49eb-a050-da80f4d3fc19 MDC:[traceId=, spanId=]
2025-06-12 09:38:40 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6baae4f2 MDC:[traceId=, spanId=]
2025-06-12 09:39:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 09:39:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 09:39:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 09:39:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 09:39:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@71c81304 MDC:[traceId=, spanId=]
2025-06-12 09:39:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 09:39:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2246602c MDC:[traceId=, spanId=]
2025-06-12 09:39:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 09:39:01 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 09:39:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 09:39:01 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 09:39:01 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1778059158 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 09:39:01 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 09:39:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 09:40:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 09:40:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 09:40:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 09:40:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 09:40:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@189002f0 MDC:[traceId=, spanId=]
2025-06-12 09:40:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 09:40:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@65cb6edb MDC:[traceId=, spanId=]
2025-06-12 09:40:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 09:40:01 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 09:40:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 09:40:01 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 09:40:01 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1175926219 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 09:40:01 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 09:40:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 09:41:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 09:41:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 09:41:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 09:41:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 09:41:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@649bfa65 MDC:[traceId=, spanId=]
2025-06-12 09:41:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 09:41:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@54bdaf5d MDC:[traceId=, spanId=]
2025-06-12 09:41:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 09:41:01 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 09:41:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 09:41:01 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 09:41:01 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@254465203 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 09:41:01 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 09:41:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 09:42:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 09:42:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 09:42:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 09:42:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 09:42:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@229ccbb1 MDC:[traceId=, spanId=]
2025-06-12 09:42:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 09:42:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4bfd8ef7 MDC:[traceId=, spanId=]
2025-06-12 09:42:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 09:42:01 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 09:42:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 09:42:01 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 09:42:01 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@613169582 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 09:42:01 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 09:42:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 09:43:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 09:43:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 09:43:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 09:43:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 09:43:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3b748c1 MDC:[traceId=, spanId=]
2025-06-12 09:43:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 09:43:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5c3fec6f MDC:[traceId=, spanId=]
2025-06-12 09:43:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 09:43:01 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 09:43:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 09:43:01 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 09:43:01 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@2069409470 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 09:43:01 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 09:43:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 09:43:08 [DubboServerHandler-172.19.224.1:20883-thread-2] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 09:43:08 [DubboServerHandler-172.19.224.1:20883-thread-2] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 09:43:08 [DubboServerHandler-172.19.224.1:20883-thread-2] DEBUG o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier MDC:[traceId=, spanId=]
2025-06-12 09:43:08 [DubboServerHandler-172.19.224.1:20883-thread-2] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 09:43:08 [DubboServerHandler-172.19.224.1:20883-thread-2] DEBUG o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades MDC:[traceId=, spanId=]
2025-06-12 09:43:08 [DubboServerHandler-172.19.224.1:20883-thread-2] DEBUG o.h.e.i.AbstractFlushingEventListener - Dirty checking collections MDC:[traceId=, spanId=]
2025-06-12 09:43:08 [DubboServerHandler-172.19.224.1:20883-thread-2] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects MDC:[traceId=, spanId=]
2025-06-12 09:43:08 [DubboServerHandler-172.19.224.1:20883-thread-2] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections MDC:[traceId=, spanId=]
2025-06-12 09:43:08 [DubboServerHandler-172.19.224.1:20883-thread-2] DEBUG o.h.internal.util.EntityPrinter - Listing entities: MDC:[traceId=, spanId=]
2025-06-12 09:43:08 [DubboServerHandler-172.19.224.1:20883-thread-2] DEBUG o.h.internal.util.EntityPrinter - com.example.transaction_service.entity.Transaction{amount=2000082, fromAccountNumber=970452999999999, bankType=INTERNAL, description=Rút tiền tiết kiệm, type=WITHDRAW_ACCOUNT_SAVING, destinationBankCode=970452, toAccountNumber=123456789890688, currency=VND, id=75018c46-d32c-470c-86b2-1d92053e47aa, referenceCode=TXN-970452999999999-20250612094307b544d30f, destinationBankName=Ngân hàng TMCP Kiên Long (KienLong Bank), failedReason=null, status=COMPLETED, timestamp=2025-06-12T09:43:07.664502300} MDC:[traceId=, spanId=]
2025-06-12 09:43:08 [DubboServerHandler-172.19.224.1:20883-thread-2] DEBUG org.hibernate.SQL - insert into tbl_transaction (amount,bank_type,currency,description,destination_bank_code,destination_bank_name,failed_reason,from_account_number,reference_code,status,timestamp,to_account_number,type,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?) MDC:[traceId=, spanId=]
2025-06-12 09:44:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 09:44:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 09:44:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 09:44:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 09:44:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1ea510a6 MDC:[traceId=, spanId=]
2025-06-12 09:44:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 09:44:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@45c840b3 MDC:[traceId=, spanId=]
2025-06-12 09:44:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 09:44:01 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 09:44:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 09:44:01 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 09:44:01 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1648927818 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 09:44:01 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 09:44:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 09:45:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 09:45:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 09:45:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 09:45:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 09:45:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@17f0c629 MDC:[traceId=, spanId=]
2025-06-12 09:45:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 09:45:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@74b1e541 MDC:[traceId=, spanId=]
2025-06-12 09:45:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 09:45:01 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 09:45:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 09:45:01 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 09:45:01 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@478151937 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 09:45:01 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 09:45:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 09:46:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 09:46:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 09:46:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 09:46:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 09:46:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@228d9402 MDC:[traceId=, spanId=]
2025-06-12 09:46:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 09:46:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@688b356 MDC:[traceId=, spanId=]
2025-06-12 09:46:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 09:46:01 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 09:46:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 09:46:01 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 09:46:01 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@484753701 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 09:46:01 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 09:46:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 09:47:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 09:47:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 09:47:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 09:47:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 09:47:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6788a572 MDC:[traceId=, spanId=]
2025-06-12 09:47:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 09:47:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7f7f6d04 MDC:[traceId=, spanId=]
2025-06-12 09:47:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 09:47:01 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 09:47:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 09:47:01 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 09:47:01 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1828667191 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 09:47:01 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 09:47:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 09:48:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 09:48:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 09:48:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 09:48:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 09:48:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2e392a67 MDC:[traceId=, spanId=]
2025-06-12 09:48:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 09:48:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@57cf663f MDC:[traceId=, spanId=]
2025-06-12 09:48:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 09:48:01 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 09:48:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 09:48:01 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 09:48:01 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@835804973 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 09:48:01 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 09:48:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 09:49:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 09:49:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 09:49:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 09:49:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 09:49:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6bec77db MDC:[traceId=, spanId=]
2025-06-12 09:49:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 09:49:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@fca9820 MDC:[traceId=, spanId=]
2025-06-12 09:49:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 09:49:01 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 09:49:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 09:49:01 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 09:49:01 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1773149678 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 09:49:01 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 09:49:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 09:50:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 09:50:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 09:50:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 09:50:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 09:50:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@a21b7d1 MDC:[traceId=, spanId=]
2025-06-12 09:50:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 09:50:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2d2faaf9 MDC:[traceId=, spanId=]
2025-06-12 09:50:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 09:50:01 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 09:50:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 09:50:01 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 09:50:01 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@2132502719 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 09:50:01 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 09:50:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 09:51:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 09:51:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 09:51:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 09:51:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 09:51:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@29c0c056 MDC:[traceId=, spanId=]
2025-06-12 09:51:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 09:51:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@50ab1af6 MDC:[traceId=, spanId=]
2025-06-12 09:51:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 09:51:01 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 09:51:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 09:51:01 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 09:51:01 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1196103832 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 09:51:01 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 09:51:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 09:52:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 09:52:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 09:52:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 09:52:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 09:52:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@64777646 MDC:[traceId=, spanId=]
2025-06-12 09:52:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 09:52:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5a244fc3 MDC:[traceId=, spanId=]
2025-06-12 09:52:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 09:52:01 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 09:52:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 09:52:01 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 09:52:01 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@446745927 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 09:52:01 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 09:52:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 09:53:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 09:53:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 09:53:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 09:53:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 09:53:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3e5d868a MDC:[traceId=, spanId=]
2025-06-12 09:53:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 09:53:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@faeca7a MDC:[traceId=, spanId=]
2025-06-12 09:53:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 09:53:01 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 09:53:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 09:53:01 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 09:53:01 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1625531042 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 09:53:01 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 09:53:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 09:54:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 09:54:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 09:54:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 09:54:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 09:54:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@169f00e6 MDC:[traceId=, spanId=]
2025-06-12 09:54:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 09:54:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7c2512d6 MDC:[traceId=, spanId=]
2025-06-12 09:54:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 09:54:01 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 09:54:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 09:54:01 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 09:54:01 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@2114026117 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 09:54:01 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 09:54:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 09:55:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 09:55:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 09:55:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 09:55:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 09:55:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@56782483 MDC:[traceId=, spanId=]
2025-06-12 09:55:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 09:55:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@109437c0 MDC:[traceId=, spanId=]
2025-06-12 09:55:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 09:55:01 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 09:55:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 09:55:01 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 09:55:01 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@2064960096 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 09:55:01 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 09:55:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 09:56:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 09:56:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 09:56:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 09:56:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 09:56:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4d5760fa MDC:[traceId=, spanId=]
2025-06-12 09:56:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 09:56:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@40c3397 MDC:[traceId=, spanId=]
2025-06-12 09:56:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 09:56:01 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 09:56:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 09:56:01 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 09:56:01 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1330861446 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 09:56:01 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 09:56:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 09:57:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 09:57:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 09:57:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 09:57:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 09:57:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@39ced3f6 MDC:[traceId=, spanId=]
2025-06-12 09:57:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 09:57:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7c34ff08 MDC:[traceId=, spanId=]
2025-06-12 09:57:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 09:57:01 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 09:57:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 09:57:01 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 09:57:01 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1982617546 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 09:57:01 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 09:57:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 09:58:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 09:58:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 09:58:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 09:58:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 09:58:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2e911d30 MDC:[traceId=, spanId=]
2025-06-12 09:58:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 09:58:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@241e0570 MDC:[traceId=, spanId=]
2025-06-12 09:58:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 09:58:01 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 09:58:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 09:58:01 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 09:58:01 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@745906240 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 09:58:01 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 09:58:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 09:59:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 09:59:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 09:59:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 09:59:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 09:59:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@130a07e2 MDC:[traceId=, spanId=]
2025-06-12 09:59:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 09:59:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@51cad79d MDC:[traceId=, spanId=]
2025-06-12 09:59:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 09:59:01 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 09:59:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 09:59:01 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 09:59:01 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1133781034 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 09:59:01 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 09:59:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 09:59:49 [DubboServerHandler-172.19.224.1:20883-thread-9] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 09:59:49 [DubboServerHandler-172.19.224.1:20883-thread-9] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 09:59:49 [DubboServerHandler-172.19.224.1:20883-thread-9] DEBUG o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier MDC:[traceId=, spanId=]
2025-06-12 09:59:49 [DubboServerHandler-172.19.224.1:20883-thread-9] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 09:59:49 [DubboServerHandler-172.19.224.1:20883-thread-9] DEBUG o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades MDC:[traceId=, spanId=]
2025-06-12 09:59:49 [DubboServerHandler-172.19.224.1:20883-thread-9] DEBUG o.h.e.i.AbstractFlushingEventListener - Dirty checking collections MDC:[traceId=, spanId=]
2025-06-12 09:59:49 [DubboServerHandler-172.19.224.1:20883-thread-9] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects MDC:[traceId=, spanId=]
2025-06-12 09:59:49 [DubboServerHandler-172.19.224.1:20883-thread-9] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections MDC:[traceId=, spanId=]
2025-06-12 09:59:49 [DubboServerHandler-172.19.224.1:20883-thread-9] DEBUG o.h.internal.util.EntityPrinter - Listing entities: MDC:[traceId=, spanId=]
2025-06-12 09:59:49 [DubboServerHandler-172.19.224.1:20883-thread-9] DEBUG o.h.internal.util.EntityPrinter - com.example.transaction_service.entity.Transaction{amount=10000000, fromAccountNumber=123456789890688, bankType=INTERNAL, description=Gửi tiền tiết kiệm, type=CREATE_ACCOUNT_SAVING, destinationBankCode=970452, toAccountNumber=970452999999999, currency=VND, id=31772ab4-8f5d-40c5-a648-21899bed2aae, referenceCode=TXN-123456789890688-2025061209594962c7fc88, destinationBankName=Ngân hàng TMCP Kiên Long (KienLong Bank), failedReason=null, status=COMPLETED, timestamp=2025-06-12T09:59:49.660305100} MDC:[traceId=, spanId=]
2025-06-12 09:59:49 [DubboServerHandler-172.19.224.1:20883-thread-9] DEBUG org.hibernate.SQL - insert into tbl_transaction (amount,bank_type,currency,description,destination_bank_code,destination_bank_name,failed_reason,from_account_number,reference_code,status,timestamp,to_account_number,type,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?) MDC:[traceId=, spanId=]
2025-06-12 10:00:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 10:00:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 10:00:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 10:00:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 10:00:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6c0953d6 MDC:[traceId=, spanId=]
2025-06-12 10:00:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 10:00:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@428acb93 MDC:[traceId=, spanId=]
2025-06-12 10:00:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 10:00:01 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 10:00:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 10:00:01 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 10:00:01 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@168221570 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 10:00:01 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 10:00:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 10:01:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 10:01:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 10:01:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 10:01:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 10:01:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@ed79636 MDC:[traceId=, spanId=]
2025-06-12 10:01:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 10:01:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@355c6faf MDC:[traceId=, spanId=]
2025-06-12 10:01:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 10:01:01 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 10:01:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 10:01:01 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 10:01:01 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1280610631 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 10:01:01 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 10:01:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 10:02:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 10:02:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 10:02:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 10:02:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 10:02:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2ef517ec MDC:[traceId=, spanId=]
2025-06-12 10:02:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 10:02:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1ed66ed MDC:[traceId=, spanId=]
2025-06-12 10:02:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 10:02:01 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 10:02:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 10:02:01 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 10:02:01 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1628113169 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 10:02:01 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 10:02:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 10:03:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 10:03:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 10:03:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 10:03:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 10:03:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@150083fe MDC:[traceId=, spanId=]
2025-06-12 10:03:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 10:03:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@59a056ed MDC:[traceId=, spanId=]
2025-06-12 10:03:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 10:03:01 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 10:03:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 10:03:01 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 10:03:01 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@332328656 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 10:03:01 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 10:03:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 10:04:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 10:04:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 10:04:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 10:04:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 10:04:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4fd544b1 MDC:[traceId=, spanId=]
2025-06-12 10:04:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 10:04:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@43a747e5 MDC:[traceId=, spanId=]
2025-06-12 10:04:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 10:04:01 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 10:04:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 10:04:01 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 10:04:01 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1620301553 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 10:04:01 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 10:04:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 10:05:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 10:05:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 10:05:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 10:05:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 10:05:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5b8e0aed MDC:[traceId=, spanId=]
2025-06-12 10:05:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 10:05:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@240a9f4e MDC:[traceId=, spanId=]
2025-06-12 10:05:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 10:05:01 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 10:05:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 10:05:01 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 10:05:01 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@807701484 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 10:05:01 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 10:05:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 10:06:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 10:06:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 10:06:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 10:06:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 10:06:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6867a7ca MDC:[traceId=, spanId=]
2025-06-12 10:06:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 10:06:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@310a86a2 MDC:[traceId=, spanId=]
2025-06-12 10:06:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 10:06:01 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 10:06:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 10:06:01 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 10:06:01 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1963096438 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 10:06:01 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 10:06:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 10:07:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 10:07:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 10:07:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 10:07:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 10:07:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@442f3db5 MDC:[traceId=, spanId=]
2025-06-12 10:07:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 10:07:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@16692a3a MDC:[traceId=, spanId=]
2025-06-12 10:07:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 10:07:01 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 10:07:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 10:07:01 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 10:07:01 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1152097933 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 10:07:01 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 10:07:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 10:08:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 10:08:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 10:08:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 10:08:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 10:08:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4fbbea71 MDC:[traceId=, spanId=]
2025-06-12 10:08:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 10:08:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@147649e MDC:[traceId=, spanId=]
2025-06-12 10:08:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 10:08:01 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 10:08:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 10:08:01 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 10:08:01 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@885890535 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 10:08:01 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 10:08:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 10:09:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 10:09:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 10:09:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 10:09:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 10:09:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@42e96c04 MDC:[traceId=, spanId=]
2025-06-12 10:09:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 10:09:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@59fe5fa MDC:[traceId=, spanId=]
2025-06-12 10:09:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 10:09:01 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 10:09:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 10:09:01 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 10:09:01 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1574489996 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 10:09:01 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 10:09:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 10:10:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 10:10:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 10:10:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 10:10:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 10:10:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4223eb11 MDC:[traceId=, spanId=]
2025-06-12 10:10:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 10:10:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2b9f5efd MDC:[traceId=, spanId=]
2025-06-12 10:10:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 10:10:01 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 10:10:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 10:10:01 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 10:10:01 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@51476895 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 10:10:01 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 10:10:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 10:11:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 10:11:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 10:11:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 10:11:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 10:11:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@738ce1eb MDC:[traceId=, spanId=]
2025-06-12 10:11:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 10:11:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1780e1aa MDC:[traceId=, spanId=]
2025-06-12 10:11:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 10:11:01 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 10:11:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 10:11:01 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 10:11:01 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@456131672 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 10:11:01 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 10:11:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 10:12:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 10:12:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 10:12:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 10:12:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 10:12:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@8793153 MDC:[traceId=, spanId=]
2025-06-12 10:12:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 10:12:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@fc6f7c8 MDC:[traceId=, spanId=]
2025-06-12 10:12:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 10:12:01 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 10:12:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 10:12:01 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 10:12:01 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@662406961 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 10:12:01 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 10:12:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 10:13:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 10:13:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 10:13:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 10:13:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 10:13:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@44b932ee MDC:[traceId=, spanId=]
2025-06-12 10:13:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 10:13:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6eb910b2 MDC:[traceId=, spanId=]
2025-06-12 10:13:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 10:13:01 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 10:13:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 10:13:01 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 10:13:01 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@455783334 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 10:13:01 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 10:13:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 10:14:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 10:14:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 10:14:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 10:14:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 10:14:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@39f1c99d MDC:[traceId=, spanId=]
2025-06-12 10:14:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 10:14:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1cecace1 MDC:[traceId=, spanId=]
2025-06-12 10:14:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 10:14:01 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 10:14:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 10:14:01 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 10:14:01 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@209792813 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 10:14:01 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 10:14:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 10:15:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 10:15:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 10:15:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 10:15:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 10:15:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@45aa4337 MDC:[traceId=, spanId=]
2025-06-12 10:15:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 10:15:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2c79c5ca MDC:[traceId=, spanId=]
2025-06-12 10:15:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 10:15:01 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 10:15:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 10:15:01 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 10:15:01 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1910115267 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 10:15:01 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 10:15:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 10:16:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 10:16:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 10:16:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 10:16:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 10:16:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@17b57f84 MDC:[traceId=, spanId=]
2025-06-12 10:16:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 10:16:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@bf34423 MDC:[traceId=, spanId=]
2025-06-12 10:16:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 10:16:01 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 10:16:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 10:16:01 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 10:16:01 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@542929547 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 10:16:01 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 10:16:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 10:17:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 10:17:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 10:17:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 10:17:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 10:17:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@31f7f43a MDC:[traceId=, spanId=]
2025-06-12 10:17:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 10:17:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@60d608c0 MDC:[traceId=, spanId=]
2025-06-12 10:17:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 10:17:01 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 10:17:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 10:17:01 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 10:17:01 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1281082508 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 10:17:01 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 10:17:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 10:18:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 10:18:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 10:18:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 10:18:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 10:18:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4ef82f10 MDC:[traceId=, spanId=]
2025-06-12 10:18:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 10:18:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4cdaa2b1 MDC:[traceId=, spanId=]
2025-06-12 10:18:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 10:18:01 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 10:18:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 10:18:01 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 10:18:01 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@82932110 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 10:18:01 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 10:18:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 10:19:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 10:19:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 10:19:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 10:19:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 10:19:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@75306a0 MDC:[traceId=, spanId=]
2025-06-12 10:19:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 10:19:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4247f327 MDC:[traceId=, spanId=]
2025-06-12 10:19:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 10:19:01 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 10:19:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 10:19:01 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 10:19:01 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1566263600 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 10:19:01 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 10:19:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 10:20:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 10:20:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 10:20:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 10:20:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 10:20:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@61548683 MDC:[traceId=, spanId=]
2025-06-12 10:20:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 10:20:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6199d440 MDC:[traceId=, spanId=]
2025-06-12 10:20:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 10:20:01 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 10:20:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 10:20:01 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 10:20:01 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@176232114 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 10:20:01 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 10:20:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 10:21:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 10:21:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 10:21:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 10:21:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 10:21:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6e6f4374 MDC:[traceId=, spanId=]
2025-06-12 10:21:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 10:21:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5ba7b441 MDC:[traceId=, spanId=]
2025-06-12 10:21:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 10:21:01 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 10:21:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 10:21:01 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 10:21:01 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1040511348 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 10:21:01 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 10:21:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 10:22:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 10:22:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 10:22:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 10:22:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 10:22:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6e0fb28 MDC:[traceId=, spanId=]
2025-06-12 10:22:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 10:22:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@39d97b63 MDC:[traceId=, spanId=]
2025-06-12 10:22:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 10:22:01 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 10:22:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 10:22:01 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 10:22:01 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1616705559 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 10:22:01 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 10:22:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 10:23:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 10:23:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 10:23:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 10:23:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 10:23:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@40be1b03 MDC:[traceId=, spanId=]
2025-06-12 10:23:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 10:23:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3d6977ec MDC:[traceId=, spanId=]
2025-06-12 10:23:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 10:23:01 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 10:23:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 10:23:01 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 10:23:01 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@238393952 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 10:23:01 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 10:23:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 10:24:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 10:24:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 10:24:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 10:24:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 10:24:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1b5c671a MDC:[traceId=, spanId=]
2025-06-12 10:24:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 10:24:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@49c1df58 MDC:[traceId=, spanId=]
2025-06-12 10:24:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 10:24:01 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 10:24:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 10:24:01 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 10:24:01 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@965652862 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 10:24:01 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 10:24:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 10:25:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 10:25:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 10:25:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 10:25:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 10:25:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@59e0e215 MDC:[traceId=, spanId=]
2025-06-12 10:25:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 10:25:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@512de2d1 MDC:[traceId=, spanId=]
2025-06-12 10:25:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 10:25:01 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 10:25:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 10:25:01 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 10:25:01 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@588957008 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 10:25:01 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 10:25:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 10:26:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 10:26:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 10:26:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 10:26:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 10:26:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4529236b MDC:[traceId=, spanId=]
2025-06-12 10:26:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 10:26:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1a6decf8 MDC:[traceId=, spanId=]
2025-06-12 10:26:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 10:26:01 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 10:26:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 10:26:01 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 10:26:01 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@627812646 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 10:26:01 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 10:26:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 10:27:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 10:27:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 10:27:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 10:27:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 10:27:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@16cfd4d7 MDC:[traceId=, spanId=]
2025-06-12 10:27:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 10:27:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@b0b0c8b MDC:[traceId=, spanId=]
2025-06-12 10:27:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 10:27:01 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 10:27:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 10:27:01 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 10:27:01 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@966613377 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 10:27:01 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 10:27:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 10:27:47 [SpringContextShutdownHook] DEBUG o.h.internal.SessionFactoryImpl - HHH000031: Closing MDC:[traceId=, spanId=]
2025-06-12 10:27:47 [SpringContextShutdownHook] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@6b165049] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@3c72029a] MDC:[traceId=, spanId=]
2025-06-12 10:27:47 [SpringContextShutdownHook] DEBUG o.h.s.i.AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries MDC:[traceId=, spanId=]
2025-06-12 10:27:47 [SpringContextShutdownHook] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries MDC:[traceId=, spanId=]
2025-06-12 10:27:51 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final MDC:[traceId=, spanId=]
2025-06-12 10:27:51 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-06-12 10:27:51 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-06-12 10:27:51 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-06-12 10:27:51 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-06-12 10:27:51 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-06-12 10:27:51 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-06-12 10:27:51 [background-preinit] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-06-12 10:27:51 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-06-12 10:27:51 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-06-12 10:27:51 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-06-12 10:27:51 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-06-12 10:27:51 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-06-12 10:27:51 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.h.jpa.internal.util.LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@2639bdce
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Study/java-banking-phase2/backend/transaction-service/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.example.transaction_service.entity.Transaction]
	Mapping files names []
	Properties [] MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator]. MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator]. MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG org.hibernate.cfg.Environment - HHH000206: 'hibernate.properties' not found MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator] MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator] MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator] MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator] MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned] MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator] MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator] MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator] MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator] MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator] MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.h.c.i.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@4ec09410 MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@4ec09410 MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@4ec09410 MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@6522891c MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@6522891c MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@705511c0 MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@705511c0 MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@187ec2cd MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@187ec2cd MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@52d4a5c6 MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@52d4a5c6 MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@52d4a5c6 MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@234face9 MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@234face9 MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@234face9 MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@7bcc7251 MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@7bcc7251 MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@15caaf4f MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@62c7d2a5 MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@62c7d2a5 MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@3c3112f0 MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@24f7a1dd MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@6487c2db MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@6487c2db MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@6487c2db MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@38897614 MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@38897614 MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@38897614 MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@c1b5567 MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@c1b5567 MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@c1b5567 MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@157bf470 MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@157bf470 MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@157bf470 MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@4f307d1e MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@4f307d1e MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@4f307d1e MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@3cfa8b3a MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@3cfa8b3a MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@6a1c51af MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@6a1c51af MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@200ef0e8 MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@200ef0e8 MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@200ef0e8 MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@6c9ab17a MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@4d15488 MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@4d15488 MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@cc8ec94 MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@5b96c455 MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5b96c455 MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@5b96c455 MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@62bebf3c MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@6c45d2f7 MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@27222fa7 MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@4a7bf37a MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@4a7bf37a MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@5dabf256 MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@5dabf256 MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@1fbb417e MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@29d21a39 MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@3c27cc5a MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@3e1ca0ca MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@7be9b6c6 MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@42d37850 MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@4014394c MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@4014394c MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@1b55db74 MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@1b55db74 MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@2dbc015e MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@2dbc015e MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@74f4fd41 MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@74f4fd41 MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@15cb64ca MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@15cb64ca MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@20f0937c MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6d0bc0cd MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@3e4636d8 MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@3e4636d8 MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@70e5f8ee MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@54aafefd MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6714410d MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@686b4bc1 MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@686b4bc1 MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3796fcaa MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3448b1b3 MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@7191921e MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@7191921e MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@4316eaae MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@4316eaae MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@43e52dca MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@43e52dca MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@43e52dca MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@32d1c92c MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@32d1c92c MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@32d1c92c MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@4f2dbc0a MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@3b1a6cdb MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@51fb9d0f MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@51fb9d0f MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@6d5fa6b5 MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@6d5fa6b5 MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@6d5fa6b5 MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4fb08af8 MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@27244b61 MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@2abaa96f MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@2abaa96f MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@3a40c883 MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@3a40c883 MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@3a40c883 MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@716c7279 MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@716c7279 MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@74964076 MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@74964076 MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@b987e5a MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@b987e5a MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@3720ab7a MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@3720ab7a MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@25cdf85d MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@25cdf85d MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@631e8962 MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@2bbc51f5 MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@6c108a1b MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@6c108a1b MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@5ce14efc MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@6763c698 MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@31f93c01 MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@4e889500 MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@1848b483 MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@6166f614 MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@1987c70d MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@132d71a8 MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@4e1c23e2 MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@12743600] into BootstrapContext; was [null] MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@12743600) [was null] MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@32dc3818] into BootstrapContext; was [null] MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@ef09092] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@2f54aecd] MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@12743600] MDC:[traceId=, spanId=]
2025-06-12 10:27:57 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@12743600] MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Database ->
	   name : MySQL
	version : 8.0.42
	  major : 8
	  minor : 0 MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Driver ->
	   name : MySQL Connector/J
	version : mysql-connector-j-8.3.0 (Revision: 805f872a57875f311cb82487efcfb070411a3fa0)
	  major : 8
	  minor : 3 MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - JDBC version : 4.2 MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.orm.dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQLDialect, version: 8.0.42 MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@edb776e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5e02957f) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@796cb6a9) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3b540897) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6e617894) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2402a14a) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3847829d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@234c35b2) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@460c5c97) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7735aded) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@73e29afc) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@31c1c097) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@150dcadc) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4f8d5755) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@285f0122) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@17a5b9c6) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6c85cac4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@49170ffe) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT)) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT)) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@69844b76 MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@5ce14efc` MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2a316277] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@667d3f33] MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.boot.model.relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}] MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Transaction MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity com.example.transaction_service.entity.Transaction on table tbl_transaction MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE') MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.example.transaction_service.entity.Transaction] is safe MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property id with lazy=false MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:id] MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for id MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.id MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property id MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, assigned, , ...) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property amount with lazy=false MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:amount] MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for amount MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.amount MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property amount MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property bankType with lazy=false MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:bankType] MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for bankType MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.bank_type MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property bankType MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property currency with lazy=false MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:currency] MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for currency MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.currency MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property currency MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property description with lazy=false MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:description] MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for description MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.description MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property description MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property destinationBankCode with lazy=false MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:destinationBankCode] MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for destinationBankCode MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.destination_bank_code MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property destinationBankCode MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property destinationBankName with lazy=false MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:destinationBankName] MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for destinationBankName MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.destination_bank_name MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property destinationBankName MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property failedReason with lazy=false MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:failedReason] MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for failedReason MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.failed_reason MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property failedReason MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property fromAccountNumber with lazy=false MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:fromAccountNumber] MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for fromAccountNumber MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.from_account_number MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property fromAccountNumber MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property referenceCode with lazy=false MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:referenceCode] MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for referenceCode MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.reference_code MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property referenceCode MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property status with lazy=false MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:status] MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for status MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.status MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property status MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property timestamp with lazy=false MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:timestamp] MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for timestamp MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.timestamp MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property timestamp MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property toAccountNumber with lazy=false MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:toAccountNumber] MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for toAccountNumber MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.to_account_number MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property toAccountNumber MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property type with lazy=false MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:type] MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for type MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.type MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property type MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: com.example.transaction_service.entity MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.j.e.i.CallbackDefinitionResolverLegacyImpl - Adding prePersist as PrePersist callback for entity com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bankType MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for currency MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for description MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for destinationBankCode MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for destinationBankName MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for failedReason MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for fromAccountNumber MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for referenceCode MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for timestamp MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for toAccountNumber MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for type MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [tbl_transaction] MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Building session factory MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Instantiating SessionFactory with settings: {jdk.tls.rejectClientInitiatedRenegotiation=true, java.specification.version=17, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@7614b2c4, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1258, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Study\java-banking-phase2\backend\transaction-service\target\classes;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-starter-actuator\3.3.11\spring-boot-starter-actuator-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-starter\3.3.11\spring-boot-starter-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.3.11\spring-boot-starter-logging-3.3.11.jar;C:\Users\thienvy\.m2\repository\ch\qos\logback\logback-classic\1.5.18\logback-classic-1.5.18.jar;C:\Users\thienvy\.m2\repository\ch\qos\logback\logback-core\1.5.18\logback-core-1.5.18.jar;C:\Users\thienvy\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.23.1\log4j-to-slf4j-2.23.1.jar;C:\Users\thienvy\.m2\repository\org\apache\logging\log4j\log4j-api\2.23.1\log4j-api-2.23.1.jar;C:\Users\thienvy\.m2\repository\org\slf4j\jul-to-slf4j\2.0.17\jul-to-slf4j-2.0.17.jar;C:\Users\thienvy\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\thienvy\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-actuator-autoconfigure\3.3.11\spring-boot-actuator-autoconfigure-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-actuator\3.3.11\spring-boot-actuator-3.3.11.jar;C:\Users\thienvy\.m2\repository\io\micrometer\micrometer-observation\1.13.13\micrometer-observation-1.13.13.jar;C:\Users\thienvy\.m2\repository\io\micrometer\micrometer-commons\1.13.13\micrometer-commons-1.13.13.jar;C:\Users\thienvy\.m2\repository\io\micrometer\micrometer-jakarta9\1.13.13\micrometer-jakarta9-1.13.13.jar;C:\Users\thienvy\.m2\repository\io\micrometer\micrometer-core\1.13.13\micrometer-core-1.13.13.jar;C:\Users\thienvy\.m2\repository\org\hdrhistogram\HdrHistogram\2.2.2\HdrHistogram-2.2.2.jar;C:\Users\thienvy\.m2\repository\org\latencyutils\LatencyUtils\2.0.3\LatencyUtils-2.0.3.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.3.11\spring-boot-starter-data-jpa-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.3.11\spring-boot-starter-aop-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\aspectj\aspectjweaver\1.9.24\aspectjweaver-1.9.24.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.3.11\spring-boot-starter-jdbc-3.3.11.jar;C:\Users\thienvy\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\thienvy\.m2\repository\org\springframework\spring-jdbc\6.1.19\spring-jdbc-6.1.19.jar;C:\Users\thienvy\.m2\repository\org\hibernate\orm\hibernate-core\6.5.3.Final\hibernate-core-6.5.3.Final.jar;C:\Users\thienvy\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\thienvy\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\thienvy\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\thienvy\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\thienvy\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\thienvy\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\thienvy\.m2\repository\net\bytebuddy\byte-buddy\1.14.19\byte-buddy-1.14.19.jar;C:\Users\thienvy\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\thienvy\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\thienvy\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\thienvy\.m2\repository\org\springframework\data\spring-data-jpa\3.3.11\spring-data-jpa-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\springframework\data\spring-data-commons\3.3.11\spring-data-commons-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\springframework\spring-orm\6.1.19\spring-orm-6.1.19.jar;C:\Users\thienvy\.m2\repository\org\springframework\spring-context\6.1.19\spring-context-6.1.19.jar;C:\Users\thienvy\.m2\repository\org\springframework\spring-tx\6.1.19\spring-tx-6.1.19.jar;C:\Users\thienvy\.m2\repository\org\springframework\spring-beans\6.1.19\spring-beans-6.1.19.jar;C:\Users\thienvy\.m2\repository\org\springframework\spring-aspects\6.1.19\spring-aspects-6.1.19.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.3.11\spring-boot-starter-web-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.3.11\spring-boot-starter-json-3.3.11.jar;C:\Users\thienvy\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.17.3\jackson-module-parameter-names-2.17.3.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.3.11\spring-boot-starter-tomcat-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.40\tomcat-embed-core-10.1.40.jar;C:\Users\thienvy\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.40\tomcat-embed-websocket-10.1.40.jar;C:\Users\thienvy\.m2\repository\org\springframework\spring-web\6.1.19\spring-web-6.1.19.jar;C:\Users\thienvy\.m2\repository\org\springframework\spring-webmvc\6.1.19\spring-webmvc-6.1.19.jar;C:\Users\thienvy\.m2\repository\org\springframework\spring-expression\6.1.19\spring-expression-6.1.19.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-devtools\3.3.11\spring-boot-devtools-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot\3.3.11\spring-boot-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.3.11\spring-boot-autoconfigure-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.3.11\spring-boot-starter-security-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\springframework\spring-aop\6.1.19\spring-aop-6.1.19.jar;C:\Users\thienvy\.m2\repository\org\springframework\security\spring-security-config\6.3.9\spring-security-config-6.3.9.jar;C:\Users\thienvy\.m2\repository\org\springframework\security\spring-security-web\6.3.9\spring-security-web-6.3.9.jar;C:\Users\thienvy\.m2\repository\org\springframework\security\spring-security-oauth2-resource-server\6.3.9\spring-security-oauth2-resource-server-6.3.9.jar;C:\Users\thienvy\.m2\repository\org\springframework\security\spring-security-core\6.3.9\spring-security-core-6.3.9.jar;C:\Users\thienvy\.m2\repository\org\springframework\security\spring-security-crypto\6.3.9\spring-security-crypto-6.3.9.jar;C:\Users\thienvy\.m2\repository\org\springframework\spring-core\6.1.19\spring-core-6.1.19.jar;C:\Users\thienvy\.m2\repository\org\springframework\spring-jcl\6.1.19\spring-jcl-6.1.19.jar;C:\Users\thienvy\.m2\repository\org\springframework\security\spring-security-oauth2-jose\6.3.9\spring-security-oauth2-jose-6.3.9.jar;C:\Users\thienvy\.m2\repository\com\nimbusds\nimbus-jose-jwt\9.37.3\nimbus-jose-jwt-9.37.3.jar;C:\Users\thienvy\.m2\repository\com\github\stephenc\jcip\jcip-annotations\1.0-1\jcip-annotations-1.0-1.jar;C:\Users\thienvy\.m2\repository\org\springframework\security\spring-security-oauth2-core\6.3.9\spring-security-oauth2-core-6.3.9.jar;C:\Users\thienvy\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\thienvy\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\thienvy\.m2\repository\com\mysql\mysql-connector-j\8.3.0\mysql-connector-j-8.3.0.jar;C:\Users\thienvy\.m2\repository\org\projectlombok\lombok\1.18.38\lombok-1.18.38.jar;C:\Users\thienvy\.m2\repository\org\mapstruct\mapstruct\1.5.5.Final\mapstruct-1.5.5.Final.jar;C:\Users\thienvy\.m2\repository\org\mapstruct\mapstruct-processor\1.5.5.Final\mapstruct-processor-1.5.5.Final.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-starter-validation\3.3.11\spring-boot-starter-validation-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.40\tomcat-embed-el-10.1.40.jar;C:\Users\thienvy\.m2\repository\org\hibernate\validator\hibernate-validator\8.0.2.Final\hibernate-validator-8.0.2.Final.jar;C:\Users\thienvy\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\thienvy\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-ui\2.0.2\springdoc-openapi-starter-webmvc-ui-2.0.2.jar;C:\Users\thienvy\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-api\2.0.2\springdoc-openapi-starter-webmvc-api-2.0.2.jar;C:\Users\thienvy\.m2\repository\org\springdoc\springdoc-openapi-starter-common\2.0.2\springdoc-openapi-starter-common-2.0.2.jar;C:\Users\thienvy\.m2\repository\io\swagger\core\v3\swagger-core-jakarta\2.2.7\swagger-core-jakarta-2.2.7.jar;C:\Users\thienvy\.m2\repository\org\apache\commons\commons-lang3\3.14.0\commons-lang3-3.14.0.jar;C:\Users\thienvy\.m2\repository\io\swagger\core\v3\swagger-annotations-jakarta\2.2.7\swagger-annotations-jakarta-2.2.7.jar;C:\Users\thienvy\.m2\repository\io\swagger\core\v3\swagger-models-jakarta\2.2.7\swagger-models-jakarta-2.2.7.jar;C:\Users\thienvy\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-yaml\2.17.3\jackson-dataformat-yaml-2.17.3.jar;C:\Users\thienvy\.m2\repository\org\webjars\swagger-ui\4.15.5\swagger-ui-4.15.5.jar;C:\Users\thienvy\.m2\repository\org\webjars\webjars-locator-core\0.58\webjars-locator-core-0.58.jar;C:\Users\thienvy\.m2\repository\io\github\classgraph\classgraph\4.8.149\classgraph-4.8.149.jar;C:\Study\java-banking-phase2\backend\common-service\target\classes;C:\Users\thienvy\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.17.3\jackson-databind-2.17.3.jar;C:\Users\thienvy\.m2\repository\org\apache\dubbo\dubbo-spring-boot-starter\3.3.2\dubbo-spring-boot-starter-3.3.2.jar;C:\Users\thienvy\.m2\repository\org\apache\dubbo\dubbo-spring-boot-autoconfigure\3.3.2\dubbo-spring-boot-autoconfigure-3.3.2.jar;C:\Users\thienvy\.m2\repository\org\apache\dubbo\dubbo-spring-boot-autoconfigure-compatible\3.3.2\dubbo-spring-boot-autoconfigure-compatible-3.3.2.jar;C:\Users\thienvy\.m2\repository\org\apache\dubbo\dubbo\3.3.2\dubbo-3.3.2.jar;C:\Users\thienvy\.m2\repository\org\javassist\javassist\3.30.2-GA\javassist-3.30.2-GA.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-all\4.1.119.Final\netty-all-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-codec-dns\4.1.119.Final\netty-codec-dns-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-codec-haproxy\4.1.119.Final\netty-codec-haproxy-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-codec-http\4.1.119.Final\netty-codec-http-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-codec-http2\4.1.119.Final\netty-codec-http2-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-codec-memcache\4.1.119.Final\netty-codec-memcache-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-codec-mqtt\4.1.119.Final\netty-codec-mqtt-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-codec-redis\4.1.119.Final\netty-codec-redis-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-codec-smtp\4.1.119.Final\netty-codec-smtp-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-codec-socks\4.1.119.Final\netty-codec-socks-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-codec-stomp\4.1.119.Final\netty-codec-stomp-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-codec-xml\4.1.119.Final\netty-codec-xml-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-handler-proxy\4.1.119.Final\netty-handler-proxy-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-handler-ssl-ocsp\4.1.119.Final\netty-handler-ssl-ocsp-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-resolver-dns\4.1.119.Final\netty-resolver-dns-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-transport-rxtx\4.1.119.Final\netty-transport-rxtx-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-transport-sctp\4.1.119.Final\netty-transport-sctp-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-transport-udt\4.1.119.Final\netty-transport-udt-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-transport-classes-kqueue\4.1.119.Final\netty-transport-classes-kqueue-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-resolver-dns-classes-macos\4.1.119.Final\netty-resolver-dns-classes-macos-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final-linux-x86_64.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final-linux-aarch_64.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final-linux-riscv64.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-transport-native-kqueue\4.1.119.Final\netty-transport-native-kqueue-4.1.119.Final-osx-x86_64.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-transport-native-kqueue\4.1.119.Final\netty-transport-native-kqueue-4.1.119.Final-osx-aarch_64.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-resolver-dns-native-macos\4.1.119.Final\netty-resolver-dns-native-macos-4.1.119.Final-osx-x86_64.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-resolver-dns-native-macos\4.1.119.Final\netty-resolver-dns-native-macos-4.1.119.Final-osx-aarch_64.jar;C:\Users\thienvy\.m2\repository\org\apache\dubbo\hessian-lite\4.0.3\hessian-lite-4.0.3.jar;C:\Users\thienvy\.m2\repository\com\alibaba\fastjson2\fastjson2\2.0.53\fastjson2-2.0.53.jar;C:\Users\thienvy\.m2\repository\com\google\protobuf\protobuf-java\3.25.5\protobuf-java-3.25.5.jar;C:\Users\thienvy\.m2\repository\org\apache\curator\curator-framework\5.1.0\curator-framework-5.1.0.jar;C:\Users\thienvy\.m2\repository\org\apache\curator\curator-client\5.1.0\curator-client-5.1.0.jar;C:\Users\thienvy\.m2\repository\com\google\guava\guava\27.0.1-jre\guava-27.0.1-jre.jar;C:\Users\thienvy\.m2\repository\com\google\guava\failureaccess\1.0.1\failureaccess-1.0.1.jar;C:\Users\thienvy\.m2\repository\com\google\guava\listenablefuture\9999.0-empty-to-avoid-conflict-with-guava\listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar;C:\Users\thienvy\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\thienvy\.m2\repository\org\checkerframework\checker-qual\2.5.2\checker-qual-2.5.2.jar;C:\Users\thienvy\.m2\repository\com\google\errorprone\error_prone_annotations\2.2.0\error_prone_annotations-2.2.0.jar;C:\Users\thienvy\.m2\repository\com\google\j2objc\j2objc-annotations\1.1\j2objc-annotations-1.1.jar;C:\Users\thienvy\.m2\repository\org\codehaus\mojo\animal-sniffer-annotations\1.17\animal-sniffer-annotations-1.17.jar;C:\Users\thienvy\.m2\repository\org\apache\zookeeper\zookeeper\3.7.1\zookeeper-3.7.1.jar;C:\Users\thienvy\.m2\repository\org\apache\zookeeper\zookeeper-jute\3.7.1\zookeeper-jute-3.7.1.jar;C:\Users\thienvy\.m2\repository\org\apache\yetus\audience-annotations\0.12.0\audience-annotations-0.12.0.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-handler\4.1.119.Final\netty-handler-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-common\4.1.119.Final\netty-common-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-resolver\4.1.119.Final\netty-resolver-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-buffer\4.1.119.Final\netty-buffer-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-transport\4.1.119.Final\netty-transport-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-transport-native-unix-common\4.1.119.Final\netty-transport-native-unix-common-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-codec\4.1.119.Final\netty-codec-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-transport-classes-epoll\4.1.119.Final\netty-transport-classes-epoll-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\org\slf4j\slf4j-api\2.0.17\slf4j-api-2.0.17.jar;C:\Users\thienvy\.m2\repository\org\apache\curator\curator-recipes\5.5.0\curator-recipes-5.5.0.jar;C:\Users\thienvy\.m2\repository\org\apache\curator\curator-x-discovery\5.5.0\curator-x-discovery-5.5.0.jar;C:\Users\thienvy\.m2\repository\org\springframework\cloud\spring-cloud-starter-vault-config\4.1.1\spring-cloud-starter-vault-config-4.1.1.jar;C:\Users\thienvy\.m2\repository\org\apache\httpcomponents\client5\httpclient5\5.3.1\httpclient5-5.3.1.jar;C:\Users\thienvy\.m2\repository\org\apache\httpcomponents\core5\httpcore5-h2\5.2.5\httpcore5-h2-5.2.5.jar;C:\Users\thienvy\.m2\repository\org\apache\httpcomponents\core5\httpcore5\5.2.5\httpcore5-5.2.5.jar;C:\Users\thienvy\.m2\repository\org\springframework\cloud\spring-cloud-starter\4.1.2\spring-cloud-starter-4.1.2.jar;C:\Users\thienvy\.m2\repository\org\springframework\cloud\spring-cloud-context\4.1.2\spring-cloud-context-4.1.2.jar;C:\Users\thienvy\.m2\repository\org\springframework\cloud\spring-cloud-commons\4.1.2\spring-cloud-commons-4.1.2.jar;C:\Users\thienvy\.m2\repository\org\springframework\security\spring-security-rsa\1.1.2\spring-security-rsa-1.1.2.jar;C:\Users\thienvy\.m2\repository\org\bouncycastle\bcprov-jdk18on\1.77\bcprov-jdk18on-1.77.jar;C:\Users\thienvy\.m2\repository\org\springframework\cloud\spring-cloud-vault-config\4.1.1\spring-cloud-vault-config-4.1.1.jar;C:\Users\thienvy\.m2\repository\org\springframework\vault\spring-vault-core\3.1.1\spring-vault-core-3.1.1.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-starter-data-redis\3.3.11\spring-boot-starter-data-redis-3.3.11.jar;C:\Users\thienvy\.m2\repository\io\lettuce\lettuce-core\6.3.2.RELEASE\lettuce-core-6.3.2.RELEASE.jar;C:\Users\thienvy\.m2\repository\io\projectreactor\reactor-core\3.6.16\reactor-core-3.6.16.jar;C:\Users\thienvy\.m2\repository\org\springframework\data\spring-data-redis\3.3.11\spring-data-redis-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\springframework\data\spring-data-keyvalue\3.3.11\spring-data-keyvalue-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\springframework\spring-oxm\6.1.19\spring-oxm-6.1.19.jar;C:\Users\thienvy\.m2\repository\org\springframework\spring-context-support\6.1.19\spring-context-support-6.1.19.jar;C:\Users\thienvy\.m2\repository\org\springframework\cloud\spring-cloud-stream\4.2.1\spring-cloud-stream-4.2.1.jar;C:\Users\thienvy\.m2\repository\org\springframework\spring-messaging\6.1.19\spring-messaging-6.1.19.jar;C:\Users\thienvy\.m2\repository\org\springframework\integration\spring-integration-core\6.3.9\spring-integration-core-6.3.9.jar;C:\Users\thienvy\.m2\repository\org\springframework\integration\spring-integration-jmx\6.3.9\spring-integration-jmx-6.3.9.jar;C:\Users\thienvy\.m2\repository\org\springframework\retry\spring-retry\2.0.11\spring-retry-2.0.11.jar;C:\Users\thienvy\.m2\repository\org\springframework\cloud\spring-cloud-function-context\4.2.2\spring-cloud-function-context-4.2.2.jar;C:\Users\thienvy\.m2\repository\org\springframework\cloud\spring-cloud-function-core\4.2.2\spring-cloud-function-core-4.2.2.jar;C:\Users\thienvy\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-joda\2.17.3\jackson-datatype-joda-2.17.3.jar;C:\Users\thienvy\.m2\repository\joda-time\joda-time\2.10.14\joda-time-2.10.14.jar;C:\Users\thienvy\.m2\repository\org\springframework\cloud\spring-cloud-starter-stream-kafka\4.2.1\spring-cloud-starter-stream-kafka-4.2.1.jar;C:\Users\thienvy\.m2\repository\org\springframework\cloud\spring-cloud-stream-binder-kafka\4.2.1\spring-cloud-stream-binder-kafka-4.2.1.jar;C:\Users\thienvy\.m2\repository\org\springframework\cloud\spring-cloud-stream-binder-kafka-core\4.2.1\spring-cloud-stream-binder-kafka-core-4.2.1.jar;C:\Users\thienvy\.m2\repository\org\springframework\integration\spring-integration-kafka\6.3.9\spring-integration-kafka-6.3.9.jar;C:\Users\thienvy\.m2\repository\org\springframework\kafka\spring-kafka\3.2.8\spring-kafka-3.2.8.jar;C:\Users\thienvy\.m2\repository\org\apache\kafka\kafka-clients\3.7.2\kafka-clients-3.7.2.jar;C:\Users\thienvy\.m2\repository\com\github\luben\zstd-jni\1.5.6-4\zstd-jni-1.5.6-4.jar;C:\Users\thienvy\.m2\repository\org\lz4\lz4-java\1.8.0\lz4-java-1.8.0.jar;C:\Users\thienvy\.m2\repository\org\xerial\snappy\snappy-java\1.1.10.5\snappy-java-1.1.10.5.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-starter-oauth2-resource-server\3.3.11\spring-boot-starter-oauth2-resource-server-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\keycloak\keycloak-admin-client\26.0.0\keycloak-admin-client-26.0.0.jar;C:\Users\thienvy\.m2\repository\org\keycloak\keycloak-client-common-synced\26.0.0\keycloak-client-common-synced-26.0.0.jar;C:\Users\thienvy\.m2\repository\org\jboss\logging\commons-logging-jboss-logging\1.0.0.Final\commons-logging-jboss-logging-1.0.0.Final.jar;C:\Users\thienvy\.m2\repository\org\apache\httpcomponents\httpclient\4.5.14\httpclient-4.5.14.jar;C:\Users\thienvy\.m2\repository\org\apache\httpcomponents\httpcore\4.4.16\httpcore-4.4.16.jar;C:\Users\thienvy\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.17.3\jackson-core-2.17.3.jar;C:\Users\thienvy\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.17.3\jackson-annotations-2.17.3.jar;C:\Users\thienvy\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.17.3\jackson-datatype-jdk8-2.17.3.jar;C:\Users\thienvy\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.17.3\jackson-datatype-jsr310-2.17.3.jar;C:\Users\thienvy\.m2\repository\org\eclipse\microprofile\openapi\microprofile-openapi-api\3.1.1\microprofile-openapi-api-3.1.1.jar;C:\Users\thienvy\.m2\repository\org\jboss\resteasy\resteasy-client\6.2.9.Final\resteasy-client-6.2.9.Final.jar;C:\Users\thienvy\.m2\repository\org\jboss\resteasy\resteasy-client-api\6.2.9.Final\resteasy-client-api-6.2.9.Final.jar;C:\Users\thienvy\.m2\repository\org\jboss\resteasy\resteasy-core-spi\6.2.9.Final\resteasy-core-spi-6.2.9.Final.jar;C:\Users\thienvy\.m2\repository\org\jboss\resteasy\resteasy-core\6.2.9.Final\resteasy-core-6.2.9.Final.jar;C:\Users\thienvy\.m2\repository\org\jboss\jandex\2.4.5.Final\jandex-2.4.5.Final.jar;C:\Users\thienvy\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\thienvy\.m2\repository\com\ibm\async\asyncutil\0.1.0\asyncutil-0.1.0.jar;C:\Users\thienvy\.m2\repository\commons-codec\commons-codec\1.16.1\commons-codec-1.16.1.jar;C:\Users\thienvy\.m2\repository\jakarta\ws\rs\jakarta.ws.rs-api\3.1.0\jakarta.ws.rs-api-3.1.0.jar;C:\Users\thienvy\.m2\repository\org\reactivestreams\reactive-streams\1.0.4\reactive-streams-1.0.4.jar;C:\Users\thienvy\.m2\repository\org\jboss\resteasy\resteasy-multipart-provider\6.2.9.Final\resteasy-multipart-provider-6.2.9.Final.jar;C:\Users\thienvy\.m2\repository\jakarta\mail\jakarta.mail-api\2.1.3\jakarta.mail-api-2.1.3.jar;C:\Users\thienvy\.m2\repository\org\eclipse\angus\angus-mail\2.0.3\angus-mail-2.0.3.jar;C:\Users\thienvy\.m2\repository\org\apache\james\apache-mime4j-dom\0.8.11\apache-mime4j-dom-0.8.11.jar;C:\Users\thienvy\.m2\repository\org\apache\james\apache-mime4j-core\0.8.11\apache-mime4j-core-0.8.11.jar;C:\Users\thienvy\.m2\repository\org\apache\james\apache-mime4j-storage\0.8.11\apache-mime4j-storage-0.8.11.jar;C:\Users\thienvy\.m2\repository\commons-io\commons-io\2.11.0\commons-io-2.11.0.jar;C:\Users\thienvy\.m2\repository\org\jboss\resteasy\resteasy-jackson2-provider\6.2.9.Final\resteasy-jackson2-provider-6.2.9.Final.jar;C:\Users\thienvy\.m2\repository\com\fasterxml\jackson\jakarta\rs\jackson-jakarta-rs-base\2.17.3\jackson-jakarta-rs-base-2.17.3.jar;C:\Users\thienvy\.m2\repository\com\fasterxml\jackson\jakarta\rs\jackson-jakarta-rs-json-provider\2.17.3\jackson-jakarta-rs-json-provider-2.17.3.jar;C:\Users\thienvy\.m2\repository\com\fasterxml\jackson\module\jackson-module-jakarta-xmlbind-annotations\2.17.3\jackson-module-jakarta-xmlbind-annotations-2.17.3.jar;C:\Users\thienvy\.m2\repository\com\github\java-json-tools\json-patch\1.13\json-patch-1.13.jar;C:\Users\thienvy\.m2\repository\com\github\java-json-tools\msg-simple\1.2\msg-simple-1.2.jar;C:\Users\thienvy\.m2\repository\com\github\java-json-tools\btf\1.3\btf-1.3.jar;C:\Users\thienvy\.m2\repository\com\github\java-json-tools\jackson-coreutils\2.0\jackson-coreutils-2.0.jar;C:\Users\thienvy\.m2\repository\org\jboss\resteasy\resteasy-jaxb-provider\6.2.9.Final\resteasy-jaxb-provider-6.2.9.Final.jar;C:\Users\thienvy\.m2\repository\org\glassfish\jaxb\codemodel\4.0.5\codemodel-4.0.5.jar;C:\Users\thienvy\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\thienvy\.m2\repository\org\glassfish\jaxb\jaxb-jxc\4.0.5\jaxb-jxc-4.0.5.jar;C:\Users\thienvy\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\thienvy\.m2\repository\org\glassfish\jaxb\jaxb-xjc\4.0.5\jaxb-xjc-4.0.5.jar;C:\Users\thienvy\.m2\repository\org\glassfish\jaxb\xsom\4.0.5\xsom-4.0.5.jar;C:\Users\thienvy\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\thienvy\.m2\repository\com\sun\istack\istack-commons-tools\4.1.2\istack-commons-tools-4.1.2.jar;C:\Users\thienvy\.m2\repository\com\sun\xml\bind\external\relaxng-datatype\4.0.3\relaxng-datatype-4.0.3.jar;C:\Users\thienvy\.m2\repository\com\sun\xml\bind\external\rngom\4.0.3\rngom-4.0.3.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Saigon, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, java.vm.specification.version=17, os.name=Windows 11, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-17\bin, sun.java.command=com.example.transaction_service.TransactionServiceApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@12f954f2, com.sun.management.jmxremote=, jdk.debug=release, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, hibernate.cdi.extensions=true, user.home=C:\Users\thienvy, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2024-04-16, java.home=C:\Program Files\Java\jdk-17, file.separator=\, spring.output.ansi.enabled=always, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.11+7-LTS-207, user.name=Thiên Vỹ, spring.jmx.enabled=true, path.separator=;, management.endpoints.jmx.exposure.include=*, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\thienvy\AppData\Local\Temp\, catalina.home=C:\Users\thienvy\AppData\Local\Temp\tomcat.8088.9093040274601313484, java.version=17.0.11, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Study\java-banking-phase2, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=20656, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\thienvy\AppData\Local\Temp\tomcat.8088.9093040274601313484, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@25e96cce, native.encoding=Cp1258, java.library.path=C:\Program Files\Java\jdk-17\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Java\jdk-17\bin;C:\Program Files (x86)\Microsoft SQL Server\160\Tools\Binn\;C:\Program Files\Microsoft SQL Server\160\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Microsoft SQL Server\160\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\160\DTS\Binn\;C:\Program Files\Git\cmd;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Docker\Docker\resources\bin;C:\ApacheMaven\apache-maven-3.9.9\bin;C:\vault_1.19.2_windows_amd64;C:\Users\thienvy\AppData\Roaming\fnm\node-versions\v22.15.0\installation\node_modules\npm;C:\Users\thienvy\AppData\Roaming\fnm;C:\Users\thienvy\AppData\Local\fnm_multishells\9464_1747193909934;;c:\Users\thienvy\AppData\Local\Programs\cursor\resources\app\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\thienvy\AppData\Local\Microsoft\WindowsApps;C:\Users\thienvy\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\thienvy\AppData\Local\JetBrains\Toolbox\scripts;C:\Users\thienvy\AppData\Local\Microsoft\WinGet\Packages\Schniz.fnm_Microsoft.Winget.Source_8wekyb3d8bbwe;C:\Users\thienvy\AppData\Local\Programs\cursor\resources\app\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, emulated-client, sharing, java.vm.version=17.0.11+7-LTS-207, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=61.0, LOGGED_APPLICATION_NAME=[transaction-service] } MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {} MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.example.transaction_service.entity.Transaction] is safe MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@5f669ddd] under count; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@4d089f83] under every; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@4c07ccd5] under any; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@558b9b1] under sinh; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3c7e31df] under cosh; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6cd0d948] under tanh; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3609c0f9] under pi; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@76dc72b8] under log; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : length -> character_length MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@7bbf5094] under position; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@38058d01] under overlay; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@38796f13] under trim; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@103dd511] under cast; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5938c0ae] under collate; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@19f3de7e] under extract; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@111b0920] under ifnull; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@fea5070] under pad; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@3ec19bcc] under str; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@15a620e3] under format; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@11579baa] under timestampadd; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@69f37280] under timestampdiff; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7eed4007] under current_date; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@edd389f] under current_time; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@234a2029] under current_timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current date -> current_date MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current time -> current_time MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6ddfeb3e] under local_date; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@79a673fa] under local_time; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1e58b591] under local_datetime; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6c61951b] under offset_datetime; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local date -> local_date MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local time -> local_time MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7e7505b2] under instant; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current_instant -> instant MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@590e0a7d] under sql; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@76dc72b8 MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@5c356e7a] under lpad; prior registration was NamedSqmFunctionTemplate(lpad) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@4cdaac9b] under rpad; prior registration was NamedSqmFunctionTemplate(rpad) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : day -> dayofmonth MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5b2b50fd] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@7bbf5094 MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@89116a4] under trunc; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : truncate -> trunc MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@25ad5406] under bitand; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@386d048f] under bitor; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6d7af26] under bitxor; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@673bd6e] under bitnot; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@4931c4c2] under format; prior registration was org.hibernate.dialect.function.FormatFunction@15a620e3 MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@79a673fa MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@1e58b591 MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1928e817] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3609c0f9 MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@223dca8b] under chr; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : char -> chr MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@39be9b6f] under sysdate; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@4aa4006f] under rank; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@18696bca] under dense_rank; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@17b6b3ef] under percent_rank; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@70c1003f] under cume_dist; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@13db0022] under listagg; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - abs(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double acos(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - addtime(TIME datetime, TIME time) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean any(BOOLEAN arg) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer ascii(STRING arg) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double asin(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - avg(arg) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bit_and(arg) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bit_or(arg) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitand(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitnot(arg) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitor(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitxor(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - cast(arg as Type) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - ceiling(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Character char(INTEGER arg) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Character chr(INTEGER arg) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]]) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String collate(STRING string as COLLATION collation) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]]) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double cos(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double cosh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double cot(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Long count([distinct ]{arg|*}) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer crc32(arg) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double cume_dist([arg0[, ...]]) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date curdate() MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date current date MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time current time MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current timestamp MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date current_date MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Instant current_instant MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time current_time MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current_timestamp MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time curtime() MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date date(arg) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer datediff(DATE end, DATE start) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer day(DATE arg) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String dayname(DATE arg) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofmonth(DATE arg) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofweek(DATE arg) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofyear(DATE arg) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double degrees(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Long dense_rank([arg0[, ...]]) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean every(BOOLEAN arg) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double exp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - first_valueANY value MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - floor(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]]) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer hour(TIME arg) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - ifnull(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Instant instant MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]]) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]] MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date last_day(DATE arg) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - last_valueANY value MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]] MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]]) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String left(STRING string, INTEGER length) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double ln(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local date MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local datetime MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local time MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local_date MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local_datetime MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local_time MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtime MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtimestamp MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start]) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1]) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double log10(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double log2(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String lower(STRING string) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String lpad(string, length[, padding]) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters]) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - max(COMPARABLE arg) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String md5(arg) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer microsecond(TIME arg) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - min(COMPARABLE arg) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer minute(TIME arg) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer month(DATE arg) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String monthname(DATE arg) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp now() MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - nth_valueANY value, INTEGER nth MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - nullif(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset datetime MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset_datetime MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length]) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character]) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double percent_rank([arg0[, ...]]) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double pi MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer position(STRING pattern in STRING string) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer quarter(DATE arg) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double radians(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double rand([INTEGER seed]) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Long rank([arg0[, ...]]) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String repeat(STRING string, INTEGER times) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String reverse(STRING arg) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String right(STRING string, INTEGER length) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places]) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Long row_number() MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String rpad(string, length[, padding]) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters]) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer second(TIME arg) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String sha(arg) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String sha1(arg) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String sha2(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer sign(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double sin(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double sinh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String soundex(arg) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String space(INTEGER arg) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Object sql MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double sqrt(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String str(arg) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length]) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length]) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - subtime(TIME datetime, TIME time) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - sum(arg) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp sysdate() MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double tan(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double tanh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String time(arg) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1]) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - trunc( ... ) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - truncate( ... ) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String upper(STRING string) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date utc_date MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time utc_time MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp utc_timestamp MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_pop(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_samp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double variance(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer week(DATE arg) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer year(DATE arg) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG org.hibernate.orm.query.plan.cache - Starting QueryInterpretationCache(2048) MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.e.i.EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.example.transaction_service.entity.Transaction] is safe MDC:[traceId=, spanId=]
2025-06-12 10:27:58 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-12 10:27:59 [restartedMain] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.example.transaction_service.entity.Transaction]: private accessor [amount] MDC:[traceId=, spanId=]
2025-06-12 10:27:59 [restartedMain] DEBUG o.h.orm.model.mapping.creation - Starting post-init callbacks MDC:[traceId=, spanId=]
2025-06-12 10:27:59 [restartedMain] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(com.example.transaction_service.entity.Transaction) `staticFetchableList` generator MDC:[traceId=, spanId=]
2025-06-12 10:27:59 [restartedMain] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 10:27:59 [restartedMain] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction)] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 10:27:59 [restartedMain] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction.type]
 MDC:[traceId=, spanId=]
2025-06-12 10:27:59 [restartedMain] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 10:27:59 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-12 10:27:59 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select id from tbl_transaction where id=? MDC:[traceId=, spanId=]
2025-06-12 10:27:59 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into tbl_transaction (amount,bank_type,currency,description,destination_bank_code,destination_bank_name,failed_reason,from_account_number,reference_code,status,timestamp,to_account_number,type,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?) MDC:[traceId=, spanId=]
2025-06-12 10:27:59 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update tbl_transaction set amount=?,bank_type=?,currency=?,description=?,destination_bank_code=?,destination_bank_name=?,failed_reason=?,from_account_number=?,reference_code=?,status=?,timestamp=?,to_account_number=?,type=? where id=? MDC:[traceId=, spanId=]
2025-06-12 10:27:59 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from tbl_transaction where id=? MDC:[traceId=, spanId=]
2025-06-12 10:27:59 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration) MDC:[traceId=, spanId=]
2025-06-12 10:27:59 [restartedMain] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2a316277] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@6d5dd09b] MDC:[traceId=, spanId=]
2025-06-12 10:27:59 [restartedMain] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named HQL queries MDC:[traceId=, spanId=]
2025-06-12 10:27:59 [restartedMain] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named SQL queries MDC:[traceId=, spanId=]
2025-06-12 10:27:59 [restartedMain] DEBUG org.hibernate.mapping.Table - No alter strings for table : tbl_transaction MDC:[traceId=, spanId=]
2025-06-12 10:27:59 [restartedMain] DEBUG o.h.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6bdc7857 MDC:[traceId=, spanId=]
2025-06-12 10:27:59 [restartedMain] DEBUG o.h.internal.SessionFactoryRegistry - Registering SessionFactory: 2f2e14ac-fde2-4e12-83bb-8f773faa40ce (<unnamed>) MDC:[traceId=, spanId=]
2025-06-12 10:27:59 [restartedMain] DEBUG o.h.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured MDC:[traceId=, spanId=]
2025-06-12 10:27:59 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Instantiated SessionFactory MDC:[traceId=, spanId=]
2025-06-12 10:27:59 [restartedMain] DEBUG o.h.s.internal.StatisticsInitiator - Statistics initialized [enabled=false] MDC:[traceId=, spanId=]
2025-06-12 10:28:00 [restartedMain] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy3/jdk.proxy3.$Proxy207.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.getCountQuery(JpaQueryLookupStrategy.java:204)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:171)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.example.transaction_service.TransactionServiceApplication.main(TransactionServiceApplication.java:15)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-06-12 10:28:00 [restartedMain] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy3/jdk.proxy3.$Proxy207.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.getCountQuery(JpaQueryLookupStrategy.java:204)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:171)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.example.transaction_service.TransactionServiceApplication.main(TransactionServiceApplication.java:15)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-06-12 10:28:00 [restartedMain] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy3/jdk.proxy3.$Proxy207.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.example.transaction_service.TransactionServiceApplication.main(TransactionServiceApplication.java:15)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-06-12 10:28:00 [restartedMain] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy3/jdk.proxy3.$Proxy207.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.example.transaction_service.TransactionServiceApplication.main(TransactionServiceApplication.java:15)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-06-12 10:28:04 [restartedMain] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-06-12 10:28:04 [restartedMain] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator MDC:[traceId=, spanId=]
2025-06-12 10:28:04 [restartedMain] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory MDC:[traceId=, spanId=]
2025-06-12 10:28:04 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-06-12 10:28:04 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader MDC:[traceId=, spanId=]
2025-06-12 10:28:04 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-06-12 10:28:04 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-06-12 10:28:04 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-06-12 10:28:04 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-06-12 10:28:04 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-06-12 10:28:04 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-06-12 10:28:04 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-06-12 10:28:04 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-06-12 10:28:04 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-06-12 10:28:04 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-06-12 10:28:04 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-06-12 10:28:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 10:28:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 10:28:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 10:28:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 10:28:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@24a50266 MDC:[traceId=, spanId=]
2025-06-12 10:28:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 10:28:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3ae23e82 MDC:[traceId=, spanId=]
2025-06-12 10:28:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 10:28:09 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 10:28:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 10:28:09 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 10:28:09 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@997855816 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 10:28:09 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 10:28:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 10:29:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 10:29:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 10:29:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 10:29:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 10:29:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3d61ab7c MDC:[traceId=, spanId=]
2025-06-12 10:29:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 10:29:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@72424396 MDC:[traceId=, spanId=]
2025-06-12 10:29:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 10:29:09 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 10:29:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 10:29:09 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 10:29:09 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1271708235 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 10:29:09 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 10:29:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 10:30:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 10:30:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 10:30:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 10:30:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 10:30:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3ba8de4c MDC:[traceId=, spanId=]
2025-06-12 10:30:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 10:30:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@51a8f2c0 MDC:[traceId=, spanId=]
2025-06-12 10:30:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 10:30:09 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 10:30:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 10:30:09 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 10:30:09 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1579451136 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 10:30:09 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 10:30:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 10:31:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 10:31:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 10:31:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 10:31:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 10:31:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2a2cf817 MDC:[traceId=, spanId=]
2025-06-12 10:31:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 10:31:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@51b267b5 MDC:[traceId=, spanId=]
2025-06-12 10:31:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 10:31:09 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 10:31:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 10:31:09 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 10:31:09 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1329401486 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 10:31:09 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 10:31:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 10:32:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 10:32:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 10:32:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 10:32:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 10:32:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@45ae5181 MDC:[traceId=, spanId=]
2025-06-12 10:32:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 10:32:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7ef000c8 MDC:[traceId=, spanId=]
2025-06-12 10:32:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 10:32:09 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 10:32:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 10:32:09 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 10:32:09 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@277373365 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 10:32:09 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 10:32:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 10:33:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 10:33:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 10:33:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 10:33:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 10:33:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4f551b0a MDC:[traceId=, spanId=]
2025-06-12 10:33:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 10:33:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2072e272 MDC:[traceId=, spanId=]
2025-06-12 10:33:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 10:33:09 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 10:33:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 10:33:09 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 10:33:09 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1740137239 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 10:33:09 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 10:33:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 10:34:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 10:34:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 10:34:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 10:34:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 10:34:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@74266d00 MDC:[traceId=, spanId=]
2025-06-12 10:34:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 10:34:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7411b51c MDC:[traceId=, spanId=]
2025-06-12 10:34:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 10:34:09 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 10:34:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 10:34:09 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 10:34:09 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@98343644 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 10:34:09 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 10:34:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 10:35:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 10:35:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 10:35:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 10:35:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 10:35:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6d0dc1b2 MDC:[traceId=, spanId=]
2025-06-12 10:35:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 10:35:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7391f7fe MDC:[traceId=, spanId=]
2025-06-12 10:35:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 10:35:09 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 10:35:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 10:35:09 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 10:35:09 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@172536517 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 10:35:09 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 10:35:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 10:35:30 [DubboServerHandler-172.19.224.1:20883-thread-4] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 10:35:30 [DubboServerHandler-172.19.224.1:20883-thread-4] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 10:35:30 [DubboServerHandler-172.19.224.1:20883-thread-4] DEBUG o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier MDC:[traceId=, spanId=]
2025-06-12 10:35:30 [DubboServerHandler-172.19.224.1:20883-thread-4] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 10:35:30 [DubboServerHandler-172.19.224.1:20883-thread-4] DEBUG o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades MDC:[traceId=, spanId=]
2025-06-12 10:35:30 [DubboServerHandler-172.19.224.1:20883-thread-4] DEBUG o.h.e.i.AbstractFlushingEventListener - Dirty checking collections MDC:[traceId=, spanId=]
2025-06-12 10:35:30 [DubboServerHandler-172.19.224.1:20883-thread-4] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects MDC:[traceId=, spanId=]
2025-06-12 10:35:30 [DubboServerHandler-172.19.224.1:20883-thread-4] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections MDC:[traceId=, spanId=]
2025-06-12 10:35:30 [DubboServerHandler-172.19.224.1:20883-thread-4] DEBUG o.h.internal.util.EntityPrinter - Listing entities: MDC:[traceId=, spanId=]
2025-06-12 10:35:30 [DubboServerHandler-172.19.224.1:20883-thread-4] DEBUG o.h.internal.util.EntityPrinter - com.example.transaction_service.entity.Transaction{amount=2000027, fromAccountNumber=970452999999999, bankType=INTERNAL, description=Rút tiền tiết kiệm, type=WITHDRAW_ACCOUNT_SAVING, destinationBankCode=970452, toAccountNumber=123456789890688, currency=VND, id=4c10d334-2f90-4add-a52c-13846b396c9a, referenceCode=TXN-970452999999999-202506121035297a4aeeac, destinationBankName=Ngân hàng TMCP Kiên Long (KienLong Bank), failedReason=null, status=COMPLETED, timestamp=2025-06-12T10:35:29.791654200} MDC:[traceId=, spanId=]
2025-06-12 10:35:30 [DubboServerHandler-172.19.224.1:20883-thread-4] DEBUG org.hibernate.SQL - insert into tbl_transaction (amount,bank_type,currency,description,destination_bank_code,destination_bank_name,failed_reason,from_account_number,reference_code,status,timestamp,to_account_number,type,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?) MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.query.plan.cache - Creating and caching NativeQuery ParameterInterpretation - ParameterInterpretationImpl (SELECT * FROM tbl_transaction WHERE (from_account_number = ? OR to_account_number = ?) AND status = 'COMPLETED' ORDER BY timestamp DESC) : {
    ,
    
} MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.SQL - SELECT * FROM tbl_transaction WHERE (from_account_number = ? OR to_account_number = ?) AND status = 'COMPLETED' ORDER BY timestamp DESC limit ? MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Disallowing positional selections : SELECT * FROM tbl_transaction WHERE (from_account_number = :accountNumber OR to_account_number = :accountNumber) AND status = 'COMPLETED' ORDER BY timestamp DESC MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction -> EntityResultInitializer(com.example.transaction_service.entity.Transaction)@1274206741 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [4c10d334-2f90-4add-a52c-13846b396c9a] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction): 4c10d334-2f90-4add-a52c-13846b396c9a MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction#4c10d334-2f90-4add-a52c-13846b396c9a] : 1751728707 MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [2000027.00] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [VND] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [Rút tiền tiết kiệm] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [970452] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [null] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [TXN-970452999999999-202506121035297a4aeeac] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [2025-06-12T10:35:29.791654] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [123456789890688] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [WITHDRAW_ACCOUNT_SAVING] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction#4c10d334-2f90-4add-a52c-13846b396c9a MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6631ccae MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [31772ab4-8f5d-40c5-a648-21899bed2aae] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction): 31772ab4-8f5d-40c5-a648-21899bed2aae MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction#31772ab4-8f5d-40c5-a648-21899bed2aae] : 1612516558 MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [10000000.00] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [VND] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [Gửi tiền tiết kiệm] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [970452] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [null] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [123456789890688] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [TXN-123456789890688-2025061209594962c7fc88] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [2025-06-12T09:59:49.660305] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [CREATE_ACCOUNT_SAVING] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction#31772ab4-8f5d-40c5-a648-21899bed2aae MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6631ccae MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [75018c46-d32c-470c-86b2-1d92053e47aa] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction): 75018c46-d32c-470c-86b2-1d92053e47aa MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction#75018c46-d32c-470c-86b2-1d92053e47aa] : 897531580 MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [2000082.00] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [VND] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [Rút tiền tiết kiệm] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [970452] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [null] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [TXN-970452999999999-20250612094307b544d30f] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [2025-06-12T09:43:07.664502] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [123456789890688] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [WITHDRAW_ACCOUNT_SAVING] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction#75018c46-d32c-470c-86b2-1d92053e47aa MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6631ccae MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [12330f92-2dc0-4ec4-aa39-3cc7bc64dac6] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction): 12330f92-2dc0-4ec4-aa39-3cc7bc64dac6 MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction#12330f92-2dc0-4ec4-aa39-3cc7bc64dac6] : 688367792 MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [2000055.00] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [VND] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [Rút tiền tiết kiệm] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [970452] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [null] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [TXN-970452999999999-2025061117205125b372cd] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [2025-06-11T17:20:51.362093] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [123456789890688] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [WITHDRAW_ACCOUNT_SAVING] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction#12330f92-2dc0-4ec4-aa39-3cc7bc64dac6 MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6631ccae MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [bbf7b6df-65bd-4476-9e91-8ca8cb6ecbc2] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction): bbf7b6df-65bd-4476-9e91-8ca8cb6ecbc2 MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction#bbf7b6df-65bd-4476-9e91-8ca8cb6ecbc2] : 1102796162 MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [2000000.00] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [VND] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [Gửi tiền tiết kiệm] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [970452] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [null] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [123456789890688] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [TXN-123456789890688-20250610130232123cc7a0] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [2025-06-10T13:02:32.525836] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [CREATE_ACCOUNT_SAVING] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction#bbf7b6df-65bd-4476-9e91-8ca8cb6ecbc2 MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6631ccae MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [785e4e83-156c-4e0a-b667-af9f227dab64] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction): 785e4e83-156c-4e0a-b667-af9f227dab64 MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction#785e4e83-156c-4e0a-b667-af9f227dab64] : 1229478407 MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [5000000.00] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [VND] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [Gửi tiền tiết kiệm] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [970452] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [null] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [123456789890688] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [TXN-123456789890688-2025061011285630f075e6] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [2025-06-10T11:28:56.192430] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [CREATE_ACCOUNT_SAVING] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction#785e4e83-156c-4e0a-b667-af9f227dab64 MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6631ccae MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [d544ace4-7eed-4bdf-9217-bbadae7dc7af] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction): d544ace4-7eed-4bdf-9217-bbadae7dc7af MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction#d544ace4-7eed-4bdf-9217-bbadae7dc7af] : 93198156 MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [8000000.00] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [VND] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [Gửi tiền tiết kiệm] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [970452] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [null] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [123456789890688] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [TXN-123456789890688-2025060423430369f6f4e3] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [2025-06-04T23:43:03.918680] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [CIF000000030358] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [CREATE_ACCOUNT_SAVING] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction#d544ace4-7eed-4bdf-9217-bbadae7dc7af MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6631ccae MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [20967bd3-4795-42be-9147-fc4c9bb758a9] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction): 20967bd3-4795-42be-9147-fc4c9bb758a9 MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction#20967bd3-4795-42be-9147-fc4c9bb758a9] : 291007845 MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [12000000.00] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [VND] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [Gửi tiền tiết kiệm] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [970452] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [null] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [123456789890688] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [TXN-123456789890688-202506042320250c45034d] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [2025-06-04T23:20:25.193151] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [CIF000000030358] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [CREATE_ACCOUNT_SAVING] MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction#20967bd3-4795-42be-9147-fc4c9bb758a9 MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6631ccae MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.query.plan.cache - Creating and caching NativeQuery ParameterInterpretation - ParameterInterpretationImpl (select count(1) FROM tbl_transaction WHERE (from_account_number = ? OR to_account_number = ?) AND status = 'COMPLETED') : {
    ,
    
} MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.SQL - select count(1) FROM tbl_transaction WHERE (from_account_number = ? OR to_account_number = ?) AND status = 'COMPLETED' MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@1b52d973 MDC:[traceId=, spanId=]
2025-06-12 10:35:41 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [10] MDC:[traceId=, spanId=]
2025-06-12 10:35:50 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 10:35:50 [http-nio-8088-exec-2] DEBUG org.hibernate.SQL - SELECT * FROM tbl_transaction WHERE (from_account_number = ? OR to_account_number = ?) AND status = 'COMPLETED' ORDER BY timestamp DESC limit ?,? MDC:[traceId=, spanId=]
2025-06-12 10:35:50 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Disallowing positional selections : SELECT * FROM tbl_transaction WHERE (from_account_number = :accountNumber OR to_account_number = :accountNumber) AND status = 'COMPLETED' ORDER BY timestamp DESC MDC:[traceId=, spanId=]
2025-06-12 10:35:50 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction -> EntityResultInitializer(com.example.transaction_service.entity.Transaction)@540598093 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 10:35:50 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [33ef40f7-7f21-4a0b-b5de-a908e61d5233] MDC:[traceId=, spanId=]
2025-06-12 10:35:50 [http-nio-8088-exec-2] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction): 33ef40f7-7f21-4a0b-b5de-a908e61d5233 MDC:[traceId=, spanId=]
2025-06-12 10:35:50 [http-nio-8088-exec-2] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction#33ef40f7-7f21-4a0b-b5de-a908e61d5233] : 2129914083 MDC:[traceId=, spanId=]
2025-06-12 10:35:50 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [25000000.00] MDC:[traceId=, spanId=]
2025-06-12 10:35:50 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-12 10:35:50 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [VND] MDC:[traceId=, spanId=]
2025-06-12 10:35:50 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [Gửi tiền tiết kiệm] MDC:[traceId=, spanId=]
2025-06-12 10:35:50 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [970452] MDC:[traceId=, spanId=]
2025-06-12 10:35:50 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-12 10:35:50 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [null] MDC:[traceId=, spanId=]
2025-06-12 10:35:50 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [123456789890688] MDC:[traceId=, spanId=]
2025-06-12 10:35:50 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [TXN-123456789890688-202506041648165336c2c8] MDC:[traceId=, spanId=]
2025-06-12 10:35:50 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-12 10:35:50 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [2025-06-04T16:48:16.349980] MDC:[traceId=, spanId=]
2025-06-12 10:35:50 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [CIF000000030358] MDC:[traceId=, spanId=]
2025-06-12 10:35:50 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [CREATE_ACCOUNT_SAVING] MDC:[traceId=, spanId=]
2025-06-12 10:35:50 [http-nio-8088-exec-2] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction#33ef40f7-7f21-4a0b-b5de-a908e61d5233 MDC:[traceId=, spanId=]
2025-06-12 10:35:50 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@71cc3538 MDC:[traceId=, spanId=]
2025-06-12 10:35:50 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [9482b7ea-71c5-49eb-a050-da80f4d3fc19] MDC:[traceId=, spanId=]
2025-06-12 10:35:50 [http-nio-8088-exec-2] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction): 9482b7ea-71c5-49eb-a050-da80f4d3fc19 MDC:[traceId=, spanId=]
2025-06-12 10:35:50 [http-nio-8088-exec-2] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction#9482b7ea-71c5-49eb-a050-da80f4d3fc19] : 1644595475 MDC:[traceId=, spanId=]
2025-06-12 10:35:50 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [25000000.00] MDC:[traceId=, spanId=]
2025-06-12 10:35:50 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-12 10:35:50 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [VND] MDC:[traceId=, spanId=]
2025-06-12 10:35:50 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [Gửi tiền tiết kiệm] MDC:[traceId=, spanId=]
2025-06-12 10:35:50 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [970452] MDC:[traceId=, spanId=]
2025-06-12 10:35:50 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-12 10:35:50 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [null] MDC:[traceId=, spanId=]
2025-06-12 10:35:50 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [123456789890688] MDC:[traceId=, spanId=]
2025-06-12 10:35:50 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [TXN-123456789890688-20250530102708c4b256d0] MDC:[traceId=, spanId=]
2025-06-12 10:35:50 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-12 10:35:50 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [2025-05-30T10:27:08.067398] MDC:[traceId=, spanId=]
2025-06-12 10:35:50 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [CIF000000030358] MDC:[traceId=, spanId=]
2025-06-12 10:35:50 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [CREATE_ACCOUNT_SAVING] MDC:[traceId=, spanId=]
2025-06-12 10:35:50 [http-nio-8088-exec-2] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction#9482b7ea-71c5-49eb-a050-da80f4d3fc19 MDC:[traceId=, spanId=]
2025-06-12 10:35:50 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@71cc3538 MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.SQL - SELECT * FROM tbl_transaction WHERE (from_account_number = ? OR to_account_number = ?) AND status = 'COMPLETED' ORDER BY timestamp DESC limit ? MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Disallowing positional selections : SELECT * FROM tbl_transaction WHERE (from_account_number = :accountNumber OR to_account_number = :accountNumber) AND status = 'COMPLETED' ORDER BY timestamp DESC MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction -> EntityResultInitializer(com.example.transaction_service.entity.Transaction)@1075742859 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [4c10d334-2f90-4add-a52c-13846b396c9a] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction): 4c10d334-2f90-4add-a52c-13846b396c9a MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction#4c10d334-2f90-4add-a52c-13846b396c9a] : 1303104401 MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [2000027.00] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [VND] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [Rút tiền tiết kiệm] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [970452] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [null] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [TXN-970452999999999-202506121035297a4aeeac] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [2025-06-12T10:35:29.791654] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [123456789890688] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [WITHDRAW_ACCOUNT_SAVING] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction#4c10d334-2f90-4add-a52c-13846b396c9a MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@110a4455 MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [31772ab4-8f5d-40c5-a648-21899bed2aae] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction): 31772ab4-8f5d-40c5-a648-21899bed2aae MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction#31772ab4-8f5d-40c5-a648-21899bed2aae] : 1906663310 MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [10000000.00] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [VND] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [Gửi tiền tiết kiệm] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [970452] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [null] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [123456789890688] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [TXN-123456789890688-2025061209594962c7fc88] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [2025-06-12T09:59:49.660305] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [CREATE_ACCOUNT_SAVING] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction#31772ab4-8f5d-40c5-a648-21899bed2aae MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@110a4455 MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [75018c46-d32c-470c-86b2-1d92053e47aa] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction): 75018c46-d32c-470c-86b2-1d92053e47aa MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction#75018c46-d32c-470c-86b2-1d92053e47aa] : 1170988001 MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [2000082.00] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [VND] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [Rút tiền tiết kiệm] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [970452] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [null] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [TXN-970452999999999-20250612094307b544d30f] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [2025-06-12T09:43:07.664502] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [123456789890688] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [WITHDRAW_ACCOUNT_SAVING] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction#75018c46-d32c-470c-86b2-1d92053e47aa MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@110a4455 MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [12330f92-2dc0-4ec4-aa39-3cc7bc64dac6] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction): 12330f92-2dc0-4ec4-aa39-3cc7bc64dac6 MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction#12330f92-2dc0-4ec4-aa39-3cc7bc64dac6] : 1454335882 MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [2000055.00] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [VND] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [Rút tiền tiết kiệm] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [970452] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [null] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [TXN-970452999999999-2025061117205125b372cd] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [2025-06-11T17:20:51.362093] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [123456789890688] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [WITHDRAW_ACCOUNT_SAVING] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction#12330f92-2dc0-4ec4-aa39-3cc7bc64dac6 MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@110a4455 MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [bbf7b6df-65bd-4476-9e91-8ca8cb6ecbc2] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction): bbf7b6df-65bd-4476-9e91-8ca8cb6ecbc2 MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction#bbf7b6df-65bd-4476-9e91-8ca8cb6ecbc2] : 356825574 MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [2000000.00] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [VND] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [Gửi tiền tiết kiệm] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [970452] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [null] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [123456789890688] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [TXN-123456789890688-20250610130232123cc7a0] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [2025-06-10T13:02:32.525836] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [CREATE_ACCOUNT_SAVING] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction#bbf7b6df-65bd-4476-9e91-8ca8cb6ecbc2 MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@110a4455 MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [785e4e83-156c-4e0a-b667-af9f227dab64] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction): 785e4e83-156c-4e0a-b667-af9f227dab64 MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction#785e4e83-156c-4e0a-b667-af9f227dab64] : 2021108993 MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [5000000.00] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [VND] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [Gửi tiền tiết kiệm] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [970452] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [null] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [123456789890688] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [TXN-123456789890688-2025061011285630f075e6] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [2025-06-10T11:28:56.192430] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [CREATE_ACCOUNT_SAVING] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction#785e4e83-156c-4e0a-b667-af9f227dab64 MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@110a4455 MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [d544ace4-7eed-4bdf-9217-bbadae7dc7af] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction): d544ace4-7eed-4bdf-9217-bbadae7dc7af MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction#d544ace4-7eed-4bdf-9217-bbadae7dc7af] : 1221374048 MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [8000000.00] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [VND] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [Gửi tiền tiết kiệm] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [970452] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [null] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [123456789890688] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [TXN-123456789890688-2025060423430369f6f4e3] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [2025-06-04T23:43:03.918680] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [CIF000000030358] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [CREATE_ACCOUNT_SAVING] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction#d544ace4-7eed-4bdf-9217-bbadae7dc7af MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@110a4455 MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [20967bd3-4795-42be-9147-fc4c9bb758a9] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction): 20967bd3-4795-42be-9147-fc4c9bb758a9 MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction#20967bd3-4795-42be-9147-fc4c9bb758a9] : 815609123 MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [12000000.00] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [VND] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [Gửi tiền tiết kiệm] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [970452] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [null] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [123456789890688] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [TXN-123456789890688-202506042320250c45034d] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [2025-06-04T23:20:25.193151] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [CIF000000030358] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [CREATE_ACCOUNT_SAVING] MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction#20967bd3-4795-42be-9147-fc4c9bb758a9 MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@110a4455 MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.SQL - select count(1) FROM tbl_transaction WHERE (from_account_number = ? OR to_account_number = ?) AND status = 'COMPLETED' MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@cb6fcd4 MDC:[traceId=, spanId=]
2025-06-12 10:35:52 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [10] MDC:[traceId=, spanId=]
2025-06-12 10:35:54 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 10:35:54 [http-nio-8088-exec-4] DEBUG org.hibernate.SQL - SELECT * FROM tbl_transaction WHERE (from_account_number = ? OR to_account_number = ?) AND status = 'COMPLETED' ORDER BY timestamp DESC limit ?,? MDC:[traceId=, spanId=]
2025-06-12 10:35:54 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Disallowing positional selections : SELECT * FROM tbl_transaction WHERE (from_account_number = :accountNumber OR to_account_number = :accountNumber) AND status = 'COMPLETED' ORDER BY timestamp DESC MDC:[traceId=, spanId=]
2025-06-12 10:35:54 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction -> EntityResultInitializer(com.example.transaction_service.entity.Transaction)@1323987021 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 10:35:54 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [33ef40f7-7f21-4a0b-b5de-a908e61d5233] MDC:[traceId=, spanId=]
2025-06-12 10:35:54 [http-nio-8088-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction): 33ef40f7-7f21-4a0b-b5de-a908e61d5233 MDC:[traceId=, spanId=]
2025-06-12 10:35:54 [http-nio-8088-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction#33ef40f7-7f21-4a0b-b5de-a908e61d5233] : 571535010 MDC:[traceId=, spanId=]
2025-06-12 10:35:54 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [25000000.00] MDC:[traceId=, spanId=]
2025-06-12 10:35:54 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-12 10:35:54 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [VND] MDC:[traceId=, spanId=]
2025-06-12 10:35:54 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [Gửi tiền tiết kiệm] MDC:[traceId=, spanId=]
2025-06-12 10:35:54 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [970452] MDC:[traceId=, spanId=]
2025-06-12 10:35:54 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-12 10:35:54 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [null] MDC:[traceId=, spanId=]
2025-06-12 10:35:54 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [123456789890688] MDC:[traceId=, spanId=]
2025-06-12 10:35:54 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [TXN-123456789890688-202506041648165336c2c8] MDC:[traceId=, spanId=]
2025-06-12 10:35:54 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-12 10:35:54 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [2025-06-04T16:48:16.349980] MDC:[traceId=, spanId=]
2025-06-12 10:35:54 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [CIF000000030358] MDC:[traceId=, spanId=]
2025-06-12 10:35:54 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [CREATE_ACCOUNT_SAVING] MDC:[traceId=, spanId=]
2025-06-12 10:35:54 [http-nio-8088-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction#33ef40f7-7f21-4a0b-b5de-a908e61d5233 MDC:[traceId=, spanId=]
2025-06-12 10:35:54 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3138a2df MDC:[traceId=, spanId=]
2025-06-12 10:35:54 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [9482b7ea-71c5-49eb-a050-da80f4d3fc19] MDC:[traceId=, spanId=]
2025-06-12 10:35:54 [http-nio-8088-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction): 9482b7ea-71c5-49eb-a050-da80f4d3fc19 MDC:[traceId=, spanId=]
2025-06-12 10:35:54 [http-nio-8088-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction#9482b7ea-71c5-49eb-a050-da80f4d3fc19] : 1473323177 MDC:[traceId=, spanId=]
2025-06-12 10:35:54 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [25000000.00] MDC:[traceId=, spanId=]
2025-06-12 10:35:54 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-12 10:35:54 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [VND] MDC:[traceId=, spanId=]
2025-06-12 10:35:54 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [Gửi tiền tiết kiệm] MDC:[traceId=, spanId=]
2025-06-12 10:35:54 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [970452] MDC:[traceId=, spanId=]
2025-06-12 10:35:54 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-12 10:35:54 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [null] MDC:[traceId=, spanId=]
2025-06-12 10:35:54 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [123456789890688] MDC:[traceId=, spanId=]
2025-06-12 10:35:54 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [TXN-123456789890688-20250530102708c4b256d0] MDC:[traceId=, spanId=]
2025-06-12 10:35:54 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-12 10:35:54 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [2025-05-30T10:27:08.067398] MDC:[traceId=, spanId=]
2025-06-12 10:35:54 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [CIF000000030358] MDC:[traceId=, spanId=]
2025-06-12 10:35:54 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [CREATE_ACCOUNT_SAVING] MDC:[traceId=, spanId=]
2025-06-12 10:35:54 [http-nio-8088-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction#9482b7ea-71c5-49eb-a050-da80f4d3fc19 MDC:[traceId=, spanId=]
2025-06-12 10:35:54 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3138a2df MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.SQL - SELECT * FROM tbl_transaction WHERE (from_account_number = ? OR to_account_number = ?) AND status = 'COMPLETED' ORDER BY timestamp DESC limit ? MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Disallowing positional selections : SELECT * FROM tbl_transaction WHERE (from_account_number = :accountNumber OR to_account_number = :accountNumber) AND status = 'COMPLETED' ORDER BY timestamp DESC MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction -> EntityResultInitializer(com.example.transaction_service.entity.Transaction)@1959946639 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [4c10d334-2f90-4add-a52c-13846b396c9a] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction): 4c10d334-2f90-4add-a52c-13846b396c9a MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction#4c10d334-2f90-4add-a52c-13846b396c9a] : 800099141 MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [2000027.00] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [VND] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [Rút tiền tiết kiệm] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [970452] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [null] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [TXN-970452999999999-202506121035297a4aeeac] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [2025-06-12T10:35:29.791654] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [123456789890688] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [WITHDRAW_ACCOUNT_SAVING] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction#4c10d334-2f90-4add-a52c-13846b396c9a MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@16af2893 MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [31772ab4-8f5d-40c5-a648-21899bed2aae] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction): 31772ab4-8f5d-40c5-a648-21899bed2aae MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction#31772ab4-8f5d-40c5-a648-21899bed2aae] : 400948382 MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [10000000.00] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [VND] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [Gửi tiền tiết kiệm] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [970452] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [null] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [123456789890688] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [TXN-123456789890688-2025061209594962c7fc88] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [2025-06-12T09:59:49.660305] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [CREATE_ACCOUNT_SAVING] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction#31772ab4-8f5d-40c5-a648-21899bed2aae MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@16af2893 MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [75018c46-d32c-470c-86b2-1d92053e47aa] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction): 75018c46-d32c-470c-86b2-1d92053e47aa MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction#75018c46-d32c-470c-86b2-1d92053e47aa] : 1889300988 MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [2000082.00] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [VND] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [Rút tiền tiết kiệm] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [970452] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [null] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [TXN-970452999999999-20250612094307b544d30f] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [2025-06-12T09:43:07.664502] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [123456789890688] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [WITHDRAW_ACCOUNT_SAVING] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction#75018c46-d32c-470c-86b2-1d92053e47aa MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@16af2893 MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [12330f92-2dc0-4ec4-aa39-3cc7bc64dac6] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction): 12330f92-2dc0-4ec4-aa39-3cc7bc64dac6 MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction#12330f92-2dc0-4ec4-aa39-3cc7bc64dac6] : 1541219849 MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [2000055.00] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [VND] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [Rút tiền tiết kiệm] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [970452] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [null] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [TXN-970452999999999-2025061117205125b372cd] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [2025-06-11T17:20:51.362093] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [123456789890688] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [WITHDRAW_ACCOUNT_SAVING] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction#12330f92-2dc0-4ec4-aa39-3cc7bc64dac6 MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@16af2893 MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [bbf7b6df-65bd-4476-9e91-8ca8cb6ecbc2] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction): bbf7b6df-65bd-4476-9e91-8ca8cb6ecbc2 MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction#bbf7b6df-65bd-4476-9e91-8ca8cb6ecbc2] : 878278225 MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [2000000.00] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [VND] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [Gửi tiền tiết kiệm] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [970452] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [null] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [123456789890688] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [TXN-123456789890688-20250610130232123cc7a0] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [2025-06-10T13:02:32.525836] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [CREATE_ACCOUNT_SAVING] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction#bbf7b6df-65bd-4476-9e91-8ca8cb6ecbc2 MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@16af2893 MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [785e4e83-156c-4e0a-b667-af9f227dab64] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction): 785e4e83-156c-4e0a-b667-af9f227dab64 MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction#785e4e83-156c-4e0a-b667-af9f227dab64] : 207650120 MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [5000000.00] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [VND] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [Gửi tiền tiết kiệm] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [970452] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [null] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [123456789890688] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [TXN-123456789890688-2025061011285630f075e6] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [2025-06-10T11:28:56.192430] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [CREATE_ACCOUNT_SAVING] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction#785e4e83-156c-4e0a-b667-af9f227dab64 MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@16af2893 MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [d544ace4-7eed-4bdf-9217-bbadae7dc7af] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction): d544ace4-7eed-4bdf-9217-bbadae7dc7af MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction#d544ace4-7eed-4bdf-9217-bbadae7dc7af] : 526450345 MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [8000000.00] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [VND] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [Gửi tiền tiết kiệm] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [970452] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [null] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [123456789890688] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [TXN-123456789890688-2025060423430369f6f4e3] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [2025-06-04T23:43:03.918680] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [CIF000000030358] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [CREATE_ACCOUNT_SAVING] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction#d544ace4-7eed-4bdf-9217-bbadae7dc7af MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@16af2893 MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [20967bd3-4795-42be-9147-fc4c9bb758a9] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction): 20967bd3-4795-42be-9147-fc4c9bb758a9 MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction#20967bd3-4795-42be-9147-fc4c9bb758a9] : 759135778 MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [12000000.00] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [VND] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [Gửi tiền tiết kiệm] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [970452] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [null] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [123456789890688] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [TXN-123456789890688-202506042320250c45034d] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [2025-06-04T23:20:25.193151] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [CIF000000030358] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [CREATE_ACCOUNT_SAVING] MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction#20967bd3-4795-42be-9147-fc4c9bb758a9 MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@16af2893 MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.SQL - select count(1) FROM tbl_transaction WHERE (from_account_number = ? OR to_account_number = ?) AND status = 'COMPLETED' MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@31f5136f MDC:[traceId=, spanId=]
2025-06-12 10:35:56 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [10] MDC:[traceId=, spanId=]
2025-06-12 10:35:57 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 10:35:57 [http-nio-8088-exec-6] DEBUG org.hibernate.SQL - SELECT * FROM tbl_transaction WHERE (from_account_number = ? OR to_account_number = ?) AND status = 'COMPLETED' ORDER BY timestamp DESC limit ?,? MDC:[traceId=, spanId=]
2025-06-12 10:35:57 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Disallowing positional selections : SELECT * FROM tbl_transaction WHERE (from_account_number = :accountNumber OR to_account_number = :accountNumber) AND status = 'COMPLETED' ORDER BY timestamp DESC MDC:[traceId=, spanId=]
2025-06-12 10:35:57 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction -> EntityResultInitializer(com.example.transaction_service.entity.Transaction)@1940427469 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 10:35:57 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [33ef40f7-7f21-4a0b-b5de-a908e61d5233] MDC:[traceId=, spanId=]
2025-06-12 10:35:57 [http-nio-8088-exec-6] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction): 33ef40f7-7f21-4a0b-b5de-a908e61d5233 MDC:[traceId=, spanId=]
2025-06-12 10:35:57 [http-nio-8088-exec-6] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction#33ef40f7-7f21-4a0b-b5de-a908e61d5233] : 1616012362 MDC:[traceId=, spanId=]
2025-06-12 10:35:57 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [25000000.00] MDC:[traceId=, spanId=]
2025-06-12 10:35:57 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-12 10:35:57 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [VND] MDC:[traceId=, spanId=]
2025-06-12 10:35:57 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [Gửi tiền tiết kiệm] MDC:[traceId=, spanId=]
2025-06-12 10:35:57 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [970452] MDC:[traceId=, spanId=]
2025-06-12 10:35:57 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-12 10:35:57 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [null] MDC:[traceId=, spanId=]
2025-06-12 10:35:57 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [123456789890688] MDC:[traceId=, spanId=]
2025-06-12 10:35:57 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [TXN-123456789890688-202506041648165336c2c8] MDC:[traceId=, spanId=]
2025-06-12 10:35:57 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-12 10:35:57 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [2025-06-04T16:48:16.349980] MDC:[traceId=, spanId=]
2025-06-12 10:35:57 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [CIF000000030358] MDC:[traceId=, spanId=]
2025-06-12 10:35:57 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [CREATE_ACCOUNT_SAVING] MDC:[traceId=, spanId=]
2025-06-12 10:35:57 [http-nio-8088-exec-6] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction#33ef40f7-7f21-4a0b-b5de-a908e61d5233 MDC:[traceId=, spanId=]
2025-06-12 10:35:57 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@220fe8ac MDC:[traceId=, spanId=]
2025-06-12 10:35:57 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [9482b7ea-71c5-49eb-a050-da80f4d3fc19] MDC:[traceId=, spanId=]
2025-06-12 10:35:57 [http-nio-8088-exec-6] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction): 9482b7ea-71c5-49eb-a050-da80f4d3fc19 MDC:[traceId=, spanId=]
2025-06-12 10:35:57 [http-nio-8088-exec-6] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction#9482b7ea-71c5-49eb-a050-da80f4d3fc19] : 1063054828 MDC:[traceId=, spanId=]
2025-06-12 10:35:57 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [25000000.00] MDC:[traceId=, spanId=]
2025-06-12 10:35:57 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-12 10:35:57 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [VND] MDC:[traceId=, spanId=]
2025-06-12 10:35:57 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [Gửi tiền tiết kiệm] MDC:[traceId=, spanId=]
2025-06-12 10:35:57 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [970452] MDC:[traceId=, spanId=]
2025-06-12 10:35:57 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-12 10:35:57 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [null] MDC:[traceId=, spanId=]
2025-06-12 10:35:57 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [123456789890688] MDC:[traceId=, spanId=]
2025-06-12 10:35:57 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [TXN-123456789890688-20250530102708c4b256d0] MDC:[traceId=, spanId=]
2025-06-12 10:35:57 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-12 10:35:57 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [2025-05-30T10:27:08.067398] MDC:[traceId=, spanId=]
2025-06-12 10:35:57 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [CIF000000030358] MDC:[traceId=, spanId=]
2025-06-12 10:35:57 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [CREATE_ACCOUNT_SAVING] MDC:[traceId=, spanId=]
2025-06-12 10:35:57 [http-nio-8088-exec-6] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction#9482b7ea-71c5-49eb-a050-da80f4d3fc19 MDC:[traceId=, spanId=]
2025-06-12 10:35:57 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@220fe8ac MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.SQL - SELECT * FROM tbl_transaction WHERE (from_account_number = ? OR to_account_number = ?) AND status = 'COMPLETED' ORDER BY timestamp DESC limit ? MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Disallowing positional selections : SELECT * FROM tbl_transaction WHERE (from_account_number = :accountNumber OR to_account_number = :accountNumber) AND status = 'COMPLETED' ORDER BY timestamp DESC MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction -> EntityResultInitializer(com.example.transaction_service.entity.Transaction)@337538311 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [4c10d334-2f90-4add-a52c-13846b396c9a] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction): 4c10d334-2f90-4add-a52c-13846b396c9a MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction#4c10d334-2f90-4add-a52c-13846b396c9a] : 1786093223 MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [2000027.00] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [VND] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [Rút tiền tiết kiệm] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [970452] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [null] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [TXN-970452999999999-202506121035297a4aeeac] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [2025-06-12T10:35:29.791654] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [123456789890688] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [WITHDRAW_ACCOUNT_SAVING] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction#4c10d334-2f90-4add-a52c-13846b396c9a MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@45deb1f2 MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [31772ab4-8f5d-40c5-a648-21899bed2aae] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction): 31772ab4-8f5d-40c5-a648-21899bed2aae MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction#31772ab4-8f5d-40c5-a648-21899bed2aae] : 1353117641 MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [10000000.00] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [VND] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [Gửi tiền tiết kiệm] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [970452] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [null] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [123456789890688] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [TXN-123456789890688-2025061209594962c7fc88] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [2025-06-12T09:59:49.660305] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [CREATE_ACCOUNT_SAVING] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction#31772ab4-8f5d-40c5-a648-21899bed2aae MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@45deb1f2 MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [75018c46-d32c-470c-86b2-1d92053e47aa] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction): 75018c46-d32c-470c-86b2-1d92053e47aa MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction#75018c46-d32c-470c-86b2-1d92053e47aa] : 926402191 MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [2000082.00] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [VND] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [Rút tiền tiết kiệm] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [970452] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [null] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [TXN-970452999999999-20250612094307b544d30f] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [2025-06-12T09:43:07.664502] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [123456789890688] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [WITHDRAW_ACCOUNT_SAVING] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction#75018c46-d32c-470c-86b2-1d92053e47aa MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@45deb1f2 MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [12330f92-2dc0-4ec4-aa39-3cc7bc64dac6] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction): 12330f92-2dc0-4ec4-aa39-3cc7bc64dac6 MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction#12330f92-2dc0-4ec4-aa39-3cc7bc64dac6] : 1903294056 MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [2000055.00] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [VND] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [Rút tiền tiết kiệm] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [970452] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [null] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [TXN-970452999999999-2025061117205125b372cd] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [2025-06-11T17:20:51.362093] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [123456789890688] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [WITHDRAW_ACCOUNT_SAVING] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction#12330f92-2dc0-4ec4-aa39-3cc7bc64dac6 MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@45deb1f2 MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [bbf7b6df-65bd-4476-9e91-8ca8cb6ecbc2] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction): bbf7b6df-65bd-4476-9e91-8ca8cb6ecbc2 MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction#bbf7b6df-65bd-4476-9e91-8ca8cb6ecbc2] : 1099991189 MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [2000000.00] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [VND] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [Gửi tiền tiết kiệm] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [970452] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [null] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [123456789890688] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [TXN-123456789890688-20250610130232123cc7a0] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [2025-06-10T13:02:32.525836] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [CREATE_ACCOUNT_SAVING] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction#bbf7b6df-65bd-4476-9e91-8ca8cb6ecbc2 MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@45deb1f2 MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [785e4e83-156c-4e0a-b667-af9f227dab64] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction): 785e4e83-156c-4e0a-b667-af9f227dab64 MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction#785e4e83-156c-4e0a-b667-af9f227dab64] : 640675785 MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [5000000.00] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [VND] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [Gửi tiền tiết kiệm] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [970452] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [null] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [123456789890688] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [TXN-123456789890688-2025061011285630f075e6] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [2025-06-10T11:28:56.192430] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [CREATE_ACCOUNT_SAVING] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction#785e4e83-156c-4e0a-b667-af9f227dab64 MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@45deb1f2 MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [d544ace4-7eed-4bdf-9217-bbadae7dc7af] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction): d544ace4-7eed-4bdf-9217-bbadae7dc7af MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction#d544ace4-7eed-4bdf-9217-bbadae7dc7af] : 790971965 MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [8000000.00] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [VND] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [Gửi tiền tiết kiệm] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [970452] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [null] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [123456789890688] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [TXN-123456789890688-2025060423430369f6f4e3] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [2025-06-04T23:43:03.918680] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [CIF000000030358] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [CREATE_ACCOUNT_SAVING] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction#d544ace4-7eed-4bdf-9217-bbadae7dc7af MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@45deb1f2 MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [20967bd3-4795-42be-9147-fc4c9bb758a9] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction): 20967bd3-4795-42be-9147-fc4c9bb758a9 MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction#20967bd3-4795-42be-9147-fc4c9bb758a9] : 1360602887 MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [12000000.00] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [VND] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [Gửi tiền tiết kiệm] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [970452] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [null] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [123456789890688] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [TXN-123456789890688-202506042320250c45034d] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [2025-06-04T23:20:25.193151] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [CIF000000030358] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [CREATE_ACCOUNT_SAVING] MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction#20967bd3-4795-42be-9147-fc4c9bb758a9 MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@45deb1f2 MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.SQL - select count(1) FROM tbl_transaction WHERE (from_account_number = ? OR to_account_number = ?) AND status = 'COMPLETED' MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@4e9990e6 MDC:[traceId=, spanId=]
2025-06-12 10:36:01 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [10] MDC:[traceId=, spanId=]
2025-06-12 10:36:05 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 10:36:05 [http-nio-8088-exec-8] DEBUG org.hibernate.SQL - SELECT * FROM tbl_transaction WHERE (from_account_number = ? OR to_account_number = ?) AND status = 'COMPLETED' ORDER BY timestamp DESC limit ?,? MDC:[traceId=, spanId=]
2025-06-12 10:36:05 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Disallowing positional selections : SELECT * FROM tbl_transaction WHERE (from_account_number = :accountNumber OR to_account_number = :accountNumber) AND status = 'COMPLETED' ORDER BY timestamp DESC MDC:[traceId=, spanId=]
2025-06-12 10:36:05 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction -> EntityResultInitializer(com.example.transaction_service.entity.Transaction)@876244621 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 10:36:05 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [33ef40f7-7f21-4a0b-b5de-a908e61d5233] MDC:[traceId=, spanId=]
2025-06-12 10:36:05 [http-nio-8088-exec-8] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction): 33ef40f7-7f21-4a0b-b5de-a908e61d5233 MDC:[traceId=, spanId=]
2025-06-12 10:36:05 [http-nio-8088-exec-8] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction#33ef40f7-7f21-4a0b-b5de-a908e61d5233] : 1759542125 MDC:[traceId=, spanId=]
2025-06-12 10:36:05 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [25000000.00] MDC:[traceId=, spanId=]
2025-06-12 10:36:05 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-12 10:36:05 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [VND] MDC:[traceId=, spanId=]
2025-06-12 10:36:05 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [Gửi tiền tiết kiệm] MDC:[traceId=, spanId=]
2025-06-12 10:36:05 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [970452] MDC:[traceId=, spanId=]
2025-06-12 10:36:05 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-12 10:36:05 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [null] MDC:[traceId=, spanId=]
2025-06-12 10:36:05 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [123456789890688] MDC:[traceId=, spanId=]
2025-06-12 10:36:05 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [TXN-123456789890688-202506041648165336c2c8] MDC:[traceId=, spanId=]
2025-06-12 10:36:05 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-12 10:36:05 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [2025-06-04T16:48:16.349980] MDC:[traceId=, spanId=]
2025-06-12 10:36:05 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [CIF000000030358] MDC:[traceId=, spanId=]
2025-06-12 10:36:05 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [CREATE_ACCOUNT_SAVING] MDC:[traceId=, spanId=]
2025-06-12 10:36:05 [http-nio-8088-exec-8] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction#33ef40f7-7f21-4a0b-b5de-a908e61d5233 MDC:[traceId=, spanId=]
2025-06-12 10:36:05 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@50690863 MDC:[traceId=, spanId=]
2025-06-12 10:36:05 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [9482b7ea-71c5-49eb-a050-da80f4d3fc19] MDC:[traceId=, spanId=]
2025-06-12 10:36:05 [http-nio-8088-exec-8] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction): 9482b7ea-71c5-49eb-a050-da80f4d3fc19 MDC:[traceId=, spanId=]
2025-06-12 10:36:05 [http-nio-8088-exec-8] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction#9482b7ea-71c5-49eb-a050-da80f4d3fc19] : 1465775230 MDC:[traceId=, spanId=]
2025-06-12 10:36:05 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [25000000.00] MDC:[traceId=, spanId=]
2025-06-12 10:36:05 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-12 10:36:05 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [VND] MDC:[traceId=, spanId=]
2025-06-12 10:36:05 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [Gửi tiền tiết kiệm] MDC:[traceId=, spanId=]
2025-06-12 10:36:05 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [970452] MDC:[traceId=, spanId=]
2025-06-12 10:36:05 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-12 10:36:05 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [null] MDC:[traceId=, spanId=]
2025-06-12 10:36:05 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [123456789890688] MDC:[traceId=, spanId=]
2025-06-12 10:36:05 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [TXN-123456789890688-20250530102708c4b256d0] MDC:[traceId=, spanId=]
2025-06-12 10:36:05 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-12 10:36:05 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [2025-05-30T10:27:08.067398] MDC:[traceId=, spanId=]
2025-06-12 10:36:05 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [CIF000000030358] MDC:[traceId=, spanId=]
2025-06-12 10:36:05 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [CREATE_ACCOUNT_SAVING] MDC:[traceId=, spanId=]
2025-06-12 10:36:05 [http-nio-8088-exec-8] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction#9482b7ea-71c5-49eb-a050-da80f4d3fc19 MDC:[traceId=, spanId=]
2025-06-12 10:36:05 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@50690863 MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.SQL - SELECT * FROM tbl_transaction WHERE (from_account_number = ? OR to_account_number = ?) AND status = 'COMPLETED' ORDER BY timestamp DESC limit ? MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Disallowing positional selections : SELECT * FROM tbl_transaction WHERE (from_account_number = :accountNumber OR to_account_number = :accountNumber) AND status = 'COMPLETED' ORDER BY timestamp DESC MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction -> EntityResultInitializer(com.example.transaction_service.entity.Transaction)@130869808 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [4c10d334-2f90-4add-a52c-13846b396c9a] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction): 4c10d334-2f90-4add-a52c-13846b396c9a MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction#4c10d334-2f90-4add-a52c-13846b396c9a] : 1615200060 MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [2000027.00] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [VND] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [Rút tiền tiết kiệm] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [970452] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [null] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [TXN-970452999999999-202506121035297a4aeeac] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [2025-06-12T10:35:29.791654] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [123456789890688] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [WITHDRAW_ACCOUNT_SAVING] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction#4c10d334-2f90-4add-a52c-13846b396c9a MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@569fe4c3 MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [31772ab4-8f5d-40c5-a648-21899bed2aae] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction): 31772ab4-8f5d-40c5-a648-21899bed2aae MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction#31772ab4-8f5d-40c5-a648-21899bed2aae] : 1422875860 MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [10000000.00] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [VND] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [Gửi tiền tiết kiệm] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [970452] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [null] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [123456789890688] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [TXN-123456789890688-2025061209594962c7fc88] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [2025-06-12T09:59:49.660305] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [CREATE_ACCOUNT_SAVING] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction#31772ab4-8f5d-40c5-a648-21899bed2aae MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@569fe4c3 MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [75018c46-d32c-470c-86b2-1d92053e47aa] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction): 75018c46-d32c-470c-86b2-1d92053e47aa MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction#75018c46-d32c-470c-86b2-1d92053e47aa] : 884125975 MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [2000082.00] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [VND] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [Rút tiền tiết kiệm] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [970452] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [null] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [TXN-970452999999999-20250612094307b544d30f] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [2025-06-12T09:43:07.664502] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [123456789890688] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [WITHDRAW_ACCOUNT_SAVING] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction#75018c46-d32c-470c-86b2-1d92053e47aa MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@569fe4c3 MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [12330f92-2dc0-4ec4-aa39-3cc7bc64dac6] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction): 12330f92-2dc0-4ec4-aa39-3cc7bc64dac6 MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction#12330f92-2dc0-4ec4-aa39-3cc7bc64dac6] : 2067862690 MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [2000055.00] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [VND] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [Rút tiền tiết kiệm] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [970452] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [null] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [TXN-970452999999999-2025061117205125b372cd] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [2025-06-11T17:20:51.362093] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [123456789890688] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [WITHDRAW_ACCOUNT_SAVING] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction#12330f92-2dc0-4ec4-aa39-3cc7bc64dac6 MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@569fe4c3 MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [bbf7b6df-65bd-4476-9e91-8ca8cb6ecbc2] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction): bbf7b6df-65bd-4476-9e91-8ca8cb6ecbc2 MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction#bbf7b6df-65bd-4476-9e91-8ca8cb6ecbc2] : 1389453045 MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [2000000.00] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [VND] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [Gửi tiền tiết kiệm] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [970452] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [null] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [123456789890688] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [TXN-123456789890688-20250610130232123cc7a0] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [2025-06-10T13:02:32.525836] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [CREATE_ACCOUNT_SAVING] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction#bbf7b6df-65bd-4476-9e91-8ca8cb6ecbc2 MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@569fe4c3 MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [785e4e83-156c-4e0a-b667-af9f227dab64] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction): 785e4e83-156c-4e0a-b667-af9f227dab64 MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction#785e4e83-156c-4e0a-b667-af9f227dab64] : 2086044039 MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [5000000.00] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [VND] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [Gửi tiền tiết kiệm] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [970452] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [null] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [123456789890688] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [TXN-123456789890688-2025061011285630f075e6] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [2025-06-10T11:28:56.192430] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [CREATE_ACCOUNT_SAVING] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction#785e4e83-156c-4e0a-b667-af9f227dab64 MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@569fe4c3 MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [d544ace4-7eed-4bdf-9217-bbadae7dc7af] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction): d544ace4-7eed-4bdf-9217-bbadae7dc7af MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction#d544ace4-7eed-4bdf-9217-bbadae7dc7af] : 1573760275 MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [8000000.00] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [VND] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [Gửi tiền tiết kiệm] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [970452] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [null] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [123456789890688] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [TXN-123456789890688-2025060423430369f6f4e3] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [2025-06-04T23:43:03.918680] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [CIF000000030358] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [CREATE_ACCOUNT_SAVING] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction#d544ace4-7eed-4bdf-9217-bbadae7dc7af MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@569fe4c3 MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [20967bd3-4795-42be-9147-fc4c9bb758a9] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction): 20967bd3-4795-42be-9147-fc4c9bb758a9 MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction#20967bd3-4795-42be-9147-fc4c9bb758a9] : 777668108 MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [12000000.00] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [VND] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [Gửi tiền tiết kiệm] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [970452] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [null] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [123456789890688] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [TXN-123456789890688-202506042320250c45034d] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [2025-06-04T23:20:25.193151] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [CIF000000030358] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [CREATE_ACCOUNT_SAVING] MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction#20967bd3-4795-42be-9147-fc4c9bb758a9 MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@569fe4c3 MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.SQL - select count(1) FROM tbl_transaction WHERE (from_account_number = ? OR to_account_number = ?) AND status = 'COMPLETED' MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@2d97fe2a MDC:[traceId=, spanId=]
2025-06-12 10:36:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [10] MDC:[traceId=, spanId=]
2025-06-12 10:36:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 10:36:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 10:36:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 10:36:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 10:36:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@11df7f7b MDC:[traceId=, spanId=]
2025-06-12 10:36:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 10:36:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@264aae2d MDC:[traceId=, spanId=]
2025-06-12 10:36:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 10:36:09 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 10:36:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 10:36:09 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 10:36:09 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@662436655 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 10:36:09 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 10:36:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 10:37:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 10:37:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 10:37:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 10:37:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 10:37:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@c5d5aca MDC:[traceId=, spanId=]
2025-06-12 10:37:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 10:37:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5a91ec48 MDC:[traceId=, spanId=]
2025-06-12 10:37:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 10:37:09 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 10:37:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 10:37:09 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 10:37:09 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1270041343 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 10:37:09 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 10:37:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 10:38:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 10:38:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 10:38:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 10:38:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 10:38:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@585a2855 MDC:[traceId=, spanId=]
2025-06-12 10:38:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 10:38:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2f7f9437 MDC:[traceId=, spanId=]
2025-06-12 10:38:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 10:38:09 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 10:38:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 10:38:09 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 10:38:09 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1815616254 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 10:38:09 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 10:38:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 10:39:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 10:39:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 10:39:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 10:39:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 10:39:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@dd0d5e MDC:[traceId=, spanId=]
2025-06-12 10:39:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 10:39:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7a1a009c MDC:[traceId=, spanId=]
2025-06-12 10:39:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 10:39:09 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 10:39:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 10:39:09 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 10:39:09 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1169868485 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 10:39:09 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 10:39:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 10:40:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 10:40:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 10:40:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 10:40:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 10:40:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@75799df9 MDC:[traceId=, spanId=]
2025-06-12 10:40:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 10:40:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4e5175e2 MDC:[traceId=, spanId=]
2025-06-12 10:40:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 10:40:09 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 10:40:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 10:40:09 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 10:40:09 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@2126679169 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 10:40:09 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 10:40:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 10:41:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 10:41:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 10:41:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 10:41:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 10:41:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4d39e299 MDC:[traceId=, spanId=]
2025-06-12 10:41:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 10:41:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3d402387 MDC:[traceId=, spanId=]
2025-06-12 10:41:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 10:41:09 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 10:41:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 10:41:09 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 10:41:09 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1039791470 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 10:41:09 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 10:41:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 10:42:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 10:42:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 10:42:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 10:42:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 10:42:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@d3f421 MDC:[traceId=, spanId=]
2025-06-12 10:42:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 10:42:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5e70bf42 MDC:[traceId=, spanId=]
2025-06-12 10:42:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 10:42:09 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 10:42:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 10:42:09 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 10:42:09 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@839964070 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 10:42:09 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 10:42:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 10:43:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 10:43:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 10:43:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 10:43:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 10:43:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@60d7e992 MDC:[traceId=, spanId=]
2025-06-12 10:43:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 10:43:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@598a82a6 MDC:[traceId=, spanId=]
2025-06-12 10:43:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 10:43:09 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 10:43:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 10:43:09 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 10:43:09 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1101358202 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 10:43:09 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 10:43:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 10:44:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 10:44:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 10:44:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 10:44:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 10:44:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@12ca75fc MDC:[traceId=, spanId=]
2025-06-12 10:44:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 10:44:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5c2e2b29 MDC:[traceId=, spanId=]
2025-06-12 10:44:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 10:44:09 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 10:44:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 10:44:09 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 10:44:09 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@663679553 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 10:44:09 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 10:44:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 10:45:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 10:45:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 10:45:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 10:45:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 10:45:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6ad1a243 MDC:[traceId=, spanId=]
2025-06-12 10:45:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 10:45:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@d9dc35a MDC:[traceId=, spanId=]
2025-06-12 10:45:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 10:45:09 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 10:45:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 10:45:09 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 10:45:09 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1018550343 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 10:45:09 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 10:45:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 10:46:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 10:46:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 10:46:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 10:46:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 10:46:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2f5e83f5 MDC:[traceId=, spanId=]
2025-06-12 10:46:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 10:46:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@32c89163 MDC:[traceId=, spanId=]
2025-06-12 10:46:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 10:46:09 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 10:46:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 10:46:09 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 10:46:09 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@317792417 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 10:46:09 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 10:46:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 10:47:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 10:47:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 10:47:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 10:47:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 10:47:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2723f15a MDC:[traceId=, spanId=]
2025-06-12 10:47:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 10:47:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2bb6f1e0 MDC:[traceId=, spanId=]
2025-06-12 10:47:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 10:47:09 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 10:47:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 10:47:09 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 10:47:09 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1155669133 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 10:47:09 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 10:47:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 10:48:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 10:48:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 10:48:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 10:48:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 10:48:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@307488ad MDC:[traceId=, spanId=]
2025-06-12 10:48:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 10:48:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@66115fa7 MDC:[traceId=, spanId=]
2025-06-12 10:48:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 10:48:09 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 10:48:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 10:48:09 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 10:48:09 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@373327000 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 10:48:09 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 10:48:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 10:49:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 10:49:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 10:49:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 10:49:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 10:49:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@368fc0f8 MDC:[traceId=, spanId=]
2025-06-12 10:49:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 10:49:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3bcf4216 MDC:[traceId=, spanId=]
2025-06-12 10:49:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 10:49:09 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 10:49:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 10:49:09 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 10:49:09 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@450436526 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 10:49:09 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 10:49:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 10:50:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 10:50:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 10:50:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 10:50:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 10:50:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7e5c4e8a MDC:[traceId=, spanId=]
2025-06-12 10:50:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 10:50:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@c06f090 MDC:[traceId=, spanId=]
2025-06-12 10:50:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 10:50:09 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 10:50:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 10:50:09 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 10:50:09 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@748066430 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 10:50:09 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 10:50:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 10:51:06 [DubboServerHandler-172.19.224.1:20883-thread-5] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 10:51:06 [DubboServerHandler-172.19.224.1:20883-thread-5] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 10:51:06 [DubboServerHandler-172.19.224.1:20883-thread-5] DEBUG o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier MDC:[traceId=, spanId=]
2025-06-12 10:51:06 [DubboServerHandler-172.19.224.1:20883-thread-5] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 10:51:06 [DubboServerHandler-172.19.224.1:20883-thread-5] DEBUG o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades MDC:[traceId=, spanId=]
2025-06-12 10:51:06 [DubboServerHandler-172.19.224.1:20883-thread-5] DEBUG o.h.e.i.AbstractFlushingEventListener - Dirty checking collections MDC:[traceId=, spanId=]
2025-06-12 10:51:06 [DubboServerHandler-172.19.224.1:20883-thread-5] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects MDC:[traceId=, spanId=]
2025-06-12 10:51:06 [DubboServerHandler-172.19.224.1:20883-thread-5] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections MDC:[traceId=, spanId=]
2025-06-12 10:51:06 [DubboServerHandler-172.19.224.1:20883-thread-5] DEBUG o.h.internal.util.EntityPrinter - Listing entities: MDC:[traceId=, spanId=]
2025-06-12 10:51:06 [DubboServerHandler-172.19.224.1:20883-thread-5] DEBUG o.h.internal.util.EntityPrinter - com.example.transaction_service.entity.Transaction{amount=5000000, fromAccountNumber=123456789890688, bankType=INTERNAL, description=Gửi tiền tiết kiệm, type=CREATE_ACCOUNT_SAVING, destinationBankCode=970452, toAccountNumber=970452999999999, currency=VND, id=c3c25527-9408-4793-8d5b-ccbeff9d7035, referenceCode=TXN-123456789890688-20250612105106e8b0a3c3, destinationBankName=Ngân hàng TMCP Kiên Long (KienLong Bank), failedReason=null, status=COMPLETED, timestamp=2025-06-12T10:51:06.649548400} MDC:[traceId=, spanId=]
2025-06-12 10:51:06 [DubboServerHandler-172.19.224.1:20883-thread-5] DEBUG org.hibernate.SQL - insert into tbl_transaction (amount,bank_type,currency,description,destination_bank_code,destination_bank_name,failed_reason,from_account_number,reference_code,status,timestamp,to_account_number,type,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?) MDC:[traceId=, spanId=]
2025-06-12 10:51:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 10:51:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 10:51:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 10:51:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 10:51:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2277417d MDC:[traceId=, spanId=]
2025-06-12 10:51:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 10:51:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@41b71da4 MDC:[traceId=, spanId=]
2025-06-12 10:51:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 10:51:09 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 10:51:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 10:51:09 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 10:51:09 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1236086965 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 10:51:09 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 10:51:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 10:52:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 10:52:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 10:52:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 10:52:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 10:52:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@d3f72bf MDC:[traceId=, spanId=]
2025-06-12 10:52:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 10:52:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4389896c MDC:[traceId=, spanId=]
2025-06-12 10:52:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 10:52:09 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 10:52:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 10:52:09 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 10:52:09 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1370040843 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 10:52:09 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 10:52:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 10:53:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 10:53:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 10:53:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 10:53:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 10:53:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4f943ab5 MDC:[traceId=, spanId=]
2025-06-12 10:53:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 10:53:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@30c87621 MDC:[traceId=, spanId=]
2025-06-12 10:53:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 10:53:09 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 10:53:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 10:53:09 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 10:53:09 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@315717007 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 10:53:09 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 10:53:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 10:54:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 10:54:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 10:54:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 10:54:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 10:54:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7bf6eac3 MDC:[traceId=, spanId=]
2025-06-12 10:54:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 10:54:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@50624222 MDC:[traceId=, spanId=]
2025-06-12 10:54:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 10:54:09 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 10:54:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 10:54:09 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 10:54:09 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1420415570 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 10:54:09 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 10:54:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 10:55:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 10:55:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 10:55:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 10:55:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 10:55:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4881a39a MDC:[traceId=, spanId=]
2025-06-12 10:55:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 10:55:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7e55d962 MDC:[traceId=, spanId=]
2025-06-12 10:55:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 10:55:09 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 10:55:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 10:55:09 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 10:55:09 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@219415029 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 10:55:09 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 10:55:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 10:56:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 10:56:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 10:56:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 10:56:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 10:56:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6fd56909 MDC:[traceId=, spanId=]
2025-06-12 10:56:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 10:56:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1d725167 MDC:[traceId=, spanId=]
2025-06-12 10:56:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 10:56:09 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 10:56:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 10:56:09 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 10:56:09 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@200741825 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 10:56:09 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 10:56:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 10:57:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 10:57:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 10:57:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 10:57:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 10:57:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@53e2a8fc MDC:[traceId=, spanId=]
2025-06-12 10:57:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 10:57:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@729ae900 MDC:[traceId=, spanId=]
2025-06-12 10:57:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 10:57:09 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 10:57:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 10:57:09 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 10:57:09 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@48709245 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 10:57:09 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 10:57:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 10:58:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 10:58:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 10:58:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 10:58:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 10:58:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@467b6e5d MDC:[traceId=, spanId=]
2025-06-12 10:58:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 10:58:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@71bbd3e6 MDC:[traceId=, spanId=]
2025-06-12 10:58:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 10:58:09 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 10:58:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 10:58:09 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 10:58:09 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@89315885 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 10:58:09 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 10:58:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 10:59:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 10:59:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 10:59:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 10:59:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 10:59:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@18c3dea6 MDC:[traceId=, spanId=]
2025-06-12 10:59:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 10:59:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@17f71f5c MDC:[traceId=, spanId=]
2025-06-12 10:59:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 10:59:09 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 10:59:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 10:59:09 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 10:59:09 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@470140506 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 10:59:09 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 10:59:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 11:00:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 11:00:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 11:00:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 11:00:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 11:00:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1a2aff51 MDC:[traceId=, spanId=]
2025-06-12 11:00:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 11:00:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@76b716ac MDC:[traceId=, spanId=]
2025-06-12 11:00:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 11:00:09 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 11:00:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 11:00:09 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 11:00:09 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@880200389 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 11:00:09 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 11:00:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 11:01:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 11:01:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 11:01:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 11:01:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 11:01:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@40328e29 MDC:[traceId=, spanId=]
2025-06-12 11:01:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 11:01:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3d56b852 MDC:[traceId=, spanId=]
2025-06-12 11:01:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 11:01:09 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 11:01:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 11:01:09 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 11:01:09 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@821554922 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 11:01:09 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 11:01:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 11:02:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 11:02:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 11:02:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 11:02:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 11:02:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@9608f3c MDC:[traceId=, spanId=]
2025-06-12 11:02:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 11:02:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@78a2a102 MDC:[traceId=, spanId=]
2025-06-12 11:02:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 11:02:09 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 11:02:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 11:02:09 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 11:02:09 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1437131039 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 11:02:09 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 11:02:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 11:03:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 11:03:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 11:03:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 11:03:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 11:03:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@30e1508f MDC:[traceId=, spanId=]
2025-06-12 11:03:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 11:03:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4fe8d3f0 MDC:[traceId=, spanId=]
2025-06-12 11:03:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 11:03:09 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 11:03:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 11:03:09 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 11:03:09 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@280979004 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 11:03:09 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 11:03:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 11:03:45 [DubboServerHandler-172.19.224.1:20883-thread-8] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 11:03:45 [DubboServerHandler-172.19.224.1:20883-thread-8] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 11:03:45 [DubboServerHandler-172.19.224.1:20883-thread-8] DEBUG o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier MDC:[traceId=, spanId=]
2025-06-12 11:03:45 [DubboServerHandler-172.19.224.1:20883-thread-8] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 11:03:45 [DubboServerHandler-172.19.224.1:20883-thread-8] DEBUG o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades MDC:[traceId=, spanId=]
2025-06-12 11:03:45 [DubboServerHandler-172.19.224.1:20883-thread-8] DEBUG o.h.e.i.AbstractFlushingEventListener - Dirty checking collections MDC:[traceId=, spanId=]
2025-06-12 11:03:45 [DubboServerHandler-172.19.224.1:20883-thread-8] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects MDC:[traceId=, spanId=]
2025-06-12 11:03:45 [DubboServerHandler-172.19.224.1:20883-thread-8] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections MDC:[traceId=, spanId=]
2025-06-12 11:03:45 [DubboServerHandler-172.19.224.1:20883-thread-8] DEBUG o.h.internal.util.EntityPrinter - Listing entities: MDC:[traceId=, spanId=]
2025-06-12 11:03:45 [DubboServerHandler-172.19.224.1:20883-thread-8] DEBUG o.h.internal.util.EntityPrinter - com.example.transaction_service.entity.Transaction{amount=6000000, fromAccountNumber=123456789890688, bankType=INTERNAL, description=Gửi tiền tiết kiệm, type=CREATE_ACCOUNT_SAVING, destinationBankCode=970452, toAccountNumber=970452999999999, currency=VND, id=bc7d2472-4781-4195-a533-c0cb5d54373c, referenceCode=TXN-123456789890688-20250612110345d928a62f, destinationBankName=Ngân hàng TMCP Kiên Long (KienLong Bank), failedReason=null, status=COMPLETED, timestamp=2025-06-12T11:03:45.867401600} MDC:[traceId=, spanId=]
2025-06-12 11:03:45 [DubboServerHandler-172.19.224.1:20883-thread-8] DEBUG org.hibernate.SQL - insert into tbl_transaction (amount,bank_type,currency,description,destination_bank_code,destination_bank_name,failed_reason,from_account_number,reference_code,status,timestamp,to_account_number,type,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?) MDC:[traceId=, spanId=]
2025-06-12 11:04:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 11:04:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 11:04:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 11:04:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 11:04:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@57e5e8b8 MDC:[traceId=, spanId=]
2025-06-12 11:04:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 11:04:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@23ea6c7f MDC:[traceId=, spanId=]
2025-06-12 11:04:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 11:04:09 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 11:04:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 11:04:09 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 11:04:09 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1098857108 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 11:04:09 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 11:04:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 11:05:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 11:05:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 11:05:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 11:05:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 11:05:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7ccb52af MDC:[traceId=, spanId=]
2025-06-12 11:05:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 11:05:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@b0baa32 MDC:[traceId=, spanId=]
2025-06-12 11:05:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 11:05:09 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 11:05:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 11:05:09 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 11:05:09 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@427421665 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 11:05:09 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 11:05:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 11:06:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 11:06:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 11:06:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 11:06:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 11:06:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1e0174c2 MDC:[traceId=, spanId=]
2025-06-12 11:06:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 11:06:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3c216df7 MDC:[traceId=, spanId=]
2025-06-12 11:06:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 11:06:09 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 11:06:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 11:06:09 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 11:06:09 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1256896330 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 11:06:09 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 11:06:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 11:07:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 11:07:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 11:07:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 11:07:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 11:07:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6f94edcb MDC:[traceId=, spanId=]
2025-06-12 11:07:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 11:07:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@628d852c MDC:[traceId=, spanId=]
2025-06-12 11:07:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 11:07:09 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 11:07:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 11:07:09 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 11:07:09 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@187833880 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 11:07:09 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 11:07:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 11:08:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 11:08:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 11:08:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 11:08:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 11:08:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6b640dbb MDC:[traceId=, spanId=]
2025-06-12 11:08:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 11:08:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5d01d5c1 MDC:[traceId=, spanId=]
2025-06-12 11:08:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 11:08:09 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 11:08:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 11:08:09 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 11:08:09 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@590332166 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 11:08:09 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 11:08:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 11:09:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 11:09:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 11:09:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 11:09:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 11:09:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7bdf5ece MDC:[traceId=, spanId=]
2025-06-12 11:09:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 11:09:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@15890296 MDC:[traceId=, spanId=]
2025-06-12 11:09:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 11:09:09 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 11:09:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 11:09:09 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 11:09:09 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@269749188 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 11:09:09 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 11:09:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 11:10:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 11:10:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 11:10:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 11:10:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 11:10:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7cdc4d8 MDC:[traceId=, spanId=]
2025-06-12 11:10:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 11:10:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@19a531c3 MDC:[traceId=, spanId=]
2025-06-12 11:10:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 11:10:09 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 11:10:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 11:10:09 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 11:10:09 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@987160455 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 11:10:09 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 11:10:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 11:11:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 11:11:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 11:11:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 11:11:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 11:11:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4077a54a MDC:[traceId=, spanId=]
2025-06-12 11:11:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 11:11:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@73c45321 MDC:[traceId=, spanId=]
2025-06-12 11:11:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 11:11:09 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 11:11:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 11:11:09 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 11:11:09 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@2108429757 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 11:11:09 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 11:11:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 11:12:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 11:12:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 11:12:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 11:12:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 11:12:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@52f7a15b MDC:[traceId=, spanId=]
2025-06-12 11:12:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 11:12:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5c5bc1e0 MDC:[traceId=, spanId=]
2025-06-12 11:12:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 11:12:09 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 11:12:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 11:12:09 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 11:12:09 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1769489337 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 11:12:09 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 11:12:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 11:13:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 11:13:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 11:13:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 11:13:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 11:13:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@70a2942 MDC:[traceId=, spanId=]
2025-06-12 11:13:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 11:13:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@123e65eb MDC:[traceId=, spanId=]
2025-06-12 11:13:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 11:13:09 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 11:13:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 11:13:09 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 11:13:09 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1525478366 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 11:13:09 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 11:13:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 11:14:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 11:14:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 11:14:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 11:14:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 11:14:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7a50b581 MDC:[traceId=, spanId=]
2025-06-12 11:14:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 11:14:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@a940917 MDC:[traceId=, spanId=]
2025-06-12 11:14:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 11:14:09 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 11:14:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 11:14:09 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 11:14:09 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@340647828 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 11:14:09 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 11:14:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 11:15:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 11:15:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 11:15:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 11:15:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 11:15:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2a192e2a MDC:[traceId=, spanId=]
2025-06-12 11:15:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 11:15:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7eb5b383 MDC:[traceId=, spanId=]
2025-06-12 11:15:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 11:15:09 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 11:15:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 11:15:09 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 11:15:09 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@361777391 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 11:15:09 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 11:15:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 11:16:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 11:16:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 11:16:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 11:16:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 11:16:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4c761b7a MDC:[traceId=, spanId=]
2025-06-12 11:16:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 11:16:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@256e5f48 MDC:[traceId=, spanId=]
2025-06-12 11:16:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 11:16:09 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 11:16:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 11:16:09 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 11:16:09 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1239331926 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 11:16:09 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 11:16:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 11:17:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 11:17:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 11:17:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 11:17:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 11:17:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@490ee5b0 MDC:[traceId=, spanId=]
2025-06-12 11:17:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 11:17:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3236b098 MDC:[traceId=, spanId=]
2025-06-12 11:17:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 11:17:09 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 11:17:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 11:17:09 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 11:17:09 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@448718777 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 11:17:09 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 11:17:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 11:18:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 11:18:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 11:18:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 11:18:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 11:18:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1e0a9ac5 MDC:[traceId=, spanId=]
2025-06-12 11:18:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 11:18:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7f101a8a MDC:[traceId=, spanId=]
2025-06-12 11:18:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 11:18:09 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 11:18:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 11:18:09 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 11:18:09 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1252020387 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 11:18:09 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 11:18:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 11:18:34 [Thread-1] DEBUG o.h.internal.SessionFactoryImpl - HHH000031: Closing MDC:[traceId=, spanId=]
2025-06-12 11:18:34 [Thread-1] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@2551a03f] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@6d5dd09b] MDC:[traceId=, spanId=]
2025-06-12 11:18:34 [Thread-1] DEBUG o.h.s.i.AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries MDC:[traceId=, spanId=]
2025-06-12 11:18:34 [Thread-1] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries MDC:[traceId=, spanId=]
2025-06-12 11:29:05 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final MDC:[traceId=, spanId=]
2025-06-12 11:29:05 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-06-12 11:29:05 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-06-12 11:29:05 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-06-12 11:29:05 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-06-12 11:29:05 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-06-12 11:29:05 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-06-12 11:29:05 [background-preinit] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-06-12 11:29:05 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-06-12 11:29:05 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-06-12 11:29:05 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-06-12 11:29:05 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-06-12 11:29:05 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-06-12 11:29:05 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-06-12 11:35:59 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final MDC:[traceId=, spanId=]
2025-06-12 11:35:59 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-06-12 11:35:59 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-06-12 11:35:59 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-06-12 11:35:59 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-06-12 11:35:59 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-06-12 11:35:59 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-06-12 11:35:59 [background-preinit] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-06-12 11:35:59 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-06-12 11:35:59 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-06-12 11:35:59 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-06-12 11:35:59 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-06-12 11:35:59 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-06-12 11:35:59 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.h.jpa.internal.util.LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@29c880e9
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Study/java-banking-phase2/backend/transaction-service/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.example.transaction_service.entity.Transaction]
	Mapping files names []
	Properties [] MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator]. MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator]. MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG org.hibernate.cfg.Environment - HHH000206: 'hibernate.properties' not found MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator] MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator] MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator] MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator] MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned] MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator] MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator] MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator] MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator] MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator] MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.h.c.i.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7224900c MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7224900c MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@7224900c MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@54866aab MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@54866aab MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@2b5944d9 MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@2b5944d9 MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@80b777c MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@80b777c MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@5ef92281 MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@5ef92281 MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@5ef92281 MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@39cdc8c7 MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@39cdc8c7 MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@39cdc8c7 MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@58d32cab MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@58d32cab MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@b30105a MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@1c4ac697 MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@1c4ac697 MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@4b16be29 MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@ae16594 MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@1580652 MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@1580652 MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@1580652 MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@4b6c1690 MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@4b6c1690 MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@4b6c1690 MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@35f51e22 MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@35f51e22 MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@35f51e22 MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@34b900cd MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@34b900cd MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@34b900cd MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@7592fa9e MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@7592fa9e MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@7592fa9e MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@5ee1ba2a MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@5ee1ba2a MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@43f8abda MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@43f8abda MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@3fbb6400 MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@3fbb6400 MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@3fbb6400 MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@5d1f2f63 MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@efcee00 MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@efcee00 MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@85c327e MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@6c23cc11 MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@6c23cc11 MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@6c23cc11 MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@486382c1 MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@2106f923 MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@4820f0bf MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@3a91eeee MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@3a91eeee MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@6e3016f7 MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@6e3016f7 MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@78e925f3 MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@37839759 MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@2d0e9d9 MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@6c39d0da MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@5d4eb613 MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@765cdbbc MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@73c76a8f MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@73c76a8f MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@515adb2d MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@515adb2d MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@798c013b MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@798c013b MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@699db48d MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@699db48d MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@21462823 MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@21462823 MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@26420c95 MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3fde54bf MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@3be3b615 MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@3be3b615 MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@2b74867a MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1d641125 MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@50d2d59a MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@76a7928b MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@76a7928b MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@79ef8d73 MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@44bf5652 MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@207355a MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@207355a MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@487ecc5b MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@487ecc5b MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@4dff5432 MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@4dff5432 MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@4dff5432 MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@73cc9619 MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@73cc9619 MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@73cc9619 MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@485ad0df MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@76f8d19b MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@411155b2 MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@411155b2 MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@567a7fd7 MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@567a7fd7 MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@567a7fd7 MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@483881ef MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@787ce57a MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@330b8302 MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@330b8302 MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@360ac673 MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@360ac673 MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@360ac673 MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@3a311ea4 MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@3a311ea4 MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@25796bad MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@25796bad MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@4a05ff93 MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@4a05ff93 MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@2adc81fe MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@2adc81fe MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@182a7e3f MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@182a7e3f MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@76605a94 MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@137ccaac MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@d12418a MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@d12418a MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@33e5acc4 MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@6db26e66 MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@157d54ce MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@77f053b1 MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@69ed5207 MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@17d2d002 MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@68f62d12 MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@1d6e8666 MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@1e9092a6 MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@45b2934d] into BootstrapContext; was [null] MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@45b2934d) [was null] MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@4dbb5b69] into BootstrapContext; was [null] MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@312e2603] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@6ab44b4c] MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@45b2934d] MDC:[traceId=, spanId=]
2025-06-12 11:36:07 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@45b2934d] MDC:[traceId=, spanId=]
2025-06-12 11:36:08 [restartedMain] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Database ->
	   name : MySQL
	version : 8.0.42
	  major : 8
	  minor : 0 MDC:[traceId=, spanId=]
2025-06-12 11:36:08 [restartedMain] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Driver ->
	   name : MySQL Connector/J
	version : mysql-connector-j-8.3.0 (Revision: 805f872a57875f311cb82487efcfb070411a3fa0)
	  major : 8
	  minor : 3 MDC:[traceId=, spanId=]
2025-06-12 11:36:08 [restartedMain] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - JDBC version : 4.2 MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG org.hibernate.orm.dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQLDialect, version: 8.0.42 MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@63857e03) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1d17e814) MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@76338322) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@76475b4f) MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3efa56e2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1c8f4e61) MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@76cff441) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3a9e44f4) MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@563f5803) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@30a5e8e3) MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@39c17f4a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@71302562) MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5d639407) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@429e9db8) MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7097918e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7ca1cb) MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@417ece6f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@773bf8a5) MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor) MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor) MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor) MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT)) MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT)) MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@62c24a8e MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@33e5acc4` MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3687f9c7] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5280b1ff] MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.boot.model.relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}] MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Transaction MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity com.example.transaction_service.entity.Transaction on table tbl_transaction MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE') MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.example.transaction_service.entity.Transaction] is safe MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property id with lazy=false MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:id] MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for id MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.id MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property id MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, assigned, , ...) MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property amount with lazy=false MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:amount] MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for amount MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.amount MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property amount MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property bankType with lazy=false MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:bankType] MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for bankType MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.bank_type MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property bankType MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property currency with lazy=false MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:currency] MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for currency MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.currency MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property currency MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property description with lazy=false MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:description] MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for description MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.description MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property description MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property destinationBankCode with lazy=false MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:destinationBankCode] MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for destinationBankCode MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.destination_bank_code MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property destinationBankCode MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property destinationBankName with lazy=false MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:destinationBankName] MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for destinationBankName MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.destination_bank_name MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property destinationBankName MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property failedReason with lazy=false MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:failedReason] MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for failedReason MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.failed_reason MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property failedReason MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property fromAccountNumber with lazy=false MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:fromAccountNumber] MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for fromAccountNumber MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.from_account_number MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property fromAccountNumber MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property referenceCode with lazy=false MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:referenceCode] MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for referenceCode MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.reference_code MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property referenceCode MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property status with lazy=false MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:status] MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for status MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.status MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property status MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property timestamp with lazy=false MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:timestamp] MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for timestamp MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.timestamp MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property timestamp MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property toAccountNumber with lazy=false MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:toAccountNumber] MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for toAccountNumber MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.to_account_number MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property toAccountNumber MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property type with lazy=false MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:type] MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for type MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.type MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property type MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: com.example.transaction_service.entity MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.j.e.i.CallbackDefinitionResolverLegacyImpl - Adding prePersist as PrePersist callback for entity com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bankType MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for currency MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for description MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for destinationBankCode MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for destinationBankName MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for failedReason MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for fromAccountNumber MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for referenceCode MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for timestamp MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for toAccountNumber MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for type MDC:[traceId=, spanId=]
2025-06-12 11:36:09 [restartedMain] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [tbl_transaction] MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Building session factory MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Instantiating SessionFactory with settings: {jdk.tls.rejectClientInitiatedRenegotiation=true, java.specification.version=17, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@53924d54, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1258, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Study\java-banking-phase2\backend\transaction-service\target\classes;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-starter-actuator\3.3.11\spring-boot-starter-actuator-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-starter\3.3.11\spring-boot-starter-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.3.11\spring-boot-starter-logging-3.3.11.jar;C:\Users\thienvy\.m2\repository\ch\qos\logback\logback-classic\1.5.18\logback-classic-1.5.18.jar;C:\Users\thienvy\.m2\repository\ch\qos\logback\logback-core\1.5.18\logback-core-1.5.18.jar;C:\Users\thienvy\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.23.1\log4j-to-slf4j-2.23.1.jar;C:\Users\thienvy\.m2\repository\org\apache\logging\log4j\log4j-api\2.23.1\log4j-api-2.23.1.jar;C:\Users\thienvy\.m2\repository\org\slf4j\jul-to-slf4j\2.0.17\jul-to-slf4j-2.0.17.jar;C:\Users\thienvy\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\thienvy\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-actuator-autoconfigure\3.3.11\spring-boot-actuator-autoconfigure-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-actuator\3.3.11\spring-boot-actuator-3.3.11.jar;C:\Users\thienvy\.m2\repository\io\micrometer\micrometer-observation\1.13.13\micrometer-observation-1.13.13.jar;C:\Users\thienvy\.m2\repository\io\micrometer\micrometer-commons\1.13.13\micrometer-commons-1.13.13.jar;C:\Users\thienvy\.m2\repository\io\micrometer\micrometer-jakarta9\1.13.13\micrometer-jakarta9-1.13.13.jar;C:\Users\thienvy\.m2\repository\io\micrometer\micrometer-core\1.13.13\micrometer-core-1.13.13.jar;C:\Users\thienvy\.m2\repository\org\hdrhistogram\HdrHistogram\2.2.2\HdrHistogram-2.2.2.jar;C:\Users\thienvy\.m2\repository\org\latencyutils\LatencyUtils\2.0.3\LatencyUtils-2.0.3.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.3.11\spring-boot-starter-data-jpa-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.3.11\spring-boot-starter-aop-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\aspectj\aspectjweaver\1.9.24\aspectjweaver-1.9.24.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.3.11\spring-boot-starter-jdbc-3.3.11.jar;C:\Users\thienvy\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\thienvy\.m2\repository\org\springframework\spring-jdbc\6.1.19\spring-jdbc-6.1.19.jar;C:\Users\thienvy\.m2\repository\org\hibernate\orm\hibernate-core\6.5.3.Final\hibernate-core-6.5.3.Final.jar;C:\Users\thienvy\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\thienvy\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\thienvy\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\thienvy\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\thienvy\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\thienvy\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\thienvy\.m2\repository\net\bytebuddy\byte-buddy\1.14.19\byte-buddy-1.14.19.jar;C:\Users\thienvy\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\thienvy\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\thienvy\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\thienvy\.m2\repository\org\springframework\data\spring-data-jpa\3.3.11\spring-data-jpa-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\springframework\data\spring-data-commons\3.3.11\spring-data-commons-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\springframework\spring-orm\6.1.19\spring-orm-6.1.19.jar;C:\Users\thienvy\.m2\repository\org\springframework\spring-context\6.1.19\spring-context-6.1.19.jar;C:\Users\thienvy\.m2\repository\org\springframework\spring-tx\6.1.19\spring-tx-6.1.19.jar;C:\Users\thienvy\.m2\repository\org\springframework\spring-beans\6.1.19\spring-beans-6.1.19.jar;C:\Users\thienvy\.m2\repository\org\springframework\spring-aspects\6.1.19\spring-aspects-6.1.19.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.3.11\spring-boot-starter-web-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.3.11\spring-boot-starter-json-3.3.11.jar;C:\Users\thienvy\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.17.3\jackson-module-parameter-names-2.17.3.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.3.11\spring-boot-starter-tomcat-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.40\tomcat-embed-core-10.1.40.jar;C:\Users\thienvy\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.40\tomcat-embed-websocket-10.1.40.jar;C:\Users\thienvy\.m2\repository\org\springframework\spring-web\6.1.19\spring-web-6.1.19.jar;C:\Users\thienvy\.m2\repository\org\springframework\spring-webmvc\6.1.19\spring-webmvc-6.1.19.jar;C:\Users\thienvy\.m2\repository\org\springframework\spring-expression\6.1.19\spring-expression-6.1.19.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-devtools\3.3.11\spring-boot-devtools-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot\3.3.11\spring-boot-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.3.11\spring-boot-autoconfigure-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.3.11\spring-boot-starter-security-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\springframework\spring-aop\6.1.19\spring-aop-6.1.19.jar;C:\Users\thienvy\.m2\repository\org\springframework\security\spring-security-config\6.3.9\spring-security-config-6.3.9.jar;C:\Users\thienvy\.m2\repository\org\springframework\security\spring-security-web\6.3.9\spring-security-web-6.3.9.jar;C:\Users\thienvy\.m2\repository\org\springframework\security\spring-security-oauth2-resource-server\6.3.9\spring-security-oauth2-resource-server-6.3.9.jar;C:\Users\thienvy\.m2\repository\org\springframework\security\spring-security-core\6.3.9\spring-security-core-6.3.9.jar;C:\Users\thienvy\.m2\repository\org\springframework\security\spring-security-crypto\6.3.9\spring-security-crypto-6.3.9.jar;C:\Users\thienvy\.m2\repository\org\springframework\spring-core\6.1.19\spring-core-6.1.19.jar;C:\Users\thienvy\.m2\repository\org\springframework\spring-jcl\6.1.19\spring-jcl-6.1.19.jar;C:\Users\thienvy\.m2\repository\org\springframework\security\spring-security-oauth2-jose\6.3.9\spring-security-oauth2-jose-6.3.9.jar;C:\Users\thienvy\.m2\repository\com\nimbusds\nimbus-jose-jwt\9.37.3\nimbus-jose-jwt-9.37.3.jar;C:\Users\thienvy\.m2\repository\com\github\stephenc\jcip\jcip-annotations\1.0-1\jcip-annotations-1.0-1.jar;C:\Users\thienvy\.m2\repository\org\springframework\security\spring-security-oauth2-core\6.3.9\spring-security-oauth2-core-6.3.9.jar;C:\Users\thienvy\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\thienvy\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\thienvy\.m2\repository\com\mysql\mysql-connector-j\8.3.0\mysql-connector-j-8.3.0.jar;C:\Users\thienvy\.m2\repository\org\projectlombok\lombok\1.18.38\lombok-1.18.38.jar;C:\Users\thienvy\.m2\repository\org\mapstruct\mapstruct\1.5.5.Final\mapstruct-1.5.5.Final.jar;C:\Users\thienvy\.m2\repository\org\mapstruct\mapstruct-processor\1.5.5.Final\mapstruct-processor-1.5.5.Final.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-starter-validation\3.3.11\spring-boot-starter-validation-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.40\tomcat-embed-el-10.1.40.jar;C:\Users\thienvy\.m2\repository\org\hibernate\validator\hibernate-validator\8.0.2.Final\hibernate-validator-8.0.2.Final.jar;C:\Users\thienvy\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\thienvy\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-ui\2.0.2\springdoc-openapi-starter-webmvc-ui-2.0.2.jar;C:\Users\thienvy\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-api\2.0.2\springdoc-openapi-starter-webmvc-api-2.0.2.jar;C:\Users\thienvy\.m2\repository\org\springdoc\springdoc-openapi-starter-common\2.0.2\springdoc-openapi-starter-common-2.0.2.jar;C:\Users\thienvy\.m2\repository\io\swagger\core\v3\swagger-core-jakarta\2.2.7\swagger-core-jakarta-2.2.7.jar;C:\Users\thienvy\.m2\repository\org\apache\commons\commons-lang3\3.14.0\commons-lang3-3.14.0.jar;C:\Users\thienvy\.m2\repository\io\swagger\core\v3\swagger-annotations-jakarta\2.2.7\swagger-annotations-jakarta-2.2.7.jar;C:\Users\thienvy\.m2\repository\io\swagger\core\v3\swagger-models-jakarta\2.2.7\swagger-models-jakarta-2.2.7.jar;C:\Users\thienvy\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-yaml\2.17.3\jackson-dataformat-yaml-2.17.3.jar;C:\Users\thienvy\.m2\repository\org\webjars\swagger-ui\4.15.5\swagger-ui-4.15.5.jar;C:\Users\thienvy\.m2\repository\org\webjars\webjars-locator-core\0.58\webjars-locator-core-0.58.jar;C:\Users\thienvy\.m2\repository\io\github\classgraph\classgraph\4.8.149\classgraph-4.8.149.jar;C:\Study\java-banking-phase2\backend\common-service\target\classes;C:\Users\thienvy\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.17.3\jackson-databind-2.17.3.jar;C:\Users\thienvy\.m2\repository\org\apache\dubbo\dubbo-spring-boot-starter\3.3.2\dubbo-spring-boot-starter-3.3.2.jar;C:\Users\thienvy\.m2\repository\org\apache\dubbo\dubbo-spring-boot-autoconfigure\3.3.2\dubbo-spring-boot-autoconfigure-3.3.2.jar;C:\Users\thienvy\.m2\repository\org\apache\dubbo\dubbo-spring-boot-autoconfigure-compatible\3.3.2\dubbo-spring-boot-autoconfigure-compatible-3.3.2.jar;C:\Users\thienvy\.m2\repository\org\apache\dubbo\dubbo\3.3.2\dubbo-3.3.2.jar;C:\Users\thienvy\.m2\repository\org\javassist\javassist\3.30.2-GA\javassist-3.30.2-GA.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-all\4.1.119.Final\netty-all-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-codec-dns\4.1.119.Final\netty-codec-dns-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-codec-haproxy\4.1.119.Final\netty-codec-haproxy-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-codec-http\4.1.119.Final\netty-codec-http-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-codec-http2\4.1.119.Final\netty-codec-http2-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-codec-memcache\4.1.119.Final\netty-codec-memcache-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-codec-mqtt\4.1.119.Final\netty-codec-mqtt-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-codec-redis\4.1.119.Final\netty-codec-redis-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-codec-smtp\4.1.119.Final\netty-codec-smtp-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-codec-socks\4.1.119.Final\netty-codec-socks-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-codec-stomp\4.1.119.Final\netty-codec-stomp-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-codec-xml\4.1.119.Final\netty-codec-xml-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-handler-proxy\4.1.119.Final\netty-handler-proxy-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-handler-ssl-ocsp\4.1.119.Final\netty-handler-ssl-ocsp-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-resolver-dns\4.1.119.Final\netty-resolver-dns-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-transport-rxtx\4.1.119.Final\netty-transport-rxtx-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-transport-sctp\4.1.119.Final\netty-transport-sctp-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-transport-udt\4.1.119.Final\netty-transport-udt-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-transport-classes-kqueue\4.1.119.Final\netty-transport-classes-kqueue-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-resolver-dns-classes-macos\4.1.119.Final\netty-resolver-dns-classes-macos-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final-linux-x86_64.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final-linux-aarch_64.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final-linux-riscv64.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-transport-native-kqueue\4.1.119.Final\netty-transport-native-kqueue-4.1.119.Final-osx-x86_64.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-transport-native-kqueue\4.1.119.Final\netty-transport-native-kqueue-4.1.119.Final-osx-aarch_64.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-resolver-dns-native-macos\4.1.119.Final\netty-resolver-dns-native-macos-4.1.119.Final-osx-x86_64.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-resolver-dns-native-macos\4.1.119.Final\netty-resolver-dns-native-macos-4.1.119.Final-osx-aarch_64.jar;C:\Users\thienvy\.m2\repository\org\apache\dubbo\hessian-lite\4.0.3\hessian-lite-4.0.3.jar;C:\Users\thienvy\.m2\repository\com\alibaba\fastjson2\fastjson2\2.0.53\fastjson2-2.0.53.jar;C:\Users\thienvy\.m2\repository\com\google\protobuf\protobuf-java\3.25.5\protobuf-java-3.25.5.jar;C:\Users\thienvy\.m2\repository\org\apache\curator\curator-framework\5.1.0\curator-framework-5.1.0.jar;C:\Users\thienvy\.m2\repository\org\apache\curator\curator-client\5.1.0\curator-client-5.1.0.jar;C:\Users\thienvy\.m2\repository\com\google\guava\guava\27.0.1-jre\guava-27.0.1-jre.jar;C:\Users\thienvy\.m2\repository\com\google\guava\failureaccess\1.0.1\failureaccess-1.0.1.jar;C:\Users\thienvy\.m2\repository\com\google\guava\listenablefuture\9999.0-empty-to-avoid-conflict-with-guava\listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar;C:\Users\thienvy\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\thienvy\.m2\repository\org\checkerframework\checker-qual\2.5.2\checker-qual-2.5.2.jar;C:\Users\thienvy\.m2\repository\com\google\errorprone\error_prone_annotations\2.2.0\error_prone_annotations-2.2.0.jar;C:\Users\thienvy\.m2\repository\com\google\j2objc\j2objc-annotations\1.1\j2objc-annotations-1.1.jar;C:\Users\thienvy\.m2\repository\org\codehaus\mojo\animal-sniffer-annotations\1.17\animal-sniffer-annotations-1.17.jar;C:\Users\thienvy\.m2\repository\org\apache\zookeeper\zookeeper\3.7.1\zookeeper-3.7.1.jar;C:\Users\thienvy\.m2\repository\org\apache\zookeeper\zookeeper-jute\3.7.1\zookeeper-jute-3.7.1.jar;C:\Users\thienvy\.m2\repository\org\apache\yetus\audience-annotations\0.12.0\audience-annotations-0.12.0.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-handler\4.1.119.Final\netty-handler-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-common\4.1.119.Final\netty-common-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-resolver\4.1.119.Final\netty-resolver-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-buffer\4.1.119.Final\netty-buffer-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-transport\4.1.119.Final\netty-transport-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-transport-native-unix-common\4.1.119.Final\netty-transport-native-unix-common-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-codec\4.1.119.Final\netty-codec-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-transport-classes-epoll\4.1.119.Final\netty-transport-classes-epoll-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\org\slf4j\slf4j-api\2.0.17\slf4j-api-2.0.17.jar;C:\Users\thienvy\.m2\repository\org\apache\curator\curator-recipes\5.5.0\curator-recipes-5.5.0.jar;C:\Users\thienvy\.m2\repository\org\apache\curator\curator-x-discovery\5.5.0\curator-x-discovery-5.5.0.jar;C:\Users\thienvy\.m2\repository\org\springframework\cloud\spring-cloud-starter-vault-config\4.1.1\spring-cloud-starter-vault-config-4.1.1.jar;C:\Users\thienvy\.m2\repository\org\apache\httpcomponents\client5\httpclient5\5.3.1\httpclient5-5.3.1.jar;C:\Users\thienvy\.m2\repository\org\apache\httpcomponents\core5\httpcore5-h2\5.2.5\httpcore5-h2-5.2.5.jar;C:\Users\thienvy\.m2\repository\org\apache\httpcomponents\core5\httpcore5\5.2.5\httpcore5-5.2.5.jar;C:\Users\thienvy\.m2\repository\org\springframework\cloud\spring-cloud-starter\4.1.2\spring-cloud-starter-4.1.2.jar;C:\Users\thienvy\.m2\repository\org\springframework\cloud\spring-cloud-context\4.1.2\spring-cloud-context-4.1.2.jar;C:\Users\thienvy\.m2\repository\org\springframework\cloud\spring-cloud-commons\4.1.2\spring-cloud-commons-4.1.2.jar;C:\Users\thienvy\.m2\repository\org\springframework\security\spring-security-rsa\1.1.2\spring-security-rsa-1.1.2.jar;C:\Users\thienvy\.m2\repository\org\bouncycastle\bcprov-jdk18on\1.77\bcprov-jdk18on-1.77.jar;C:\Users\thienvy\.m2\repository\org\springframework\cloud\spring-cloud-vault-config\4.1.1\spring-cloud-vault-config-4.1.1.jar;C:\Users\thienvy\.m2\repository\org\springframework\vault\spring-vault-core\3.1.1\spring-vault-core-3.1.1.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-starter-data-redis\3.3.11\spring-boot-starter-data-redis-3.3.11.jar;C:\Users\thienvy\.m2\repository\io\lettuce\lettuce-core\6.3.2.RELEASE\lettuce-core-6.3.2.RELEASE.jar;C:\Users\thienvy\.m2\repository\io\projectreactor\reactor-core\3.6.16\reactor-core-3.6.16.jar;C:\Users\thienvy\.m2\repository\org\springframework\data\spring-data-redis\3.3.11\spring-data-redis-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\springframework\data\spring-data-keyvalue\3.3.11\spring-data-keyvalue-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\springframework\spring-oxm\6.1.19\spring-oxm-6.1.19.jar;C:\Users\thienvy\.m2\repository\org\springframework\spring-context-support\6.1.19\spring-context-support-6.1.19.jar;C:\Users\thienvy\.m2\repository\org\springframework\cloud\spring-cloud-stream\4.2.1\spring-cloud-stream-4.2.1.jar;C:\Users\thienvy\.m2\repository\org\springframework\spring-messaging\6.1.19\spring-messaging-6.1.19.jar;C:\Users\thienvy\.m2\repository\org\springframework\integration\spring-integration-core\6.3.9\spring-integration-core-6.3.9.jar;C:\Users\thienvy\.m2\repository\org\springframework\integration\spring-integration-jmx\6.3.9\spring-integration-jmx-6.3.9.jar;C:\Users\thienvy\.m2\repository\org\springframework\retry\spring-retry\2.0.11\spring-retry-2.0.11.jar;C:\Users\thienvy\.m2\repository\org\springframework\cloud\spring-cloud-function-context\4.2.2\spring-cloud-function-context-4.2.2.jar;C:\Users\thienvy\.m2\repository\org\springframework\cloud\spring-cloud-function-core\4.2.2\spring-cloud-function-core-4.2.2.jar;C:\Users\thienvy\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-joda\2.17.3\jackson-datatype-joda-2.17.3.jar;C:\Users\thienvy\.m2\repository\joda-time\joda-time\2.10.14\joda-time-2.10.14.jar;C:\Users\thienvy\.m2\repository\org\springframework\cloud\spring-cloud-starter-stream-kafka\4.2.1\spring-cloud-starter-stream-kafka-4.2.1.jar;C:\Users\thienvy\.m2\repository\org\springframework\cloud\spring-cloud-stream-binder-kafka\4.2.1\spring-cloud-stream-binder-kafka-4.2.1.jar;C:\Users\thienvy\.m2\repository\org\springframework\cloud\spring-cloud-stream-binder-kafka-core\4.2.1\spring-cloud-stream-binder-kafka-core-4.2.1.jar;C:\Users\thienvy\.m2\repository\org\springframework\integration\spring-integration-kafka\6.3.9\spring-integration-kafka-6.3.9.jar;C:\Users\thienvy\.m2\repository\org\springframework\kafka\spring-kafka\3.2.8\spring-kafka-3.2.8.jar;C:\Users\thienvy\.m2\repository\org\apache\kafka\kafka-clients\3.7.2\kafka-clients-3.7.2.jar;C:\Users\thienvy\.m2\repository\com\github\luben\zstd-jni\1.5.6-4\zstd-jni-1.5.6-4.jar;C:\Users\thienvy\.m2\repository\org\lz4\lz4-java\1.8.0\lz4-java-1.8.0.jar;C:\Users\thienvy\.m2\repository\org\xerial\snappy\snappy-java\1.1.10.5\snappy-java-1.1.10.5.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-starter-oauth2-resource-server\3.3.11\spring-boot-starter-oauth2-resource-server-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\keycloak\keycloak-admin-client\26.0.0\keycloak-admin-client-26.0.0.jar;C:\Users\thienvy\.m2\repository\org\keycloak\keycloak-client-common-synced\26.0.0\keycloak-client-common-synced-26.0.0.jar;C:\Users\thienvy\.m2\repository\org\jboss\logging\commons-logging-jboss-logging\1.0.0.Final\commons-logging-jboss-logging-1.0.0.Final.jar;C:\Users\thienvy\.m2\repository\org\apache\httpcomponents\httpclient\4.5.14\httpclient-4.5.14.jar;C:\Users\thienvy\.m2\repository\org\apache\httpcomponents\httpcore\4.4.16\httpcore-4.4.16.jar;C:\Users\thienvy\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.17.3\jackson-core-2.17.3.jar;C:\Users\thienvy\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.17.3\jackson-annotations-2.17.3.jar;C:\Users\thienvy\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.17.3\jackson-datatype-jdk8-2.17.3.jar;C:\Users\thienvy\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.17.3\jackson-datatype-jsr310-2.17.3.jar;C:\Users\thienvy\.m2\repository\org\eclipse\microprofile\openapi\microprofile-openapi-api\3.1.1\microprofile-openapi-api-3.1.1.jar;C:\Users\thienvy\.m2\repository\org\jboss\resteasy\resteasy-client\6.2.9.Final\resteasy-client-6.2.9.Final.jar;C:\Users\thienvy\.m2\repository\org\jboss\resteasy\resteasy-client-api\6.2.9.Final\resteasy-client-api-6.2.9.Final.jar;C:\Users\thienvy\.m2\repository\org\jboss\resteasy\resteasy-core-spi\6.2.9.Final\resteasy-core-spi-6.2.9.Final.jar;C:\Users\thienvy\.m2\repository\org\jboss\resteasy\resteasy-core\6.2.9.Final\resteasy-core-6.2.9.Final.jar;C:\Users\thienvy\.m2\repository\org\jboss\jandex\2.4.5.Final\jandex-2.4.5.Final.jar;C:\Users\thienvy\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\thienvy\.m2\repository\com\ibm\async\asyncutil\0.1.0\asyncutil-0.1.0.jar;C:\Users\thienvy\.m2\repository\commons-codec\commons-codec\1.16.1\commons-codec-1.16.1.jar;C:\Users\thienvy\.m2\repository\jakarta\ws\rs\jakarta.ws.rs-api\3.1.0\jakarta.ws.rs-api-3.1.0.jar;C:\Users\thienvy\.m2\repository\org\reactivestreams\reactive-streams\1.0.4\reactive-streams-1.0.4.jar;C:\Users\thienvy\.m2\repository\org\jboss\resteasy\resteasy-multipart-provider\6.2.9.Final\resteasy-multipart-provider-6.2.9.Final.jar;C:\Users\thienvy\.m2\repository\jakarta\mail\jakarta.mail-api\2.1.3\jakarta.mail-api-2.1.3.jar;C:\Users\thienvy\.m2\repository\org\eclipse\angus\angus-mail\2.0.3\angus-mail-2.0.3.jar;C:\Users\thienvy\.m2\repository\org\apache\james\apache-mime4j-dom\0.8.11\apache-mime4j-dom-0.8.11.jar;C:\Users\thienvy\.m2\repository\org\apache\james\apache-mime4j-core\0.8.11\apache-mime4j-core-0.8.11.jar;C:\Users\thienvy\.m2\repository\org\apache\james\apache-mime4j-storage\0.8.11\apache-mime4j-storage-0.8.11.jar;C:\Users\thienvy\.m2\repository\commons-io\commons-io\2.11.0\commons-io-2.11.0.jar;C:\Users\thienvy\.m2\repository\org\jboss\resteasy\resteasy-jackson2-provider\6.2.9.Final\resteasy-jackson2-provider-6.2.9.Final.jar;C:\Users\thienvy\.m2\repository\com\fasterxml\jackson\jakarta\rs\jackson-jakarta-rs-base\2.17.3\jackson-jakarta-rs-base-2.17.3.jar;C:\Users\thienvy\.m2\repository\com\fasterxml\jackson\jakarta\rs\jackson-jakarta-rs-json-provider\2.17.3\jackson-jakarta-rs-json-provider-2.17.3.jar;C:\Users\thienvy\.m2\repository\com\fasterxml\jackson\module\jackson-module-jakarta-xmlbind-annotations\2.17.3\jackson-module-jakarta-xmlbind-annotations-2.17.3.jar;C:\Users\thienvy\.m2\repository\com\github\java-json-tools\json-patch\1.13\json-patch-1.13.jar;C:\Users\thienvy\.m2\repository\com\github\java-json-tools\msg-simple\1.2\msg-simple-1.2.jar;C:\Users\thienvy\.m2\repository\com\github\java-json-tools\btf\1.3\btf-1.3.jar;C:\Users\thienvy\.m2\repository\com\github\java-json-tools\jackson-coreutils\2.0\jackson-coreutils-2.0.jar;C:\Users\thienvy\.m2\repository\org\jboss\resteasy\resteasy-jaxb-provider\6.2.9.Final\resteasy-jaxb-provider-6.2.9.Final.jar;C:\Users\thienvy\.m2\repository\org\glassfish\jaxb\codemodel\4.0.5\codemodel-4.0.5.jar;C:\Users\thienvy\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\thienvy\.m2\repository\org\glassfish\jaxb\jaxb-jxc\4.0.5\jaxb-jxc-4.0.5.jar;C:\Users\thienvy\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\thienvy\.m2\repository\org\glassfish\jaxb\jaxb-xjc\4.0.5\jaxb-xjc-4.0.5.jar;C:\Users\thienvy\.m2\repository\org\glassfish\jaxb\xsom\4.0.5\xsom-4.0.5.jar;C:\Users\thienvy\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\thienvy\.m2\repository\com\sun\istack\istack-commons-tools\4.1.2\istack-commons-tools-4.1.2.jar;C:\Users\thienvy\.m2\repository\com\sun\xml\bind\external\relaxng-datatype\4.0.3\relaxng-datatype-4.0.3.jar;C:\Users\thienvy\.m2\repository\com\sun\xml\bind\external\rngom\4.0.3\rngom-4.0.3.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Saigon, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, java.vm.specification.version=17, os.name=Windows 11, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-17\bin, sun.java.command=com.example.transaction_service.TransactionServiceApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@4a084f81, com.sun.management.jmxremote=, jdk.debug=release, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, hibernate.cdi.extensions=true, user.home=C:\Users\thienvy, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2024-04-16, java.home=C:\Program Files\Java\jdk-17, file.separator=\, spring.output.ansi.enabled=always, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.11+7-LTS-207, user.name=Thiên Vỹ, spring.jmx.enabled=true, path.separator=;, management.endpoints.jmx.exposure.include=*, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\thienvy\AppData\Local\Temp\, catalina.home=C:\Users\thienvy\AppData\Local\Temp\tomcat.8088.5546351933587048903, java.version=17.0.11, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Study\java-banking-phase2, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=13712, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\thienvy\AppData\Local\Temp\tomcat.8088.5546351933587048903, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@4e059fe4, native.encoding=Cp1258, java.library.path=C:\Program Files\Java\jdk-17\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Java\jdk-17\bin;C:\Program Files (x86)\Microsoft SQL Server\160\Tools\Binn\;C:\Program Files\Microsoft SQL Server\160\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Microsoft SQL Server\160\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\160\DTS\Binn\;C:\Program Files\Git\cmd;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Docker\Docker\resources\bin;C:\ApacheMaven\apache-maven-3.9.9\bin;C:\vault_1.19.2_windows_amd64;C:\Users\thienvy\AppData\Roaming\fnm\node-versions\v22.15.0\installation\node_modules\npm;C:\Users\thienvy\AppData\Roaming\fnm;C:\Users\thienvy\AppData\Local\fnm_multishells\9464_1747193909934;;c:\Users\thienvy\AppData\Local\Programs\cursor\resources\app\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\thienvy\AppData\Local\Microsoft\WindowsApps;C:\Users\thienvy\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\thienvy\AppData\Local\JetBrains\Toolbox\scripts;C:\Users\thienvy\AppData\Local\Microsoft\WinGet\Packages\Schniz.fnm_Microsoft.Winget.Source_8wekyb3d8bbwe;C:\Users\thienvy\AppData\Local\Programs\cursor\resources\app\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, emulated-client, sharing, java.vm.version=17.0.11+7-LTS-207, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=61.0, LOGGED_APPLICATION_NAME=[transaction-service] } MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {} MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.example.transaction_service.entity.Transaction] is safe MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@226f51fc] under count; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@396cb517] under every; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@5905cb46] under any; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@266778b2] under sinh; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@428d78ee] under cosh; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@58c9029] under tanh; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6bf92d12] under pi; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@76467a37] under log; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : length -> character_length MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@3ceb3695] under position; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@43b08a3f] under overlay; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@981be29] under trim; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@416e0c6e] under cast; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@212838e7] under collate; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@c649090] under extract; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@607abeb9] under ifnull; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@6a74b422] under pad; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@4becc0d7] under str; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@56f41484] under format; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@72bab77b] under timestampadd; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@2071a662] under timestampdiff; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5b299e27] under current_date; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4b9e3f0b] under current_time; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@75e4b55c] under current_timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current date -> current_date MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current time -> current_time MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@304670f7] under local_date; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2709187e] under local_time; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1d551df3] under local_datetime; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4dcb0550] under offset_datetime; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local date -> local_date MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local time -> local_time MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4e8915d6] under instant; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current_instant -> instant MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@776f1ca] under sql; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@76467a37 MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@4156e174] under lpad; prior registration was NamedSqmFunctionTemplate(lpad) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@727368da] under rpad; prior registration was NamedSqmFunctionTemplate(rpad) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : day -> dayofmonth MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@45d2a77a] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@3ceb3695 MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@6e084c88] under trunc; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : truncate -> trunc MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1654d883] under bitand; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7fbee359] under bitor; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@58a1166f] under bitxor; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@74617dff] under bitnot; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@44c13330] under format; prior registration was org.hibernate.dialect.function.FormatFunction@56f41484 MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@2709187e MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@1d551df3 MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4ceda4da] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6bf92d12 MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1cafd146] under chr; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : char -> chr MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@63ded9a9] under sysdate; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@37c08b6e] under rank; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@1f04bfac] under dense_rank; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@7c346d9] under percent_rank; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@7ce9b78b] under cume_dist; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@590e3596] under listagg; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - abs(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double acos(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - addtime(TIME datetime, TIME time) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean any(BOOLEAN arg) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer ascii(STRING arg) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double asin(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - avg(arg) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bit_and(arg) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bit_or(arg) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitand(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitnot(arg) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitor(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitxor(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - cast(arg as Type) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - ceiling(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Character char(INTEGER arg) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Character chr(INTEGER arg) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]]) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String collate(STRING string as COLLATION collation) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]]) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double cos(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double cosh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double cot(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Long count([distinct ]{arg|*}) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer crc32(arg) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double cume_dist([arg0[, ...]]) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date curdate() MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date current date MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time current time MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current timestamp MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date current_date MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Instant current_instant MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time current_time MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current_timestamp MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time curtime() MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date date(arg) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer datediff(DATE end, DATE start) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer day(DATE arg) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String dayname(DATE arg) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofmonth(DATE arg) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofweek(DATE arg) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofyear(DATE arg) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double degrees(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Long dense_rank([arg0[, ...]]) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean every(BOOLEAN arg) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double exp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - first_valueANY value MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - floor(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]]) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer hour(TIME arg) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - ifnull(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Instant instant MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]]) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]] MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date last_day(DATE arg) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - last_valueANY value MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]] MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]]) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String left(STRING string, INTEGER length) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double ln(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local date MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local datetime MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local time MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local_date MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local_datetime MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local_time MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtime MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtimestamp MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start]) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1]) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double log10(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double log2(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String lower(STRING string) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String lpad(string, length[, padding]) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters]) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - max(COMPARABLE arg) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String md5(arg) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer microsecond(TIME arg) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - min(COMPARABLE arg) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer minute(TIME arg) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer month(DATE arg) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String monthname(DATE arg) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp now() MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - nth_valueANY value, INTEGER nth MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - nullif(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset datetime MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset_datetime MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length]) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character]) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double percent_rank([arg0[, ...]]) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double pi MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer position(STRING pattern in STRING string) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer quarter(DATE arg) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double radians(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double rand([INTEGER seed]) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Long rank([arg0[, ...]]) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String repeat(STRING string, INTEGER times) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String reverse(STRING arg) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String right(STRING string, INTEGER length) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places]) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Long row_number() MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String rpad(string, length[, padding]) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters]) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer second(TIME arg) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String sha(arg) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String sha1(arg) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String sha2(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer sign(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double sin(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double sinh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String soundex(arg) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String space(INTEGER arg) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Object sql MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double sqrt(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String str(arg) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length]) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length]) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - subtime(TIME datetime, TIME time) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - sum(arg) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp sysdate() MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double tan(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double tanh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String time(arg) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1]) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - trunc( ... ) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - truncate( ... ) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String upper(STRING string) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date utc_date MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time utc_time MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp utc_timestamp MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_pop(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_samp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double variance(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer week(DATE arg) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer year(DATE arg) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG org.hibernate.orm.query.plan.cache - Starting QueryInterpretationCache(2048) MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.e.i.EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.example.transaction_service.entity.Transaction] is safe MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-12 11:36:10 [restartedMain] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.example.transaction_service.entity.Transaction]: private accessor [amount] MDC:[traceId=, spanId=]
2025-06-12 11:36:11 [restartedMain] DEBUG o.h.orm.model.mapping.creation - Starting post-init callbacks MDC:[traceId=, spanId=]
2025-06-12 11:36:11 [restartedMain] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(com.example.transaction_service.entity.Transaction) `staticFetchableList` generator MDC:[traceId=, spanId=]
2025-06-12 11:36:11 [restartedMain] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 11:36:11 [restartedMain] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction)] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 11:36:11 [restartedMain] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction.type]
 MDC:[traceId=, spanId=]
2025-06-12 11:36:11 [restartedMain] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 11:36:11 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-12 11:36:11 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select id from tbl_transaction where id=? MDC:[traceId=, spanId=]
2025-06-12 11:36:11 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into tbl_transaction (amount,bank_type,currency,description,destination_bank_code,destination_bank_name,failed_reason,from_account_number,reference_code,status,timestamp,to_account_number,type,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?) MDC:[traceId=, spanId=]
2025-06-12 11:36:11 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update tbl_transaction set amount=?,bank_type=?,currency=?,description=?,destination_bank_code=?,destination_bank_name=?,failed_reason=?,from_account_number=?,reference_code=?,status=?,timestamp=?,to_account_number=?,type=? where id=? MDC:[traceId=, spanId=]
2025-06-12 11:36:11 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from tbl_transaction where id=? MDC:[traceId=, spanId=]
2025-06-12 11:36:11 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration) MDC:[traceId=, spanId=]
2025-06-12 11:36:11 [restartedMain] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3687f9c7] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@274225c9] MDC:[traceId=, spanId=]
2025-06-12 11:36:11 [restartedMain] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named HQL queries MDC:[traceId=, spanId=]
2025-06-12 11:36:11 [restartedMain] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named SQL queries MDC:[traceId=, spanId=]
2025-06-12 11:36:11 [restartedMain] DEBUG org.hibernate.mapping.Table - No alter strings for table : tbl_transaction MDC:[traceId=, spanId=]
2025-06-12 11:36:11 [restartedMain] DEBUG o.h.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1a3f1ffc MDC:[traceId=, spanId=]
2025-06-12 11:36:11 [restartedMain] DEBUG o.h.internal.SessionFactoryRegistry - Registering SessionFactory: 04dabe05-97e1-4b62-bece-2766ab8dbf4b (<unnamed>) MDC:[traceId=, spanId=]
2025-06-12 11:36:11 [restartedMain] DEBUG o.h.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured MDC:[traceId=, spanId=]
2025-06-12 11:36:11 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Instantiated SessionFactory MDC:[traceId=, spanId=]
2025-06-12 11:36:11 [restartedMain] DEBUG o.h.s.internal.StatisticsInitiator - Statistics initialized [enabled=false] MDC:[traceId=, spanId=]
2025-06-12 11:36:11 [restartedMain] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy3/jdk.proxy3.$Proxy207.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.getCountQuery(JpaQueryLookupStrategy.java:204)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:171)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.example.transaction_service.TransactionServiceApplication.main(TransactionServiceApplication.java:15)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-06-12 11:36:11 [restartedMain] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy3/jdk.proxy3.$Proxy207.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.getCountQuery(JpaQueryLookupStrategy.java:204)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:171)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.example.transaction_service.TransactionServiceApplication.main(TransactionServiceApplication.java:15)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-06-12 11:36:11 [restartedMain] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy3/jdk.proxy3.$Proxy207.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.example.transaction_service.TransactionServiceApplication.main(TransactionServiceApplication.java:15)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-06-12 11:36:11 [restartedMain] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy3/jdk.proxy3.$Proxy207.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.example.transaction_service.TransactionServiceApplication.main(TransactionServiceApplication.java:15)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-06-12 11:36:17 [restartedMain] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-06-12 11:36:17 [restartedMain] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator MDC:[traceId=, spanId=]
2025-06-12 11:36:17 [restartedMain] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory MDC:[traceId=, spanId=]
2025-06-12 11:36:17 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-06-12 11:36:17 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader MDC:[traceId=, spanId=]
2025-06-12 11:36:17 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-06-12 11:36:17 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-06-12 11:36:17 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-06-12 11:36:17 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-06-12 11:36:17 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-06-12 11:36:17 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-06-12 11:36:17 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-06-12 11:36:17 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-06-12 11:36:17 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-06-12 11:36:17 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-06-12 11:36:17 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-06-12 11:36:19 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 11:36:19 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 11:36:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 11:36:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 11:36:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@174f009c MDC:[traceId=, spanId=]
2025-06-12 11:36:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 11:36:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@64a92f19 MDC:[traceId=, spanId=]
2025-06-12 11:36:20 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 11:36:20 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 11:36:20 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 11:36:20 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 11:36:20 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@2062346066 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 11:36:20 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 11:36:20 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 11:37:19 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 11:37:19 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 11:37:19 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 11:37:19 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 11:37:19 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@75d251ba MDC:[traceId=, spanId=]
2025-06-12 11:37:19 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-12 11:37:19 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@400abee2 MDC:[traceId=, spanId=]
2025-06-12 11:37:19 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 11:37:19 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-06-12 11:37:19 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 11:37:19 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 11:37:19 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1340564278 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 11:37:19 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 11:37:19 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-12 11:38:07 [Thread-1] DEBUG o.h.internal.SessionFactoryImpl - HHH000031: Closing MDC:[traceId=, spanId=]
2025-06-12 11:38:07 [Thread-1] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@71ef9927] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@274225c9] MDC:[traceId=, spanId=]
2025-06-12 11:38:07 [Thread-1] DEBUG o.h.s.i.AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries MDC:[traceId=, spanId=]
2025-06-12 11:38:07 [Thread-1] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.jpa.internal.util.LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@2e5b33e0
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Study/java-banking-phase2/backend/transaction-service/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.example.transaction_service.entity.Transaction]
	Mapping files names []
	Properties [] MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator]. MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator]. MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator] MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator] MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator] MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator] MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned] MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator] MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator] MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator] MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator] MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator] MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.c.i.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7224900c MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7224900c MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@7224900c MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@54866aab MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@54866aab MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@2b5944d9 MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@2b5944d9 MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@80b777c MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@80b777c MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@5ef92281 MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@5ef92281 MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@5ef92281 MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@39cdc8c7 MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@39cdc8c7 MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@39cdc8c7 MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@58d32cab MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@58d32cab MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@b30105a MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@1c4ac697 MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@1c4ac697 MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@4b16be29 MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@ae16594 MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@1580652 MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@1580652 MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@1580652 MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@4b6c1690 MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@4b6c1690 MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@4b6c1690 MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@35f51e22 MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@35f51e22 MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@35f51e22 MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@34b900cd MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@34b900cd MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@34b900cd MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@7592fa9e MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@7592fa9e MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@7592fa9e MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@5ee1ba2a MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@5ee1ba2a MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@43f8abda MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@43f8abda MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@3fbb6400 MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@3fbb6400 MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@3fbb6400 MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@5d1f2f63 MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@efcee00 MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@efcee00 MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@85c327e MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@6c23cc11 MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@6c23cc11 MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@6c23cc11 MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@486382c1 MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@2106f923 MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@4820f0bf MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@3a91eeee MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@3a91eeee MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@6e3016f7 MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@6e3016f7 MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@78e925f3 MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@37839759 MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@2d0e9d9 MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@6c39d0da MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@5d4eb613 MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@765cdbbc MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@73c76a8f MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@73c76a8f MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@515adb2d MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@515adb2d MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@798c013b MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@798c013b MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@699db48d MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@699db48d MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@21462823 MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@21462823 MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@26420c95 MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3fde54bf MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@3be3b615 MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@3be3b615 MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@2b74867a MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1d641125 MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@50d2d59a MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@76a7928b MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@76a7928b MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@79ef8d73 MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@44bf5652 MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@207355a MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@207355a MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@487ecc5b MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@487ecc5b MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@4dff5432 MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@4dff5432 MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@4dff5432 MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@73cc9619 MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@73cc9619 MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@73cc9619 MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@485ad0df MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@76f8d19b MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@411155b2 MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@411155b2 MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@567a7fd7 MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@567a7fd7 MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@567a7fd7 MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@483881ef MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@787ce57a MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@330b8302 MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@330b8302 MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@360ac673 MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@360ac673 MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@360ac673 MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@3a311ea4 MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@3a311ea4 MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@25796bad MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@25796bad MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@4a05ff93 MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@4a05ff93 MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@2adc81fe MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@2adc81fe MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@182a7e3f MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@182a7e3f MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@76605a94 MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@137ccaac MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@d12418a MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@d12418a MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@33e5acc4 MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@56956c5e MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@31ccbc08 MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@5abeefe0 MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@667f97ac MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@1bf5f0a1 MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@4f8d232b MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@626104d5 MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@78393dc2 MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@6a4f4c53] into BootstrapContext; was [null] MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@6a4f4c53) [was null] MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@62aa63] into BootstrapContext; was [null] MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@31845080] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@108cb566] MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@6a4f4c53] MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@6a4f4c53] MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Database ->
	   name : MySQL
	version : 8.0.42
	  major : 8
	  minor : 0 MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Driver ->
	   name : MySQL Connector/J
	version : mysql-connector-j-8.3.0 (Revision: 805f872a57875f311cb82487efcfb070411a3fa0)
	  major : 8
	  minor : 3 MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - JDBC version : 4.2 MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.orm.dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQLDialect, version: 8.0.42 MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4c803612) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@43df937e) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1b8a62da) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5ded96c6) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@10101bcf) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2feb3ed0) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@673f0545) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@56d5e4c2) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@468b43b4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3060f80b) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2f6ac66f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5660c4b4) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4a6aab2f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7dfda2c9) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4dd4aa7) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@54486bec) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4b649199) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5b1f89d6) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT)) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT)) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@35797860 MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@33e5acc4` MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@24(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@24(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@24(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@25(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@25(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@25(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@26(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@26(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@26(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@27(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@27(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@27(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@22f97228] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4dfec7b7] MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.boot.model.relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}] MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Transaction MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity com.example.transaction_service.entity.Transaction on table tbl_transaction MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE') MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.example.transaction_service.entity.Transaction] is safe MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property id with lazy=false MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:id] MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for id MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.id MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property id MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, assigned, , ...) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property amount with lazy=false MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:amount] MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for amount MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.amount MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property amount MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property bankType with lazy=false MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:bankType] MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for bankType MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.bank_type MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property bankType MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property currency with lazy=false MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:currency] MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for currency MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.currency MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property currency MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property description with lazy=false MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:description] MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for description MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.description MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property description MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property destinationBankCode with lazy=false MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:destinationBankCode] MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for destinationBankCode MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.destination_bank_code MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property destinationBankCode MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property destinationBankName with lazy=false MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:destinationBankName] MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for destinationBankName MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.destination_bank_name MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property destinationBankName MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property failedReason with lazy=false MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:failedReason] MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for failedReason MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.failed_reason MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property failedReason MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property fromAccountNumber with lazy=false MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:fromAccountNumber] MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for fromAccountNumber MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.from_account_number MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property fromAccountNumber MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property referenceCode with lazy=false MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:referenceCode] MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for referenceCode MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.reference_code MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property referenceCode MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property status with lazy=false MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:status] MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for status MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.status MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property status MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property timestamp with lazy=false MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:timestamp] MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for timestamp MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.timestamp MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property timestamp MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property toAccountNumber with lazy=false MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:toAccountNumber] MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for toAccountNumber MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.to_account_number MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property toAccountNumber MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property type with lazy=false MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:type] MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for type MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.type MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property type MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: com.example.transaction_service.entity MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.j.e.i.CallbackDefinitionResolverLegacyImpl - Adding prePersist as PrePersist callback for entity com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bankType MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for currency MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for description MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for destinationBankCode MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for destinationBankName MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for failedReason MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for fromAccountNumber MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for referenceCode MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for timestamp MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for toAccountNumber MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for type MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [tbl_transaction] MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Building session factory MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Instantiating SessionFactory with settings: {jdk.tls.rejectClientInitiatedRenegotiation=true, java.specification.version=17, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@7a99bcc8, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1258, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Study\java-banking-phase2\backend\transaction-service\target\classes;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-starter-actuator\3.3.11\spring-boot-starter-actuator-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-starter\3.3.11\spring-boot-starter-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.3.11\spring-boot-starter-logging-3.3.11.jar;C:\Users\thienvy\.m2\repository\ch\qos\logback\logback-classic\1.5.18\logback-classic-1.5.18.jar;C:\Users\thienvy\.m2\repository\ch\qos\logback\logback-core\1.5.18\logback-core-1.5.18.jar;C:\Users\thienvy\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.23.1\log4j-to-slf4j-2.23.1.jar;C:\Users\thienvy\.m2\repository\org\apache\logging\log4j\log4j-api\2.23.1\log4j-api-2.23.1.jar;C:\Users\thienvy\.m2\repository\org\slf4j\jul-to-slf4j\2.0.17\jul-to-slf4j-2.0.17.jar;C:\Users\thienvy\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\thienvy\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-actuator-autoconfigure\3.3.11\spring-boot-actuator-autoconfigure-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-actuator\3.3.11\spring-boot-actuator-3.3.11.jar;C:\Users\thienvy\.m2\repository\io\micrometer\micrometer-observation\1.13.13\micrometer-observation-1.13.13.jar;C:\Users\thienvy\.m2\repository\io\micrometer\micrometer-commons\1.13.13\micrometer-commons-1.13.13.jar;C:\Users\thienvy\.m2\repository\io\micrometer\micrometer-jakarta9\1.13.13\micrometer-jakarta9-1.13.13.jar;C:\Users\thienvy\.m2\repository\io\micrometer\micrometer-core\1.13.13\micrometer-core-1.13.13.jar;C:\Users\thienvy\.m2\repository\org\hdrhistogram\HdrHistogram\2.2.2\HdrHistogram-2.2.2.jar;C:\Users\thienvy\.m2\repository\org\latencyutils\LatencyUtils\2.0.3\LatencyUtils-2.0.3.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.3.11\spring-boot-starter-data-jpa-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.3.11\spring-boot-starter-aop-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\aspectj\aspectjweaver\1.9.24\aspectjweaver-1.9.24.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.3.11\spring-boot-starter-jdbc-3.3.11.jar;C:\Users\thienvy\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\thienvy\.m2\repository\org\springframework\spring-jdbc\6.1.19\spring-jdbc-6.1.19.jar;C:\Users\thienvy\.m2\repository\org\hibernate\orm\hibernate-core\6.5.3.Final\hibernate-core-6.5.3.Final.jar;C:\Users\thienvy\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\thienvy\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\thienvy\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\thienvy\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\thienvy\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\thienvy\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\thienvy\.m2\repository\net\bytebuddy\byte-buddy\1.14.19\byte-buddy-1.14.19.jar;C:\Users\thienvy\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\thienvy\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\thienvy\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\thienvy\.m2\repository\org\springframework\data\spring-data-jpa\3.3.11\spring-data-jpa-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\springframework\data\spring-data-commons\3.3.11\spring-data-commons-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\springframework\spring-orm\6.1.19\spring-orm-6.1.19.jar;C:\Users\thienvy\.m2\repository\org\springframework\spring-context\6.1.19\spring-context-6.1.19.jar;C:\Users\thienvy\.m2\repository\org\springframework\spring-tx\6.1.19\spring-tx-6.1.19.jar;C:\Users\thienvy\.m2\repository\org\springframework\spring-beans\6.1.19\spring-beans-6.1.19.jar;C:\Users\thienvy\.m2\repository\org\springframework\spring-aspects\6.1.19\spring-aspects-6.1.19.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.3.11\spring-boot-starter-web-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.3.11\spring-boot-starter-json-3.3.11.jar;C:\Users\thienvy\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.17.3\jackson-module-parameter-names-2.17.3.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.3.11\spring-boot-starter-tomcat-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.40\tomcat-embed-core-10.1.40.jar;C:\Users\thienvy\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.40\tomcat-embed-websocket-10.1.40.jar;C:\Users\thienvy\.m2\repository\org\springframework\spring-web\6.1.19\spring-web-6.1.19.jar;C:\Users\thienvy\.m2\repository\org\springframework\spring-webmvc\6.1.19\spring-webmvc-6.1.19.jar;C:\Users\thienvy\.m2\repository\org\springframework\spring-expression\6.1.19\spring-expression-6.1.19.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-devtools\3.3.11\spring-boot-devtools-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot\3.3.11\spring-boot-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.3.11\spring-boot-autoconfigure-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.3.11\spring-boot-starter-security-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\springframework\spring-aop\6.1.19\spring-aop-6.1.19.jar;C:\Users\thienvy\.m2\repository\org\springframework\security\spring-security-config\6.3.9\spring-security-config-6.3.9.jar;C:\Users\thienvy\.m2\repository\org\springframework\security\spring-security-web\6.3.9\spring-security-web-6.3.9.jar;C:\Users\thienvy\.m2\repository\org\springframework\security\spring-security-oauth2-resource-server\6.3.9\spring-security-oauth2-resource-server-6.3.9.jar;C:\Users\thienvy\.m2\repository\org\springframework\security\spring-security-core\6.3.9\spring-security-core-6.3.9.jar;C:\Users\thienvy\.m2\repository\org\springframework\security\spring-security-crypto\6.3.9\spring-security-crypto-6.3.9.jar;C:\Users\thienvy\.m2\repository\org\springframework\spring-core\6.1.19\spring-core-6.1.19.jar;C:\Users\thienvy\.m2\repository\org\springframework\spring-jcl\6.1.19\spring-jcl-6.1.19.jar;C:\Users\thienvy\.m2\repository\org\springframework\security\spring-security-oauth2-jose\6.3.9\spring-security-oauth2-jose-6.3.9.jar;C:\Users\thienvy\.m2\repository\com\nimbusds\nimbus-jose-jwt\9.37.3\nimbus-jose-jwt-9.37.3.jar;C:\Users\thienvy\.m2\repository\com\github\stephenc\jcip\jcip-annotations\1.0-1\jcip-annotations-1.0-1.jar;C:\Users\thienvy\.m2\repository\org\springframework\security\spring-security-oauth2-core\6.3.9\spring-security-oauth2-core-6.3.9.jar;C:\Users\thienvy\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\thienvy\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\thienvy\.m2\repository\com\mysql\mysql-connector-j\8.3.0\mysql-connector-j-8.3.0.jar;C:\Users\thienvy\.m2\repository\org\projectlombok\lombok\1.18.38\lombok-1.18.38.jar;C:\Users\thienvy\.m2\repository\org\mapstruct\mapstruct\1.5.5.Final\mapstruct-1.5.5.Final.jar;C:\Users\thienvy\.m2\repository\org\mapstruct\mapstruct-processor\1.5.5.Final\mapstruct-processor-1.5.5.Final.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-starter-validation\3.3.11\spring-boot-starter-validation-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.40\tomcat-embed-el-10.1.40.jar;C:\Users\thienvy\.m2\repository\org\hibernate\validator\hibernate-validator\8.0.2.Final\hibernate-validator-8.0.2.Final.jar;C:\Users\thienvy\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\thienvy\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-ui\2.0.2\springdoc-openapi-starter-webmvc-ui-2.0.2.jar;C:\Users\thienvy\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-api\2.0.2\springdoc-openapi-starter-webmvc-api-2.0.2.jar;C:\Users\thienvy\.m2\repository\org\springdoc\springdoc-openapi-starter-common\2.0.2\springdoc-openapi-starter-common-2.0.2.jar;C:\Users\thienvy\.m2\repository\io\swagger\core\v3\swagger-core-jakarta\2.2.7\swagger-core-jakarta-2.2.7.jar;C:\Users\thienvy\.m2\repository\org\apache\commons\commons-lang3\3.14.0\commons-lang3-3.14.0.jar;C:\Users\thienvy\.m2\repository\io\swagger\core\v3\swagger-annotations-jakarta\2.2.7\swagger-annotations-jakarta-2.2.7.jar;C:\Users\thienvy\.m2\repository\io\swagger\core\v3\swagger-models-jakarta\2.2.7\swagger-models-jakarta-2.2.7.jar;C:\Users\thienvy\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-yaml\2.17.3\jackson-dataformat-yaml-2.17.3.jar;C:\Users\thienvy\.m2\repository\org\webjars\swagger-ui\4.15.5\swagger-ui-4.15.5.jar;C:\Users\thienvy\.m2\repository\org\webjars\webjars-locator-core\0.58\webjars-locator-core-0.58.jar;C:\Users\thienvy\.m2\repository\io\github\classgraph\classgraph\4.8.149\classgraph-4.8.149.jar;C:\Study\java-banking-phase2\backend\common-service\target\classes;C:\Users\thienvy\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.17.3\jackson-databind-2.17.3.jar;C:\Users\thienvy\.m2\repository\org\apache\dubbo\dubbo-spring-boot-starter\3.3.2\dubbo-spring-boot-starter-3.3.2.jar;C:\Users\thienvy\.m2\repository\org\apache\dubbo\dubbo-spring-boot-autoconfigure\3.3.2\dubbo-spring-boot-autoconfigure-3.3.2.jar;C:\Users\thienvy\.m2\repository\org\apache\dubbo\dubbo-spring-boot-autoconfigure-compatible\3.3.2\dubbo-spring-boot-autoconfigure-compatible-3.3.2.jar;C:\Users\thienvy\.m2\repository\org\apache\dubbo\dubbo\3.3.2\dubbo-3.3.2.jar;C:\Users\thienvy\.m2\repository\org\javassist\javassist\3.30.2-GA\javassist-3.30.2-GA.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-all\4.1.119.Final\netty-all-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-codec-dns\4.1.119.Final\netty-codec-dns-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-codec-haproxy\4.1.119.Final\netty-codec-haproxy-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-codec-http\4.1.119.Final\netty-codec-http-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-codec-http2\4.1.119.Final\netty-codec-http2-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-codec-memcache\4.1.119.Final\netty-codec-memcache-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-codec-mqtt\4.1.119.Final\netty-codec-mqtt-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-codec-redis\4.1.119.Final\netty-codec-redis-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-codec-smtp\4.1.119.Final\netty-codec-smtp-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-codec-socks\4.1.119.Final\netty-codec-socks-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-codec-stomp\4.1.119.Final\netty-codec-stomp-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-codec-xml\4.1.119.Final\netty-codec-xml-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-handler-proxy\4.1.119.Final\netty-handler-proxy-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-handler-ssl-ocsp\4.1.119.Final\netty-handler-ssl-ocsp-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-resolver-dns\4.1.119.Final\netty-resolver-dns-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-transport-rxtx\4.1.119.Final\netty-transport-rxtx-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-transport-sctp\4.1.119.Final\netty-transport-sctp-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-transport-udt\4.1.119.Final\netty-transport-udt-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-transport-classes-kqueue\4.1.119.Final\netty-transport-classes-kqueue-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-resolver-dns-classes-macos\4.1.119.Final\netty-resolver-dns-classes-macos-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final-linux-x86_64.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final-linux-aarch_64.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final-linux-riscv64.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-transport-native-kqueue\4.1.119.Final\netty-transport-native-kqueue-4.1.119.Final-osx-x86_64.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-transport-native-kqueue\4.1.119.Final\netty-transport-native-kqueue-4.1.119.Final-osx-aarch_64.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-resolver-dns-native-macos\4.1.119.Final\netty-resolver-dns-native-macos-4.1.119.Final-osx-x86_64.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-resolver-dns-native-macos\4.1.119.Final\netty-resolver-dns-native-macos-4.1.119.Final-osx-aarch_64.jar;C:\Users\thienvy\.m2\repository\org\apache\dubbo\hessian-lite\4.0.3\hessian-lite-4.0.3.jar;C:\Users\thienvy\.m2\repository\com\alibaba\fastjson2\fastjson2\2.0.53\fastjson2-2.0.53.jar;C:\Users\thienvy\.m2\repository\com\google\protobuf\protobuf-java\3.25.5\protobuf-java-3.25.5.jar;C:\Users\thienvy\.m2\repository\org\apache\curator\curator-framework\5.1.0\curator-framework-5.1.0.jar;C:\Users\thienvy\.m2\repository\org\apache\curator\curator-client\5.1.0\curator-client-5.1.0.jar;C:\Users\thienvy\.m2\repository\com\google\guava\guava\27.0.1-jre\guava-27.0.1-jre.jar;C:\Users\thienvy\.m2\repository\com\google\guava\failureaccess\1.0.1\failureaccess-1.0.1.jar;C:\Users\thienvy\.m2\repository\com\google\guava\listenablefuture\9999.0-empty-to-avoid-conflict-with-guava\listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar;C:\Users\thienvy\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\thienvy\.m2\repository\org\checkerframework\checker-qual\2.5.2\checker-qual-2.5.2.jar;C:\Users\thienvy\.m2\repository\com\google\errorprone\error_prone_annotations\2.2.0\error_prone_annotations-2.2.0.jar;C:\Users\thienvy\.m2\repository\com\google\j2objc\j2objc-annotations\1.1\j2objc-annotations-1.1.jar;C:\Users\thienvy\.m2\repository\org\codehaus\mojo\animal-sniffer-annotations\1.17\animal-sniffer-annotations-1.17.jar;C:\Users\thienvy\.m2\repository\org\apache\zookeeper\zookeeper\3.7.1\zookeeper-3.7.1.jar;C:\Users\thienvy\.m2\repository\org\apache\zookeeper\zookeeper-jute\3.7.1\zookeeper-jute-3.7.1.jar;C:\Users\thienvy\.m2\repository\org\apache\yetus\audience-annotations\0.12.0\audience-annotations-0.12.0.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-handler\4.1.119.Final\netty-handler-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-common\4.1.119.Final\netty-common-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-resolver\4.1.119.Final\netty-resolver-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-buffer\4.1.119.Final\netty-buffer-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-transport\4.1.119.Final\netty-transport-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-transport-native-unix-common\4.1.119.Final\netty-transport-native-unix-common-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-codec\4.1.119.Final\netty-codec-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\io\netty\netty-transport-classes-epoll\4.1.119.Final\netty-transport-classes-epoll-4.1.119.Final.jar;C:\Users\thienvy\.m2\repository\org\slf4j\slf4j-api\2.0.17\slf4j-api-2.0.17.jar;C:\Users\thienvy\.m2\repository\org\apache\curator\curator-recipes\5.5.0\curator-recipes-5.5.0.jar;C:\Users\thienvy\.m2\repository\org\apache\curator\curator-x-discovery\5.5.0\curator-x-discovery-5.5.0.jar;C:\Users\thienvy\.m2\repository\org\springframework\cloud\spring-cloud-starter-vault-config\4.1.1\spring-cloud-starter-vault-config-4.1.1.jar;C:\Users\thienvy\.m2\repository\org\apache\httpcomponents\client5\httpclient5\5.3.1\httpclient5-5.3.1.jar;C:\Users\thienvy\.m2\repository\org\apache\httpcomponents\core5\httpcore5-h2\5.2.5\httpcore5-h2-5.2.5.jar;C:\Users\thienvy\.m2\repository\org\apache\httpcomponents\core5\httpcore5\5.2.5\httpcore5-5.2.5.jar;C:\Users\thienvy\.m2\repository\org\springframework\cloud\spring-cloud-starter\4.1.2\spring-cloud-starter-4.1.2.jar;C:\Users\thienvy\.m2\repository\org\springframework\cloud\spring-cloud-context\4.1.2\spring-cloud-context-4.1.2.jar;C:\Users\thienvy\.m2\repository\org\springframework\cloud\spring-cloud-commons\4.1.2\spring-cloud-commons-4.1.2.jar;C:\Users\thienvy\.m2\repository\org\springframework\security\spring-security-rsa\1.1.2\spring-security-rsa-1.1.2.jar;C:\Users\thienvy\.m2\repository\org\bouncycastle\bcprov-jdk18on\1.77\bcprov-jdk18on-1.77.jar;C:\Users\thienvy\.m2\repository\org\springframework\cloud\spring-cloud-vault-config\4.1.1\spring-cloud-vault-config-4.1.1.jar;C:\Users\thienvy\.m2\repository\org\springframework\vault\spring-vault-core\3.1.1\spring-vault-core-3.1.1.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-starter-data-redis\3.3.11\spring-boot-starter-data-redis-3.3.11.jar;C:\Users\thienvy\.m2\repository\io\lettuce\lettuce-core\6.3.2.RELEASE\lettuce-core-6.3.2.RELEASE.jar;C:\Users\thienvy\.m2\repository\io\projectreactor\reactor-core\3.6.16\reactor-core-3.6.16.jar;C:\Users\thienvy\.m2\repository\org\springframework\data\spring-data-redis\3.3.11\spring-data-redis-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\springframework\data\spring-data-keyvalue\3.3.11\spring-data-keyvalue-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\springframework\spring-oxm\6.1.19\spring-oxm-6.1.19.jar;C:\Users\thienvy\.m2\repository\org\springframework\spring-context-support\6.1.19\spring-context-support-6.1.19.jar;C:\Users\thienvy\.m2\repository\org\springframework\cloud\spring-cloud-stream\4.2.1\spring-cloud-stream-4.2.1.jar;C:\Users\thienvy\.m2\repository\org\springframework\spring-messaging\6.1.19\spring-messaging-6.1.19.jar;C:\Users\thienvy\.m2\repository\org\springframework\integration\spring-integration-core\6.3.9\spring-integration-core-6.3.9.jar;C:\Users\thienvy\.m2\repository\org\springframework\integration\spring-integration-jmx\6.3.9\spring-integration-jmx-6.3.9.jar;C:\Users\thienvy\.m2\repository\org\springframework\retry\spring-retry\2.0.11\spring-retry-2.0.11.jar;C:\Users\thienvy\.m2\repository\org\springframework\cloud\spring-cloud-function-context\4.2.2\spring-cloud-function-context-4.2.2.jar;C:\Users\thienvy\.m2\repository\org\springframework\cloud\spring-cloud-function-core\4.2.2\spring-cloud-function-core-4.2.2.jar;C:\Users\thienvy\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-joda\2.17.3\jackson-datatype-joda-2.17.3.jar;C:\Users\thienvy\.m2\repository\joda-time\joda-time\2.10.14\joda-time-2.10.14.jar;C:\Users\thienvy\.m2\repository\org\springframework\cloud\spring-cloud-starter-stream-kafka\4.2.1\spring-cloud-starter-stream-kafka-4.2.1.jar;C:\Users\thienvy\.m2\repository\org\springframework\cloud\spring-cloud-stream-binder-kafka\4.2.1\spring-cloud-stream-binder-kafka-4.2.1.jar;C:\Users\thienvy\.m2\repository\org\springframework\cloud\spring-cloud-stream-binder-kafka-core\4.2.1\spring-cloud-stream-binder-kafka-core-4.2.1.jar;C:\Users\thienvy\.m2\repository\org\springframework\integration\spring-integration-kafka\6.3.9\spring-integration-kafka-6.3.9.jar;C:\Users\thienvy\.m2\repository\org\springframework\kafka\spring-kafka\3.2.8\spring-kafka-3.2.8.jar;C:\Users\thienvy\.m2\repository\org\apache\kafka\kafka-clients\3.7.2\kafka-clients-3.7.2.jar;C:\Users\thienvy\.m2\repository\com\github\luben\zstd-jni\1.5.6-4\zstd-jni-1.5.6-4.jar;C:\Users\thienvy\.m2\repository\org\lz4\lz4-java\1.8.0\lz4-java-1.8.0.jar;C:\Users\thienvy\.m2\repository\org\xerial\snappy\snappy-java\1.1.10.5\snappy-java-1.1.10.5.jar;C:\Users\thienvy\.m2\repository\org\springframework\boot\spring-boot-starter-oauth2-resource-server\3.3.11\spring-boot-starter-oauth2-resource-server-3.3.11.jar;C:\Users\thienvy\.m2\repository\org\keycloak\keycloak-admin-client\26.0.0\keycloak-admin-client-26.0.0.jar;C:\Users\thienvy\.m2\repository\org\keycloak\keycloak-client-common-synced\26.0.0\keycloak-client-common-synced-26.0.0.jar;C:\Users\thienvy\.m2\repository\org\jboss\logging\commons-logging-jboss-logging\1.0.0.Final\commons-logging-jboss-logging-1.0.0.Final.jar;C:\Users\thienvy\.m2\repository\org\apache\httpcomponents\httpclient\4.5.14\httpclient-4.5.14.jar;C:\Users\thienvy\.m2\repository\org\apache\httpcomponents\httpcore\4.4.16\httpcore-4.4.16.jar;C:\Users\thienvy\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.17.3\jackson-core-2.17.3.jar;C:\Users\thienvy\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.17.3\jackson-annotations-2.17.3.jar;C:\Users\thienvy\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.17.3\jackson-datatype-jdk8-2.17.3.jar;C:\Users\thienvy\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.17.3\jackson-datatype-jsr310-2.17.3.jar;C:\Users\thienvy\.m2\repository\org\eclipse\microprofile\openapi\microprofile-openapi-api\3.1.1\microprofile-openapi-api-3.1.1.jar;C:\Users\thienvy\.m2\repository\org\jboss\resteasy\resteasy-client\6.2.9.Final\resteasy-client-6.2.9.Final.jar;C:\Users\thienvy\.m2\repository\org\jboss\resteasy\resteasy-client-api\6.2.9.Final\resteasy-client-api-6.2.9.Final.jar;C:\Users\thienvy\.m2\repository\org\jboss\resteasy\resteasy-core-spi\6.2.9.Final\resteasy-core-spi-6.2.9.Final.jar;C:\Users\thienvy\.m2\repository\org\jboss\resteasy\resteasy-core\6.2.9.Final\resteasy-core-6.2.9.Final.jar;C:\Users\thienvy\.m2\repository\org\jboss\jandex\2.4.5.Final\jandex-2.4.5.Final.jar;C:\Users\thienvy\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\thienvy\.m2\repository\com\ibm\async\asyncutil\0.1.0\asyncutil-0.1.0.jar;C:\Users\thienvy\.m2\repository\commons-codec\commons-codec\1.16.1\commons-codec-1.16.1.jar;C:\Users\thienvy\.m2\repository\jakarta\ws\rs\jakarta.ws.rs-api\3.1.0\jakarta.ws.rs-api-3.1.0.jar;C:\Users\thienvy\.m2\repository\org\reactivestreams\reactive-streams\1.0.4\reactive-streams-1.0.4.jar;C:\Users\thienvy\.m2\repository\org\jboss\resteasy\resteasy-multipart-provider\6.2.9.Final\resteasy-multipart-provider-6.2.9.Final.jar;C:\Users\thienvy\.m2\repository\jakarta\mail\jakarta.mail-api\2.1.3\jakarta.mail-api-2.1.3.jar;C:\Users\thienvy\.m2\repository\org\eclipse\angus\angus-mail\2.0.3\angus-mail-2.0.3.jar;C:\Users\thienvy\.m2\repository\org\apache\james\apache-mime4j-dom\0.8.11\apache-mime4j-dom-0.8.11.jar;C:\Users\thienvy\.m2\repository\org\apache\james\apache-mime4j-core\0.8.11\apache-mime4j-core-0.8.11.jar;C:\Users\thienvy\.m2\repository\org\apache\james\apache-mime4j-storage\0.8.11\apache-mime4j-storage-0.8.11.jar;C:\Users\thienvy\.m2\repository\commons-io\commons-io\2.11.0\commons-io-2.11.0.jar;C:\Users\thienvy\.m2\repository\org\jboss\resteasy\resteasy-jackson2-provider\6.2.9.Final\resteasy-jackson2-provider-6.2.9.Final.jar;C:\Users\thienvy\.m2\repository\com\fasterxml\jackson\jakarta\rs\jackson-jakarta-rs-base\2.17.3\jackson-jakarta-rs-base-2.17.3.jar;C:\Users\thienvy\.m2\repository\com\fasterxml\jackson\jakarta\rs\jackson-jakarta-rs-json-provider\2.17.3\jackson-jakarta-rs-json-provider-2.17.3.jar;C:\Users\thienvy\.m2\repository\com\fasterxml\jackson\module\jackson-module-jakarta-xmlbind-annotations\2.17.3\jackson-module-jakarta-xmlbind-annotations-2.17.3.jar;C:\Users\thienvy\.m2\repository\com\github\java-json-tools\json-patch\1.13\json-patch-1.13.jar;C:\Users\thienvy\.m2\repository\com\github\java-json-tools\msg-simple\1.2\msg-simple-1.2.jar;C:\Users\thienvy\.m2\repository\com\github\java-json-tools\btf\1.3\btf-1.3.jar;C:\Users\thienvy\.m2\repository\com\github\java-json-tools\jackson-coreutils\2.0\jackson-coreutils-2.0.jar;C:\Users\thienvy\.m2\repository\org\jboss\resteasy\resteasy-jaxb-provider\6.2.9.Final\resteasy-jaxb-provider-6.2.9.Final.jar;C:\Users\thienvy\.m2\repository\org\glassfish\jaxb\codemodel\4.0.5\codemodel-4.0.5.jar;C:\Users\thienvy\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\thienvy\.m2\repository\org\glassfish\jaxb\jaxb-jxc\4.0.5\jaxb-jxc-4.0.5.jar;C:\Users\thienvy\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\thienvy\.m2\repository\org\glassfish\jaxb\jaxb-xjc\4.0.5\jaxb-xjc-4.0.5.jar;C:\Users\thienvy\.m2\repository\org\glassfish\jaxb\xsom\4.0.5\xsom-4.0.5.jar;C:\Users\thienvy\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\thienvy\.m2\repository\com\sun\istack\istack-commons-tools\4.1.2\istack-commons-tools-4.1.2.jar;C:\Users\thienvy\.m2\repository\com\sun\xml\bind\external\relaxng-datatype\4.0.3\relaxng-datatype-4.0.3.jar;C:\Users\thienvy\.m2\repository\com\sun\xml\bind\external\rngom\4.0.3\rngom-4.0.3.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Saigon, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, java.vm.specification.version=17, os.name=Windows 11, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-2), sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-17\bin, sun.java.command=com.example.transaction_service.TransactionServiceApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-2), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@6a90581e, com.sun.management.jmxremote=, jdk.debug=release, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, hibernate.cdi.extensions=true, user.home=C:\Users\thienvy, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2024-04-16, java.home=C:\Program Files\Java\jdk-17, file.separator=\, spring.output.ansi.enabled=always, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.11+7-LTS-207, user.name=Thiên Vỹ, spring.jmx.enabled=true, path.separator=;, management.endpoints.jmx.exposure.include=*, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\thienvy\AppData\Local\Temp\, catalina.home=C:\Users\thienvy\AppData\Local\Temp\tomcat.8088.5546351933587048903, java.version=17.0.11, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Study\java-banking-phase2, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=13712, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\thienvy\AppData\Local\Temp\tomcat.8088.5546351933587048903, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@39c44fba, native.encoding=Cp1258, java.library.path=C:\Program Files\Java\jdk-17\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Java\jdk-17\bin;C:\Program Files (x86)\Microsoft SQL Server\160\Tools\Binn\;C:\Program Files\Microsoft SQL Server\160\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Microsoft SQL Server\160\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\160\DTS\Binn\;C:\Program Files\Git\cmd;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Docker\Docker\resources\bin;C:\ApacheMaven\apache-maven-3.9.9\bin;C:\vault_1.19.2_windows_amd64;C:\Users\thienvy\AppData\Roaming\fnm\node-versions\v22.15.0\installation\node_modules\npm;C:\Users\thienvy\AppData\Roaming\fnm;C:\Users\thienvy\AppData\Local\fnm_multishells\9464_1747193909934;;c:\Users\thienvy\AppData\Local\Programs\cursor\resources\app\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\thienvy\AppData\Local\Microsoft\WindowsApps;C:\Users\thienvy\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\thienvy\AppData\Local\JetBrains\Toolbox\scripts;C:\Users\thienvy\AppData\Local\Microsoft\WinGet\Packages\Schniz.fnm_Microsoft.Winget.Source_8wekyb3d8bbwe;C:\Users\thienvy\AppData\Local\Programs\cursor\resources\app\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, emulated-client, sharing, java.vm.version=17.0.11+7-LTS-207, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-2), java.class.version=61.0, LOGGED_APPLICATION_NAME=[transaction-service] } MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {} MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.example.transaction_service.entity.Transaction] is safe MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@448324fb] under count; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@3cdf4cf4] under every; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@695c8381] under any; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3589d75f] under sinh; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@68f099e9] under cosh; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2e8ec0ef] under tanh; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@23431e34] under pi; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@588b062c] under log; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : length -> character_length MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@3458f305] under position; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@6c09c4d9] under overlay; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@5780d5d2] under trim; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@57ba1368] under cast; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@24890241] under collate; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@6043505] under extract; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@57fb5e52] under ifnull; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@505d3696] under pad; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@3c2aadd6] under str; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@1ba10b4b] under format; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@16a5dfa3] under timestampadd; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@2ff5a267] under timestampdiff; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4658fe52] under current_date; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@55304e81] under current_time; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6dd0db43] under current_timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current date -> current_date MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current time -> current_time MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6fb4ba04] under local_date; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6e1f73ce] under local_time; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@398c7cca] under local_datetime; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@52eda27b] under offset_datetime; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local date -> local_date MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local time -> local_time MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@184346b8] under instant; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current_instant -> instant MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@d57c77d] under sql; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@588b062c MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@57e79031] under lpad; prior registration was NamedSqmFunctionTemplate(lpad) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@68a61ecc] under rpad; prior registration was NamedSqmFunctionTemplate(rpad) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : day -> dayofmonth MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6ad2f3e6] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@3458f305 MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@598dadee] under trunc; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : truncate -> trunc MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3280c8f6] under bitand; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6a08f014] under bitor; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@17387370] under bitxor; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@236e4ea4] under bitnot; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@171de547] under format; prior registration was org.hibernate.dialect.function.FormatFunction@1ba10b4b MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@6e1f73ce MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@398c7cca MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3ab83fe0] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@23431e34 MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6ecf6834] under chr; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : char -> chr MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3f050027] under sysdate; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@47caed5d] under rank; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@3c768d7b] under dense_rank; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@296dcc09] under percent_rank; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@3e7ee53b] under cume_dist; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@2e4e57ac] under listagg; prior registration was null MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - abs(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double acos(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - addtime(TIME datetime, TIME time) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean any(BOOLEAN arg) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer ascii(STRING arg) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double asin(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - avg(arg) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bit_and(arg) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bit_or(arg) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitand(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitnot(arg) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitor(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitxor(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - cast(arg as Type) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - ceiling(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Character char(INTEGER arg) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Character chr(INTEGER arg) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]]) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String collate(STRING string as COLLATION collation) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]]) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double cos(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double cosh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double cot(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Long count([distinct ]{arg|*}) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer crc32(arg) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double cume_dist([arg0[, ...]]) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date curdate() MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date current date MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time current time MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current timestamp MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date current_date MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Instant current_instant MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time current_time MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current_timestamp MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time curtime() MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date date(arg) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer datediff(DATE end, DATE start) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer day(DATE arg) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String dayname(DATE arg) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofmonth(DATE arg) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofweek(DATE arg) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofyear(DATE arg) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double degrees(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Long dense_rank([arg0[, ...]]) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean every(BOOLEAN arg) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double exp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - first_valueANY value MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - floor(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]]) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer hour(TIME arg) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - ifnull(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Instant instant MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]]) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]] MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date last_day(DATE arg) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - last_valueANY value MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]] MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]]) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String left(STRING string, INTEGER length) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double ln(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local date MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local datetime MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local time MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local_date MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local_datetime MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local_time MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtime MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtimestamp MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start]) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1]) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double log10(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double log2(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String lower(STRING string) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String lpad(string, length[, padding]) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters]) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - max(COMPARABLE arg) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String md5(arg) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer microsecond(TIME arg) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - min(COMPARABLE arg) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer minute(TIME arg) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer month(DATE arg) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String monthname(DATE arg) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp now() MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - nth_valueANY value, INTEGER nth MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - nullif(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset datetime MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset_datetime MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length]) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character]) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double percent_rank([arg0[, ...]]) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double pi MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer position(STRING pattern in STRING string) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer quarter(DATE arg) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double radians(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double rand([INTEGER seed]) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Long rank([arg0[, ...]]) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String repeat(STRING string, INTEGER times) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String reverse(STRING arg) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String right(STRING string, INTEGER length) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places]) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Long row_number() MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String rpad(string, length[, padding]) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters]) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer second(TIME arg) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String sha(arg) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String sha1(arg) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String sha2(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer sign(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double sin(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double sinh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String soundex(arg) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String space(INTEGER arg) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Object sql MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double sqrt(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String str(arg) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length]) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length]) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - subtime(TIME datetime, TIME time) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - sum(arg) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp sysdate() MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double tan(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double tanh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String time(arg) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1]) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - trunc( ... ) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - truncate( ... ) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String upper(STRING string) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date utc_date MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time utc_time MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp utc_timestamp MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_pop(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_samp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double variance(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer week(DATE arg) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer year(DATE arg) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.orm.query.plan.cache - Starting QueryInterpretationCache(2048) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.e.i.EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.example.transaction_service.entity.Transaction] is safe MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.example.transaction_service.entity.Transaction]: private accessor [amount] MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.orm.model.mapping.creation - Starting post-init callbacks MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(com.example.transaction_service.entity.Transaction) `staticFetchableList` generator MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction)] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction.type]
 MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select id from tbl_transaction where id=? MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into tbl_transaction (amount,bank_type,currency,description,destination_bank_code,destination_bank_name,failed_reason,from_account_number,reference_code,status,timestamp,to_account_number,type,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update tbl_transaction set amount=?,bank_type=?,currency=?,description=?,destination_bank_code=?,destination_bank_name=?,failed_reason=?,from_account_number=?,reference_code=?,status=?,timestamp=?,to_account_number=?,type=? where id=? MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from tbl_transaction where id=? MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@22f97228] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@7d23adf1] MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named HQL queries MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named SQL queries MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG org.hibernate.mapping.Table - No alter strings for table : tbl_transaction MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.internal.SessionFactoryRegistry - Registering SessionFactory: fcfa1d1d-4df1-48c3-88ce-194f185bdad1 (<unnamed>) MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured MDC:[traceId=, spanId=]
2025-06-12 11:38:15 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Instantiated SessionFactory MDC:[traceId=, spanId=]
2025-06-12 11:38:16 [restartedMain] DEBUG o.h.s.internal.StatisticsInitiator - Statistics initialized [enabled=false] MDC:[traceId=, spanId=]
2025-06-12 11:38:16 [restartedMain] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy5/jdk.proxy5.$Proxy231.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.getCountQuery(JpaQueryLookupStrategy.java:204)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:171)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.example.transaction_service.TransactionServiceApplication.main(TransactionServiceApplication.java:15)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-06-12 11:38:16 [restartedMain] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy5/jdk.proxy5.$Proxy231.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.getCountQuery(JpaQueryLookupStrategy.java:204)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:171)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.example.transaction_service.TransactionServiceApplication.main(TransactionServiceApplication.java:15)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-06-12 11:38:16 [restartedMain] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy5/jdk.proxy5.$Proxy231.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.example.transaction_service.TransactionServiceApplication.main(TransactionServiceApplication.java:15)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-06-12 11:38:16 [restartedMain] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy5/jdk.proxy5.$Proxy231.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.example.transaction_service.TransactionServiceApplication.main(TransactionServiceApplication.java:15)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-06-12 11:38:18 [restartedMain] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-06-12 11:38:18 [restartedMain] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator MDC:[traceId=, spanId=]
2025-06-12 11:38:18 [restartedMain] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory MDC:[traceId=, spanId=]
2025-06-12 11:38:18 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-06-12 11:38:18 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader MDC:[traceId=, spanId=]
2025-06-12 11:38:18 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-06-12 11:38:18 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-06-12 11:38:18 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-06-12 11:38:18 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-06-12 11:38:18 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-06-12 11:38:18 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-06-12 11:38:18 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-06-12 11:38:18 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-06-12 11:38:18 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-06-12 11:38:18 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-06-12 11:38:18 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-06-12 11:38:21 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-12 11:38:21 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-12 11:38:21 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-12 11:38:21 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(8))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-12 11:38:21 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@216b642a MDC:[traceId=, spanId=]
2025-06-12 11:38:21 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(8).status)  MDC:[traceId=, spanId=]
2025-06-12 11:38:21 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2709226e MDC:[traceId=, spanId=]
2025-06-12 11:38:21 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(8).timestamp)  MDC:[traceId=, spanId=]
2025-06-12 11:38:21 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(8)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(8).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(8).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(8).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(8).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(8).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(8).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(8).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(8).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(8).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(8).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(8).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(8).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(8).type]
 MDC:[traceId=, spanId=]
2025-06-12 11:38:21 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(8)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-12 11:38:21 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-12 11:38:21 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(8) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(8))@1835490816 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-12 11:38:21 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-12 11:38:21 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
