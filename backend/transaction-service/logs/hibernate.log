2025-05-29 13:23:25 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final MDC:[traceId=, spanId=]
2025-05-29 13:23:25 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-05-29 13:23:25 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-05-29 13:23:25 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-05-29 13:23:25 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-05-29 13:23:25 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-05-29 13:23:25 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-05-29 13:23:25 [background-preinit] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-05-29 13:23:25 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-05-29 13:23:25 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-05-29 13:23:25 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-05-29 13:23:25 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-05-29 13:23:25 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-05-29 13:23:25 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.h.jpa.internal.util.LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@72939d90
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/LT_Web/SpringBoot/java-banking-phase2/backend/transaction-service/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.example.transaction_service.entity.Transaction]
	Mapping files names []
	Properties [] MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator]. MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator]. MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG org.hibernate.cfg.Environment - HHH000206: 'hibernate.properties' not found MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator] MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator] MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator] MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator] MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned] MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator] MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator] MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator] MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator] MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator] MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.h.c.i.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@411c4ae7 MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@411c4ae7 MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@411c4ae7 MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@6ad55336 MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@6ad55336 MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@426d9056 MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@426d9056 MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@610c44a6 MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@610c44a6 MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@42646112 MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@42646112 MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@42646112 MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@2e8d68b MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@2e8d68b MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@2e8d68b MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@2ca919a0 MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@2ca919a0 MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@2f0351e7 MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@4e8ec9e4 MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@4e8ec9e4 MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@a960230 MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@6e166edb MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@5baf8697 MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@5baf8697 MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@5baf8697 MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@63d6a5ef MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@63d6a5ef MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@63d6a5ef MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@596bbc27 MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@596bbc27 MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@596bbc27 MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@4d67167 MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@4d67167 MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@4d67167 MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@236ad454 MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@236ad454 MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@236ad454 MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@75c5f40b MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@75c5f40b MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@71cbf410 MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@71cbf410 MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@4621fe07 MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@4621fe07 MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@4621fe07 MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@339c4ae3 MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@69a38537 MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@69a38537 MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@47669767 MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@efe984a MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@efe984a MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@efe984a MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@5fe41024 MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@2a1bacd2 MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@5935db59 MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@237334fd MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@237334fd MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@5c697587 MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@5c697587 MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@2be32fe4 MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@5c7bd6d2 MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6695d57c MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@71c75164 MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@4369dcb7 MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@41264f4e MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@9d04c23 MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@9d04c23 MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@4257600c MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@4257600c MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@4f568095 MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@4f568095 MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@3c79fa0e MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@3c79fa0e MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@37c308f6 MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@37c308f6 MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4e6d4902 MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@35443a72 MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@469e1f5e MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@469e1f5e MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@69b52bc3 MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4db44aae MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@59376ec0 MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@6fe5fe57 MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@6fe5fe57 MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2f4e2b5b MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@40c0f526 MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@22e3d290 MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@22e3d290 MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@62b487dd MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@62b487dd MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@3cfe6c23 MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@3cfe6c23 MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@3cfe6c23 MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@7bd0c75f MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@7bd0c75f MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@7bd0c75f MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@479bede7 MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@1d700a6 MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@4e87fbcb MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@4e87fbcb MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@3390277b MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@3390277b MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@3390277b MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@2bfc103b MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@1217f7d2 MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@633f0ff8 MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@633f0ff8 MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@51a6571b MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@51a6571b MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@51a6571b MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@1a10e8dc MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@1a10e8dc MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@3714352b MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@3714352b MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@2ccfbcfe MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@2ccfbcfe MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@4fb238f3 MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@4fb238f3 MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@52f97fd1 MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@52f97fd1 MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@44d2b5c8 MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@152bd9e0 MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@7f24d989 MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@7f24d989 MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@460ccfe1 MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@4f13b597 MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@51c00929 MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@611a5631 MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@4149fe34 MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@13a45487 MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@42fc8e9b MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@7164f32b MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@7f521b6d MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@8565b44] into BootstrapContext; was [null] MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@8565b44) [was null] MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@1f9183c8] into BootstrapContext; was [null] MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@65bce52f] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@25cdd191] MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@8565b44] MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@8565b44] MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Database ->
	   name : MySQL
	version : 8.0.32
	  major : 8
	  minor : 0 MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Driver ->
	   name : MySQL Connector/J
	version : mysql-connector-j-8.3.0 (Revision: 805f872a57875f311cb82487efcfb070411a3fa0)
	  major : 8
	  minor : 3 MDC:[traceId=, spanId=]
2025-05-29 13:23:30 [restartedMain] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - JDBC version : 4.2 MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.orm.dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQL8Dialect, version: 8.0 MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@149108a6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@35e0d223) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3e630442) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@13de1721) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@f16e9c4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3c5443cf) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1ab30113) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@79b77a7b) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@41d7e440) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5f839d8e) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5dbab4f4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1f1c699a) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@61177bdd) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@223be59c) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2a2ef83b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5682045d) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@c1154c3) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@717b47d8) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT)) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT)) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@12425fd7 MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@460ccfe1` MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@79b3d035] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4cb95767] MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.boot.model.relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}] MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Transaction MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity com.example.transaction_service.entity.Transaction on table tbl_transaction MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE') MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.example.transaction_service.entity.Transaction] is safe MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property id with lazy=false MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:id] MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for id MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.id MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property id MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, assigned, , ...) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property amount with lazy=false MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:amount] MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for amount MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.amount MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property amount MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property bankType with lazy=false MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:bankType] MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for bankType MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.bank_type MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property bankType MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property currency with lazy=false MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:currency] MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for currency MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.currency MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property currency MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property description with lazy=false MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:description] MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for description MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.description MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property description MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property destinationBankCode with lazy=false MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:destinationBankCode] MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for destinationBankCode MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.destination_bank_code MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property destinationBankCode MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property failedReason with lazy=false MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:failedReason] MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for failedReason MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.failed_reason MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property failedReason MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property fromAccountNumber with lazy=false MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:fromAccountNumber] MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for fromAccountNumber MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.from_account_number MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property fromAccountNumber MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property referenceCode with lazy=false MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:referenceCode] MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for referenceCode MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.reference_code MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property referenceCode MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property status with lazy=false MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:status] MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for status MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.status MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property status MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property timestamp with lazy=false MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:timestamp] MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for timestamp MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.timestamp MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property timestamp MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property toAccountNumber with lazy=false MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:toAccountNumber] MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for toAccountNumber MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.to_account_number MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property toAccountNumber MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property type with lazy=false MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:type] MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for type MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.type MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property type MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: com.example.transaction_service.entity MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.j.e.i.CallbackDefinitionResolverLegacyImpl - Adding prePersist as PrePersist callback for entity com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bankType MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for currency MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for description MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for destinationBankCode MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for failedReason MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for fromAccountNumber MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for referenceCode MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for timestamp MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for toAccountNumber MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for type MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [tbl_transaction] MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Building session factory MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Instantiating SessionFactory with settings: {jdk.tls.rejectClientInitiatedRenegotiation=true, java.specification.version=17, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@2787ff8f, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=D:\LT_Web\SpringBoot\java-banking-phase2\backend\transaction-service\target\classes;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-actuator\3.3.11\spring-boot-starter-actuator-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter\3.3.11\spring-boot-starter-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.3.11\spring-boot-starter-logging-3.3.11.jar;C:\Users\A715-42G\.m2\repository\ch\qos\logback\logback-classic\1.5.18\logback-classic-1.5.18.jar;C:\Users\A715-42G\.m2\repository\ch\qos\logback\logback-core\1.5.18\logback-core-1.5.18.jar;C:\Users\A715-42G\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.23.1\log4j-to-slf4j-2.23.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\logging\log4j\log4j-api\2.23.1\log4j-api-2.23.1.jar;C:\Users\A715-42G\.m2\repository\org\slf4j\jul-to-slf4j\2.0.17\jul-to-slf4j-2.0.17.jar;C:\Users\A715-42G\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\A715-42G\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-actuator-autoconfigure\3.3.11\spring-boot-actuator-autoconfigure-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-actuator\3.3.11\spring-boot-actuator-3.3.11.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.17.3\jackson-datatype-jsr310-2.17.3.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-observation\1.13.13\micrometer-observation-1.13.13.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-commons\1.13.13\micrometer-commons-1.13.13.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-jakarta9\1.13.13\micrometer-jakarta9-1.13.13.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-core\1.13.13\micrometer-core-1.13.13.jar;C:\Users\A715-42G\.m2\repository\org\hdrhistogram\HdrHistogram\2.2.2\HdrHistogram-2.2.2.jar;C:\Users\A715-42G\.m2\repository\org\latencyutils\LatencyUtils\2.0.3\LatencyUtils-2.0.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.3.11\spring-boot-starter-data-jpa-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.3.11\spring-boot-starter-aop-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-aop\6.1.19\spring-aop-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\aspectj\aspectjweaver\1.9.24\aspectjweaver-1.9.24.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.3.11\spring-boot-starter-jdbc-3.3.11.jar;C:\Users\A715-42G\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-jdbc\6.1.19\spring-jdbc-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\orm\hibernate-core\6.5.3.Final\hibernate-core-6.5.3.Final.jar;C:\Users\A715-42G\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\A715-42G\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\A715-42G\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\A715-42G\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\A715-42G\.m2\repository\net\bytebuddy\byte-buddy\1.14.19\byte-buddy-1.14.19.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\A715-42G\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\A715-42G\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\A715-42G\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-jpa\3.3.11\spring-data-jpa-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-commons\3.3.11\spring-data-commons-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-orm\6.1.19\spring-orm-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-context\6.1.19\spring-context-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-tx\6.1.19\spring-tx-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-beans\6.1.19\spring-beans-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-aspects\6.1.19\spring-aspects-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.3.11\spring-boot-starter-web-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.3.11\spring-boot-starter-json-3.3.11.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.17.3\jackson-datatype-jdk8-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.17.3\jackson-module-parameter-names-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.3.11\spring-boot-starter-tomcat-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.40\tomcat-embed-core-10.1.40.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.40\tomcat-embed-websocket-10.1.40.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-web\6.1.19\spring-web-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-webmvc\6.1.19\spring-webmvc-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-expression\6.1.19\spring-expression-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-devtools\3.3.11\spring-boot-devtools-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot\3.3.11\spring-boot-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.3.11\spring-boot-autoconfigure-3.3.11.jar;C:\Users\A715-42G\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\A715-42G\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-core\6.1.19\spring-core-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-jcl\6.1.19\spring-jcl-6.1.19.jar;C:\Users\A715-42G\.m2\repository\com\mysql\mysql-connector-j\8.3.0\mysql-connector-j-8.3.0.jar;C:\Users\A715-42G\.m2\repository\org\projectlombok\lombok\1.18.38\lombok-1.18.38.jar;C:\Users\A715-42G\.m2\repository\org\mapstruct\mapstruct\1.5.5.Final\mapstruct-1.5.5.Final.jar;C:\Users\A715-42G\.m2\repository\org\mapstruct\mapstruct-processor\1.5.5.Final\mapstruct-processor-1.5.5.Final.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-validation\3.3.11\spring-boot-starter-validation-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.40\tomcat-embed-el-10.1.40.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\validator\hibernate-validator\8.0.2.Final\hibernate-validator-8.0.2.Final.jar;C:\Users\A715-42G\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-ui\2.0.2\springdoc-openapi-starter-webmvc-ui-2.0.2.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-api\2.0.2\springdoc-openapi-starter-webmvc-api-2.0.2.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-common\2.0.2\springdoc-openapi-starter-common-2.0.2.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-core-jakarta\2.2.7\swagger-core-jakarta-2.2.7.jar;C:\Users\A715-42G\.m2\repository\org\apache\commons\commons-lang3\3.14.0\commons-lang3-3.14.0.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-annotations-jakarta\2.2.7\swagger-annotations-jakarta-2.2.7.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-models-jakarta\2.2.7\swagger-models-jakarta-2.2.7.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-yaml\2.17.3\jackson-dataformat-yaml-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\webjars\swagger-ui\4.15.5\swagger-ui-4.15.5.jar;C:\Users\A715-42G\.m2\repository\org\webjars\webjars-locator-core\0.58\webjars-locator-core-0.58.jar;C:\Users\A715-42G\.m2\repository\io\github\classgraph\classgraph\4.8.149\classgraph-4.8.149.jar;D:\LT_Web\SpringBoot\java-banking-phase2\backend\common-service\target\classes;C:\Users\A715-42G\.m2\repository\org\apache\dubbo\dubbo-spring-boot-starter\3.3.2\dubbo-spring-boot-starter-3.3.2.jar;C:\Users\A715-42G\.m2\repository\org\apache\dubbo\dubbo-spring-boot-autoconfigure\3.3.2\dubbo-spring-boot-autoconfigure-3.3.2.jar;C:\Users\A715-42G\.m2\repository\org\apache\dubbo\dubbo-spring-boot-autoconfigure-compatible\3.3.2\dubbo-spring-boot-autoconfigure-compatible-3.3.2.jar;C:\Users\A715-42G\.m2\repository\org\apache\dubbo\dubbo\3.3.2\dubbo-3.3.2.jar;C:\Users\A715-42G\.m2\repository\org\javassist\javassist\3.30.2-GA\javassist-3.30.2-GA.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-all\4.1.119.Final\netty-all-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-dns\4.1.119.Final\netty-codec-dns-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-haproxy\4.1.119.Final\netty-codec-haproxy-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-http\4.1.119.Final\netty-codec-http-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-http2\4.1.119.Final\netty-codec-http2-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-memcache\4.1.119.Final\netty-codec-memcache-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-mqtt\4.1.119.Final\netty-codec-mqtt-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-redis\4.1.119.Final\netty-codec-redis-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-smtp\4.1.119.Final\netty-codec-smtp-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-socks\4.1.119.Final\netty-codec-socks-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-stomp\4.1.119.Final\netty-codec-stomp-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-xml\4.1.119.Final\netty-codec-xml-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-handler-proxy\4.1.119.Final\netty-handler-proxy-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-handler-ssl-ocsp\4.1.119.Final\netty-handler-ssl-ocsp-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-resolver-dns\4.1.119.Final\netty-resolver-dns-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-rxtx\4.1.119.Final\netty-transport-rxtx-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-sctp\4.1.119.Final\netty-transport-sctp-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-udt\4.1.119.Final\netty-transport-udt-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-classes-kqueue\4.1.119.Final\netty-transport-classes-kqueue-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-resolver-dns-classes-macos\4.1.119.Final\netty-resolver-dns-classes-macos-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final-linux-x86_64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final-linux-aarch_64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final-linux-riscv64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-kqueue\4.1.119.Final\netty-transport-native-kqueue-4.1.119.Final-osx-x86_64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-kqueue\4.1.119.Final\netty-transport-native-kqueue-4.1.119.Final-osx-aarch_64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-resolver-dns-native-macos\4.1.119.Final\netty-resolver-dns-native-macos-4.1.119.Final-osx-x86_64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-resolver-dns-native-macos\4.1.119.Final\netty-resolver-dns-native-macos-4.1.119.Final-osx-aarch_64.jar;C:\Users\A715-42G\.m2\repository\org\apache\dubbo\hessian-lite\4.0.3\hessian-lite-4.0.3.jar;C:\Users\A715-42G\.m2\repository\com\alibaba\fastjson2\fastjson2\2.0.53\fastjson2-2.0.53.jar;C:\Users\A715-42G\.m2\repository\com\google\protobuf\protobuf-java\3.25.5\protobuf-java-3.25.5.jar;C:\Users\A715-42G\.m2\repository\org\apache\curator\curator-framework\5.1.0\curator-framework-5.1.0.jar;C:\Users\A715-42G\.m2\repository\org\apache\curator\curator-client\5.1.0\curator-client-5.1.0.jar;C:\Users\A715-42G\.m2\repository\com\google\guava\guava\27.0.1-jre\guava-27.0.1-jre.jar;C:\Users\A715-42G\.m2\repository\com\google\guava\failureaccess\1.0.1\failureaccess-1.0.1.jar;C:\Users\A715-42G\.m2\repository\com\google\guava\listenablefuture\9999.0-empty-to-avoid-conflict-with-guava\listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar;C:\Users\A715-42G\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\A715-42G\.m2\repository\org\checkerframework\checker-qual\2.5.2\checker-qual-2.5.2.jar;C:\Users\A715-42G\.m2\repository\com\google\errorprone\error_prone_annotations\2.2.0\error_prone_annotations-2.2.0.jar;C:\Users\A715-42G\.m2\repository\com\google\j2objc\j2objc-annotations\1.1\j2objc-annotations-1.1.jar;C:\Users\A715-42G\.m2\repository\org\codehaus\mojo\animal-sniffer-annotations\1.17\animal-sniffer-annotations-1.17.jar;C:\Users\A715-42G\.m2\repository\org\apache\zookeeper\zookeeper\3.7.1\zookeeper-3.7.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\zookeeper\zookeeper-jute\3.7.1\zookeeper-jute-3.7.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\yetus\audience-annotations\0.12.0\audience-annotations-0.12.0.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-handler\4.1.119.Final\netty-handler-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-common\4.1.119.Final\netty-common-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-resolver\4.1.119.Final\netty-resolver-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-buffer\4.1.119.Final\netty-buffer-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport\4.1.119.Final\netty-transport-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-unix-common\4.1.119.Final\netty-transport-native-unix-common-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec\4.1.119.Final\netty-codec-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-classes-epoll\4.1.119.Final\netty-transport-classes-epoll-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\org\slf4j\slf4j-api\2.0.17\slf4j-api-2.0.17.jar;C:\Users\A715-42G\.m2\repository\org\apache\curator\curator-recipes\5.5.0\curator-recipes-5.5.0.jar;C:\Users\A715-42G\.m2\repository\org\apache\curator\curator-x-discovery\5.5.0\curator-x-discovery-5.5.0.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.17.3\jackson-databind-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.17.3\jackson-annotations-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.17.3\jackson-core-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-starter-vault-config\4.1.1\spring-cloud-starter-vault-config-4.1.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\httpcomponents\client5\httpclient5\5.3.1\httpclient5-5.3.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\httpcomponents\core5\httpcore5-h2\5.2.5\httpcore5-h2-5.2.5.jar;C:\Users\A715-42G\.m2\repository\org\apache\httpcomponents\core5\httpcore5\5.2.5\httpcore5-5.2.5.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-starter\4.1.2\spring-cloud-starter-4.1.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-context\4.1.2\spring-cloud-context-4.1.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-crypto\6.3.9\spring-security-crypto-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-commons\4.1.2\spring-cloud-commons-4.1.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-rsa\1.1.2\spring-security-rsa-1.1.2.jar;C:\Users\A715-42G\.m2\repository\org\bouncycastle\bcprov-jdk18on\1.77\bcprov-jdk18on-1.77.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-vault-config\4.1.1\spring-cloud-vault-config-4.1.1.jar;C:\Users\A715-42G\.m2\repository\org\springframework\vault\spring-vault-core\3.1.1\spring-vault-core-3.1.1.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-data-redis\3.3.11\spring-boot-starter-data-redis-3.3.11.jar;C:\Users\A715-42G\.m2\repository\io\lettuce\lettuce-core\6.3.2.RELEASE\lettuce-core-6.3.2.RELEASE.jar;C:\Users\A715-42G\.m2\repository\io\projectreactor\reactor-core\3.6.16\reactor-core-3.6.16.jar;C:\Users\A715-42G\.m2\repository\org\reactivestreams\reactive-streams\1.0.4\reactive-streams-1.0.4.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-redis\3.3.11\spring-data-redis-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-keyvalue\3.3.11\spring-data-keyvalue-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-oxm\6.1.19\spring-oxm-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-context-support\6.1.19\spring-context-support-6.1.19.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Saigon, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, java.vm.specification.version=17, os.name=Windows 10, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-17\bin, sun.java.command=com.example.transaction_service.TransactionServiceApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@297879af, com.sun.management.jmxremote=, jdk.debug=release, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, hibernate.cdi.extensions=true, user.home=C:\Users\A715-42G, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-01-17, java.home=C:\Program Files\Java\jdk-17, file.separator=\, spring.output.ansi.enabled=always, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.6+9-LTS-190, user.name=A715-42G, spring.jmx.enabled=true, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\A715-42G\AppData\Local\Temp\, catalina.home=C:\Users\A715-42G\AppData\Local\Temp\tomcat.8088.17481304305211160213, java.version=17.0.6, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=D:\LT_Web\SpringBoot\java-banking-phase2, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=22052, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\A715-42G\AppData\Local\Temp\tomcat.8088.17481304305211160213, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@3cb19385, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-17\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;D:\Document\xxx\apache-maven-3.9.1\bin;C:\Program Files (x86)\Dev-Cpp\MinGW64\bin;C:\Program Files\Git\cmd;C:\Program Files\Java\jdk-17\bin;C:\Program Files\nodejs\;C:\XamPP\php;D:\LT_Web\SpringBoot\SpringBootCLI\spring-3.2.1\bin;D:\sqlite;C:\Program Files\dotnet\;D:\Document\Java\Maven\apache-maven-3.9.9\bin;D:\Document\Java\Maven\apache-maven-3.9.9\bin;C:\Program Files\Cloudflare\Cloudflare WARP\;C:\ProgramData\chocolatey\bin;D:\KienLongBank\Vault;D:\GrafanaLabs\grafana\bin;D:\KienLongBank\InfluxData\influxdb-1.8.10-1;D:\Document\Work\Redis;;C:\Program Files\Docker\Docker\resources\bin;C:\Users\A715-42G\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\A715-42G\AppData\Local\Programs\Python\Python310\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\A715-42G\AppData\Local\Programs\Eclipse Adoptium\jdk-17.0.3.7-hotspot\bin;C:\Users\A715-42G\AppData\Local\Microsoft\WindowsApps;C:\Users\A715-42G\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\Azure Data Studio\bin;C:\Program Files\Git\bin;D:\Document\HQT_ATCSDL\MongoDB\mongosh-1.8.2-win32-x64\bin;C:\Users\A715-42G\AppData\Roaming\npm;C:\XamPP\php;C:\Users\A715-42G\.dotnet\tools;C:\Program Files\Azure Data Studio\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, emulated-client, sharing, java.vm.version=17.0.6+9-LTS-190, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=61.0, LOGGED_APPLICATION_NAME=[transaction-service] } MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {} MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.example.transaction_service.entity.Transaction] is safe MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@33d09914] under count; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@60dfad9d] under every; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@32c9e020] under any; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@66129bc9] under sinh; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4c8c0869] under cosh; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@76315497] under tanh; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@781357a0] under pi; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@a2d57b8] under log; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : length -> character_length MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@74aef7d2] under position; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@7deb173b] under overlay; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@1fc13e64] under trim; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@3ef85040] under cast; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@63e97349] under collate; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@f421662] under extract; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@cdac7f2] under ifnull; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@59b38c3a] under pad; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@782497b7] under str; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@5961fa20] under format; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@232b3743] under timestampadd; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@2f7cc64] under timestampdiff; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@212bb80] under current_date; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3b6a8a7c] under current_time; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4ec0cfce] under current_timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current date -> current_date MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current time -> current_time MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2634f675] under local_date; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@316d8788] under local_time; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5e3bc2b3] under local_datetime; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@16cdd805] under offset_datetime; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local date -> local_date MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local time -> local_time MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@17cb13f7] under instant; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current_instant -> instant MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@7d87f757] under sql; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@a2d57b8 MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@1ef4878b] under lpad; prior registration was NamedSqmFunctionTemplate(lpad) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@75428b3e] under rpad; prior registration was NamedSqmFunctionTemplate(rpad) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : day -> dayofmonth MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@453f970b] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@74aef7d2 MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@671f9d26] under trunc; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : truncate -> trunc MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@22743fcd] under bitand; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@53ba7265] under bitor; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@32f38a4c] under bitxor; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@299ed799] under bitnot; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@2a971f30] under format; prior registration was org.hibernate.dialect.function.FormatFunction@5961fa20 MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@316d8788 MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@5e3bc2b3 MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2a3e695d] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@781357a0 MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@43137bc] under chr; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : char -> chr MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5b4c0abc] under sysdate; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@26bea50d] under listagg; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - abs(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double acos(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - addtime(TIME datetime, TIME time) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean any(BOOLEAN arg) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer ascii(STRING arg) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double asin(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - avg(arg) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bit_and(arg) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bit_or(arg) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitand(arg0, arg1) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitnot(arg) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitor(arg0, arg1) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitxor(arg0, arg1) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - cast(arg as Type) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - ceiling(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Character char(INTEGER arg) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Character chr(INTEGER arg) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]]) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String collate(STRING string as COLLATION collation) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]]) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double cos(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double cosh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double cot(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Long count([distinct ]{arg|*}) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer crc32(arg) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date curdate() MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date current date MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time current time MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current timestamp MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date current_date MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Instant current_instant MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time current_time MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current_timestamp MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time curtime() MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date date(arg) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer datediff(DATE end, DATE start) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer day(DATE arg) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String dayname(DATE arg) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofmonth(DATE arg) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofweek(DATE arg) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofyear(DATE arg) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double degrees(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean every(BOOLEAN arg) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double exp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - floor(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]]) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer hour(TIME arg) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - ifnull(arg0, arg1) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Instant instant MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]]) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date last_day(DATE arg) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]]) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String left(STRING string, INTEGER length) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double ln(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local date MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local datetime MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local time MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local_date MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local_datetime MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local_time MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtime MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtimestamp MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start]) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1]) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double log10(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double log2(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String lower(STRING string) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String lpad(string, length[, padding]) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters]) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - max(COMPARABLE arg) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String md5(arg) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer microsecond(TIME arg) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - min(COMPARABLE arg) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer minute(TIME arg) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer month(DATE arg) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String monthname(DATE arg) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp now() MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - nullif(arg0, arg1) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset datetime MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset_datetime MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length]) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character]) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double pi MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer position(STRING pattern in STRING string) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer quarter(DATE arg) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double radians(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double rand([INTEGER seed]) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String repeat(STRING string, INTEGER times) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String reverse(STRING arg) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String right(STRING string, INTEGER length) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places]) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String rpad(string, length[, padding]) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters]) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer second(TIME arg) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String sha(arg) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String sha1(arg) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String sha2(arg0, arg1) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer sign(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double sin(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double sinh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String soundex(arg) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String space(INTEGER arg) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Object sql MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double sqrt(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String str(arg) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length]) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length]) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - subtime(TIME datetime, TIME time) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - sum(arg) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp sysdate() MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double tan(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double tanh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String time(arg) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1]) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - trunc( ... ) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - truncate( ... ) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String upper(STRING string) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date utc_date MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time utc_time MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp utc_timestamp MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_pop(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_samp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double variance(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer week(DATE arg) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer year(DATE arg) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.orm.query.plan.cache - Starting QueryInterpretationCache(2048) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.e.i.EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.example.transaction_service.entity.Transaction] is safe MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.example.transaction_service.entity.Transaction]: private accessor [amount] MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.orm.model.mapping.creation - Starting post-init callbacks MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(com.example.transaction_service.entity.Transaction) `staticFetchableList` generator MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction)] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction.type]
 MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select id from tbl_transaction where id=? MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into tbl_transaction (amount,bank_type,currency,description,destination_bank_code,failed_reason,from_account_number,reference_code,status,timestamp,to_account_number,type,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?) MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update tbl_transaction set amount=?,bank_type=?,currency=?,description=?,destination_bank_code=?,failed_reason=?,from_account_number=?,reference_code=?,status=?,timestamp=?,to_account_number=?,type=? where id=? MDC:[traceId=, spanId=]
2025-05-29 13:23:31 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from tbl_transaction where id=? MDC:[traceId=, spanId=]
2025-05-29 13:23:32 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration) MDC:[traceId=, spanId=]
2025-05-29 13:23:32 [restartedMain] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@79b3d035] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@57838ad7] MDC:[traceId=, spanId=]
2025-05-29 13:23:32 [restartedMain] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named HQL queries MDC:[traceId=, spanId=]
2025-05-29 13:23:32 [restartedMain] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named SQL queries MDC:[traceId=, spanId=]
2025-05-29 13:23:32 [restartedMain] DEBUG org.hibernate.mapping.Table - No alter strings for table : tbl_transaction MDC:[traceId=, spanId=]
2025-05-29 13:23:32 [restartedMain] DEBUG o.h.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1d5ff9cb MDC:[traceId=, spanId=]
2025-05-29 13:23:32 [restartedMain] DEBUG o.h.internal.SessionFactoryRegistry - Registering SessionFactory: c90d0f74-2296-42e2-8104-fb62e5052b11 (<unnamed>) MDC:[traceId=, spanId=]
2025-05-29 13:23:32 [restartedMain] DEBUG o.h.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured MDC:[traceId=, spanId=]
2025-05-29 13:23:32 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Instantiated SessionFactory MDC:[traceId=, spanId=]
2025-05-29 13:23:32 [restartedMain] DEBUG o.h.s.internal.StatisticsInitiator - Statistics initialized [enabled=false] MDC:[traceId=, spanId=]
2025-05-29 13:23:32 [restartedMain] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy4/jdk.proxy4.$Proxy191.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.example.transaction_service.TransactionServiceApplication.main(TransactionServiceApplication.java:14)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-05-29 13:23:32 [restartedMain] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy4/jdk.proxy4.$Proxy191.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.example.transaction_service.TransactionServiceApplication.main(TransactionServiceApplication.java:14)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-05-29 13:23:32 [restartedMain] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy4/jdk.proxy4.$Proxy191.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.getCountQuery(JpaQueryLookupStrategy.java:204)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:171)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.example.transaction_service.TransactionServiceApplication.main(TransactionServiceApplication.java:14)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-05-29 13:23:33 [restartedMain] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-05-29 13:23:33 [restartedMain] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator MDC:[traceId=, spanId=]
2025-05-29 13:23:33 [restartedMain] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory MDC:[traceId=, spanId=]
2025-05-29 13:23:33 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-05-29 13:23:33 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader MDC:[traceId=, spanId=]
2025-05-29 13:23:33 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-05-29 13:23:33 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-05-29 13:23:33 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-05-29 13:23:33 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-05-29 13:23:33 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-05-29 13:23:33 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-05-29 13:23:33 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-05-29 13:23:33 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-05-29 13:23:33 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-05-29 13:23:33 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-05-29 13:23:33 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-05-29 13:23:35 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-05-29 13:23:35 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-05-29 13:23:35 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-05-29 13:23:35 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-05-29 13:23:35 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7510862 MDC:[traceId=, spanId=]
2025-05-29 13:23:35 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-05-29 13:23:35 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7acbfc59 MDC:[traceId=, spanId=]
2025-05-29 13:23:35 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-05-29 13:23:35 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 MDC:[traceId=, spanId=]
2025-05-29 13:23:35 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-05-29 13:23:35 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-05-29 13:23:35 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@296164215 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-05-29 13:23:35 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-05-29 13:23:35 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-05-29 13:24:35 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-05-29 13:24:35 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-05-29 13:24:35 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-05-29 13:24:35 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-05-29 13:24:35 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@318a31d6 MDC:[traceId=, spanId=]
2025-05-29 13:24:35 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-05-29 13:24:35 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@246966e9 MDC:[traceId=, spanId=]
2025-05-29 13:24:35 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-05-29 13:24:35 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 MDC:[traceId=, spanId=]
2025-05-29 13:24:35 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-05-29 13:24:35 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-05-29 13:24:35 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@222330208 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-05-29 13:24:35 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-05-29 13:24:35 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-05-29 13:25:35 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-05-29 13:25:35 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-05-29 13:25:35 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-05-29 13:25:35 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-05-29 13:25:35 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6fd3106c MDC:[traceId=, spanId=]
2025-05-29 13:25:35 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-05-29 13:25:35 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3f8c9cac MDC:[traceId=, spanId=]
2025-05-29 13:25:35 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-05-29 13:25:35 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 MDC:[traceId=, spanId=]
2025-05-29 13:25:35 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-05-29 13:25:35 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-05-29 13:25:35 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@1551126669 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-05-29 13:25:35 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-05-29 13:25:35 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-05-29 13:26:35 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-05-29 13:26:35 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-05-29 13:26:35 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-05-29 13:26:35 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-05-29 13:26:35 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@580c93a3 MDC:[traceId=, spanId=]
2025-05-29 13:26:35 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-05-29 13:26:35 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@696a769b MDC:[traceId=, spanId=]
2025-05-29 13:26:35 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-05-29 13:26:35 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 MDC:[traceId=, spanId=]
2025-05-29 13:26:35 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-05-29 13:26:35 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-05-29 13:26:35 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@716784274 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-05-29 13:26:35 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-05-29 13:26:35 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-05-29 13:27:02 [SpringContextShutdownHook] DEBUG o.h.internal.SessionFactoryImpl - HHH000031: Closing MDC:[traceId=, spanId=]
2025-05-29 13:27:02 [SpringContextShutdownHook] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@3e910bee] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@57838ad7] MDC:[traceId=, spanId=]
2025-05-29 13:27:02 [SpringContextShutdownHook] DEBUG o.h.s.i.AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries MDC:[traceId=, spanId=]
2025-05-29 13:27:02 [SpringContextShutdownHook] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries MDC:[traceId=, spanId=]
2025-05-29 13:27:35 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final MDC:[traceId=, spanId=]
2025-05-29 13:27:35 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-05-29 13:27:35 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-05-29 13:27:35 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-05-29 13:27:35 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-05-29 13:27:35 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-05-29 13:27:35 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-05-29 13:27:35 [background-preinit] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-05-29 13:27:35 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-05-29 13:27:35 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-05-29 13:27:35 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-05-29 13:27:35 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-05-29 13:27:35 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-05-29 13:27:35 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-05-29 13:27:39 [restartedMain] DEBUG o.h.jpa.internal.util.LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@6c39e930
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/LT_Web/SpringBoot/java-banking-phase2/backend/transaction-service/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.example.transaction_service.entity.Transaction]
	Mapping files names []
	Properties [] MDC:[traceId=, spanId=]
2025-05-29 13:27:39 [restartedMain] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator]. MDC:[traceId=, spanId=]
2025-05-29 13:27:39 [restartedMain] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator]. MDC:[traceId=, spanId=]
2025-05-29 13:27:39 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final MDC:[traceId=, spanId=]
2025-05-29 13:27:39 [restartedMain] DEBUG org.hibernate.cfg.Environment - HHH000206: 'hibernate.properties' not found MDC:[traceId=, spanId=]
2025-05-29 13:27:39 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator] MDC:[traceId=, spanId=]
2025-05-29 13:27:39 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator] MDC:[traceId=, spanId=]
2025-05-29 13:27:39 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator] MDC:[traceId=, spanId=]
2025-05-29 13:27:39 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator] MDC:[traceId=, spanId=]
2025-05-29 13:27:39 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned] MDC:[traceId=, spanId=]
2025-05-29 13:27:39 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator] MDC:[traceId=, spanId=]
2025-05-29 13:27:39 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator] MDC:[traceId=, spanId=]
2025-05-29 13:27:39 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] MDC:[traceId=, spanId=]
2025-05-29 13:27:39 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator] MDC:[traceId=, spanId=]
2025-05-29 13:27:39 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator] MDC:[traceId=, spanId=]
2025-05-29 13:27:39 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] MDC:[traceId=, spanId=]
2025-05-29 13:27:39 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator] MDC:[traceId=, spanId=]
2025-05-29 13:27:39 [restartedMain] DEBUG o.h.c.i.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered MDC:[traceId=, spanId=]
2025-05-29 13:27:39 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@6683fb08 MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@6683fb08 MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@6683fb08 MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@36be055a MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@36be055a MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@8bf8e18 MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@8bf8e18 MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@6068b809 MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@6068b809 MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@19ca44b7 MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@19ca44b7 MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@19ca44b7 MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@5f180601 MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@5f180601 MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@5f180601 MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@2b238cb4 MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@2b238cb4 MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@e2ec129 MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@458ad3a7 MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@458ad3a7 MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@5a3dfd19 MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@6dcc8cc6 MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@15932fdf MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@15932fdf MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@15932fdf MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@697d121 MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@697d121 MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@697d121 MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@337731df MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@337731df MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@337731df MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@3ad421cb MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@3ad421cb MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@3ad421cb MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@36b51c99 MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@36b51c99 MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@36b51c99 MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@e13cdb7 MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@e13cdb7 MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@460fc63 MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@460fc63 MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@1f214f5d MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@1f214f5d MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@1f214f5d MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@16ec9f4 MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@1180c21b MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@1180c21b MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@1280b7ac MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@7ce4906 MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@7ce4906 MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@7ce4906 MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@70980162 MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@679f8570 MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@70b573f8 MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@5469291 MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@5469291 MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@3565004a MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@3565004a MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@2ecab793 MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@75bb2b01 MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@44d8ed3d MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@59a2c2bc MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@22af8034 MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@ee05443 MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@d52e1a7 MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@d52e1a7 MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@422a7593 MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@422a7593 MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@1c5ae3c2 MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@1c5ae3c2 MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@1014ee46 MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@1014ee46 MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@ad16a3a MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@ad16a3a MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1bc6101e MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5049a457 MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@679806c6 MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@679806c6 MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@661930b5 MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4d749a88 MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5082e46d MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@778b668d MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@778b668d MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@58b86c51 MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@31f10d14 MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@769726cb MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@769726cb MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@5a04899a MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@5a04899a MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@41c5ac6f MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@41c5ac6f MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@41c5ac6f MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@78e580ee MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@78e580ee MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@78e580ee MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@370b5047 MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@49bd4765 MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@25f72ce9 MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@25f72ce9 MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@71413a49 MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@71413a49 MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@71413a49 MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@1ca5d54e MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@3f003fd0 MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@230cccbd MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@230cccbd MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@5be739e7 MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@5be739e7 MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@5be739e7 MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@69da8870 MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@69da8870 MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@571ad424 MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@571ad424 MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@12b6835e MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@12b6835e MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@707ca8ee MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@707ca8ee MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@4dd82799 MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@4dd82799 MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@4c6271f2 MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@6a68b753 MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@35d9752f MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@35d9752f MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@12ddbfe7 MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@1b42461 MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@409ffe55 MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@5b027dec MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@24dfc3ec MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@4687c3a MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@3b3a47b4 MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@731fb022 MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@2905cd0e MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@5465cc5a] into BootstrapContext; was [null] MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@5465cc5a) [was null] MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@1ade00fb] into BootstrapContext; was [null] MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@5e38ab93] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@3f8cbfe5] MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@5465cc5a] MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@5465cc5a] MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Database ->
	   name : MySQL
	version : 8.0.32
	  major : 8
	  minor : 0 MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Driver ->
	   name : MySQL Connector/J
	version : mysql-connector-j-8.3.0 (Revision: 805f872a57875f311cb82487efcfb070411a3fa0)
	  major : 8
	  minor : 3 MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - JDBC version : 4.2 MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default) MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG org.hibernate.orm.dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQL8Dialect, version: 8.0 MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@19143b7e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3959ed4e) MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6c875797) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1d4338ff) MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@25342fe2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@53718597) MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@51c5b81) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@11c1f1d) MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5d37be3) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5a511bf3) MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3d76936b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5cf3872f) MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4261e331) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@10bdf60d) MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@19d9c2ba) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@59d3f451) MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1466fc31) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6b146d2e) MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor) MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor) MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor) MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT)) MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT)) MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@531ffee8 MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@12ddbfe7` MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@b646432] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@b8af86] MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.boot.model.relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}] MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Transaction MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity com.example.transaction_service.entity.Transaction on table tbl_transaction MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE') MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.example.transaction_service.entity.Transaction] is safe MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property id with lazy=false MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:id] MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for id MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.id MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property id MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, assigned, , ...) MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property amount with lazy=false MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:amount] MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for amount MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.amount MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property amount MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property bankType with lazy=false MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:bankType] MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for bankType MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.bank_type MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property bankType MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property currency with lazy=false MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:currency] MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for currency MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.currency MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property currency MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property description with lazy=false MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:description] MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for description MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.description MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property description MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property destinationBankCode with lazy=false MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:destinationBankCode] MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for destinationBankCode MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.destination_bank_code MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property destinationBankCode MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property failedReason with lazy=false MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:failedReason] MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for failedReason MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.failed_reason MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property failedReason MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property fromAccountNumber with lazy=false MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:fromAccountNumber] MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for fromAccountNumber MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.from_account_number MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property fromAccountNumber MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property referenceCode with lazy=false MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:referenceCode] MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for referenceCode MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.reference_code MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property referenceCode MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property status with lazy=false MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:status] MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for status MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.status MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property status MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property timestamp with lazy=false MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:timestamp] MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for timestamp MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.timestamp MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property timestamp MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property toAccountNumber with lazy=false MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:toAccountNumber] MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for toAccountNumber MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.to_account_number MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property toAccountNumber MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property type with lazy=false MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:type] MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for type MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.type MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property type MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: com.example.transaction_service.entity MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.j.e.i.CallbackDefinitionResolverLegacyImpl - Adding prePersist as PrePersist callback for entity com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bankType MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for currency MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for description MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for destinationBankCode MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for failedReason MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for fromAccountNumber MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for referenceCode MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for timestamp MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for toAccountNumber MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for type MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [tbl_transaction] MDC:[traceId=, spanId=]
2025-05-29 13:27:40 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Building session factory MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Instantiating SessionFactory with settings: {jdk.tls.rejectClientInitiatedRenegotiation=true, java.specification.version=17, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@36ea157e, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=D:\LT_Web\SpringBoot\java-banking-phase2\backend\transaction-service\target\classes;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-actuator\3.3.11\spring-boot-starter-actuator-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter\3.3.11\spring-boot-starter-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.3.11\spring-boot-starter-logging-3.3.11.jar;C:\Users\A715-42G\.m2\repository\ch\qos\logback\logback-classic\1.5.18\logback-classic-1.5.18.jar;C:\Users\A715-42G\.m2\repository\ch\qos\logback\logback-core\1.5.18\logback-core-1.5.18.jar;C:\Users\A715-42G\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.23.1\log4j-to-slf4j-2.23.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\logging\log4j\log4j-api\2.23.1\log4j-api-2.23.1.jar;C:\Users\A715-42G\.m2\repository\org\slf4j\jul-to-slf4j\2.0.17\jul-to-slf4j-2.0.17.jar;C:\Users\A715-42G\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\A715-42G\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-actuator-autoconfigure\3.3.11\spring-boot-actuator-autoconfigure-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-actuator\3.3.11\spring-boot-actuator-3.3.11.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.17.3\jackson-datatype-jsr310-2.17.3.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-observation\1.13.13\micrometer-observation-1.13.13.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-commons\1.13.13\micrometer-commons-1.13.13.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-jakarta9\1.13.13\micrometer-jakarta9-1.13.13.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-core\1.13.13\micrometer-core-1.13.13.jar;C:\Users\A715-42G\.m2\repository\org\hdrhistogram\HdrHistogram\2.2.2\HdrHistogram-2.2.2.jar;C:\Users\A715-42G\.m2\repository\org\latencyutils\LatencyUtils\2.0.3\LatencyUtils-2.0.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.3.11\spring-boot-starter-data-jpa-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.3.11\spring-boot-starter-aop-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-aop\6.1.19\spring-aop-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\aspectj\aspectjweaver\1.9.24\aspectjweaver-1.9.24.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.3.11\spring-boot-starter-jdbc-3.3.11.jar;C:\Users\A715-42G\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-jdbc\6.1.19\spring-jdbc-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\orm\hibernate-core\6.5.3.Final\hibernate-core-6.5.3.Final.jar;C:\Users\A715-42G\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\A715-42G\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\A715-42G\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\A715-42G\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\A715-42G\.m2\repository\net\bytebuddy\byte-buddy\1.14.19\byte-buddy-1.14.19.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\A715-42G\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\A715-42G\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\A715-42G\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-jpa\3.3.11\spring-data-jpa-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-commons\3.3.11\spring-data-commons-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-orm\6.1.19\spring-orm-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-context\6.1.19\spring-context-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-tx\6.1.19\spring-tx-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-beans\6.1.19\spring-beans-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-aspects\6.1.19\spring-aspects-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.3.11\spring-boot-starter-web-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.3.11\spring-boot-starter-json-3.3.11.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.17.3\jackson-datatype-jdk8-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.17.3\jackson-module-parameter-names-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.3.11\spring-boot-starter-tomcat-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.40\tomcat-embed-core-10.1.40.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.40\tomcat-embed-websocket-10.1.40.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-web\6.1.19\spring-web-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-webmvc\6.1.19\spring-webmvc-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-expression\6.1.19\spring-expression-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-devtools\3.3.11\spring-boot-devtools-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot\3.3.11\spring-boot-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.3.11\spring-boot-autoconfigure-3.3.11.jar;C:\Users\A715-42G\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\A715-42G\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-core\6.1.19\spring-core-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-jcl\6.1.19\spring-jcl-6.1.19.jar;C:\Users\A715-42G\.m2\repository\com\mysql\mysql-connector-j\8.3.0\mysql-connector-j-8.3.0.jar;C:\Users\A715-42G\.m2\repository\org\projectlombok\lombok\1.18.38\lombok-1.18.38.jar;C:\Users\A715-42G\.m2\repository\org\mapstruct\mapstruct\1.5.5.Final\mapstruct-1.5.5.Final.jar;C:\Users\A715-42G\.m2\repository\org\mapstruct\mapstruct-processor\1.5.5.Final\mapstruct-processor-1.5.5.Final.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-validation\3.3.11\spring-boot-starter-validation-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.40\tomcat-embed-el-10.1.40.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\validator\hibernate-validator\8.0.2.Final\hibernate-validator-8.0.2.Final.jar;C:\Users\A715-42G\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-ui\2.0.2\springdoc-openapi-starter-webmvc-ui-2.0.2.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-api\2.0.2\springdoc-openapi-starter-webmvc-api-2.0.2.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-common\2.0.2\springdoc-openapi-starter-common-2.0.2.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-core-jakarta\2.2.7\swagger-core-jakarta-2.2.7.jar;C:\Users\A715-42G\.m2\repository\org\apache\commons\commons-lang3\3.14.0\commons-lang3-3.14.0.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-annotations-jakarta\2.2.7\swagger-annotations-jakarta-2.2.7.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-models-jakarta\2.2.7\swagger-models-jakarta-2.2.7.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-yaml\2.17.3\jackson-dataformat-yaml-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\webjars\swagger-ui\4.15.5\swagger-ui-4.15.5.jar;C:\Users\A715-42G\.m2\repository\org\webjars\webjars-locator-core\0.58\webjars-locator-core-0.58.jar;C:\Users\A715-42G\.m2\repository\io\github\classgraph\classgraph\4.8.149\classgraph-4.8.149.jar;D:\LT_Web\SpringBoot\java-banking-phase2\backend\common-service\target\classes;C:\Users\A715-42G\.m2\repository\org\apache\dubbo\dubbo-spring-boot-starter\3.3.2\dubbo-spring-boot-starter-3.3.2.jar;C:\Users\A715-42G\.m2\repository\org\apache\dubbo\dubbo-spring-boot-autoconfigure\3.3.2\dubbo-spring-boot-autoconfigure-3.3.2.jar;C:\Users\A715-42G\.m2\repository\org\apache\dubbo\dubbo-spring-boot-autoconfigure-compatible\3.3.2\dubbo-spring-boot-autoconfigure-compatible-3.3.2.jar;C:\Users\A715-42G\.m2\repository\org\apache\dubbo\dubbo\3.3.2\dubbo-3.3.2.jar;C:\Users\A715-42G\.m2\repository\org\javassist\javassist\3.30.2-GA\javassist-3.30.2-GA.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-all\4.1.119.Final\netty-all-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-dns\4.1.119.Final\netty-codec-dns-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-haproxy\4.1.119.Final\netty-codec-haproxy-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-http\4.1.119.Final\netty-codec-http-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-http2\4.1.119.Final\netty-codec-http2-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-memcache\4.1.119.Final\netty-codec-memcache-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-mqtt\4.1.119.Final\netty-codec-mqtt-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-redis\4.1.119.Final\netty-codec-redis-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-smtp\4.1.119.Final\netty-codec-smtp-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-socks\4.1.119.Final\netty-codec-socks-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-stomp\4.1.119.Final\netty-codec-stomp-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-xml\4.1.119.Final\netty-codec-xml-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-handler-proxy\4.1.119.Final\netty-handler-proxy-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-handler-ssl-ocsp\4.1.119.Final\netty-handler-ssl-ocsp-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-resolver-dns\4.1.119.Final\netty-resolver-dns-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-rxtx\4.1.119.Final\netty-transport-rxtx-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-sctp\4.1.119.Final\netty-transport-sctp-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-udt\4.1.119.Final\netty-transport-udt-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-classes-kqueue\4.1.119.Final\netty-transport-classes-kqueue-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-resolver-dns-classes-macos\4.1.119.Final\netty-resolver-dns-classes-macos-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final-linux-x86_64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final-linux-aarch_64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final-linux-riscv64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-kqueue\4.1.119.Final\netty-transport-native-kqueue-4.1.119.Final-osx-x86_64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-kqueue\4.1.119.Final\netty-transport-native-kqueue-4.1.119.Final-osx-aarch_64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-resolver-dns-native-macos\4.1.119.Final\netty-resolver-dns-native-macos-4.1.119.Final-osx-x86_64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-resolver-dns-native-macos\4.1.119.Final\netty-resolver-dns-native-macos-4.1.119.Final-osx-aarch_64.jar;C:\Users\A715-42G\.m2\repository\org\apache\dubbo\hessian-lite\4.0.3\hessian-lite-4.0.3.jar;C:\Users\A715-42G\.m2\repository\com\alibaba\fastjson2\fastjson2\2.0.53\fastjson2-2.0.53.jar;C:\Users\A715-42G\.m2\repository\com\google\protobuf\protobuf-java\3.25.5\protobuf-java-3.25.5.jar;C:\Users\A715-42G\.m2\repository\org\apache\curator\curator-framework\5.1.0\curator-framework-5.1.0.jar;C:\Users\A715-42G\.m2\repository\org\apache\curator\curator-client\5.1.0\curator-client-5.1.0.jar;C:\Users\A715-42G\.m2\repository\com\google\guava\guava\27.0.1-jre\guava-27.0.1-jre.jar;C:\Users\A715-42G\.m2\repository\com\google\guava\failureaccess\1.0.1\failureaccess-1.0.1.jar;C:\Users\A715-42G\.m2\repository\com\google\guava\listenablefuture\9999.0-empty-to-avoid-conflict-with-guava\listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar;C:\Users\A715-42G\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\A715-42G\.m2\repository\org\checkerframework\checker-qual\2.5.2\checker-qual-2.5.2.jar;C:\Users\A715-42G\.m2\repository\com\google\errorprone\error_prone_annotations\2.2.0\error_prone_annotations-2.2.0.jar;C:\Users\A715-42G\.m2\repository\com\google\j2objc\j2objc-annotations\1.1\j2objc-annotations-1.1.jar;C:\Users\A715-42G\.m2\repository\org\codehaus\mojo\animal-sniffer-annotations\1.17\animal-sniffer-annotations-1.17.jar;C:\Users\A715-42G\.m2\repository\org\apache\zookeeper\zookeeper\3.7.1\zookeeper-3.7.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\zookeeper\zookeeper-jute\3.7.1\zookeeper-jute-3.7.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\yetus\audience-annotations\0.12.0\audience-annotations-0.12.0.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-handler\4.1.119.Final\netty-handler-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-common\4.1.119.Final\netty-common-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-resolver\4.1.119.Final\netty-resolver-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-buffer\4.1.119.Final\netty-buffer-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport\4.1.119.Final\netty-transport-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-unix-common\4.1.119.Final\netty-transport-native-unix-common-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec\4.1.119.Final\netty-codec-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-classes-epoll\4.1.119.Final\netty-transport-classes-epoll-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\org\slf4j\slf4j-api\2.0.17\slf4j-api-2.0.17.jar;C:\Users\A715-42G\.m2\repository\org\apache\curator\curator-recipes\5.5.0\curator-recipes-5.5.0.jar;C:\Users\A715-42G\.m2\repository\org\apache\curator\curator-x-discovery\5.5.0\curator-x-discovery-5.5.0.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.17.3\jackson-databind-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.17.3\jackson-annotations-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.17.3\jackson-core-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-starter-vault-config\4.1.1\spring-cloud-starter-vault-config-4.1.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\httpcomponents\client5\httpclient5\5.3.1\httpclient5-5.3.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\httpcomponents\core5\httpcore5-h2\5.2.5\httpcore5-h2-5.2.5.jar;C:\Users\A715-42G\.m2\repository\org\apache\httpcomponents\core5\httpcore5\5.2.5\httpcore5-5.2.5.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-starter\4.1.2\spring-cloud-starter-4.1.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-context\4.1.2\spring-cloud-context-4.1.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-crypto\6.3.9\spring-security-crypto-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-commons\4.1.2\spring-cloud-commons-4.1.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-rsa\1.1.2\spring-security-rsa-1.1.2.jar;C:\Users\A715-42G\.m2\repository\org\bouncycastle\bcprov-jdk18on\1.77\bcprov-jdk18on-1.77.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-vault-config\4.1.1\spring-cloud-vault-config-4.1.1.jar;C:\Users\A715-42G\.m2\repository\org\springframework\vault\spring-vault-core\3.1.1\spring-vault-core-3.1.1.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-data-redis\3.3.11\spring-boot-starter-data-redis-3.3.11.jar;C:\Users\A715-42G\.m2\repository\io\lettuce\lettuce-core\6.3.2.RELEASE\lettuce-core-6.3.2.RELEASE.jar;C:\Users\A715-42G\.m2\repository\io\projectreactor\reactor-core\3.6.16\reactor-core-3.6.16.jar;C:\Users\A715-42G\.m2\repository\org\reactivestreams\reactive-streams\1.0.4\reactive-streams-1.0.4.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-redis\3.3.11\spring-data-redis-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-keyvalue\3.3.11\spring-data-keyvalue-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-oxm\6.1.19\spring-oxm-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-context-support\6.1.19\spring-context-support-6.1.19.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Saigon, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, java.vm.specification.version=17, os.name=Windows 10, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-17\bin, sun.java.command=com.example.transaction_service.TransactionServiceApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@40b976c3, com.sun.management.jmxremote=, jdk.debug=release, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, hibernate.cdi.extensions=true, user.home=C:\Users\A715-42G, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-01-17, java.home=C:\Program Files\Java\jdk-17, file.separator=\, spring.output.ansi.enabled=always, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.6+9-LTS-190, user.name=A715-42G, spring.jmx.enabled=true, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\A715-42G\AppData\Local\Temp\, catalina.home=C:\Users\A715-42G\AppData\Local\Temp\tomcat.8088.9774965105409115990, java.version=17.0.6, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=D:\LT_Web\SpringBoot\java-banking-phase2, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=22828, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\A715-42G\AppData\Local\Temp\tomcat.8088.9774965105409115990, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@78be0195, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-17\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;D:\Document\xxx\apache-maven-3.9.1\bin;C:\Program Files (x86)\Dev-Cpp\MinGW64\bin;C:\Program Files\Git\cmd;C:\Program Files\Java\jdk-17\bin;C:\Program Files\nodejs\;C:\XamPP\php;D:\LT_Web\SpringBoot\SpringBootCLI\spring-3.2.1\bin;D:\sqlite;C:\Program Files\dotnet\;D:\Document\Java\Maven\apache-maven-3.9.9\bin;D:\Document\Java\Maven\apache-maven-3.9.9\bin;C:\Program Files\Cloudflare\Cloudflare WARP\;C:\ProgramData\chocolatey\bin;D:\KienLongBank\Vault;D:\GrafanaLabs\grafana\bin;D:\KienLongBank\InfluxData\influxdb-1.8.10-1;D:\Document\Work\Redis;;C:\Program Files\Docker\Docker\resources\bin;C:\Users\A715-42G\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\A715-42G\AppData\Local\Programs\Python\Python310\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\A715-42G\AppData\Local\Programs\Eclipse Adoptium\jdk-17.0.3.7-hotspot\bin;C:\Users\A715-42G\AppData\Local\Microsoft\WindowsApps;C:\Users\A715-42G\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\Azure Data Studio\bin;C:\Program Files\Git\bin;D:\Document\HQT_ATCSDL\MongoDB\mongosh-1.8.2-win32-x64\bin;C:\Users\A715-42G\AppData\Roaming\npm;C:\XamPP\php;C:\Users\A715-42G\.dotnet\tools;C:\Program Files\Azure Data Studio\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, emulated-client, sharing, java.vm.version=17.0.6+9-LTS-190, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=61.0, LOGGED_APPLICATION_NAME=[transaction-service] } MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {} MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.example.transaction_service.entity.Transaction] is safe MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@41f25ea8] under count; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@35b437f3] under every; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@14e3c88c] under any; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@55b4983c] under sinh; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@740af1a9] under cosh; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6d91efe9] under tanh; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@55619d85] under pi; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@24e59a6d] under log; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : length -> character_length MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@2e593ace] under position; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@7b164747] under overlay; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@7ab9e74d] under trim; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@4bef4aa0] under cast; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2fe9e8fc] under collate; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@401c014e] under extract; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@45341194] under ifnull; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@410197d8] under pad; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@39e2b925] under str; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@1c956f6] under format; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@667ed97b] under timestampadd; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@15aad18f] under timestampdiff; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@547891df] under current_date; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6e25f813] under current_time; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1c70f034] under current_timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current date -> current_date MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current time -> current_time MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6372c26c] under local_date; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@731441b4] under local_time; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@32b0caa5] under local_datetime; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@29da6d97] under offset_datetime; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local date -> local_date MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local time -> local_time MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5ccebb62] under instant; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current_instant -> instant MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@6a278c9b] under sql; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@24e59a6d MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@1ab82f2b] under lpad; prior registration was NamedSqmFunctionTemplate(lpad) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@14bf0787] under rpad; prior registration was NamedSqmFunctionTemplate(rpad) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : day -> dayofmonth MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2ce7ce96] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@2e593ace MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@66ab3ca6] under trunc; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : truncate -> trunc MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@a043291] under bitand; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3f75bd4e] under bitor; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@32864920] under bitxor; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@df71dda] under bitnot; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@26cc264f] under format; prior registration was org.hibernate.dialect.function.FormatFunction@1c956f6 MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@731441b4 MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@32b0caa5 MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@34417015] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@55619d85 MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@340ef0f4] under chr; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : char -> chr MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1223262] under sysdate; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@2a0ed1c4] under listagg; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - abs(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double acos(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - addtime(TIME datetime, TIME time) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean any(BOOLEAN arg) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer ascii(STRING arg) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double asin(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - avg(arg) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bit_and(arg) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bit_or(arg) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitand(arg0, arg1) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitnot(arg) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitor(arg0, arg1) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitxor(arg0, arg1) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - cast(arg as Type) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - ceiling(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Character char(INTEGER arg) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Character chr(INTEGER arg) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]]) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String collate(STRING string as COLLATION collation) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]]) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double cos(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double cosh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double cot(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Long count([distinct ]{arg|*}) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer crc32(arg) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date curdate() MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date current date MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time current time MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current timestamp MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date current_date MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Instant current_instant MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time current_time MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current_timestamp MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time curtime() MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date date(arg) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer datediff(DATE end, DATE start) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer day(DATE arg) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String dayname(DATE arg) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofmonth(DATE arg) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofweek(DATE arg) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofyear(DATE arg) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double degrees(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean every(BOOLEAN arg) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double exp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - floor(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]]) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer hour(TIME arg) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - ifnull(arg0, arg1) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Instant instant MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]]) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date last_day(DATE arg) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]]) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String left(STRING string, INTEGER length) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double ln(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local date MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local datetime MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local time MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local_date MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local_datetime MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local_time MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtime MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtimestamp MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start]) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1]) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double log10(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double log2(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String lower(STRING string) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String lpad(string, length[, padding]) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters]) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - max(COMPARABLE arg) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String md5(arg) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer microsecond(TIME arg) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - min(COMPARABLE arg) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer minute(TIME arg) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer month(DATE arg) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String monthname(DATE arg) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp now() MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - nullif(arg0, arg1) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset datetime MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset_datetime MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length]) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character]) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double pi MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer position(STRING pattern in STRING string) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer quarter(DATE arg) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double radians(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double rand([INTEGER seed]) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String repeat(STRING string, INTEGER times) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String reverse(STRING arg) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String right(STRING string, INTEGER length) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places]) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String rpad(string, length[, padding]) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters]) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer second(TIME arg) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String sha(arg) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String sha1(arg) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String sha2(arg0, arg1) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer sign(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double sin(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double sinh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String soundex(arg) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String space(INTEGER arg) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Object sql MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double sqrt(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String str(arg) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length]) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length]) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - subtime(TIME datetime, TIME time) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - sum(arg) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp sysdate() MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double tan(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double tanh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String time(arg) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1]) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - trunc( ... ) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - truncate( ... ) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String upper(STRING string) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date utc_date MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time utc_time MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp utc_timestamp MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_pop(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_samp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double variance(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer week(DATE arg) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer year(DATE arg) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.orm.query.plan.cache - Starting QueryInterpretationCache(2048) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.e.i.EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.example.transaction_service.entity.Transaction] is safe MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.example.transaction_service.entity.Transaction]: private accessor [amount] MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.orm.model.mapping.creation - Starting post-init callbacks MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(com.example.transaction_service.entity.Transaction) `staticFetchableList` generator MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction)] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction.type]
 MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select id from tbl_transaction where id=? MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into tbl_transaction (amount,bank_type,currency,description,destination_bank_code,failed_reason,from_account_number,reference_code,status,timestamp,to_account_number,type,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update tbl_transaction set amount=?,bank_type=?,currency=?,description=?,destination_bank_code=?,failed_reason=?,from_account_number=?,reference_code=?,status=?,timestamp=?,to_account_number=?,type=? where id=? MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from tbl_transaction where id=? MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@b646432] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@41fb8617] MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named HQL queries MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named SQL queries MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG org.hibernate.mapping.Table - No alter strings for table : tbl_transaction MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6edd0056 MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.internal.SessionFactoryRegistry - Registering SessionFactory: 712f1f66-0cb7-49b8-8762-355d98f7d11b (<unnamed>) MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Instantiated SessionFactory MDC:[traceId=, spanId=]
2025-05-29 13:27:41 [restartedMain] DEBUG o.h.s.internal.StatisticsInitiator - Statistics initialized [enabled=false] MDC:[traceId=, spanId=]
2025-05-29 13:27:42 [restartedMain] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy4/jdk.proxy4.$Proxy191.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.getCountQuery(JpaQueryLookupStrategy.java:204)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:171)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.example.transaction_service.TransactionServiceApplication.main(TransactionServiceApplication.java:14)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-05-29 13:27:42 [restartedMain] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy4/jdk.proxy4.$Proxy191.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.example.transaction_service.TransactionServiceApplication.main(TransactionServiceApplication.java:14)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-05-29 13:27:42 [restartedMain] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy4/jdk.proxy4.$Proxy191.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.example.transaction_service.TransactionServiceApplication.main(TransactionServiceApplication.java:14)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-05-29 13:27:42 [restartedMain] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-05-29 13:27:42 [restartedMain] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator MDC:[traceId=, spanId=]
2025-05-29 13:27:42 [restartedMain] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory MDC:[traceId=, spanId=]
2025-05-29 13:27:42 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-05-29 13:27:42 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader MDC:[traceId=, spanId=]
2025-05-29 13:27:42 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-05-29 13:27:42 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-05-29 13:27:42 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-05-29 13:27:42 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-05-29 13:27:42 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-05-29 13:27:42 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-05-29 13:27:42 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-05-29 13:27:42 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-05-29 13:27:42 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-05-29 13:27:42 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-05-29 13:27:42 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-05-29 13:27:44 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-05-29 13:27:44 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-05-29 13:27:45 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-05-29 13:27:45 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-05-29 13:27:45 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@209f5c34 MDC:[traceId=, spanId=]
2025-05-29 13:27:45 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-05-29 13:27:45 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@177f065c MDC:[traceId=, spanId=]
2025-05-29 13:27:45 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-05-29 13:27:45 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 MDC:[traceId=, spanId=]
2025-05-29 13:27:45 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-05-29 13:27:45 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-05-29 13:27:45 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@1013462184 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-05-29 13:27:45 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-05-29 13:27:45 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-05-29 13:28:44 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-05-29 13:28:44 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-05-29 13:28:44 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-05-29 13:28:44 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-05-29 13:28:44 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4cd08010 MDC:[traceId=, spanId=]
2025-05-29 13:28:44 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-05-29 13:28:44 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@36328049 MDC:[traceId=, spanId=]
2025-05-29 13:28:44 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-05-29 13:28:44 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 MDC:[traceId=, spanId=]
2025-05-29 13:28:44 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-05-29 13:28:44 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-05-29 13:28:44 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@537807387 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-05-29 13:28:44 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-05-29 13:28:44 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-05-29 13:29:44 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-05-29 13:29:44 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-05-29 13:29:44 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-05-29 13:29:44 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-05-29 13:29:44 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@26d88dc MDC:[traceId=, spanId=]
2025-05-29 13:29:44 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-05-29 13:29:44 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@32230e8f MDC:[traceId=, spanId=]
2025-05-29 13:29:44 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-05-29 13:29:44 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 MDC:[traceId=, spanId=]
2025-05-29 13:29:44 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-05-29 13:29:44 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-05-29 13:29:44 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@2060244717 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-05-29 13:29:44 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-05-29 13:29:44 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-05-29 13:30:44 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-05-29 13:30:44 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-05-29 13:30:44 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-05-29 13:30:44 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-05-29 13:30:44 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2bbce796 MDC:[traceId=, spanId=]
2025-05-29 13:30:44 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-05-29 13:30:44 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@12d143b0 MDC:[traceId=, spanId=]
2025-05-29 13:30:44 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-05-29 13:30:44 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 MDC:[traceId=, spanId=]
2025-05-29 13:30:44 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-05-29 13:30:44 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-05-29 13:30:44 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@678314608 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-05-29 13:30:44 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-05-29 13:30:44 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-05-29 13:31:09 [SpringContextShutdownHook] DEBUG o.h.internal.SessionFactoryImpl - HHH000031: Closing MDC:[traceId=, spanId=]
2025-05-29 13:31:09 [SpringContextShutdownHook] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@26818149] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@41fb8617] MDC:[traceId=, spanId=]
2025-05-29 13:31:09 [SpringContextShutdownHook] DEBUG o.h.s.i.AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries MDC:[traceId=, spanId=]
2025-05-29 13:31:09 [SpringContextShutdownHook] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries MDC:[traceId=, spanId=]
2025-05-29 13:46:56 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final MDC:[traceId=, spanId=]
2025-05-29 13:46:56 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-05-29 13:46:56 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-05-29 13:46:56 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-05-29 13:46:56 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-05-29 13:46:56 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-05-29 13:46:56 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-05-29 13:46:57 [background-preinit] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-05-29 13:46:57 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-05-29 13:46:57 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-05-29 13:46:57 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-05-29 13:46:57 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-05-29 13:46:57 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-05-29 13:46:57 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-05-29 13:47:03 [restartedMain] DEBUG o.h.jpa.internal.util.LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@11519b14
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/LT_Web/SpringBoot/java-banking-phase2/backend/transaction-service/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.example.transaction_service.entity.Transaction]
	Mapping files names []
	Properties [] MDC:[traceId=, spanId=]
2025-05-29 13:47:03 [restartedMain] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator]. MDC:[traceId=, spanId=]
2025-05-29 13:47:03 [restartedMain] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator]. MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG org.hibernate.cfg.Environment - HHH000206: 'hibernate.properties' not found MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator] MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator] MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator] MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator] MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned] MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator] MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator] MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator] MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator] MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator] MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.h.c.i.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@20e82ab9 MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@20e82ab9 MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@20e82ab9 MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@60b8db71 MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@60b8db71 MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@3d92b2a2 MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@3d92b2a2 MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@666c5ccc MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@666c5ccc MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@7301f5a MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@7301f5a MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@7301f5a MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@21f52f9e MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@21f52f9e MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@21f52f9e MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@9da9ea0 MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@9da9ea0 MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@dd4396b MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@a993d44 MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@a993d44 MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@2187a56 MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@5f6adb2b MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@73d9becc MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@73d9becc MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@73d9becc MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@30e9deee MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@30e9deee MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@30e9deee MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@7162d86f MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@7162d86f MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@7162d86f MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@7858e6eb MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@7858e6eb MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@7858e6eb MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@46c908f2 MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@46c908f2 MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@46c908f2 MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@38a9b06b MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@38a9b06b MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@5f6fb6b1 MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@5f6fb6b1 MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@603f6c09 MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@603f6c09 MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@603f6c09 MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@6ebf7664 MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@1be0b930 MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@1be0b930 MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@39185ec3 MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@22dc22cd MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@22dc22cd MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@22dc22cd MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@37456ca4 MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@29727a45 MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@5267d7ee MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@11ee4d25 MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@11ee4d25 MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@dd233f0 MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@dd233f0 MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@37c8d05d MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@5bfca9ed MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@389850d2 MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@24c9a982 MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@55f2df7e MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@6b7fa7ec MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@119b7491 MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@119b7491 MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@78775a99 MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@78775a99 MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@3bbd63c6 MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@3bbd63c6 MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@2d6be39a MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@2d6be39a MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@671e355a MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@671e355a MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@25ff18b2 MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@758cfc98 MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@709b680 MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@709b680 MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@11abf7de MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4ccc57d1 MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5eb61aec MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@14c10a0c MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@14c10a0c MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5a1a1a4d MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@74c6ac00 MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@1ac9b90e MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@1ac9b90e MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@6444131 MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@6444131 MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@c86fbc6 MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@c86fbc6 MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@c86fbc6 MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@4d61f0fa MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@4d61f0fa MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@4d61f0fa MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@1a373191 MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@3e5eb62f MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@53d22e9 MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@53d22e9 MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@4799e494 MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@4799e494 MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@4799e494 MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@6481ee4f MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@2fa5d33e MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@43639649 MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@43639649 MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@4b5677f5 MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@4b5677f5 MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@4b5677f5 MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@204e1b46 MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@204e1b46 MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@21731052 MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@21731052 MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@7e7d0beb MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@7e7d0beb MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@66c320e MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@66c320e MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@56289dae MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@56289dae MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@6fe0e6b9 MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@79549afd MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@3c5a8bc1 MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@3c5a8bc1 MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@556d1e0 MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@62fd757c MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4471b200 MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@be17c67 MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@380b752a MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@3154b1c2 MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@78fce45a MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@78fead66 MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@1b3f2576 MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@64b2af9] into BootstrapContext; was [null] MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@64b2af9) [was null] MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@362060d9] into BootstrapContext; was [null] MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@45faab0b] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@27f87075] MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@64b2af9] MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@64b2af9] MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Database ->
	   name : MySQL
	version : 8.0.32
	  major : 8
	  minor : 0 MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Driver ->
	   name : MySQL Connector/J
	version : mysql-connector-j-8.3.0 (Revision: 805f872a57875f311cb82487efcfb070411a3fa0)
	  major : 8
	  minor : 3 MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - JDBC version : 4.2 MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default) MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG org.hibernate.orm.dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQL8Dialect, version: 8.0 MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7b5cdeda) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6d195e6c) MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@72060b37) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3396d6b0) MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2ea16416) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@96cb590) MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4bf15839) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4ed734a1) MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6b7378b9) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7df9072) MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@46ae2020) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@31ab7668) MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@416d6654) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3a4a220b) MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@d52ba42) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@67a095b6) MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4d5510d0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@26e4390b) MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor) MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor) MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor) MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT)) MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT)) MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@708aec36 MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@556d1e0` MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6e6aefb7] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2c05a060] MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.h.boot.model.relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}] MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Transaction MDC:[traceId=, spanId=]
2025-05-29 13:47:04 [restartedMain] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity com.example.transaction_service.entity.Transaction on table tbl_transaction MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE') MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.example.transaction_service.entity.Transaction] is safe MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property id with lazy=false MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:id] MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for id MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.id MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property id MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, assigned, , ...) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property amount with lazy=false MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:amount] MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for amount MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.amount MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property amount MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property bankType with lazy=false MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:bankType] MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for bankType MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.bank_type MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property bankType MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property currency with lazy=false MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:currency] MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for currency MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.currency MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property currency MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property description with lazy=false MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:description] MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for description MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.description MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property description MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property destinationBankCode with lazy=false MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:destinationBankCode] MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for destinationBankCode MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.destination_bank_code MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property destinationBankCode MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property failedReason with lazy=false MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:failedReason] MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for failedReason MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.failed_reason MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property failedReason MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property fromAccountNumber with lazy=false MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:fromAccountNumber] MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for fromAccountNumber MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.from_account_number MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property fromAccountNumber MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property referenceCode with lazy=false MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:referenceCode] MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for referenceCode MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.reference_code MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property referenceCode MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property status with lazy=false MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:status] MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for status MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.status MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property status MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property timestamp with lazy=false MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:timestamp] MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for timestamp MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.timestamp MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property timestamp MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property toAccountNumber with lazy=false MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:toAccountNumber] MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for toAccountNumber MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.to_account_number MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property toAccountNumber MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property type with lazy=false MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:type] MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for type MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.type MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property type MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: com.example.transaction_service.entity MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.j.e.i.CallbackDefinitionResolverLegacyImpl - Adding prePersist as PrePersist callback for entity com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bankType MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for currency MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for description MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for destinationBankCode MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for failedReason MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for fromAccountNumber MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for referenceCode MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for timestamp MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for toAccountNumber MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for type MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [tbl_transaction] MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Building session factory MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Instantiating SessionFactory with settings: {jdk.tls.rejectClientInitiatedRenegotiation=true, java.specification.version=17, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@4ef607ef, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=D:\LT_Web\SpringBoot\java-banking-phase2\backend\transaction-service\target\classes;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-actuator\3.3.11\spring-boot-starter-actuator-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter\3.3.11\spring-boot-starter-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.3.11\spring-boot-starter-logging-3.3.11.jar;C:\Users\A715-42G\.m2\repository\ch\qos\logback\logback-classic\1.5.18\logback-classic-1.5.18.jar;C:\Users\A715-42G\.m2\repository\ch\qos\logback\logback-core\1.5.18\logback-core-1.5.18.jar;C:\Users\A715-42G\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.23.1\log4j-to-slf4j-2.23.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\logging\log4j\log4j-api\2.23.1\log4j-api-2.23.1.jar;C:\Users\A715-42G\.m2\repository\org\slf4j\jul-to-slf4j\2.0.17\jul-to-slf4j-2.0.17.jar;C:\Users\A715-42G\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\A715-42G\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-actuator-autoconfigure\3.3.11\spring-boot-actuator-autoconfigure-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-actuator\3.3.11\spring-boot-actuator-3.3.11.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.17.3\jackson-datatype-jsr310-2.17.3.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-observation\1.13.13\micrometer-observation-1.13.13.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-commons\1.13.13\micrometer-commons-1.13.13.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-jakarta9\1.13.13\micrometer-jakarta9-1.13.13.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-core\1.13.13\micrometer-core-1.13.13.jar;C:\Users\A715-42G\.m2\repository\org\hdrhistogram\HdrHistogram\2.2.2\HdrHistogram-2.2.2.jar;C:\Users\A715-42G\.m2\repository\org\latencyutils\LatencyUtils\2.0.3\LatencyUtils-2.0.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.3.11\spring-boot-starter-data-jpa-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.3.11\spring-boot-starter-aop-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-aop\6.1.19\spring-aop-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\aspectj\aspectjweaver\1.9.24\aspectjweaver-1.9.24.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.3.11\spring-boot-starter-jdbc-3.3.11.jar;C:\Users\A715-42G\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-jdbc\6.1.19\spring-jdbc-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\orm\hibernate-core\6.5.3.Final\hibernate-core-6.5.3.Final.jar;C:\Users\A715-42G\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\A715-42G\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\A715-42G\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\A715-42G\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\A715-42G\.m2\repository\net\bytebuddy\byte-buddy\1.14.19\byte-buddy-1.14.19.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\A715-42G\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\A715-42G\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\A715-42G\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-jpa\3.3.11\spring-data-jpa-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-commons\3.3.11\spring-data-commons-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-orm\6.1.19\spring-orm-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-context\6.1.19\spring-context-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-tx\6.1.19\spring-tx-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-beans\6.1.19\spring-beans-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-aspects\6.1.19\spring-aspects-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.3.11\spring-boot-starter-web-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.3.11\spring-boot-starter-json-3.3.11.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.17.3\jackson-datatype-jdk8-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.17.3\jackson-module-parameter-names-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.3.11\spring-boot-starter-tomcat-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.40\tomcat-embed-core-10.1.40.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.40\tomcat-embed-websocket-10.1.40.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-web\6.1.19\spring-web-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-webmvc\6.1.19\spring-webmvc-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-expression\6.1.19\spring-expression-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-devtools\3.3.11\spring-boot-devtools-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot\3.3.11\spring-boot-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.3.11\spring-boot-autoconfigure-3.3.11.jar;C:\Users\A715-42G\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\A715-42G\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-core\6.1.19\spring-core-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-jcl\6.1.19\spring-jcl-6.1.19.jar;C:\Users\A715-42G\.m2\repository\com\mysql\mysql-connector-j\8.3.0\mysql-connector-j-8.3.0.jar;C:\Users\A715-42G\.m2\repository\org\projectlombok\lombok\1.18.38\lombok-1.18.38.jar;C:\Users\A715-42G\.m2\repository\org\mapstruct\mapstruct\1.5.5.Final\mapstruct-1.5.5.Final.jar;C:\Users\A715-42G\.m2\repository\org\mapstruct\mapstruct-processor\1.5.5.Final\mapstruct-processor-1.5.5.Final.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-validation\3.3.11\spring-boot-starter-validation-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.40\tomcat-embed-el-10.1.40.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\validator\hibernate-validator\8.0.2.Final\hibernate-validator-8.0.2.Final.jar;C:\Users\A715-42G\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-ui\2.0.2\springdoc-openapi-starter-webmvc-ui-2.0.2.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-api\2.0.2\springdoc-openapi-starter-webmvc-api-2.0.2.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-common\2.0.2\springdoc-openapi-starter-common-2.0.2.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-core-jakarta\2.2.7\swagger-core-jakarta-2.2.7.jar;C:\Users\A715-42G\.m2\repository\org\apache\commons\commons-lang3\3.14.0\commons-lang3-3.14.0.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-annotations-jakarta\2.2.7\swagger-annotations-jakarta-2.2.7.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-models-jakarta\2.2.7\swagger-models-jakarta-2.2.7.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-yaml\2.17.3\jackson-dataformat-yaml-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\webjars\swagger-ui\4.15.5\swagger-ui-4.15.5.jar;C:\Users\A715-42G\.m2\repository\org\webjars\webjars-locator-core\0.58\webjars-locator-core-0.58.jar;C:\Users\A715-42G\.m2\repository\io\github\classgraph\classgraph\4.8.149\classgraph-4.8.149.jar;D:\LT_Web\SpringBoot\java-banking-phase2\backend\common-service\target\classes;C:\Users\A715-42G\.m2\repository\org\apache\dubbo\dubbo-spring-boot-starter\3.3.2\dubbo-spring-boot-starter-3.3.2.jar;C:\Users\A715-42G\.m2\repository\org\apache\dubbo\dubbo-spring-boot-autoconfigure\3.3.2\dubbo-spring-boot-autoconfigure-3.3.2.jar;C:\Users\A715-42G\.m2\repository\org\apache\dubbo\dubbo-spring-boot-autoconfigure-compatible\3.3.2\dubbo-spring-boot-autoconfigure-compatible-3.3.2.jar;C:\Users\A715-42G\.m2\repository\org\apache\dubbo\dubbo\3.3.2\dubbo-3.3.2.jar;C:\Users\A715-42G\.m2\repository\org\javassist\javassist\3.30.2-GA\javassist-3.30.2-GA.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-all\4.1.119.Final\netty-all-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-dns\4.1.119.Final\netty-codec-dns-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-haproxy\4.1.119.Final\netty-codec-haproxy-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-http\4.1.119.Final\netty-codec-http-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-http2\4.1.119.Final\netty-codec-http2-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-memcache\4.1.119.Final\netty-codec-memcache-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-mqtt\4.1.119.Final\netty-codec-mqtt-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-redis\4.1.119.Final\netty-codec-redis-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-smtp\4.1.119.Final\netty-codec-smtp-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-socks\4.1.119.Final\netty-codec-socks-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-stomp\4.1.119.Final\netty-codec-stomp-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-xml\4.1.119.Final\netty-codec-xml-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-handler-proxy\4.1.119.Final\netty-handler-proxy-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-handler-ssl-ocsp\4.1.119.Final\netty-handler-ssl-ocsp-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-resolver-dns\4.1.119.Final\netty-resolver-dns-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-rxtx\4.1.119.Final\netty-transport-rxtx-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-sctp\4.1.119.Final\netty-transport-sctp-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-udt\4.1.119.Final\netty-transport-udt-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-classes-kqueue\4.1.119.Final\netty-transport-classes-kqueue-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-resolver-dns-classes-macos\4.1.119.Final\netty-resolver-dns-classes-macos-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final-linux-x86_64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final-linux-aarch_64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final-linux-riscv64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-kqueue\4.1.119.Final\netty-transport-native-kqueue-4.1.119.Final-osx-x86_64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-kqueue\4.1.119.Final\netty-transport-native-kqueue-4.1.119.Final-osx-aarch_64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-resolver-dns-native-macos\4.1.119.Final\netty-resolver-dns-native-macos-4.1.119.Final-osx-x86_64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-resolver-dns-native-macos\4.1.119.Final\netty-resolver-dns-native-macos-4.1.119.Final-osx-aarch_64.jar;C:\Users\A715-42G\.m2\repository\org\apache\dubbo\hessian-lite\4.0.3\hessian-lite-4.0.3.jar;C:\Users\A715-42G\.m2\repository\com\alibaba\fastjson2\fastjson2\2.0.53\fastjson2-2.0.53.jar;C:\Users\A715-42G\.m2\repository\com\google\protobuf\protobuf-java\3.25.5\protobuf-java-3.25.5.jar;C:\Users\A715-42G\.m2\repository\org\apache\curator\curator-framework\5.1.0\curator-framework-5.1.0.jar;C:\Users\A715-42G\.m2\repository\org\apache\curator\curator-client\5.1.0\curator-client-5.1.0.jar;C:\Users\A715-42G\.m2\repository\com\google\guava\guava\27.0.1-jre\guava-27.0.1-jre.jar;C:\Users\A715-42G\.m2\repository\com\google\guava\failureaccess\1.0.1\failureaccess-1.0.1.jar;C:\Users\A715-42G\.m2\repository\com\google\guava\listenablefuture\9999.0-empty-to-avoid-conflict-with-guava\listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar;C:\Users\A715-42G\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\A715-42G\.m2\repository\org\checkerframework\checker-qual\2.5.2\checker-qual-2.5.2.jar;C:\Users\A715-42G\.m2\repository\com\google\errorprone\error_prone_annotations\2.2.0\error_prone_annotations-2.2.0.jar;C:\Users\A715-42G\.m2\repository\com\google\j2objc\j2objc-annotations\1.1\j2objc-annotations-1.1.jar;C:\Users\A715-42G\.m2\repository\org\codehaus\mojo\animal-sniffer-annotations\1.17\animal-sniffer-annotations-1.17.jar;C:\Users\A715-42G\.m2\repository\org\apache\zookeeper\zookeeper\3.7.1\zookeeper-3.7.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\zookeeper\zookeeper-jute\3.7.1\zookeeper-jute-3.7.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\yetus\audience-annotations\0.12.0\audience-annotations-0.12.0.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-handler\4.1.119.Final\netty-handler-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-common\4.1.119.Final\netty-common-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-resolver\4.1.119.Final\netty-resolver-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-buffer\4.1.119.Final\netty-buffer-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport\4.1.119.Final\netty-transport-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-unix-common\4.1.119.Final\netty-transport-native-unix-common-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec\4.1.119.Final\netty-codec-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-classes-epoll\4.1.119.Final\netty-transport-classes-epoll-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\org\slf4j\slf4j-api\2.0.17\slf4j-api-2.0.17.jar;C:\Users\A715-42G\.m2\repository\org\apache\curator\curator-recipes\5.5.0\curator-recipes-5.5.0.jar;C:\Users\A715-42G\.m2\repository\org\apache\curator\curator-x-discovery\5.5.0\curator-x-discovery-5.5.0.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.17.3\jackson-databind-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.17.3\jackson-annotations-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.17.3\jackson-core-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-starter-vault-config\4.1.1\spring-cloud-starter-vault-config-4.1.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\httpcomponents\client5\httpclient5\5.3.1\httpclient5-5.3.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\httpcomponents\core5\httpcore5-h2\5.2.5\httpcore5-h2-5.2.5.jar;C:\Users\A715-42G\.m2\repository\org\apache\httpcomponents\core5\httpcore5\5.2.5\httpcore5-5.2.5.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-starter\4.1.2\spring-cloud-starter-4.1.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-context\4.1.2\spring-cloud-context-4.1.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-crypto\6.3.9\spring-security-crypto-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-commons\4.1.2\spring-cloud-commons-4.1.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-rsa\1.1.2\spring-security-rsa-1.1.2.jar;C:\Users\A715-42G\.m2\repository\org\bouncycastle\bcprov-jdk18on\1.77\bcprov-jdk18on-1.77.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-vault-config\4.1.1\spring-cloud-vault-config-4.1.1.jar;C:\Users\A715-42G\.m2\repository\org\springframework\vault\spring-vault-core\3.1.1\spring-vault-core-3.1.1.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-data-redis\3.3.11\spring-boot-starter-data-redis-3.3.11.jar;C:\Users\A715-42G\.m2\repository\io\lettuce\lettuce-core\6.3.2.RELEASE\lettuce-core-6.3.2.RELEASE.jar;C:\Users\A715-42G\.m2\repository\io\projectreactor\reactor-core\3.6.16\reactor-core-3.6.16.jar;C:\Users\A715-42G\.m2\repository\org\reactivestreams\reactive-streams\1.0.4\reactive-streams-1.0.4.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-redis\3.3.11\spring-data-redis-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-keyvalue\3.3.11\spring-data-keyvalue-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-oxm\6.1.19\spring-oxm-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-context-support\6.1.19\spring-context-support-6.1.19.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Saigon, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, java.vm.specification.version=17, os.name=Windows 10, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-17\bin, sun.java.command=com.example.transaction_service.TransactionServiceApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@286f2ade, com.sun.management.jmxremote=, jdk.debug=release, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, hibernate.cdi.extensions=true, user.home=C:\Users\A715-42G, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-01-17, java.home=C:\Program Files\Java\jdk-17, file.separator=\, spring.output.ansi.enabled=always, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.6+9-LTS-190, user.name=A715-42G, spring.jmx.enabled=true, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\A715-42G\AppData\Local\Temp\, catalina.home=C:\Users\A715-42G\AppData\Local\Temp\tomcat.8088.14436680227862830182, java.version=17.0.6, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=D:\LT_Web\SpringBoot\java-banking-phase2, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=16060, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\A715-42G\AppData\Local\Temp\tomcat.8088.14436680227862830182, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@644e4e19, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-17\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;D:\Document\xxx\apache-maven-3.9.1\bin;C:\Program Files (x86)\Dev-Cpp\MinGW64\bin;C:\Program Files\Git\cmd;C:\Program Files\Java\jdk-17\bin;C:\Program Files\nodejs\;C:\XamPP\php;D:\LT_Web\SpringBoot\SpringBootCLI\spring-3.2.1\bin;D:\sqlite;C:\Program Files\dotnet\;D:\Document\Java\Maven\apache-maven-3.9.9\bin;D:\Document\Java\Maven\apache-maven-3.9.9\bin;C:\Program Files\Cloudflare\Cloudflare WARP\;C:\ProgramData\chocolatey\bin;D:\KienLongBank\Vault;D:\GrafanaLabs\grafana\bin;D:\KienLongBank\InfluxData\influxdb-1.8.10-1;D:\Document\Work\Redis;;C:\Program Files\Docker\Docker\resources\bin;C:\Users\A715-42G\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\A715-42G\AppData\Local\Programs\Python\Python310\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\A715-42G\AppData\Local\Programs\Eclipse Adoptium\jdk-17.0.3.7-hotspot\bin;C:\Users\A715-42G\AppData\Local\Microsoft\WindowsApps;C:\Users\A715-42G\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\Azure Data Studio\bin;C:\Program Files\Git\bin;D:\Document\HQT_ATCSDL\MongoDB\mongosh-1.8.2-win32-x64\bin;C:\Users\A715-42G\AppData\Roaming\npm;C:\XamPP\php;C:\Users\A715-42G\.dotnet\tools;C:\Program Files\Azure Data Studio\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, emulated-client, sharing, java.vm.version=17.0.6+9-LTS-190, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=61.0, LOGGED_APPLICATION_NAME=[transaction-service] } MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {} MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.example.transaction_service.entity.Transaction] is safe MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@3246e68c] under count; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@57fc3cfc] under every; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@56cb9f12] under any; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4139b0c7] under sinh; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@778b6fbf] under cosh; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@16d3a36a] under tanh; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@569116e6] under pi; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5a222b7b] under log; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : length -> character_length MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@7883b503] under position; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@10ade6b3] under overlay; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@5a1bf8cc] under trim; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@3c634f64] under cast; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@75e61a13] under collate; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@18936cb4] under extract; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@336650f9] under ifnull; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@68d54067] under pad; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@40300dfc] under str; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@48a81e50] under format; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@1d75571c] under timestampadd; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@6725ef39] under timestampdiff; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4f4a65e7] under current_date; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@18bc14cb] under current_time; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@31acd04f] under current_timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current date -> current_date MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current time -> current_time MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4675e676] under local_date; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5a8cd602] under local_time; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@226e9bd4] under local_datetime; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7597197e] under offset_datetime; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local date -> local_date MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local time -> local_time MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1c3817ec] under instant; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current_instant -> instant MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@67143df9] under sql; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5a222b7b MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@6087c85] under lpad; prior registration was NamedSqmFunctionTemplate(lpad) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@7514e91c] under rpad; prior registration was NamedSqmFunctionTemplate(rpad) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : day -> dayofmonth MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@bb80a3a] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@7883b503 MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@54c78835] under trunc; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : truncate -> trunc MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@a3deb7] under bitand; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5c742626] under bitor; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@30699c71] under bitxor; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@58873c69] under bitnot; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@464f07a8] under format; prior registration was org.hibernate.dialect.function.FormatFunction@48a81e50 MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@5a8cd602 MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@226e9bd4 MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3b774c51] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@569116e6 MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4781c55a] under chr; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : char -> chr MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2684cdb7] under sysdate; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@505705b5] under listagg; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - abs(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double acos(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - addtime(TIME datetime, TIME time) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean any(BOOLEAN arg) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer ascii(STRING arg) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double asin(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - avg(arg) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bit_and(arg) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bit_or(arg) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitand(arg0, arg1) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitnot(arg) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitor(arg0, arg1) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitxor(arg0, arg1) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - cast(arg as Type) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - ceiling(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Character char(INTEGER arg) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Character chr(INTEGER arg) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]]) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String collate(STRING string as COLLATION collation) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]]) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double cos(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double cosh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double cot(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Long count([distinct ]{arg|*}) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer crc32(arg) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date curdate() MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date current date MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time current time MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current timestamp MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date current_date MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Instant current_instant MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time current_time MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current_timestamp MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time curtime() MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date date(arg) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer datediff(DATE end, DATE start) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer day(DATE arg) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String dayname(DATE arg) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofmonth(DATE arg) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofweek(DATE arg) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofyear(DATE arg) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double degrees(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean every(BOOLEAN arg) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double exp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - floor(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]]) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer hour(TIME arg) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - ifnull(arg0, arg1) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Instant instant MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]]) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date last_day(DATE arg) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]]) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String left(STRING string, INTEGER length) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double ln(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local date MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local datetime MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local time MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local_date MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local_datetime MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local_time MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtime MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtimestamp MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start]) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1]) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double log10(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double log2(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String lower(STRING string) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String lpad(string, length[, padding]) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters]) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - max(COMPARABLE arg) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String md5(arg) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer microsecond(TIME arg) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - min(COMPARABLE arg) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer minute(TIME arg) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer month(DATE arg) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String monthname(DATE arg) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp now() MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - nullif(arg0, arg1) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset datetime MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset_datetime MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length]) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character]) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double pi MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer position(STRING pattern in STRING string) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer quarter(DATE arg) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double radians(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double rand([INTEGER seed]) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String repeat(STRING string, INTEGER times) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String reverse(STRING arg) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String right(STRING string, INTEGER length) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places]) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String rpad(string, length[, padding]) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters]) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer second(TIME arg) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String sha(arg) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String sha1(arg) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String sha2(arg0, arg1) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer sign(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double sin(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double sinh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String soundex(arg) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String space(INTEGER arg) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Object sql MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double sqrt(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String str(arg) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length]) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length]) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - subtime(TIME datetime, TIME time) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - sum(arg) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp sysdate() MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double tan(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double tanh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String time(arg) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1]) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - trunc( ... ) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - truncate( ... ) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String upper(STRING string) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date utc_date MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time utc_time MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp utc_timestamp MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_pop(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_samp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double variance(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer week(DATE arg) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer year(DATE arg) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.orm.query.plan.cache - Starting QueryInterpretationCache(2048) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.e.i.EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.example.transaction_service.entity.Transaction] is safe MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.example.transaction_service.entity.Transaction]: private accessor [amount] MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.orm.model.mapping.creation - Starting post-init callbacks MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(com.example.transaction_service.entity.Transaction) `staticFetchableList` generator MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction)] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction.type]
 MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select id from tbl_transaction where id=? MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into tbl_transaction (amount,bank_type,currency,description,destination_bank_code,failed_reason,from_account_number,reference_code,status,timestamp,to_account_number,type,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update tbl_transaction set amount=?,bank_type=?,currency=?,description=?,destination_bank_code=?,failed_reason=?,from_account_number=?,reference_code=?,status=?,timestamp=?,to_account_number=?,type=? where id=? MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from tbl_transaction where id=? MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6e6aefb7] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@50e1d862] MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named HQL queries MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named SQL queries MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG org.hibernate.mapping.Table - No alter strings for table : tbl_transaction MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@7178107a MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.internal.SessionFactoryRegistry - Registering SessionFactory: d28e127e-3fad-41c8-bfe5-a113d0f37269 (<unnamed>) MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured MDC:[traceId=, spanId=]
2025-05-29 13:47:05 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Instantiated SessionFactory MDC:[traceId=, spanId=]
2025-05-29 13:47:06 [restartedMain] DEBUG o.h.s.internal.StatisticsInitiator - Statistics initialized [enabled=false] MDC:[traceId=, spanId=]
2025-05-29 13:47:06 [restartedMain] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy4/jdk.proxy4.$Proxy191.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.getCountQuery(JpaQueryLookupStrategy.java:204)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:171)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.example.transaction_service.TransactionServiceApplication.main(TransactionServiceApplication.java:14)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-05-29 13:47:06 [restartedMain] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy4/jdk.proxy4.$Proxy191.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.example.transaction_service.TransactionServiceApplication.main(TransactionServiceApplication.java:14)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-05-29 13:47:06 [restartedMain] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy4/jdk.proxy4.$Proxy191.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.example.transaction_service.TransactionServiceApplication.main(TransactionServiceApplication.java:14)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-05-29 13:47:06 [restartedMain] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-05-29 13:47:06 [restartedMain] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator MDC:[traceId=, spanId=]
2025-05-29 13:47:06 [restartedMain] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory MDC:[traceId=, spanId=]
2025-05-29 13:47:06 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-05-29 13:47:06 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader MDC:[traceId=, spanId=]
2025-05-29 13:47:06 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-05-29 13:47:06 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-05-29 13:47:06 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-05-29 13:47:06 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-05-29 13:47:06 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-05-29 13:47:06 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-05-29 13:47:06 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-05-29 13:47:06 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-05-29 13:47:06 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-05-29 13:47:06 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-05-29 13:47:06 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-05-29 13:47:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-05-29 13:47:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-05-29 13:47:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-05-29 13:47:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-05-29 13:47:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7510862 MDC:[traceId=, spanId=]
2025-05-29 13:47:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-05-29 13:47:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7acbfc59 MDC:[traceId=, spanId=]
2025-05-29 13:47:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-05-29 13:47:09 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-05-29 13:47:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-05-29 13:47:09 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-05-29 13:47:09 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@296164215 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-05-29 13:47:09 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-05-29 13:47:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-05-29 13:47:21 [http-nio-8088-exec-2] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-05-29 13:47:21 [http-nio-8088-exec-2] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-05-29 13:47:22 [http-nio-8088-exec-2] DEBUG o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier MDC:[traceId=, spanId=]
2025-05-29 13:47:22 [http-nio-8088-exec-2] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-05-29 13:47:22 [http-nio-8088-exec-2] DEBUG o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades MDC:[traceId=, spanId=]
2025-05-29 13:47:22 [http-nio-8088-exec-2] DEBUG o.h.e.i.AbstractFlushingEventListener - Dirty checking collections MDC:[traceId=, spanId=]
2025-05-29 13:47:22 [http-nio-8088-exec-2] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects MDC:[traceId=, spanId=]
2025-05-29 13:47:22 [http-nio-8088-exec-2] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections MDC:[traceId=, spanId=]
2025-05-29 13:47:22 [http-nio-8088-exec-2] DEBUG o.h.internal.util.EntityPrinter - Listing entities: MDC:[traceId=, spanId=]
2025-05-29 13:47:22 [http-nio-8088-exec-2] DEBUG o.h.internal.util.EntityPrinter - com.example.transaction_service.entity.Transaction{amount=10000, fromAccountNumber=970452999999999, bankType=INTERNAL, description=Nộp tiền , type=DEPOSIT, destinationBankCode=null, toAccountNumber=87654321, currency=VND, id=04a1a2bf-3c9f-4086-96f8-b74b5f46301a, referenceCode=TXN-970452999999999-20250529134722c54c83ed, failedReason=null, status=PENDING, timestamp=2025-05-29T13:47:22.172229200} MDC:[traceId=, spanId=]
2025-05-29 13:47:22 [http-nio-8088-exec-2] DEBUG org.hibernate.SQL - insert into tbl_transaction (amount,bank_type,currency,description,destination_bank_code,failed_reason,from_account_number,reference_code,status,timestamp,to_account_number,type,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?) MDC:[traceId=, spanId=]
2025-05-29 13:48:04 [http-nio-8088-exec-4] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-05-29 13:48:04 [http-nio-8088-exec-4] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-05-29 13:48:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-05-29 13:48:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-05-29 13:48:04 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@72e35a9e MDC:[traceId=, spanId=]
2025-05-29 13:48:04 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).referenceCode)  MDC:[traceId=, spanId=]
2025-05-29 13:48:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 MDC:[traceId=, spanId=]
2025-05-29 13:48:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-05-29 13:48:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-05-29 13:48:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@1156079003 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-05-29 13:48:04 [http-nio-8088-exec-4] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.reference_code=? MDC:[traceId=, spanId=]
2025-05-29 13:48:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [04a1a2bf-3c9f-4086-96f8-b74b5f46301a] MDC:[traceId=, spanId=]
2025-05-29 13:48:04 [http-nio-8088-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(2)): 04a1a2bf-3c9f-4086-96f8-b74b5f46301a MDC:[traceId=, spanId=]
2025-05-29 13:48:04 [http-nio-8088-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(2)#04a1a2bf-3c9f-4086-96f8-b74b5f46301a] : 6330562 MDC:[traceId=, spanId=]
2025-05-29 13:48:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [10000.00] MDC:[traceId=, spanId=]
2025-05-29 13:48:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-05-29 13:48:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [VND] MDC:[traceId=, spanId=]
2025-05-29 13:48:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [Nộp tiền ] MDC:[traceId=, spanId=]
2025-05-29 13:48:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [null] MDC:[traceId=, spanId=]
2025-05-29 13:48:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [null] MDC:[traceId=, spanId=]
2025-05-29 13:48:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452999999999] MDC:[traceId=, spanId=]
2025-05-29 13:48:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [TXN-970452999999999-20250529134722c54c83ed] MDC:[traceId=, spanId=]
2025-05-29 13:48:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [PENDING] MDC:[traceId=, spanId=]
2025-05-29 13:48:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [2025-05-29T13:47:22.172229] MDC:[traceId=, spanId=]
2025-05-29 13:48:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [87654321] MDC:[traceId=, spanId=]
2025-05-29 13:48:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [DEPOSIT] MDC:[traceId=, spanId=]
2025-05-29 13:48:04 [http-nio-8088-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(2)#04a1a2bf-3c9f-4086-96f8-b74b5f46301a MDC:[traceId=, spanId=]
2025-05-29 13:48:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1e45b4b8 MDC:[traceId=, spanId=]
2025-05-29 13:48:07 [http-nio-8088-exec-4] DEBUG o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier MDC:[traceId=, spanId=]
2025-05-29 13:48:07 [http-nio-8088-exec-4] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-05-29 13:48:07 [http-nio-8088-exec-4] DEBUG o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades MDC:[traceId=, spanId=]
2025-05-29 13:48:07 [http-nio-8088-exec-4] DEBUG o.h.e.i.AbstractFlushingEventListener - Dirty checking collections MDC:[traceId=, spanId=]
2025-05-29 13:48:07 [http-nio-8088-exec-4] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects MDC:[traceId=, spanId=]
2025-05-29 13:48:07 [http-nio-8088-exec-4] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections MDC:[traceId=, spanId=]
2025-05-29 13:48:07 [http-nio-8088-exec-4] DEBUG o.h.internal.util.EntityPrinter - Listing entities: MDC:[traceId=, spanId=]
2025-05-29 13:48:07 [http-nio-8088-exec-4] DEBUG o.h.internal.util.EntityPrinter - com.example.transaction_service.entity.Transaction{amount=10000.00, fromAccountNumber=970452999999999, bankType=INTERNAL, description=Nộp tiền , type=DEPOSIT, destinationBankCode=null, toAccountNumber=87654321, currency=VND, id=04a1a2bf-3c9f-4086-96f8-b74b5f46301a, referenceCode=TXN-970452999999999-20250529134722c54c83ed, failedReason=null, status=COMPLETED, timestamp=2025-05-29T13:47:22.172229} MDC:[traceId=, spanId=]
2025-05-29 13:48:07 [http-nio-8088-exec-4] DEBUG org.hibernate.SQL - update tbl_transaction set amount=?,bank_type=?,currency=?,description=?,destination_bank_code=?,failed_reason=?,from_account_number=?,reference_code=?,status=?,timestamp=?,to_account_number=?,type=? where id=? MDC:[traceId=, spanId=]
2025-05-29 13:48:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-05-29 13:48:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-05-29 13:48:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-05-29 13:48:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-05-29 13:48:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@318a31d6 MDC:[traceId=, spanId=]
2025-05-29 13:48:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-05-29 13:48:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@246966e9 MDC:[traceId=, spanId=]
2025-05-29 13:48:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-05-29 13:48:09 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-05-29 13:48:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-05-29 13:48:09 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-05-29 13:48:09 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@222330208 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-05-29 13:48:09 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-05-29 13:48:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-05-29 13:49:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-05-29 13:49:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-05-29 13:49:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-05-29 13:49:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-05-29 13:49:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6fd3106c MDC:[traceId=, spanId=]
2025-05-29 13:49:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-05-29 13:49:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3f8c9cac MDC:[traceId=, spanId=]
2025-05-29 13:49:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-05-29 13:49:09 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-05-29 13:49:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-05-29 13:49:09 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-05-29 13:49:09 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1551126669 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-05-29 13:49:09 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-05-29 13:49:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-05-29 13:49:13 [http-nio-8088-exec-8] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-05-29 13:49:13 [http-nio-8088-exec-8] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-05-29 13:49:13 [http-nio-8088-exec-8] DEBUG o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier MDC:[traceId=, spanId=]
2025-05-29 13:49:13 [http-nio-8088-exec-8] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-05-29 13:49:13 [http-nio-8088-exec-8] DEBUG o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades MDC:[traceId=, spanId=]
2025-05-29 13:49:13 [http-nio-8088-exec-8] DEBUG o.h.e.i.AbstractFlushingEventListener - Dirty checking collections MDC:[traceId=, spanId=]
2025-05-29 13:49:13 [http-nio-8088-exec-8] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects MDC:[traceId=, spanId=]
2025-05-29 13:49:13 [http-nio-8088-exec-8] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections MDC:[traceId=, spanId=]
2025-05-29 13:49:13 [http-nio-8088-exec-8] DEBUG o.h.internal.util.EntityPrinter - Listing entities: MDC:[traceId=, spanId=]
2025-05-29 13:49:13 [http-nio-8088-exec-8] DEBUG o.h.internal.util.EntityPrinter - com.example.transaction_service.entity.Transaction{amount=10000, fromAccountNumber=970452999999999, bankType=INTERNAL, description=Nộp tiền , type=DEPOSIT, destinationBankCode=null, toAccountNumber=87654321, currency=VND, id=d26f06cd-e484-4afa-aba4-60e47e431f80, referenceCode=TXN-970452999999999-202505291349130affa5a3, failedReason=null, status=PENDING, timestamp=2025-05-29T13:49:13.162038300} MDC:[traceId=, spanId=]
2025-05-29 13:49:13 [http-nio-8088-exec-8] DEBUG org.hibernate.SQL - insert into tbl_transaction (amount,bank_type,currency,description,destination_bank_code,failed_reason,from_account_number,reference_code,status,timestamp,to_account_number,type,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?) MDC:[traceId=, spanId=]
2025-05-29 13:49:25 [http-nio-8088-exec-9] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-05-29 13:49:25 [http-nio-8088-exec-9] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-05-29 13:49:25 [http-nio-8088-exec-9] DEBUG o.h.e.t.internal.TransactionImpl - rolling back MDC:[traceId=, spanId=]
2025-05-29 13:49:56 [http-nio-8088-exec-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-05-29 13:49:56 [http-nio-8088-exec-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-05-29 13:49:56 [http-nio-8088-exec-1] DEBUG o.h.e.t.internal.TransactionImpl - rolling back MDC:[traceId=, spanId=]
2025-05-29 13:49:57 [http-nio-8088-exec-6] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-05-29 13:49:57 [http-nio-8088-exec-6] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-05-29 13:49:57 [http-nio-8088-exec-6] DEBUG o.h.e.t.internal.TransactionImpl - rolling back MDC:[traceId=, spanId=]
2025-05-29 13:49:58 [http-nio-8088-exec-4] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-05-29 13:49:58 [http-nio-8088-exec-4] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-05-29 13:49:58 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-05-29 13:49:58 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-05-29 13:49:58 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5abe8649 MDC:[traceId=, spanId=]
2025-05-29 13:49:58 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).referenceCode)  MDC:[traceId=, spanId=]
2025-05-29 13:49:58 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 MDC:[traceId=, spanId=]
2025-05-29 13:49:58 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-05-29 13:49:58 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-05-29 13:49:58 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@1107513170 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-05-29 13:49:58 [http-nio-8088-exec-4] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.reference_code=? MDC:[traceId=, spanId=]
2025-05-29 13:49:58 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [d26f06cd-e484-4afa-aba4-60e47e431f80] MDC:[traceId=, spanId=]
2025-05-29 13:49:58 [http-nio-8088-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(2)): d26f06cd-e484-4afa-aba4-60e47e431f80 MDC:[traceId=, spanId=]
2025-05-29 13:49:58 [http-nio-8088-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(2)#d26f06cd-e484-4afa-aba4-60e47e431f80] : 778414642 MDC:[traceId=, spanId=]
2025-05-29 13:49:58 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [10000.00] MDC:[traceId=, spanId=]
2025-05-29 13:49:58 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-05-29 13:49:58 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [VND] MDC:[traceId=, spanId=]
2025-05-29 13:49:58 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [Nộp tiền ] MDC:[traceId=, spanId=]
2025-05-29 13:49:58 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [null] MDC:[traceId=, spanId=]
2025-05-29 13:49:58 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [null] MDC:[traceId=, spanId=]
2025-05-29 13:49:58 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452999999999] MDC:[traceId=, spanId=]
2025-05-29 13:49:58 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [TXN-970452999999999-202505291349130affa5a3] MDC:[traceId=, spanId=]
2025-05-29 13:49:58 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [PENDING] MDC:[traceId=, spanId=]
2025-05-29 13:49:58 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [2025-05-29T13:49:13.162038] MDC:[traceId=, spanId=]
2025-05-29 13:49:58 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [87654321] MDC:[traceId=, spanId=]
2025-05-29 13:49:58 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [DEPOSIT] MDC:[traceId=, spanId=]
2025-05-29 13:49:58 [http-nio-8088-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(2)#d26f06cd-e484-4afa-aba4-60e47e431f80 MDC:[traceId=, spanId=]
2025-05-29 13:49:58 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@76c41973 MDC:[traceId=, spanId=]
2025-05-29 13:49:58 [http-nio-8088-exec-4] DEBUG o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier MDC:[traceId=, spanId=]
2025-05-29 13:49:58 [http-nio-8088-exec-4] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-05-29 13:49:58 [http-nio-8088-exec-4] DEBUG o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades MDC:[traceId=, spanId=]
2025-05-29 13:49:58 [http-nio-8088-exec-4] DEBUG o.h.e.i.AbstractFlushingEventListener - Dirty checking collections MDC:[traceId=, spanId=]
2025-05-29 13:49:58 [http-nio-8088-exec-4] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects MDC:[traceId=, spanId=]
2025-05-29 13:49:58 [http-nio-8088-exec-4] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections MDC:[traceId=, spanId=]
2025-05-29 13:49:58 [http-nio-8088-exec-4] DEBUG o.h.internal.util.EntityPrinter - Listing entities: MDC:[traceId=, spanId=]
2025-05-29 13:49:58 [http-nio-8088-exec-4] DEBUG o.h.internal.util.EntityPrinter - com.example.transaction_service.entity.Transaction{amount=10000.00, fromAccountNumber=970452999999999, bankType=INTERNAL, description=Nộp tiền , type=DEPOSIT, destinationBankCode=null, toAccountNumber=87654321, currency=VND, id=d26f06cd-e484-4afa-aba4-60e47e431f80, referenceCode=TXN-970452999999999-202505291349130affa5a3, failedReason=Nhập sai OTP quá 3 lần, status=FAILED, timestamp=2025-05-29T13:49:13.162038} MDC:[traceId=, spanId=]
2025-05-29 13:49:58 [http-nio-8088-exec-4] DEBUG org.hibernate.SQL - update tbl_transaction set amount=?,bank_type=?,currency=?,description=?,destination_bank_code=?,failed_reason=?,from_account_number=?,reference_code=?,status=?,timestamp=?,to_account_number=?,type=? where id=? MDC:[traceId=, spanId=]
2025-05-29 13:50:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-05-29 13:50:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-05-29 13:50:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-05-29 13:50:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-05-29 13:50:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@580c93a3 MDC:[traceId=, spanId=]
2025-05-29 13:50:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-05-29 13:50:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@696a769b MDC:[traceId=, spanId=]
2025-05-29 13:50:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-05-29 13:50:09 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-05-29 13:50:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-05-29 13:50:09 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-05-29 13:50:09 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@716784274 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-05-29 13:50:09 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-05-29 13:50:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-05-29 13:50:35 [http-nio-8088-exec-5] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-05-29 13:50:35 [http-nio-8088-exec-5] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-05-29 13:50:35 [http-nio-8088-exec-5] DEBUG o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier MDC:[traceId=, spanId=]
2025-05-29 13:50:35 [http-nio-8088-exec-5] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-05-29 13:50:35 [http-nio-8088-exec-5] DEBUG o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades MDC:[traceId=, spanId=]
2025-05-29 13:50:35 [http-nio-8088-exec-5] DEBUG o.h.e.i.AbstractFlushingEventListener - Dirty checking collections MDC:[traceId=, spanId=]
2025-05-29 13:50:35 [http-nio-8088-exec-5] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects MDC:[traceId=, spanId=]
2025-05-29 13:50:35 [http-nio-8088-exec-5] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections MDC:[traceId=, spanId=]
2025-05-29 13:50:35 [http-nio-8088-exec-5] DEBUG o.h.internal.util.EntityPrinter - Listing entities: MDC:[traceId=, spanId=]
2025-05-29 13:50:35 [http-nio-8088-exec-5] DEBUG o.h.internal.util.EntityPrinter - com.example.transaction_service.entity.Transaction{amount=7000, fromAccountNumber=12345678, bankType=INTERNAL, description=Chuyển tiền , type=TRANSFER, destinationBankCode=null, toAccountNumber=87654321, currency=VND, id=8f998d92-401d-4c3e-afc9-c58f905f5f59, referenceCode=TXN-12345678-20250529135035f652b998, failedReason=null, status=PENDING, timestamp=2025-05-29T13:50:35.660415} MDC:[traceId=, spanId=]
2025-05-29 13:50:35 [http-nio-8088-exec-5] DEBUG org.hibernate.SQL - insert into tbl_transaction (amount,bank_type,currency,description,destination_bank_code,failed_reason,from_account_number,reference_code,status,timestamp,to_account_number,type,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?) MDC:[traceId=, spanId=]
2025-05-29 13:51:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-05-29 13:51:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-05-29 13:51:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-05-29 13:51:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-05-29 13:51:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@47689877 MDC:[traceId=, spanId=]
2025-05-29 13:51:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-05-29 13:51:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3cf9838d MDC:[traceId=, spanId=]
2025-05-29 13:51:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-05-29 13:51:09 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-05-29 13:51:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-05-29 13:51:09 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-05-29 13:51:09 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@973985337 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-05-29 13:51:09 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-05-29 13:51:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-05-29 13:51:10 [http-nio-8088-exec-7] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-05-29 13:51:10 [http-nio-8088-exec-7] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-05-29 13:51:10 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-05-29 13:51:10 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-05-29 13:51:10 [http-nio-8088-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4166fe0a MDC:[traceId=, spanId=]
2025-05-29 13:51:10 [http-nio-8088-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).referenceCode)  MDC:[traceId=, spanId=]
2025-05-29 13:51:10 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 MDC:[traceId=, spanId=]
2025-05-29 13:51:10 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-05-29 13:51:10 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-05-29 13:51:11 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@900394847 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-05-29 13:51:11 [http-nio-8088-exec-7] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.reference_code=? MDC:[traceId=, spanId=]
2025-05-29 13:51:11 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [8f998d92-401d-4c3e-afc9-c58f905f5f59] MDC:[traceId=, spanId=]
2025-05-29 13:51:11 [http-nio-8088-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(2)): 8f998d92-401d-4c3e-afc9-c58f905f5f59 MDC:[traceId=, spanId=]
2025-05-29 13:51:11 [http-nio-8088-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(2)#8f998d92-401d-4c3e-afc9-c58f905f5f59] : 799650549 MDC:[traceId=, spanId=]
2025-05-29 13:51:11 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [7000.00] MDC:[traceId=, spanId=]
2025-05-29 13:51:11 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-05-29 13:51:11 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [VND] MDC:[traceId=, spanId=]
2025-05-29 13:51:11 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [Chuyển tiền ] MDC:[traceId=, spanId=]
2025-05-29 13:51:11 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [null] MDC:[traceId=, spanId=]
2025-05-29 13:51:11 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [null] MDC:[traceId=, spanId=]
2025-05-29 13:51:11 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [12345678] MDC:[traceId=, spanId=]
2025-05-29 13:51:11 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [TXN-12345678-20250529135035f652b998] MDC:[traceId=, spanId=]
2025-05-29 13:51:11 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [PENDING] MDC:[traceId=, spanId=]
2025-05-29 13:51:11 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [2025-05-29T13:50:35.660415] MDC:[traceId=, spanId=]
2025-05-29 13:51:11 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [87654321] MDC:[traceId=, spanId=]
2025-05-29 13:51:11 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [TRANSFER] MDC:[traceId=, spanId=]
2025-05-29 13:51:11 [http-nio-8088-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(2)#8f998d92-401d-4c3e-afc9-c58f905f5f59 MDC:[traceId=, spanId=]
2025-05-29 13:51:11 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4d1b7048 MDC:[traceId=, spanId=]
2025-05-29 13:51:11 [http-nio-8088-exec-7] DEBUG o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier MDC:[traceId=, spanId=]
2025-05-29 13:51:11 [http-nio-8088-exec-7] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-05-29 13:51:11 [http-nio-8088-exec-7] DEBUG o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades MDC:[traceId=, spanId=]
2025-05-29 13:51:11 [http-nio-8088-exec-7] DEBUG o.h.e.i.AbstractFlushingEventListener - Dirty checking collections MDC:[traceId=, spanId=]
2025-05-29 13:51:11 [http-nio-8088-exec-7] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects MDC:[traceId=, spanId=]
2025-05-29 13:51:11 [http-nio-8088-exec-7] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections MDC:[traceId=, spanId=]
2025-05-29 13:51:11 [http-nio-8088-exec-7] DEBUG o.h.internal.util.EntityPrinter - Listing entities: MDC:[traceId=, spanId=]
2025-05-29 13:51:11 [http-nio-8088-exec-7] DEBUG o.h.internal.util.EntityPrinter - com.example.transaction_service.entity.Transaction{amount=7000.00, fromAccountNumber=12345678, bankType=INTERNAL, description=Chuyển tiền , type=TRANSFER, destinationBankCode=null, toAccountNumber=87654321, currency=VND, id=8f998d92-401d-4c3e-afc9-c58f905f5f59, referenceCode=TXN-12345678-20250529135035f652b998, failedReason=Số dư không đủ, status=FAILED, timestamp=2025-05-29T13:50:35.660415} MDC:[traceId=, spanId=]
2025-05-29 13:51:11 [http-nio-8088-exec-7] DEBUG org.hibernate.SQL - update tbl_transaction set amount=?,bank_type=?,currency=?,description=?,destination_bank_code=?,failed_reason=?,from_account_number=?,reference_code=?,status=?,timestamp=?,to_account_number=?,type=? where id=? MDC:[traceId=, spanId=]
2025-05-29 13:51:26 [http-nio-8088-exec-8] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-05-29 13:51:26 [http-nio-8088-exec-8] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-05-29 13:51:26 [http-nio-8088-exec-8] DEBUG o.h.e.t.internal.TransactionImpl - rolling back MDC:[traceId=, spanId=]
2025-05-29 13:52:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-05-29 13:52:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-05-29 13:52:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-05-29 13:52:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-05-29 13:52:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@70183410 MDC:[traceId=, spanId=]
2025-05-29 13:52:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-05-29 13:52:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@72c32967 MDC:[traceId=, spanId=]
2025-05-29 13:52:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-05-29 13:52:09 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-05-29 13:52:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-05-29 13:52:09 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-05-29 13:52:09 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1098497570 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-05-29 13:52:09 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-05-29 13:52:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-05-29 13:53:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-05-29 13:53:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-05-29 13:53:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-05-29 13:53:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-05-29 13:53:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3b84734a MDC:[traceId=, spanId=]
2025-05-29 13:53:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-05-29 13:53:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1e8a921 MDC:[traceId=, spanId=]
2025-05-29 13:53:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-05-29 13:53:09 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-05-29 13:53:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-05-29 13:53:09 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-05-29 13:53:09 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@776315798 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-05-29 13:53:09 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-05-29 13:53:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-05-29 13:54:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-05-29 13:54:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-05-29 13:54:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-05-29 13:54:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-05-29 13:54:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@ba34d50 MDC:[traceId=, spanId=]
2025-05-29 13:54:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-05-29 13:54:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@57606b0 MDC:[traceId=, spanId=]
2025-05-29 13:54:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-05-29 13:54:09 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-05-29 13:54:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-05-29 13:54:09 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-05-29 13:54:09 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@2078652050 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-05-29 13:54:09 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-05-29 13:54:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-05-29 13:55:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-05-29 13:55:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-05-29 13:55:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-05-29 13:55:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-05-29 13:55:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5f546df3 MDC:[traceId=, spanId=]
2025-05-29 13:55:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-05-29 13:55:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@b9c2de4 MDC:[traceId=, spanId=]
2025-05-29 13:55:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-05-29 13:55:09 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-05-29 13:55:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-05-29 13:55:09 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-05-29 13:55:09 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1680057865 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-05-29 13:55:09 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-05-29 13:55:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-05-29 13:56:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-05-29 13:56:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-05-29 13:56:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-05-29 13:56:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-05-29 13:56:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@43326f85 MDC:[traceId=, spanId=]
2025-05-29 13:56:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-05-29 13:56:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@25375da MDC:[traceId=, spanId=]
2025-05-29 13:56:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-05-29 13:56:09 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-05-29 13:56:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-05-29 13:56:09 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-05-29 13:56:09 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@644845737 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-05-29 13:56:09 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-05-29 13:56:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-05-29 13:57:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-05-29 13:57:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-05-29 13:57:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-05-29 13:57:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-05-29 13:57:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4846f092 MDC:[traceId=, spanId=]
2025-05-29 13:57:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-05-29 13:57:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@31cbbe01 MDC:[traceId=, spanId=]
2025-05-29 13:57:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-05-29 13:57:09 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-05-29 13:57:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-05-29 13:57:09 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-05-29 13:57:09 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1603444808 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-05-29 13:57:09 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-05-29 13:57:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-05-29 13:58:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-05-29 13:58:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-05-29 13:58:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-05-29 13:58:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-05-29 13:58:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@11327ab3 MDC:[traceId=, spanId=]
2025-05-29 13:58:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-05-29 13:58:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3d2c5f46 MDC:[traceId=, spanId=]
2025-05-29 13:58:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-05-29 13:58:09 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-05-29 13:58:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-05-29 13:58:09 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-05-29 13:58:09 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1649420460 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-05-29 13:58:09 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-05-29 13:58:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-05-29 13:59:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-05-29 13:59:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-05-29 13:59:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-05-29 13:59:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-05-29 13:59:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2d288108 MDC:[traceId=, spanId=]
2025-05-29 13:59:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-05-29 13:59:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@698eb222 MDC:[traceId=, spanId=]
2025-05-29 13:59:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-05-29 13:59:09 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-05-29 13:59:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-05-29 13:59:09 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-05-29 13:59:09 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@623749727 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-05-29 13:59:09 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-05-29 13:59:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-05-29 14:00:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-05-29 14:00:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-05-29 14:00:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-05-29 14:00:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-05-29 14:00:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@604fec08 MDC:[traceId=, spanId=]
2025-05-29 14:00:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-05-29 14:00:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@26ab7fda MDC:[traceId=, spanId=]
2025-05-29 14:00:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-05-29 14:00:09 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-05-29 14:00:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-05-29 14:00:09 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-05-29 14:00:09 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@171275359 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-05-29 14:00:09 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-05-29 14:00:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-05-29 14:01:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-05-29 14:01:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-05-29 14:01:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-05-29 14:01:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-05-29 14:01:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@688bc01e MDC:[traceId=, spanId=]
2025-05-29 14:01:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-05-29 14:01:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@26ac95f8 MDC:[traceId=, spanId=]
2025-05-29 14:01:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-05-29 14:01:09 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-05-29 14:01:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-05-29 14:01:09 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-05-29 14:01:09 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1325910600 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-05-29 14:01:09 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-05-29 14:01:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-05-29 14:02:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-05-29 14:02:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-05-29 14:02:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-05-29 14:02:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-05-29 14:02:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@22a5bbd5 MDC:[traceId=, spanId=]
2025-05-29 14:02:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-05-29 14:02:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@683c5f9d MDC:[traceId=, spanId=]
2025-05-29 14:02:09 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-05-29 14:02:09 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-05-29 14:02:09 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-05-29 14:02:09 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-05-29 14:02:09 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1006041084 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-05-29 14:02:09 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-05-29 14:02:09 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-05-29 14:02:25 [SpringContextShutdownHook] DEBUG o.h.internal.SessionFactoryImpl - HHH000031: Closing MDC:[traceId=, spanId=]
2025-05-29 14:02:25 [SpringContextShutdownHook] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@5a20f716] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@50e1d862] MDC:[traceId=, spanId=]
2025-05-29 14:02:25 [SpringContextShutdownHook] DEBUG o.h.s.i.AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries MDC:[traceId=, spanId=]
2025-05-29 14:02:25 [SpringContextShutdownHook] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries MDC:[traceId=, spanId=]
2025-05-29 14:02:34 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final MDC:[traceId=, spanId=]
2025-05-29 14:02:34 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-05-29 14:02:34 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-05-29 14:02:34 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-05-29 14:02:34 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-05-29 14:02:34 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-05-29 14:02:34 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-05-29 14:02:34 [background-preinit] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-05-29 14:02:35 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-05-29 14:02:35 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-05-29 14:02:35 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-05-29 14:02:35 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-05-29 14:02:35 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-05-29 14:02:35 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-05-29 14:02:39 [restartedMain] DEBUG o.h.jpa.internal.util.LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@10da5e9e
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/LT_Web/SpringBoot/java-banking-phase2/backend/transaction-service/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.example.transaction_service.entity.Transaction]
	Mapping files names []
	Properties [] MDC:[traceId=, spanId=]
2025-05-29 14:02:39 [restartedMain] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator]. MDC:[traceId=, spanId=]
2025-05-29 14:02:39 [restartedMain] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator]. MDC:[traceId=, spanId=]
2025-05-29 14:02:39 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final MDC:[traceId=, spanId=]
2025-05-29 14:02:39 [restartedMain] DEBUG org.hibernate.cfg.Environment - HHH000206: 'hibernate.properties' not found MDC:[traceId=, spanId=]
2025-05-29 14:02:39 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator] MDC:[traceId=, spanId=]
2025-05-29 14:02:39 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator] MDC:[traceId=, spanId=]
2025-05-29 14:02:39 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator] MDC:[traceId=, spanId=]
2025-05-29 14:02:39 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator] MDC:[traceId=, spanId=]
2025-05-29 14:02:39 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned] MDC:[traceId=, spanId=]
2025-05-29 14:02:39 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator] MDC:[traceId=, spanId=]
2025-05-29 14:02:39 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator] MDC:[traceId=, spanId=]
2025-05-29 14:02:39 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] MDC:[traceId=, spanId=]
2025-05-29 14:02:39 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator] MDC:[traceId=, spanId=]
2025-05-29 14:02:39 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator] MDC:[traceId=, spanId=]
2025-05-29 14:02:39 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] MDC:[traceId=, spanId=]
2025-05-29 14:02:39 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator] MDC:[traceId=, spanId=]
2025-05-29 14:02:39 [restartedMain] DEBUG o.h.c.i.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered MDC:[traceId=, spanId=]
2025-05-29 14:02:39 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1b476dd5 MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1b476dd5 MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@1b476dd5 MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@2dfe542c MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@2dfe542c MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@12fffa1a MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@12fffa1a MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@43500074 MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@43500074 MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@63d9e40e MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@63d9e40e MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@63d9e40e MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@3c59936d MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@3c59936d MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@3c59936d MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@519b91d6 MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@519b91d6 MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@120b7831 MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@3ede17ea MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@3ede17ea MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@4eec29a7 MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@43f4048d MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@a772632 MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@a772632 MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@a772632 MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@44d811d1 MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@44d811d1 MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@44d811d1 MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@6bd6a9fc MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@6bd6a9fc MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@6bd6a9fc MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@8650867 MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@8650867 MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@8650867 MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@3b10e9ef MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@3b10e9ef MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@3b10e9ef MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@3fc231c5 MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@3fc231c5 MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@6105e688 MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@6105e688 MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@4183fcff MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@4183fcff MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@4183fcff MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@7de02ab1 MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@538260d1 MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@538260d1 MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@1dfded8f MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@43479ecb MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@43479ecb MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@43479ecb MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@3f0e81b0 MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@7f4afa68 MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@da9f19b MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@72678723 MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@72678723 MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@39af8bde MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@39af8bde MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@111ebf39 MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@5379a1a8 MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@1d697a7b MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@585de373 MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@3cde7836 MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@22b4eae4 MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@74d8f66b MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@74d8f66b MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@4329d5f8 MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@4329d5f8 MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@cf90a63 MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@cf90a63 MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@99f32d2 MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@99f32d2 MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@3ac7f624 MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@3ac7f624 MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@374c6291 MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@73a2dc09 MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@35b790d MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@35b790d MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@628c994 MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@52246b2a MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3703a7f3 MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@6fc8330f MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@6fc8330f MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2f6c230b MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5ee060f7 MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@747678e7 MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@747678e7 MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@5a886d2d MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@5a886d2d MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@14b2790c MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@14b2790c MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@14b2790c MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@498854b5 MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@498854b5 MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@498854b5 MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@efeac23 MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@178659d4 MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@10fb3831 MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@10fb3831 MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@1bddeb67 MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@1bddeb67 MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@1bddeb67 MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@6039c38b MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@45547ea1 MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@ca7fc8a MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@ca7fc8a MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@78d5b8aa MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@78d5b8aa MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@78d5b8aa MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@565e09a0 MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@565e09a0 MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@3019c4bc MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@3019c4bc MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@3e92d99 MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@3e92d99 MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@562cc5a6 MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@562cc5a6 MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@7019d5ca MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7019d5ca MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@edbc351 MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@4494b2f6 MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@190b863e MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@190b863e MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@6bc7a45d MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@58ac143d MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@299452bf MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@152e075a MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@431dacee MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@7ba8454c MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@70a2e12c MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@15d32cb5 MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@3b87883d MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@29de2aa0] into BootstrapContext; was [null] MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@29de2aa0) [was null] MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@6ca9a309] into BootstrapContext; was [null] MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@45199b02] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@75ad4a78] MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@29de2aa0] MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@29de2aa0] MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Database ->
	   name : MySQL
	version : 8.0.32
	  major : 8
	  minor : 0 MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Driver ->
	   name : MySQL Connector/J
	version : mysql-connector-j-8.3.0 (Revision: 805f872a57875f311cb82487efcfb070411a3fa0)
	  major : 8
	  minor : 3 MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - JDBC version : 4.2 MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default) MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG org.hibernate.orm.dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQL8Dialect, version: 8.0 MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7649d7b3) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3a73dff1) MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@17e25df0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4fa15731) MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@77edf539) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@53452062) MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@564dfa27) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@13903700) MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@bcc5c76) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@71f03b5d) MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@48557b86) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5a6f7dbb) MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@33a9a56c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@43f35a97) MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@20199024) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@13ab339) MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7fc6e4b7) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@26383e3a) MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor) MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor) MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor) MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT)) MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT)) MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@706a9005 MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@6bc7a45d` MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@b90c19f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5a099882] MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.boot.model.relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}] MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Transaction MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity com.example.transaction_service.entity.Transaction on table tbl_transaction MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE') MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.example.transaction_service.entity.Transaction] is safe MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property id with lazy=false MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:id] MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for id MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.id MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property id MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, assigned, , ...) MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property amount with lazy=false MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:amount] MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for amount MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.amount MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property amount MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property bankType with lazy=false MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:bankType] MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for bankType MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.bank_type MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property bankType MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property currency with lazy=false MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:currency] MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for currency MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.currency MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property currency MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property description with lazy=false MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:description] MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for description MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.description MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property description MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property destinationBankCode with lazy=false MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:destinationBankCode] MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for destinationBankCode MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.destination_bank_code MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property destinationBankCode MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property failedReason with lazy=false MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:failedReason] MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for failedReason MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.failed_reason MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property failedReason MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property fromAccountNumber with lazy=false MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:fromAccountNumber] MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for fromAccountNumber MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.from_account_number MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property fromAccountNumber MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property referenceCode with lazy=false MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:referenceCode] MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for referenceCode MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.reference_code MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property referenceCode MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property status with lazy=false MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:status] MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for status MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.status MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property status MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property timestamp with lazy=false MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:timestamp] MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for timestamp MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.timestamp MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property timestamp MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property toAccountNumber with lazy=false MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:toAccountNumber] MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for toAccountNumber MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.to_account_number MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property toAccountNumber MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property type with lazy=false MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:type] MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for type MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.type MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property type MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: com.example.transaction_service.entity MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.j.e.i.CallbackDefinitionResolverLegacyImpl - Adding prePersist as PrePersist callback for entity com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bankType MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for currency MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for description MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for destinationBankCode MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for failedReason MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for fromAccountNumber MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for referenceCode MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for timestamp MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for toAccountNumber MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for type MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [tbl_transaction] MDC:[traceId=, spanId=]
2025-05-29 14:02:40 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Building session factory MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Instantiating SessionFactory with settings: {jdk.tls.rejectClientInitiatedRenegotiation=true, java.specification.version=17, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@4cb8c4ea, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=D:\LT_Web\SpringBoot\java-banking-phase2\backend\transaction-service\target\classes;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-actuator\3.3.11\spring-boot-starter-actuator-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter\3.3.11\spring-boot-starter-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.3.11\spring-boot-starter-logging-3.3.11.jar;C:\Users\A715-42G\.m2\repository\ch\qos\logback\logback-classic\1.5.18\logback-classic-1.5.18.jar;C:\Users\A715-42G\.m2\repository\ch\qos\logback\logback-core\1.5.18\logback-core-1.5.18.jar;C:\Users\A715-42G\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.23.1\log4j-to-slf4j-2.23.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\logging\log4j\log4j-api\2.23.1\log4j-api-2.23.1.jar;C:\Users\A715-42G\.m2\repository\org\slf4j\jul-to-slf4j\2.0.17\jul-to-slf4j-2.0.17.jar;C:\Users\A715-42G\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\A715-42G\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-actuator-autoconfigure\3.3.11\spring-boot-actuator-autoconfigure-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-actuator\3.3.11\spring-boot-actuator-3.3.11.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.17.3\jackson-datatype-jsr310-2.17.3.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-observation\1.13.13\micrometer-observation-1.13.13.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-commons\1.13.13\micrometer-commons-1.13.13.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-jakarta9\1.13.13\micrometer-jakarta9-1.13.13.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-core\1.13.13\micrometer-core-1.13.13.jar;C:\Users\A715-42G\.m2\repository\org\hdrhistogram\HdrHistogram\2.2.2\HdrHistogram-2.2.2.jar;C:\Users\A715-42G\.m2\repository\org\latencyutils\LatencyUtils\2.0.3\LatencyUtils-2.0.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.3.11\spring-boot-starter-data-jpa-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.3.11\spring-boot-starter-aop-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-aop\6.1.19\spring-aop-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\aspectj\aspectjweaver\1.9.24\aspectjweaver-1.9.24.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.3.11\spring-boot-starter-jdbc-3.3.11.jar;C:\Users\A715-42G\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-jdbc\6.1.19\spring-jdbc-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\orm\hibernate-core\6.5.3.Final\hibernate-core-6.5.3.Final.jar;C:\Users\A715-42G\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\A715-42G\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\A715-42G\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\A715-42G\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\A715-42G\.m2\repository\net\bytebuddy\byte-buddy\1.14.19\byte-buddy-1.14.19.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\A715-42G\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\A715-42G\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\A715-42G\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-jpa\3.3.11\spring-data-jpa-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-commons\3.3.11\spring-data-commons-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-orm\6.1.19\spring-orm-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-context\6.1.19\spring-context-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-tx\6.1.19\spring-tx-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-beans\6.1.19\spring-beans-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-aspects\6.1.19\spring-aspects-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.3.11\spring-boot-starter-web-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.3.11\spring-boot-starter-json-3.3.11.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.17.3\jackson-datatype-jdk8-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.17.3\jackson-module-parameter-names-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.3.11\spring-boot-starter-tomcat-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.40\tomcat-embed-core-10.1.40.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.40\tomcat-embed-websocket-10.1.40.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-web\6.1.19\spring-web-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-webmvc\6.1.19\spring-webmvc-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-expression\6.1.19\spring-expression-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-devtools\3.3.11\spring-boot-devtools-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot\3.3.11\spring-boot-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.3.11\spring-boot-autoconfigure-3.3.11.jar;C:\Users\A715-42G\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\A715-42G\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-core\6.1.19\spring-core-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-jcl\6.1.19\spring-jcl-6.1.19.jar;C:\Users\A715-42G\.m2\repository\com\mysql\mysql-connector-j\8.3.0\mysql-connector-j-8.3.0.jar;C:\Users\A715-42G\.m2\repository\org\projectlombok\lombok\1.18.38\lombok-1.18.38.jar;C:\Users\A715-42G\.m2\repository\org\mapstruct\mapstruct\1.5.5.Final\mapstruct-1.5.5.Final.jar;C:\Users\A715-42G\.m2\repository\org\mapstruct\mapstruct-processor\1.5.5.Final\mapstruct-processor-1.5.5.Final.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-validation\3.3.11\spring-boot-starter-validation-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.40\tomcat-embed-el-10.1.40.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\validator\hibernate-validator\8.0.2.Final\hibernate-validator-8.0.2.Final.jar;C:\Users\A715-42G\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-ui\2.0.2\springdoc-openapi-starter-webmvc-ui-2.0.2.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-api\2.0.2\springdoc-openapi-starter-webmvc-api-2.0.2.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-common\2.0.2\springdoc-openapi-starter-common-2.0.2.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-core-jakarta\2.2.7\swagger-core-jakarta-2.2.7.jar;C:\Users\A715-42G\.m2\repository\org\apache\commons\commons-lang3\3.14.0\commons-lang3-3.14.0.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-annotations-jakarta\2.2.7\swagger-annotations-jakarta-2.2.7.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-models-jakarta\2.2.7\swagger-models-jakarta-2.2.7.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-yaml\2.17.3\jackson-dataformat-yaml-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\webjars\swagger-ui\4.15.5\swagger-ui-4.15.5.jar;C:\Users\A715-42G\.m2\repository\org\webjars\webjars-locator-core\0.58\webjars-locator-core-0.58.jar;C:\Users\A715-42G\.m2\repository\io\github\classgraph\classgraph\4.8.149\classgraph-4.8.149.jar;D:\LT_Web\SpringBoot\java-banking-phase2\backend\common-service\target\classes;C:\Users\A715-42G\.m2\repository\org\apache\dubbo\dubbo-spring-boot-starter\3.3.2\dubbo-spring-boot-starter-3.3.2.jar;C:\Users\A715-42G\.m2\repository\org\apache\dubbo\dubbo-spring-boot-autoconfigure\3.3.2\dubbo-spring-boot-autoconfigure-3.3.2.jar;C:\Users\A715-42G\.m2\repository\org\apache\dubbo\dubbo-spring-boot-autoconfigure-compatible\3.3.2\dubbo-spring-boot-autoconfigure-compatible-3.3.2.jar;C:\Users\A715-42G\.m2\repository\org\apache\dubbo\dubbo\3.3.2\dubbo-3.3.2.jar;C:\Users\A715-42G\.m2\repository\org\javassist\javassist\3.30.2-GA\javassist-3.30.2-GA.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-all\4.1.119.Final\netty-all-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-dns\4.1.119.Final\netty-codec-dns-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-haproxy\4.1.119.Final\netty-codec-haproxy-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-http\4.1.119.Final\netty-codec-http-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-http2\4.1.119.Final\netty-codec-http2-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-memcache\4.1.119.Final\netty-codec-memcache-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-mqtt\4.1.119.Final\netty-codec-mqtt-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-redis\4.1.119.Final\netty-codec-redis-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-smtp\4.1.119.Final\netty-codec-smtp-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-socks\4.1.119.Final\netty-codec-socks-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-stomp\4.1.119.Final\netty-codec-stomp-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-xml\4.1.119.Final\netty-codec-xml-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-handler-proxy\4.1.119.Final\netty-handler-proxy-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-handler-ssl-ocsp\4.1.119.Final\netty-handler-ssl-ocsp-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-resolver-dns\4.1.119.Final\netty-resolver-dns-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-rxtx\4.1.119.Final\netty-transport-rxtx-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-sctp\4.1.119.Final\netty-transport-sctp-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-udt\4.1.119.Final\netty-transport-udt-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-classes-kqueue\4.1.119.Final\netty-transport-classes-kqueue-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-resolver-dns-classes-macos\4.1.119.Final\netty-resolver-dns-classes-macos-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final-linux-x86_64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final-linux-aarch_64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final-linux-riscv64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-kqueue\4.1.119.Final\netty-transport-native-kqueue-4.1.119.Final-osx-x86_64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-kqueue\4.1.119.Final\netty-transport-native-kqueue-4.1.119.Final-osx-aarch_64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-resolver-dns-native-macos\4.1.119.Final\netty-resolver-dns-native-macos-4.1.119.Final-osx-x86_64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-resolver-dns-native-macos\4.1.119.Final\netty-resolver-dns-native-macos-4.1.119.Final-osx-aarch_64.jar;C:\Users\A715-42G\.m2\repository\org\apache\dubbo\hessian-lite\4.0.3\hessian-lite-4.0.3.jar;C:\Users\A715-42G\.m2\repository\com\alibaba\fastjson2\fastjson2\2.0.53\fastjson2-2.0.53.jar;C:\Users\A715-42G\.m2\repository\com\google\protobuf\protobuf-java\3.25.5\protobuf-java-3.25.5.jar;C:\Users\A715-42G\.m2\repository\org\apache\curator\curator-framework\5.1.0\curator-framework-5.1.0.jar;C:\Users\A715-42G\.m2\repository\org\apache\curator\curator-client\5.1.0\curator-client-5.1.0.jar;C:\Users\A715-42G\.m2\repository\com\google\guava\guava\27.0.1-jre\guava-27.0.1-jre.jar;C:\Users\A715-42G\.m2\repository\com\google\guava\failureaccess\1.0.1\failureaccess-1.0.1.jar;C:\Users\A715-42G\.m2\repository\com\google\guava\listenablefuture\9999.0-empty-to-avoid-conflict-with-guava\listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar;C:\Users\A715-42G\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\A715-42G\.m2\repository\org\checkerframework\checker-qual\2.5.2\checker-qual-2.5.2.jar;C:\Users\A715-42G\.m2\repository\com\google\errorprone\error_prone_annotations\2.2.0\error_prone_annotations-2.2.0.jar;C:\Users\A715-42G\.m2\repository\com\google\j2objc\j2objc-annotations\1.1\j2objc-annotations-1.1.jar;C:\Users\A715-42G\.m2\repository\org\codehaus\mojo\animal-sniffer-annotations\1.17\animal-sniffer-annotations-1.17.jar;C:\Users\A715-42G\.m2\repository\org\apache\zookeeper\zookeeper\3.7.1\zookeeper-3.7.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\zookeeper\zookeeper-jute\3.7.1\zookeeper-jute-3.7.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\yetus\audience-annotations\0.12.0\audience-annotations-0.12.0.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-handler\4.1.119.Final\netty-handler-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-common\4.1.119.Final\netty-common-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-resolver\4.1.119.Final\netty-resolver-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-buffer\4.1.119.Final\netty-buffer-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport\4.1.119.Final\netty-transport-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-unix-common\4.1.119.Final\netty-transport-native-unix-common-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec\4.1.119.Final\netty-codec-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-classes-epoll\4.1.119.Final\netty-transport-classes-epoll-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\org\slf4j\slf4j-api\2.0.17\slf4j-api-2.0.17.jar;C:\Users\A715-42G\.m2\repository\org\apache\curator\curator-recipes\5.5.0\curator-recipes-5.5.0.jar;C:\Users\A715-42G\.m2\repository\org\apache\curator\curator-x-discovery\5.5.0\curator-x-discovery-5.5.0.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.17.3\jackson-databind-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.17.3\jackson-annotations-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.17.3\jackson-core-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-starter-vault-config\4.1.1\spring-cloud-starter-vault-config-4.1.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\httpcomponents\client5\httpclient5\5.3.1\httpclient5-5.3.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\httpcomponents\core5\httpcore5-h2\5.2.5\httpcore5-h2-5.2.5.jar;C:\Users\A715-42G\.m2\repository\org\apache\httpcomponents\core5\httpcore5\5.2.5\httpcore5-5.2.5.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-starter\4.1.2\spring-cloud-starter-4.1.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-context\4.1.2\spring-cloud-context-4.1.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-crypto\6.3.9\spring-security-crypto-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-commons\4.1.2\spring-cloud-commons-4.1.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-rsa\1.1.2\spring-security-rsa-1.1.2.jar;C:\Users\A715-42G\.m2\repository\org\bouncycastle\bcprov-jdk18on\1.77\bcprov-jdk18on-1.77.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-vault-config\4.1.1\spring-cloud-vault-config-4.1.1.jar;C:\Users\A715-42G\.m2\repository\org\springframework\vault\spring-vault-core\3.1.1\spring-vault-core-3.1.1.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-data-redis\3.3.11\spring-boot-starter-data-redis-3.3.11.jar;C:\Users\A715-42G\.m2\repository\io\lettuce\lettuce-core\6.3.2.RELEASE\lettuce-core-6.3.2.RELEASE.jar;C:\Users\A715-42G\.m2\repository\io\projectreactor\reactor-core\3.6.16\reactor-core-3.6.16.jar;C:\Users\A715-42G\.m2\repository\org\reactivestreams\reactive-streams\1.0.4\reactive-streams-1.0.4.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-redis\3.3.11\spring-data-redis-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-keyvalue\3.3.11\spring-data-keyvalue-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-oxm\6.1.19\spring-oxm-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-context-support\6.1.19\spring-context-support-6.1.19.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Saigon, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, java.vm.specification.version=17, os.name=Windows 10, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-17\bin, sun.java.command=com.example.transaction_service.TransactionServiceApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@3f103c8b, com.sun.management.jmxremote=, jdk.debug=release, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, hibernate.cdi.extensions=true, user.home=C:\Users\A715-42G, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-01-17, java.home=C:\Program Files\Java\jdk-17, file.separator=\, spring.output.ansi.enabled=always, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.6+9-LTS-190, user.name=A715-42G, spring.jmx.enabled=true, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\A715-42G\AppData\Local\Temp\, catalina.home=C:\Users\A715-42G\AppData\Local\Temp\tomcat.8088.7283387381873968102, java.version=17.0.6, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=D:\LT_Web\SpringBoot\java-banking-phase2, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=10812, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\A715-42G\AppData\Local\Temp\tomcat.8088.7283387381873968102, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@65028077, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-17\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;D:\Document\xxx\apache-maven-3.9.1\bin;C:\Program Files (x86)\Dev-Cpp\MinGW64\bin;C:\Program Files\Git\cmd;C:\Program Files\Java\jdk-17\bin;C:\Program Files\nodejs\;C:\XamPP\php;D:\LT_Web\SpringBoot\SpringBootCLI\spring-3.2.1\bin;D:\sqlite;C:\Program Files\dotnet\;D:\Document\Java\Maven\apache-maven-3.9.9\bin;D:\Document\Java\Maven\apache-maven-3.9.9\bin;C:\Program Files\Cloudflare\Cloudflare WARP\;C:\ProgramData\chocolatey\bin;D:\KienLongBank\Vault;D:\GrafanaLabs\grafana\bin;D:\KienLongBank\InfluxData\influxdb-1.8.10-1;D:\Document\Work\Redis;;C:\Program Files\Docker\Docker\resources\bin;C:\Users\A715-42G\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\A715-42G\AppData\Local\Programs\Python\Python310\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\A715-42G\AppData\Local\Programs\Eclipse Adoptium\jdk-17.0.3.7-hotspot\bin;C:\Users\A715-42G\AppData\Local\Microsoft\WindowsApps;C:\Users\A715-42G\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\Azure Data Studio\bin;C:\Program Files\Git\bin;D:\Document\HQT_ATCSDL\MongoDB\mongosh-1.8.2-win32-x64\bin;C:\Users\A715-42G\AppData\Roaming\npm;C:\XamPP\php;C:\Users\A715-42G\.dotnet\tools;C:\Program Files\Azure Data Studio\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, emulated-client, sharing, java.vm.version=17.0.6+9-LTS-190, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=61.0, LOGGED_APPLICATION_NAME=[transaction-service] } MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {} MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.example.transaction_service.entity.Transaction] is safe MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@6d083445] under count; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@4d679989] under every; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@6ecf7ff4] under any; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4f60e462] under sinh; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@77fa07cf] under cosh; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@25152684] under tanh; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@29952944] under pi; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@619e9be0] under log; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : length -> character_length MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@5e65c79e] under position; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@38a8549] under overlay; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@3b90b023] under trim; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@12b61c93] under cast; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@39294dfd] under collate; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@3dd4d2a9] under extract; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@249c46ab] under ifnull; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@777fc2e4] under pad; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@4e9368ab] under str; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@2332fcad] under format; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@7b9d4f2d] under timestampadd; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@45c6f419] under timestampdiff; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4a83f9a2] under current_date; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1bb80674] under current_time; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@15b4d478] under current_timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current date -> current_date MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current time -> current_time MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1002f9d7] under local_date; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@45195c9c] under local_time; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1e4979ed] under local_datetime; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2ded6948] under offset_datetime; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local date -> local_date MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local time -> local_time MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2a26e163] under instant; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current_instant -> instant MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@2bd67476] under sql; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@619e9be0 MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@79ef4ec2] under lpad; prior registration was NamedSqmFunctionTemplate(lpad) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@6be5f49] under rpad; prior registration was NamedSqmFunctionTemplate(rpad) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : day -> dayofmonth MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@54ca076c] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@5e65c79e MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@21f18f9b] under trunc; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : truncate -> trunc MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@33c63ccb] under bitand; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@94869cb] under bitor; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@fc41561] under bitxor; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@22e4de55] under bitnot; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@20469ea6] under format; prior registration was org.hibernate.dialect.function.FormatFunction@2332fcad MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@45195c9c MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@1e4979ed MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6a0abd54] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@29952944 MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@45cad269] under chr; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : char -> chr MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@41d8baf3] under sysdate; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@7d61a47d] under listagg; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - abs(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double acos(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - addtime(TIME datetime, TIME time) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean any(BOOLEAN arg) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer ascii(STRING arg) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double asin(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - avg(arg) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bit_and(arg) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bit_or(arg) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitand(arg0, arg1) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitnot(arg) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitor(arg0, arg1) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitxor(arg0, arg1) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - cast(arg as Type) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - ceiling(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Character char(INTEGER arg) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Character chr(INTEGER arg) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]]) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String collate(STRING string as COLLATION collation) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]]) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double cos(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double cosh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double cot(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Long count([distinct ]{arg|*}) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer crc32(arg) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date curdate() MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date current date MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time current time MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current timestamp MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date current_date MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Instant current_instant MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time current_time MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current_timestamp MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time curtime() MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date date(arg) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer datediff(DATE end, DATE start) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer day(DATE arg) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String dayname(DATE arg) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofmonth(DATE arg) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofweek(DATE arg) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofyear(DATE arg) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double degrees(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean every(BOOLEAN arg) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double exp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - floor(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]]) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer hour(TIME arg) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - ifnull(arg0, arg1) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Instant instant MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]]) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date last_day(DATE arg) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]]) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String left(STRING string, INTEGER length) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double ln(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local date MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local datetime MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local time MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local_date MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local_datetime MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local_time MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtime MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtimestamp MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start]) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1]) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double log10(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double log2(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String lower(STRING string) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String lpad(string, length[, padding]) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters]) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - max(COMPARABLE arg) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String md5(arg) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer microsecond(TIME arg) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - min(COMPARABLE arg) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer minute(TIME arg) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer month(DATE arg) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String monthname(DATE arg) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp now() MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - nullif(arg0, arg1) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset datetime MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset_datetime MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length]) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character]) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double pi MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer position(STRING pattern in STRING string) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer quarter(DATE arg) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double radians(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double rand([INTEGER seed]) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String repeat(STRING string, INTEGER times) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String reverse(STRING arg) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String right(STRING string, INTEGER length) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places]) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String rpad(string, length[, padding]) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters]) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer second(TIME arg) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String sha(arg) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String sha1(arg) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String sha2(arg0, arg1) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer sign(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double sin(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double sinh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String soundex(arg) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String space(INTEGER arg) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Object sql MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double sqrt(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String str(arg) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length]) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length]) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - subtime(TIME datetime, TIME time) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - sum(arg) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp sysdate() MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double tan(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double tanh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String time(arg) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1]) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - trunc( ... ) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - truncate( ... ) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String upper(STRING string) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date utc_date MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time utc_time MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp utc_timestamp MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_pop(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_samp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double variance(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer week(DATE arg) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer year(DATE arg) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.orm.query.plan.cache - Starting QueryInterpretationCache(2048) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.e.i.EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.example.transaction_service.entity.Transaction] is safe MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.example.transaction_service.entity.Transaction]: private accessor [amount] MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.orm.model.mapping.creation - Starting post-init callbacks MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(com.example.transaction_service.entity.Transaction) `staticFetchableList` generator MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction)] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction.type]
 MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select id from tbl_transaction where id=? MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into tbl_transaction (amount,bank_type,currency,description,destination_bank_code,failed_reason,from_account_number,reference_code,status,timestamp,to_account_number,type,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update tbl_transaction set amount=?,bank_type=?,currency=?,description=?,destination_bank_code=?,failed_reason=?,from_account_number=?,reference_code=?,status=?,timestamp=?,to_account_number=?,type=? where id=? MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from tbl_transaction where id=? MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@b90c19f] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@b5159eb] MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named HQL queries MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named SQL queries MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG org.hibernate.mapping.Table - No alter strings for table : tbl_transaction MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@557ff4ff MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.internal.SessionFactoryRegistry - Registering SessionFactory: 09ccc221-398b-4982-b1a5-affbb247437d (<unnamed>) MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Instantiated SessionFactory MDC:[traceId=, spanId=]
2025-05-29 14:02:41 [restartedMain] DEBUG o.h.s.internal.StatisticsInitiator - Statistics initialized [enabled=false] MDC:[traceId=, spanId=]
2025-05-29 14:02:42 [restartedMain] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy4/jdk.proxy4.$Proxy191.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.getCountQuery(JpaQueryLookupStrategy.java:204)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:171)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.example.transaction_service.TransactionServiceApplication.main(TransactionServiceApplication.java:14)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-05-29 14:02:42 [restartedMain] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy4/jdk.proxy4.$Proxy191.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.example.transaction_service.TransactionServiceApplication.main(TransactionServiceApplication.java:14)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-05-29 14:02:42 [restartedMain] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy4/jdk.proxy4.$Proxy191.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.example.transaction_service.TransactionServiceApplication.main(TransactionServiceApplication.java:14)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-05-29 14:02:42 [restartedMain] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-05-29 14:02:42 [restartedMain] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator MDC:[traceId=, spanId=]
2025-05-29 14:02:42 [restartedMain] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory MDC:[traceId=, spanId=]
2025-05-29 14:02:42 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-05-29 14:02:42 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader MDC:[traceId=, spanId=]
2025-05-29 14:02:42 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-05-29 14:02:42 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-05-29 14:02:42 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-05-29 14:02:42 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-05-29 14:02:42 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-05-29 14:02:42 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-05-29 14:02:42 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-05-29 14:02:42 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-05-29 14:02:42 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-05-29 14:02:42 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-05-29 14:02:42 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-05-29 14:02:45 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-05-29 14:02:45 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-05-29 14:02:45 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-05-29 14:02:45 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-05-29 14:02:45 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1ba04097 MDC:[traceId=, spanId=]
2025-05-29 14:02:45 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-05-29 14:02:45 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@72625202 MDC:[traceId=, spanId=]
2025-05-29 14:02:45 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-05-29 14:02:45 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-05-29 14:02:45 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-05-29 14:02:45 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-05-29 14:02:45 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1976385572 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-05-29 14:02:45 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-05-29 14:02:45 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-05-29 14:03:45 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-05-29 14:03:45 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-05-29 14:03:45 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-05-29 14:03:45 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-05-29 14:03:45 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@25d43b0a MDC:[traceId=, spanId=]
2025-05-29 14:03:45 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-05-29 14:03:45 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6566b6ae MDC:[traceId=, spanId=]
2025-05-29 14:03:45 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-05-29 14:03:45 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-05-29 14:03:45 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-05-29 14:03:45 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-05-29 14:03:45 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@688170197 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-05-29 14:03:45 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-05-29 14:03:45 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-05-29 14:04:45 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-05-29 14:04:45 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-05-29 14:04:45 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-05-29 14:04:45 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-05-29 14:04:45 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6f6559d3 MDC:[traceId=, spanId=]
2025-05-29 14:04:45 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-05-29 14:04:45 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5d7c522e MDC:[traceId=, spanId=]
2025-05-29 14:04:45 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-05-29 14:04:45 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-05-29 14:04:45 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-05-29 14:04:45 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-05-29 14:04:45 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1577539589 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-05-29 14:04:45 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-05-29 14:04:45 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-05-29 14:05:45 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-05-29 14:05:45 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-05-29 14:05:45 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-05-29 14:05:45 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-05-29 14:05:45 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@c36b19d MDC:[traceId=, spanId=]
2025-05-29 14:05:45 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-05-29 14:05:45 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1859a327 MDC:[traceId=, spanId=]
2025-05-29 14:05:45 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-05-29 14:05:45 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-05-29 14:05:45 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-05-29 14:05:45 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-05-29 14:05:45 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@899112596 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-05-29 14:05:45 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-05-29 14:05:45 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-05-29 14:06:45 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-05-29 14:06:45 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-05-29 14:06:45 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-05-29 14:06:45 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-05-29 14:06:45 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5aca5fc0 MDC:[traceId=, spanId=]
2025-05-29 14:06:45 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-05-29 14:06:45 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@b2c6566 MDC:[traceId=, spanId=]
2025-05-29 14:06:45 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-05-29 14:06:45 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-05-29 14:06:45 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-05-29 14:06:45 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-05-29 14:06:45 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1744751481 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-05-29 14:06:45 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-05-29 14:06:45 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-05-29 14:07:45 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-05-29 14:07:45 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-05-29 14:07:45 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-05-29 14:07:45 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-05-29 14:07:45 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3840af50 MDC:[traceId=, spanId=]
2025-05-29 14:07:45 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-05-29 14:07:45 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@385287bb MDC:[traceId=, spanId=]
2025-05-29 14:07:45 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-05-29 14:07:45 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-05-29 14:07:45 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-05-29 14:07:45 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-05-29 14:07:45 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@314020058 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-05-29 14:07:45 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-05-29 14:07:45 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-05-29 14:08:45 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-05-29 14:08:45 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-05-29 14:08:45 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-05-29 14:08:45 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-05-29 14:08:45 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@434a4640 MDC:[traceId=, spanId=]
2025-05-29 14:08:45 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-05-29 14:08:45 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@53786f19 MDC:[traceId=, spanId=]
2025-05-29 14:08:45 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-05-29 14:08:45 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-05-29 14:08:45 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-05-29 14:08:45 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-05-29 14:08:45 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1314484562 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-05-29 14:08:45 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-05-29 14:08:45 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-05-29 14:09:45 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-05-29 14:09:45 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-05-29 14:09:45 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-05-29 14:09:45 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-05-29 14:09:45 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@33357156 MDC:[traceId=, spanId=]
2025-05-29 14:09:45 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-05-29 14:09:45 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@20827d7b MDC:[traceId=, spanId=]
2025-05-29 14:09:45 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-05-29 14:09:45 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-05-29 14:09:45 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-05-29 14:09:45 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-05-29 14:09:45 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@843789957 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-05-29 14:09:45 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-05-29 14:09:45 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-05-29 14:10:45 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-05-29 14:10:45 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-05-29 14:10:45 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-05-29 14:10:45 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-05-29 14:10:45 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3136ebf9 MDC:[traceId=, spanId=]
2025-05-29 14:10:45 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-05-29 14:10:45 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1507f312 MDC:[traceId=, spanId=]
2025-05-29 14:10:45 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-05-29 14:10:45 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-05-29 14:10:45 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-05-29 14:10:45 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-05-29 14:10:45 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1344935306 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-05-29 14:10:45 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-05-29 14:10:45 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-05-29 14:11:45 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-05-29 14:11:45 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-05-29 14:11:45 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-05-29 14:11:45 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-05-29 14:11:45 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1746ee65 MDC:[traceId=, spanId=]
2025-05-29 14:11:45 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-05-29 14:11:45 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@301e9bd4 MDC:[traceId=, spanId=]
2025-05-29 14:11:45 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-05-29 14:11:45 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-05-29 14:11:45 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-05-29 14:11:45 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-05-29 14:11:45 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@690734398 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-05-29 14:11:45 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-05-29 14:11:45 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-05-29 14:12:45 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-05-29 14:12:45 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-05-29 14:12:45 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-05-29 14:12:45 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-05-29 14:12:45 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3cd46097 MDC:[traceId=, spanId=]
2025-05-29 14:12:45 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-05-29 14:12:45 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@26b3005c MDC:[traceId=, spanId=]
2025-05-29 14:12:45 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-05-29 14:12:45 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-05-29 14:12:45 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-05-29 14:12:45 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-05-29 14:12:45 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@304518221 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-05-29 14:12:45 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-05-29 14:12:45 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-05-29 14:13:45 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-05-29 14:13:45 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-05-29 14:13:45 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-05-29 14:13:45 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-05-29 14:13:45 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@29158556 MDC:[traceId=, spanId=]
2025-05-29 14:13:45 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-05-29 14:13:45 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@37c5aa06 MDC:[traceId=, spanId=]
2025-05-29 14:13:45 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-05-29 14:13:45 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-05-29 14:13:45 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-05-29 14:13:45 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-05-29 14:13:45 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@144786300 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-05-29 14:13:45 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-05-29 14:13:45 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-05-29 14:14:45 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-05-29 14:14:45 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-05-29 14:14:45 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-05-29 14:14:45 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-05-29 14:14:45 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6370581b MDC:[traceId=, spanId=]
2025-05-29 14:14:45 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-05-29 14:14:45 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4e105cee MDC:[traceId=, spanId=]
2025-05-29 14:14:45 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-05-29 14:14:45 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-05-29 14:14:45 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-05-29 14:14:45 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-05-29 14:14:45 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1519627752 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-05-29 14:14:45 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-05-29 14:14:45 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-05-29 14:15:45 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-05-29 14:15:45 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-05-29 14:15:45 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-05-29 14:15:45 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-05-29 14:15:45 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4b37d498 MDC:[traceId=, spanId=]
2025-05-29 14:15:45 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-05-29 14:15:45 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@185cbaf5 MDC:[traceId=, spanId=]
2025-05-29 14:15:45 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-05-29 14:15:45 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-05-29 14:15:45 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-05-29 14:15:45 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-05-29 14:15:45 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@298937296 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-05-29 14:15:45 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-05-29 14:15:45 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-05-29 14:16:45 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-05-29 14:16:45 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-05-29 14:16:45 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-05-29 14:16:45 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-05-29 14:16:45 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2630344 MDC:[traceId=, spanId=]
2025-05-29 14:16:45 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-05-29 14:16:45 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7fe36fb9 MDC:[traceId=, spanId=]
2025-05-29 14:16:45 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-05-29 14:16:45 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-05-29 14:16:45 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-05-29 14:16:45 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-05-29 14:16:45 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@466144610 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-05-29 14:16:45 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-05-29 14:16:45 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-05-29 14:17:45 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-05-29 14:17:45 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-05-29 14:17:45 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-05-29 14:17:45 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-05-29 14:17:45 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2b6326fc MDC:[traceId=, spanId=]
2025-05-29 14:17:45 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-05-29 14:17:45 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6f210cb4 MDC:[traceId=, spanId=]
2025-05-29 14:17:45 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-05-29 14:17:45 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-05-29 14:17:45 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-05-29 14:17:45 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-05-29 14:17:45 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1547712495 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-05-29 14:17:45 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-05-29 14:17:45 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-05-29 14:18:45 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-05-29 14:18:45 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-05-29 14:18:45 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-05-29 14:18:45 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-05-29 14:18:45 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4a33da0b MDC:[traceId=, spanId=]
2025-05-29 14:18:45 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-05-29 14:18:45 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4dab52ae MDC:[traceId=, spanId=]
2025-05-29 14:18:45 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-05-29 14:18:45 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-05-29 14:18:45 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-05-29 14:18:45 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-05-29 14:18:45 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@991819636 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-05-29 14:18:45 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-05-29 14:18:45 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-05-29 14:19:45 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-05-29 14:19:45 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-05-29 14:19:45 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-05-29 14:19:45 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-05-29 14:19:45 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@46d379cf MDC:[traceId=, spanId=]
2025-05-29 14:19:45 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-05-29 14:19:45 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@54545f25 MDC:[traceId=, spanId=]
2025-05-29 14:19:45 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-05-29 14:19:45 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-05-29 14:19:45 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-05-29 14:19:45 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-05-29 14:19:45 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@373077149 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-05-29 14:19:45 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-05-29 14:19:45 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-05-29 14:20:45 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-05-29 14:20:45 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-05-29 14:20:45 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-05-29 14:20:45 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-05-29 14:20:45 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7188314a MDC:[traceId=, spanId=]
2025-05-29 14:20:45 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-05-29 14:20:45 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3765ead MDC:[traceId=, spanId=]
2025-05-29 14:20:45 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-05-29 14:20:45 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-05-29 14:20:45 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-05-29 14:20:45 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-05-29 14:20:45 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@232235717 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-05-29 14:20:45 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-05-29 14:20:45 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-05-29 14:21:41 [SpringContextShutdownHook] DEBUG o.h.internal.SessionFactoryImpl - HHH000031: Closing MDC:[traceId=, spanId=]
2025-05-29 14:21:41 [SpringContextShutdownHook] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@596987f6] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@b5159eb] MDC:[traceId=, spanId=]
2025-05-29 14:21:41 [SpringContextShutdownHook] DEBUG o.h.s.i.AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries MDC:[traceId=, spanId=]
2025-05-29 14:21:41 [SpringContextShutdownHook] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries MDC:[traceId=, spanId=]
2025-05-29 14:21:59 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final MDC:[traceId=, spanId=]
2025-05-29 14:21:59 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-05-29 14:21:59 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-05-29 14:21:59 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-05-29 14:21:59 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-05-29 14:21:59 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-05-29 14:21:59 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-05-29 14:21:59 [background-preinit] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-05-29 14:21:59 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-05-29 14:21:59 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-05-29 14:21:59 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-05-29 14:21:59 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-05-29 14:21:59 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-05-29 14:21:59 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.h.jpa.internal.util.LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@60f6bee7
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/LT_Web/SpringBoot/java-banking-phase2/backend/transaction-service/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.example.transaction_service.entity.Transaction]
	Mapping files names []
	Properties [] MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator]. MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator]. MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG org.hibernate.cfg.Environment - HHH000206: 'hibernate.properties' not found MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator] MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator] MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator] MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator] MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned] MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator] MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator] MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator] MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator] MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator] MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.h.c.i.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@3d5ab24d MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@3d5ab24d MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@3d5ab24d MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@60f44bff MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@60f44bff MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@777ec113 MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@777ec113 MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@339a9f3e MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@339a9f3e MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@5b3a9bda MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@5b3a9bda MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@5b3a9bda MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@195398f1 MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@195398f1 MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@195398f1 MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@1824b491 MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@1824b491 MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@7f20bbc4 MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@70cb1bb1 MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@70cb1bb1 MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@75da9149 MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@4867335f MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@32e34f0c MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@32e34f0c MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@32e34f0c MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@1adddc72 MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@1adddc72 MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@1adddc72 MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@3bac46b9 MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@3bac46b9 MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@3bac46b9 MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@4aa06758 MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@4aa06758 MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@4aa06758 MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@6293da2f MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@6293da2f MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@6293da2f MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@16d9b443 MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@16d9b443 MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@4f99b1af MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@4f99b1af MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@64a85a3 MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@64a85a3 MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@64a85a3 MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@7a7465e7 MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@2154bd46 MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@2154bd46 MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@23c2640a MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@71f78a4c MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@71f78a4c MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@71f78a4c MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@287592c8 MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@2c4fa40d MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@1c1d67ba MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@51f52b9f MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@51f52b9f MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@559210bb MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@559210bb MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@42ca9c8 MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@73fb3e40 MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@baa5a73 MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@4ef88475 MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@2ffb068b MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@5d8340a MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@5cf88f00 MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@5cf88f00 MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@56a973c6 MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@56a973c6 MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@2191f8c6 MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@2191f8c6 MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@652de09a MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@652de09a MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@7d35f3b0 MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@7d35f3b0 MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@609f8893 MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4e660b8e MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@44c51be8 MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@44c51be8 MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@16bfd8b3 MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@a7811e7 MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@743c515d MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@18ca1e69 MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@18ca1e69 MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@70583783 MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3a65e746 MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@2c45ffee MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@2c45ffee MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@64b49559 MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@64b49559 MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@55e14263 MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@55e14263 MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@55e14263 MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@402bc04e MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@402bc04e MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@402bc04e MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@4392ed2a MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@3ccb65c MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@5c610e1c MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5c610e1c MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@42d68c6e MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@42d68c6e MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@42d68c6e MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@1679c2a3 MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@70e1e866 MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@24240988 MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@24240988 MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@5267449e MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@5267449e MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@5267449e MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@ad3e8ab MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@ad3e8ab MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@758e934f MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@758e934f MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@71e2ac3f MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@71e2ac3f MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@19494529 MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@19494529 MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@c4a601b MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@c4a601b MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@ddf8e36 MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@69b858e6 MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@7ded31a2 MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@7ded31a2 MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@14e8cfba MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@2eccfea2 MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@694a5527 MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@15df02a7 MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@47188ab9 MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@e685516 MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@3530da91 MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@58173caa MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@5bd93853 MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@714d58d] into BootstrapContext; was [null] MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@714d58d) [was null] MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@6dc4814b] into BootstrapContext; was [null] MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@2daf1194] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@57007f3] MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@714d58d] MDC:[traceId=, spanId=]
2025-05-29 14:22:09 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@714d58d] MDC:[traceId=, spanId=]
2025-05-29 14:22:10 [restartedMain] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Database ->
	   name : MySQL
	version : 8.0.32
	  major : 8
	  minor : 0 MDC:[traceId=, spanId=]
2025-05-29 14:22:10 [restartedMain] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Driver ->
	   name : MySQL Connector/J
	version : mysql-connector-j-8.3.0 (Revision: 805f872a57875f311cb82487efcfb070411a3fa0)
	  major : 8
	  minor : 3 MDC:[traceId=, spanId=]
2025-05-29 14:22:10 [restartedMain] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - JDBC version : 4.2 MDC:[traceId=, spanId=]
2025-05-29 14:22:10 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default) MDC:[traceId=, spanId=]
2025-05-29 14:22:10 [restartedMain] DEBUG org.hibernate.orm.dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQL8Dialect, version: 8.0 MDC:[traceId=, spanId=]
2025-05-29 14:22:10 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead MDC:[traceId=, spanId=]
2025-05-29 14:22:10 [restartedMain] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case MDC:[traceId=, spanId=]
2025-05-29 14:22:10 [restartedMain] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers MDC:[traceId=, spanId=]
2025-05-29 14:22:10 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@f4e6f24) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3ba34660) MDC:[traceId=, spanId=]
2025-05-29 14:22:10 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3442cf71) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@714b4965) MDC:[traceId=, spanId=]
2025-05-29 14:22:10 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@d002f27) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2c31e8a1) MDC:[traceId=, spanId=]
2025-05-29 14:22:10 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@e2a9311) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2581f3d0) MDC:[traceId=, spanId=]
2025-05-29 14:22:10 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@29748950) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@aa3183f) MDC:[traceId=, spanId=]
2025-05-29 14:22:10 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@504ba061) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7afed6cb) MDC:[traceId=, spanId=]
2025-05-29 14:22:10 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@774deecd) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@65bd72fb) MDC:[traceId=, spanId=]
2025-05-29 14:22:10 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@68789e85) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@64bc45cf) MDC:[traceId=, spanId=]
2025-05-29 14:22:10 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7c1ff413) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@72bb6bc1) MDC:[traceId=, spanId=]
2025-05-29 14:22:10 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor) MDC:[traceId=, spanId=]
2025-05-29 14:22:10 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor) MDC:[traceId=, spanId=]
2025-05-29 14:22:10 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor) MDC:[traceId=, spanId=]
2025-05-29 14:22:10 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT)) MDC:[traceId=, spanId=]
2025-05-29 14:22:10 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT)) MDC:[traceId=, spanId=]
2025-05-29 14:22:10 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@782e4415 MDC:[traceId=, spanId=]
2025-05-29 14:22:10 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@14e8cfba` MDC:[traceId=, spanId=]
2025-05-29 14:22:10 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-05-29 14:22:10 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-05-29 14:22:10 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-05-29 14:22:10 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-05-29 14:22:10 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-05-29 14:22:10 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-05-29 14:22:10 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-05-29 14:22:10 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-05-29 14:22:10 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-05-29 14:22:10 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-05-29 14:22:10 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-05-29 14:22:10 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-05-29 14:22:10 [restartedMain] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@32665e05] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@555742b] MDC:[traceId=, spanId=]
2025-05-29 14:22:10 [restartedMain] DEBUG o.h.boot.model.relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}] MDC:[traceId=, spanId=]
2025-05-29 14:22:10 [restartedMain] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-05-29 14:22:10 [restartedMain] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Transaction MDC:[traceId=, spanId=]
2025-05-29 14:22:10 [restartedMain] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity com.example.transaction_service.entity.Transaction on table tbl_transaction MDC:[traceId=, spanId=]
2025-05-29 14:22:10 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE') MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.example.transaction_service.entity.Transaction] is safe MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property id with lazy=false MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:id] MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for id MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.id MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property id MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, assigned, , ...) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property amount with lazy=false MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:amount] MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for amount MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.amount MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property amount MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property bankType with lazy=false MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:bankType] MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for bankType MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.bank_type MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property bankType MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property currency with lazy=false MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:currency] MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for currency MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.currency MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property currency MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property description with lazy=false MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:description] MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for description MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.description MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property description MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property destinationBankCode with lazy=false MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:destinationBankCode] MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for destinationBankCode MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.destination_bank_code MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property destinationBankCode MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property failedReason with lazy=false MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:failedReason] MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for failedReason MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.failed_reason MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property failedReason MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property fromAccountNumber with lazy=false MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:fromAccountNumber] MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for fromAccountNumber MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.from_account_number MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property fromAccountNumber MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property referenceCode with lazy=false MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:referenceCode] MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for referenceCode MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.reference_code MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property referenceCode MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property status with lazy=false MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:status] MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for status MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.status MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property status MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property timestamp with lazy=false MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:timestamp] MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for timestamp MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.timestamp MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property timestamp MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property toAccountNumber with lazy=false MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:toAccountNumber] MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for toAccountNumber MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.to_account_number MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property toAccountNumber MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property type with lazy=false MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:type] MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for type MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.type MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property type MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: com.example.transaction_service.entity MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.j.e.i.CallbackDefinitionResolverLegacyImpl - Adding prePersist as PrePersist callback for entity com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bankType MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for currency MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for description MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for destinationBankCode MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for failedReason MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for fromAccountNumber MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for referenceCode MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for timestamp MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for toAccountNumber MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for type MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [tbl_transaction] MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Building session factory MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Instantiating SessionFactory with settings: {jdk.tls.rejectClientInitiatedRenegotiation=true, java.specification.version=17, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@541da2b6, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=D:\LT_Web\SpringBoot\java-banking-phase2\backend\transaction-service\target\classes;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-actuator\3.3.11\spring-boot-starter-actuator-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter\3.3.11\spring-boot-starter-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.3.11\spring-boot-starter-logging-3.3.11.jar;C:\Users\A715-42G\.m2\repository\ch\qos\logback\logback-classic\1.5.18\logback-classic-1.5.18.jar;C:\Users\A715-42G\.m2\repository\ch\qos\logback\logback-core\1.5.18\logback-core-1.5.18.jar;C:\Users\A715-42G\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.23.1\log4j-to-slf4j-2.23.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\logging\log4j\log4j-api\2.23.1\log4j-api-2.23.1.jar;C:\Users\A715-42G\.m2\repository\org\slf4j\jul-to-slf4j\2.0.17\jul-to-slf4j-2.0.17.jar;C:\Users\A715-42G\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\A715-42G\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-actuator-autoconfigure\3.3.11\spring-boot-actuator-autoconfigure-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-actuator\3.3.11\spring-boot-actuator-3.3.11.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.17.3\jackson-datatype-jsr310-2.17.3.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-observation\1.13.13\micrometer-observation-1.13.13.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-commons\1.13.13\micrometer-commons-1.13.13.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-jakarta9\1.13.13\micrometer-jakarta9-1.13.13.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-core\1.13.13\micrometer-core-1.13.13.jar;C:\Users\A715-42G\.m2\repository\org\hdrhistogram\HdrHistogram\2.2.2\HdrHistogram-2.2.2.jar;C:\Users\A715-42G\.m2\repository\org\latencyutils\LatencyUtils\2.0.3\LatencyUtils-2.0.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.3.11\spring-boot-starter-data-jpa-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.3.11\spring-boot-starter-aop-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-aop\6.1.19\spring-aop-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\aspectj\aspectjweaver\1.9.24\aspectjweaver-1.9.24.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.3.11\spring-boot-starter-jdbc-3.3.11.jar;C:\Users\A715-42G\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-jdbc\6.1.19\spring-jdbc-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\orm\hibernate-core\6.5.3.Final\hibernate-core-6.5.3.Final.jar;C:\Users\A715-42G\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\A715-42G\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\A715-42G\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\A715-42G\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\A715-42G\.m2\repository\net\bytebuddy\byte-buddy\1.14.19\byte-buddy-1.14.19.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\A715-42G\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\A715-42G\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\A715-42G\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-jpa\3.3.11\spring-data-jpa-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-commons\3.3.11\spring-data-commons-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-orm\6.1.19\spring-orm-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-context\6.1.19\spring-context-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-tx\6.1.19\spring-tx-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-beans\6.1.19\spring-beans-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-aspects\6.1.19\spring-aspects-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.3.11\spring-boot-starter-web-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.3.11\spring-boot-starter-json-3.3.11.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.17.3\jackson-datatype-jdk8-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.17.3\jackson-module-parameter-names-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.3.11\spring-boot-starter-tomcat-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.40\tomcat-embed-core-10.1.40.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.40\tomcat-embed-websocket-10.1.40.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-web\6.1.19\spring-web-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-webmvc\6.1.19\spring-webmvc-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-expression\6.1.19\spring-expression-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-devtools\3.3.11\spring-boot-devtools-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot\3.3.11\spring-boot-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.3.11\spring-boot-autoconfigure-3.3.11.jar;C:\Users\A715-42G\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\A715-42G\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-core\6.1.19\spring-core-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-jcl\6.1.19\spring-jcl-6.1.19.jar;C:\Users\A715-42G\.m2\repository\com\mysql\mysql-connector-j\8.3.0\mysql-connector-j-8.3.0.jar;C:\Users\A715-42G\.m2\repository\org\projectlombok\lombok\1.18.38\lombok-1.18.38.jar;C:\Users\A715-42G\.m2\repository\org\mapstruct\mapstruct\1.5.5.Final\mapstruct-1.5.5.Final.jar;C:\Users\A715-42G\.m2\repository\org\mapstruct\mapstruct-processor\1.5.5.Final\mapstruct-processor-1.5.5.Final.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-validation\3.3.11\spring-boot-starter-validation-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.40\tomcat-embed-el-10.1.40.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\validator\hibernate-validator\8.0.2.Final\hibernate-validator-8.0.2.Final.jar;C:\Users\A715-42G\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-ui\2.0.2\springdoc-openapi-starter-webmvc-ui-2.0.2.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-api\2.0.2\springdoc-openapi-starter-webmvc-api-2.0.2.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-common\2.0.2\springdoc-openapi-starter-common-2.0.2.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-core-jakarta\2.2.7\swagger-core-jakarta-2.2.7.jar;C:\Users\A715-42G\.m2\repository\org\apache\commons\commons-lang3\3.14.0\commons-lang3-3.14.0.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-annotations-jakarta\2.2.7\swagger-annotations-jakarta-2.2.7.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-models-jakarta\2.2.7\swagger-models-jakarta-2.2.7.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-yaml\2.17.3\jackson-dataformat-yaml-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\webjars\swagger-ui\4.15.5\swagger-ui-4.15.5.jar;C:\Users\A715-42G\.m2\repository\org\webjars\webjars-locator-core\0.58\webjars-locator-core-0.58.jar;C:\Users\A715-42G\.m2\repository\io\github\classgraph\classgraph\4.8.149\classgraph-4.8.149.jar;D:\LT_Web\SpringBoot\java-banking-phase2\backend\common-service\target\classes;C:\Users\A715-42G\.m2\repository\org\apache\dubbo\dubbo-spring-boot-starter\3.3.2\dubbo-spring-boot-starter-3.3.2.jar;C:\Users\A715-42G\.m2\repository\org\apache\dubbo\dubbo-spring-boot-autoconfigure\3.3.2\dubbo-spring-boot-autoconfigure-3.3.2.jar;C:\Users\A715-42G\.m2\repository\org\apache\dubbo\dubbo-spring-boot-autoconfigure-compatible\3.3.2\dubbo-spring-boot-autoconfigure-compatible-3.3.2.jar;C:\Users\A715-42G\.m2\repository\org\apache\dubbo\dubbo\3.3.2\dubbo-3.3.2.jar;C:\Users\A715-42G\.m2\repository\org\javassist\javassist\3.30.2-GA\javassist-3.30.2-GA.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-all\4.1.119.Final\netty-all-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-dns\4.1.119.Final\netty-codec-dns-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-haproxy\4.1.119.Final\netty-codec-haproxy-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-http\4.1.119.Final\netty-codec-http-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-http2\4.1.119.Final\netty-codec-http2-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-memcache\4.1.119.Final\netty-codec-memcache-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-mqtt\4.1.119.Final\netty-codec-mqtt-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-redis\4.1.119.Final\netty-codec-redis-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-smtp\4.1.119.Final\netty-codec-smtp-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-socks\4.1.119.Final\netty-codec-socks-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-stomp\4.1.119.Final\netty-codec-stomp-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-xml\4.1.119.Final\netty-codec-xml-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-handler-proxy\4.1.119.Final\netty-handler-proxy-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-handler-ssl-ocsp\4.1.119.Final\netty-handler-ssl-ocsp-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-resolver-dns\4.1.119.Final\netty-resolver-dns-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-rxtx\4.1.119.Final\netty-transport-rxtx-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-sctp\4.1.119.Final\netty-transport-sctp-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-udt\4.1.119.Final\netty-transport-udt-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-classes-kqueue\4.1.119.Final\netty-transport-classes-kqueue-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-resolver-dns-classes-macos\4.1.119.Final\netty-resolver-dns-classes-macos-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final-linux-x86_64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final-linux-aarch_64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final-linux-riscv64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-kqueue\4.1.119.Final\netty-transport-native-kqueue-4.1.119.Final-osx-x86_64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-kqueue\4.1.119.Final\netty-transport-native-kqueue-4.1.119.Final-osx-aarch_64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-resolver-dns-native-macos\4.1.119.Final\netty-resolver-dns-native-macos-4.1.119.Final-osx-x86_64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-resolver-dns-native-macos\4.1.119.Final\netty-resolver-dns-native-macos-4.1.119.Final-osx-aarch_64.jar;C:\Users\A715-42G\.m2\repository\org\apache\dubbo\hessian-lite\4.0.3\hessian-lite-4.0.3.jar;C:\Users\A715-42G\.m2\repository\com\alibaba\fastjson2\fastjson2\2.0.53\fastjson2-2.0.53.jar;C:\Users\A715-42G\.m2\repository\com\google\protobuf\protobuf-java\3.25.5\protobuf-java-3.25.5.jar;C:\Users\A715-42G\.m2\repository\org\apache\curator\curator-framework\5.1.0\curator-framework-5.1.0.jar;C:\Users\A715-42G\.m2\repository\org\apache\curator\curator-client\5.1.0\curator-client-5.1.0.jar;C:\Users\A715-42G\.m2\repository\com\google\guava\guava\27.0.1-jre\guava-27.0.1-jre.jar;C:\Users\A715-42G\.m2\repository\com\google\guava\failureaccess\1.0.1\failureaccess-1.0.1.jar;C:\Users\A715-42G\.m2\repository\com\google\guava\listenablefuture\9999.0-empty-to-avoid-conflict-with-guava\listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar;C:\Users\A715-42G\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\A715-42G\.m2\repository\org\checkerframework\checker-qual\2.5.2\checker-qual-2.5.2.jar;C:\Users\A715-42G\.m2\repository\com\google\errorprone\error_prone_annotations\2.2.0\error_prone_annotations-2.2.0.jar;C:\Users\A715-42G\.m2\repository\com\google\j2objc\j2objc-annotations\1.1\j2objc-annotations-1.1.jar;C:\Users\A715-42G\.m2\repository\org\codehaus\mojo\animal-sniffer-annotations\1.17\animal-sniffer-annotations-1.17.jar;C:\Users\A715-42G\.m2\repository\org\apache\zookeeper\zookeeper\3.7.1\zookeeper-3.7.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\zookeeper\zookeeper-jute\3.7.1\zookeeper-jute-3.7.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\yetus\audience-annotations\0.12.0\audience-annotations-0.12.0.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-handler\4.1.119.Final\netty-handler-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-common\4.1.119.Final\netty-common-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-resolver\4.1.119.Final\netty-resolver-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-buffer\4.1.119.Final\netty-buffer-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport\4.1.119.Final\netty-transport-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-unix-common\4.1.119.Final\netty-transport-native-unix-common-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec\4.1.119.Final\netty-codec-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-classes-epoll\4.1.119.Final\netty-transport-classes-epoll-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\org\slf4j\slf4j-api\2.0.17\slf4j-api-2.0.17.jar;C:\Users\A715-42G\.m2\repository\org\apache\curator\curator-recipes\5.5.0\curator-recipes-5.5.0.jar;C:\Users\A715-42G\.m2\repository\org\apache\curator\curator-x-discovery\5.5.0\curator-x-discovery-5.5.0.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.17.3\jackson-databind-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.17.3\jackson-annotations-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.17.3\jackson-core-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-starter-vault-config\4.1.1\spring-cloud-starter-vault-config-4.1.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\httpcomponents\client5\httpclient5\5.3.1\httpclient5-5.3.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\httpcomponents\core5\httpcore5-h2\5.2.5\httpcore5-h2-5.2.5.jar;C:\Users\A715-42G\.m2\repository\org\apache\httpcomponents\core5\httpcore5\5.2.5\httpcore5-5.2.5.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-starter\4.1.2\spring-cloud-starter-4.1.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-context\4.1.2\spring-cloud-context-4.1.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-crypto\6.3.9\spring-security-crypto-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-commons\4.1.2\spring-cloud-commons-4.1.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-rsa\1.1.2\spring-security-rsa-1.1.2.jar;C:\Users\A715-42G\.m2\repository\org\bouncycastle\bcprov-jdk18on\1.77\bcprov-jdk18on-1.77.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-vault-config\4.1.1\spring-cloud-vault-config-4.1.1.jar;C:\Users\A715-42G\.m2\repository\org\springframework\vault\spring-vault-core\3.1.1\spring-vault-core-3.1.1.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-data-redis\3.3.11\spring-boot-starter-data-redis-3.3.11.jar;C:\Users\A715-42G\.m2\repository\io\lettuce\lettuce-core\6.3.2.RELEASE\lettuce-core-6.3.2.RELEASE.jar;C:\Users\A715-42G\.m2\repository\io\projectreactor\reactor-core\3.6.16\reactor-core-3.6.16.jar;C:\Users\A715-42G\.m2\repository\org\reactivestreams\reactive-streams\1.0.4\reactive-streams-1.0.4.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-redis\3.3.11\spring-data-redis-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-keyvalue\3.3.11\spring-data-keyvalue-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-oxm\6.1.19\spring-oxm-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-context-support\6.1.19\spring-context-support-6.1.19.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Saigon, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, java.vm.specification.version=17, os.name=Windows 10, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-17\bin, sun.java.command=com.example.transaction_service.TransactionServiceApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@4bbead4b, com.sun.management.jmxremote=, jdk.debug=release, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, hibernate.cdi.extensions=true, user.home=C:\Users\A715-42G, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-01-17, java.home=C:\Program Files\Java\jdk-17, file.separator=\, spring.output.ansi.enabled=always, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.6+9-LTS-190, user.name=A715-42G, spring.jmx.enabled=true, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\A715-42G\AppData\Local\Temp\, catalina.home=C:\Users\A715-42G\AppData\Local\Temp\tomcat.8088.2322372628925586588, java.version=17.0.6, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=D:\LT_Web\SpringBoot\java-banking-phase2, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=12472, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\A715-42G\AppData\Local\Temp\tomcat.8088.2322372628925586588, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@74dc0343, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-17\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;D:\Document\xxx\apache-maven-3.9.1\bin;C:\Program Files (x86)\Dev-Cpp\MinGW64\bin;C:\Program Files\Git\cmd;C:\Program Files\Java\jdk-17\bin;C:\Program Files\nodejs\;C:\XamPP\php;D:\LT_Web\SpringBoot\SpringBootCLI\spring-3.2.1\bin;D:\sqlite;C:\Program Files\dotnet\;D:\Document\Java\Maven\apache-maven-3.9.9\bin;D:\Document\Java\Maven\apache-maven-3.9.9\bin;C:\Program Files\Cloudflare\Cloudflare WARP\;C:\ProgramData\chocolatey\bin;D:\KienLongBank\Vault;D:\GrafanaLabs\grafana\bin;D:\KienLongBank\InfluxData\influxdb-1.8.10-1;D:\Document\Work\Redis;;C:\Program Files\Docker\Docker\resources\bin;C:\Users\A715-42G\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\A715-42G\AppData\Local\Programs\Python\Python310\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\A715-42G\AppData\Local\Programs\Eclipse Adoptium\jdk-17.0.3.7-hotspot\bin;C:\Users\A715-42G\AppData\Local\Microsoft\WindowsApps;C:\Users\A715-42G\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\Azure Data Studio\bin;C:\Program Files\Git\bin;D:\Document\HQT_ATCSDL\MongoDB\mongosh-1.8.2-win32-x64\bin;C:\Users\A715-42G\AppData\Roaming\npm;C:\XamPP\php;C:\Users\A715-42G\.dotnet\tools;C:\Program Files\Azure Data Studio\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, emulated-client, sharing, java.vm.version=17.0.6+9-LTS-190, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=61.0, LOGGED_APPLICATION_NAME=[transaction-service] } MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {} MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.example.transaction_service.entity.Transaction] is safe MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@28f4539b] under count; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@67a95f9a] under every; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@74b700cd] under any; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@10af42c2] under sinh; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3efc799a] under cosh; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2eebdfcc] under tanh; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@10195c87] under pi; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7a4ab514] under log; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : length -> character_length MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@fff073a] under position; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@4b56ce42] under overlay; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@76c492c] under trim; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@2f035919] under cast; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@179a4806] under collate; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@4226aacd] under extract; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@1bd08265] under ifnull; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@1ca08d5] under pad; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@7cf6136] under str; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@62ed2b53] under format; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@2997cba7] under timestampadd; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@36353ae5] under timestampdiff; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6d2fc504] under current_date; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6ed5510f] under current_time; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@60c6e8b9] under current_timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current date -> current_date MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current time -> current_time MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3aa98eb] under local_date; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@103e6a7f] under local_time; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@54a71c5e] under local_datetime; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@373a553] under offset_datetime; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local date -> local_date MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local time -> local_time MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@54c91816] under instant; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current_instant -> instant MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@59bc9420] under sql; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7a4ab514 MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@49a21472] under lpad; prior registration was NamedSqmFunctionTemplate(lpad) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@5add7fc0] under rpad; prior registration was NamedSqmFunctionTemplate(rpad) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : day -> dayofmonth MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@57d6432b] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@fff073a MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@496ccd2f] under trunc; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : truncate -> trunc MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@16870b83] under bitand; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@fa10a3e] under bitor; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@588ebce8] under bitxor; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@77a41763] under bitnot; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@5951c107] under format; prior registration was org.hibernate.dialect.function.FormatFunction@62ed2b53 MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@103e6a7f MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@54a71c5e MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5ea6d0e9] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@10195c87 MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@73625e29] under chr; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : char -> chr MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@24aa4029] under sysdate; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@cc27967] under listagg; prior registration was null MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - abs(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double acos(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - addtime(TIME datetime, TIME time) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean any(BOOLEAN arg) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer ascii(STRING arg) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double asin(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - avg(arg) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bit_and(arg) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bit_or(arg) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitand(arg0, arg1) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitnot(arg) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitor(arg0, arg1) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitxor(arg0, arg1) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - cast(arg as Type) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - ceiling(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Character char(INTEGER arg) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Character chr(INTEGER arg) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]]) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String collate(STRING string as COLLATION collation) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]]) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double cos(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double cosh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double cot(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Long count([distinct ]{arg|*}) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer crc32(arg) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date curdate() MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date current date MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time current time MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current timestamp MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date current_date MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Instant current_instant MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time current_time MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current_timestamp MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time curtime() MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date date(arg) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer datediff(DATE end, DATE start) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer day(DATE arg) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String dayname(DATE arg) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofmonth(DATE arg) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofweek(DATE arg) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofyear(DATE arg) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double degrees(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean every(BOOLEAN arg) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double exp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - floor(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]]) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer hour(TIME arg) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - ifnull(arg0, arg1) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Instant instant MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]]) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date last_day(DATE arg) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]]) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String left(STRING string, INTEGER length) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double ln(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local date MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local datetime MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local time MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local_date MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local_datetime MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local_time MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtime MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtimestamp MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start]) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1]) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double log10(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double log2(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String lower(STRING string) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String lpad(string, length[, padding]) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters]) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - max(COMPARABLE arg) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String md5(arg) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer microsecond(TIME arg) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - min(COMPARABLE arg) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer minute(TIME arg) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer month(DATE arg) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String monthname(DATE arg) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp now() MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - nullif(arg0, arg1) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset datetime MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset_datetime MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length]) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character]) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double pi MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer position(STRING pattern in STRING string) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer quarter(DATE arg) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double radians(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double rand([INTEGER seed]) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String repeat(STRING string, INTEGER times) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String reverse(STRING arg) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String right(STRING string, INTEGER length) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places]) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String rpad(string, length[, padding]) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters]) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer second(TIME arg) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String sha(arg) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String sha1(arg) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String sha2(arg0, arg1) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer sign(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double sin(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double sinh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String soundex(arg) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String space(INTEGER arg) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Object sql MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double sqrt(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String str(arg) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length]) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length]) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - subtime(TIME datetime, TIME time) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - sum(arg) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp sysdate() MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double tan(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double tanh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String time(arg) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1]) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - trunc( ... ) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - truncate( ... ) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String upper(STRING string) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date utc_date MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time utc_time MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp utc_timestamp MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_pop(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_samp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double variance(NUMERIC arg) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer week(DATE arg) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer year(DATE arg) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG org.hibernate.orm.query.plan.cache - Starting QueryInterpretationCache(2048) MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.e.i.EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.example.transaction_service.entity.Transaction] is safe MDC:[traceId=, spanId=]
2025-05-29 14:22:11 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-05-29 14:22:12 [restartedMain] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.example.transaction_service.entity.Transaction]: private accessor [amount] MDC:[traceId=, spanId=]
2025-05-29 14:22:12 [restartedMain] DEBUG o.h.orm.model.mapping.creation - Starting post-init callbacks MDC:[traceId=, spanId=]
2025-05-29 14:22:12 [restartedMain] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(com.example.transaction_service.entity.Transaction) `staticFetchableList` generator MDC:[traceId=, spanId=]
2025-05-29 14:22:12 [restartedMain] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-05-29 14:22:12 [restartedMain] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction)] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-05-29 14:22:12 [restartedMain] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction.type]
 MDC:[traceId=, spanId=]
2025-05-29 14:22:12 [restartedMain] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-05-29 14:22:12 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-05-29 14:22:12 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select id from tbl_transaction where id=? MDC:[traceId=, spanId=]
2025-05-29 14:22:12 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into tbl_transaction (amount,bank_type,currency,description,destination_bank_code,failed_reason,from_account_number,reference_code,status,timestamp,to_account_number,type,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?) MDC:[traceId=, spanId=]
2025-05-29 14:22:12 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update tbl_transaction set amount=?,bank_type=?,currency=?,description=?,destination_bank_code=?,failed_reason=?,from_account_number=?,reference_code=?,status=?,timestamp=?,to_account_number=?,type=? where id=? MDC:[traceId=, spanId=]
2025-05-29 14:22:12 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from tbl_transaction where id=? MDC:[traceId=, spanId=]
2025-05-29 14:22:12 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration) MDC:[traceId=, spanId=]
2025-05-29 14:22:12 [restartedMain] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@32665e05] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@11959cf2] MDC:[traceId=, spanId=]
2025-05-29 14:22:12 [restartedMain] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named HQL queries MDC:[traceId=, spanId=]
2025-05-29 14:22:12 [restartedMain] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named SQL queries MDC:[traceId=, spanId=]
2025-05-29 14:22:12 [restartedMain] DEBUG org.hibernate.mapping.Table - No alter strings for table : tbl_transaction MDC:[traceId=, spanId=]
2025-05-29 14:22:12 [restartedMain] DEBUG o.h.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@21b867da MDC:[traceId=, spanId=]
2025-05-29 14:22:12 [restartedMain] DEBUG o.h.internal.SessionFactoryRegistry - Registering SessionFactory: 5b1f54f8-f31a-4f27-bd87-2a2b40a35990 (<unnamed>) MDC:[traceId=, spanId=]
2025-05-29 14:22:12 [restartedMain] DEBUG o.h.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured MDC:[traceId=, spanId=]
2025-05-29 14:22:12 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Instantiated SessionFactory MDC:[traceId=, spanId=]
2025-05-29 14:22:12 [restartedMain] DEBUG o.h.s.internal.StatisticsInitiator - Statistics initialized [enabled=false] MDC:[traceId=, spanId=]
2025-05-29 14:22:13 [restartedMain] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy4/jdk.proxy4.$Proxy191.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.getCountQuery(JpaQueryLookupStrategy.java:204)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:171)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.example.transaction_service.TransactionServiceApplication.main(TransactionServiceApplication.java:14)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-05-29 14:22:13 [restartedMain] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy4/jdk.proxy4.$Proxy191.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.example.transaction_service.TransactionServiceApplication.main(TransactionServiceApplication.java:14)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-05-29 14:22:13 [restartedMain] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy4/jdk.proxy4.$Proxy191.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.example.transaction_service.TransactionServiceApplication.main(TransactionServiceApplication.java:14)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-05-29 14:22:14 [restartedMain] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-05-29 14:22:14 [restartedMain] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator MDC:[traceId=, spanId=]
2025-05-29 14:22:14 [restartedMain] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory MDC:[traceId=, spanId=]
2025-05-29 14:22:14 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-05-29 14:22:14 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader MDC:[traceId=, spanId=]
2025-05-29 14:22:14 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-05-29 14:22:14 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-05-29 14:22:14 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-05-29 14:22:14 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-05-29 14:22:14 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-05-29 14:22:14 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-05-29 14:22:14 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-05-29 14:22:14 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-05-29 14:22:14 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-05-29 14:22:14 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-05-29 14:22:14 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-05-29 14:22:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-05-29 14:22:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-05-29 14:22:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-05-29 14:22:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-05-29 14:22:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5161638c MDC:[traceId=, spanId=]
2025-05-29 14:22:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-05-29 14:22:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@674de317 MDC:[traceId=, spanId=]
2025-05-29 14:22:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-05-29 14:22:17 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 MDC:[traceId=, spanId=]
2025-05-29 14:22:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-05-29 14:22:17 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-05-29 14:22:17 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@248163153 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-05-29 14:22:17 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-05-29 14:22:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-05-29 14:22:24 [http-nio-8088-exec-2] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-05-29 14:22:24 [http-nio-8088-exec-2] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-05-29 14:22:25 [http-nio-8088-exec-2] DEBUG o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier MDC:[traceId=, spanId=]
2025-05-29 14:22:25 [http-nio-8088-exec-2] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-05-29 14:22:25 [http-nio-8088-exec-2] DEBUG o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades MDC:[traceId=, spanId=]
2025-05-29 14:22:25 [http-nio-8088-exec-2] DEBUG o.h.e.i.AbstractFlushingEventListener - Dirty checking collections MDC:[traceId=, spanId=]
2025-05-29 14:22:25 [http-nio-8088-exec-2] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects MDC:[traceId=, spanId=]
2025-05-29 14:22:25 [http-nio-8088-exec-2] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections MDC:[traceId=, spanId=]
2025-05-29 14:22:25 [http-nio-8088-exec-2] DEBUG o.h.internal.util.EntityPrinter - Listing entities: MDC:[traceId=, spanId=]
2025-05-29 14:22:25 [http-nio-8088-exec-2] DEBUG o.h.internal.util.EntityPrinter - com.example.transaction_service.entity.Transaction{amount=10000, fromAccountNumber=970452999999999, bankType=INTERNAL, description=Giải ngân tiền , type=DISBURSEMENT, destinationBankCode=null, toAccountNumber=87654321, currency=VND, id=f7d1f413-adc8-442f-863a-82766ba66a23, referenceCode=TXN-970452999999999-20250529142224bed6e7b5, failedReason=null, status=COMPLETED, timestamp=2025-05-29T14:22:24.494848300} MDC:[traceId=, spanId=]
2025-05-29 14:22:25 [http-nio-8088-exec-2] DEBUG org.hibernate.SQL - insert into tbl_transaction (amount,bank_type,currency,description,destination_bank_code,failed_reason,from_account_number,reference_code,status,timestamp,to_account_number,type,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?) MDC:[traceId=, spanId=]
2025-05-29 14:22:45 [SpringContextShutdownHook] DEBUG o.h.internal.SessionFactoryImpl - HHH000031: Closing MDC:[traceId=, spanId=]
2025-05-29 14:22:45 [SpringContextShutdownHook] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@27505b85] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@11959cf2] MDC:[traceId=, spanId=]
2025-05-29 14:22:45 [SpringContextShutdownHook] DEBUG o.h.s.i.AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries MDC:[traceId=, spanId=]
2025-05-29 14:22:45 [SpringContextShutdownHook] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries MDC:[traceId=, spanId=]
