2025-06-10 18:02:23 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final MDC:[traceId=, spanId=]
2025-06-10 18:02:23 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-06-10 18:02:23 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-06-10 18:02:23 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-06-10 18:02:23 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-06-10 18:02:23 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-06-10 18:02:23 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-06-10 18:02:23 [background-preinit] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-06-10 18:02:23 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-06-10 18:02:23 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-06-10 18:02:23 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-06-10 18:02:23 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-06-10 18:02:23 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-06-10 18:02:23 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-06-10 18:05:36 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final MDC:[traceId=, spanId=]
2025-06-10 18:05:37 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-06-10 18:05:37 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-06-10 18:05:37 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-06-10 18:05:37 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-06-10 18:05:37 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-06-10 18:05:37 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-06-10 18:05:37 [background-preinit] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-06-10 18:05:37 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-06-10 18:05:37 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-06-10 18:05:37 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-06-10 18:05:37 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-06-10 18:05:37 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-06-10 18:05:37 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-06-10 18:05:46 [restartedMain] DEBUG o.h.jpa.internal.util.LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@75e44db0
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/LT_Web/SpringBoot/java-banking-phase2/backend/transaction-service/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.example.transaction_service.entity.Transaction]
	Mapping files names []
	Properties [] MDC:[traceId=, spanId=]
2025-06-10 18:05:46 [restartedMain] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator]. MDC:[traceId=, spanId=]
2025-06-10 18:05:46 [restartedMain] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator]. MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG org.hibernate.cfg.Environment - HHH000206: 'hibernate.properties' not found MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator] MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator] MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator] MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator] MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned] MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator] MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator] MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator] MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator] MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator] MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.h.c.i.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@726d3bd5 MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@726d3bd5 MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@726d3bd5 MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@617a5c7c MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@617a5c7c MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@73b14cbd MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@73b14cbd MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@57d2303e MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@57d2303e MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@4c7a1a82 MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@4c7a1a82 MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@4c7a1a82 MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@7fd036cd MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@7fd036cd MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@7fd036cd MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@67d492e MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@67d492e MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@40e8da1f MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@5cda668a MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@5cda668a MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@22425582 MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@4e9a4cdd MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@48245f33 MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@48245f33 MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@48245f33 MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@47459e8b MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@47459e8b MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@47459e8b MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@771b3da4 MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@771b3da4 MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@771b3da4 MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@6b7b7b3e MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@6b7b7b3e MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@6b7b7b3e MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@14c6ca5 MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@14c6ca5 MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@14c6ca5 MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@6a960bc1 MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@6a960bc1 MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@444efd2a MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@444efd2a MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@745ccc16 MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@745ccc16 MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@745ccc16 MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@1697af7c MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@4c05766c MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@4c05766c MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@7f11656b MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@6dbf2ae3 MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@6dbf2ae3 MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@6dbf2ae3 MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@46789467 MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@21292cd2 MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@55e72fa1 MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@411befcc MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@411befcc MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@43c28024 MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@43c28024 MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@2be56b32 MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@4793c3c8 MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@59e82179 MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@efc49c0 MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@ec01fd6 MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@57941045 MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@4f6f0027 MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@4f6f0027 MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@23b1e243 MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@23b1e243 MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@2d81674c MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@2d81674c MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@5ae05c81 MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@5ae05c81 MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@6d3911c2 MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@6d3911c2 MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@41b645dc MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@67abf1a1 MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@3f77bd81 MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@3f77bd81 MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@1a650cac MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@690e2299 MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5190f0e0 MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@5389c4e6 MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@5389c4e6 MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@613ba257 MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@79394e03 MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@2f78b634 MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@2f78b634 MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@32cbf9c9 MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@32cbf9c9 MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@ededcdd MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@ededcdd MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@ededcdd MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@3da4d253 MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@3da4d253 MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@3da4d253 MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@57071ac5 MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@3aefb45d MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@42afbfe9 MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@42afbfe9 MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@5902cba5 MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@5902cba5 MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@5902cba5 MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@363c3372 MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@713624b4 MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@4e598d8c MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@4e598d8c MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@1c93801 MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@1c93801 MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@1c93801 MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@56b92ce9 MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@56b92ce9 MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@166ab10e MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@166ab10e MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@14dd7ba2 MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@14dd7ba2 MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@5c1c4008 MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@5c1c4008 MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@435de106 MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@435de106 MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@7ccaa2 MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@7f83b164 MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@4074bca8 MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@4074bca8 MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@7c539ddd MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@2b24d300 MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@cbcad7c MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@1ba3c71f MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@7b7e0cc3 MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@764f6c7f MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@1f71e887 MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@1aef4f49 MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@117c40c3 MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@113159bb] into BootstrapContext; was [null] MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@113159bb) [was null] MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@50195775] into BootstrapContext; was [null] MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@7cf8080c] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@558dd146] MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@113159bb] MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@113159bb] MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Database ->
	   name : MySQL
	version : 8.0.32
	  major : 8
	  minor : 0 MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Driver ->
	   name : MySQL Connector/J
	version : mysql-connector-j-8.3.0 (Revision: 805f872a57875f311cb82487efcfb070411a3fa0)
	  major : 8
	  minor : 3 MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - JDBC version : 4.2 MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default) MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG org.hibernate.orm.dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQL8Dialect, version: 8.0 MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@183eb055) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6eebdfc8) MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@60cbb16) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2e9d339b) MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@434c9205) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7369103b) MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@10dec14b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@57182920) MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@70e3557c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4b306b93) MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2d023f27) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3b45428e) MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@51e7b82f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@19c33d73) MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2504d26b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3444a577) MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@588e5510) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5826d3d7) MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor) MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor) MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor) MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT)) MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT)) MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@5925ca9f MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@7c539ddd` MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6e176e44] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@332603a2] MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.h.boot.model.relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}] MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Transaction MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity com.example.transaction_service.entity.Transaction on table tbl_transaction MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE') MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.example.transaction_service.entity.Transaction] is safe MDC:[traceId=, spanId=]
2025-06-10 18:05:47 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property id with lazy=false MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:id] MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for id MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.id MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property id MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, assigned, , ...) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property amount with lazy=false MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:amount] MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for amount MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.amount MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property amount MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property bankType with lazy=false MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:bankType] MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for bankType MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.bank_type MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property bankType MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:createdAt] MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for createdAt MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.created_at MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property createdAt MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property createdBy with lazy=false MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:createdBy] MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for createdBy MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.created_by MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property createdBy MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property currency with lazy=false MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:currency] MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for currency MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.currency MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property currency MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property description with lazy=false MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:description] MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for description MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.description MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property description MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property destinationBankCode with lazy=false MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:destinationBankCode] MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for destinationBankCode MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.destination_bank_code MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property destinationBankCode MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property destinationBankName with lazy=false MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:destinationBankName] MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for destinationBankName MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.destination_bank_name MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property destinationBankName MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property failedReason with lazy=false MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:failedReason] MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for failedReason MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.failed_reason MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property failedReason MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property fromAccountNumber with lazy=false MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:fromAccountNumber] MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for fromAccountNumber MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.from_account_number MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property fromAccountNumber MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property referenceCode with lazy=false MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:referenceCode] MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for referenceCode MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.reference_code MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property referenceCode MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property status with lazy=false MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:status] MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for status MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.status MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property status MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property timestamp with lazy=false MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:timestamp] MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for timestamp MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.timestamp MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property timestamp MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property toAccountNumber with lazy=false MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:toAccountNumber] MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for toAccountNumber MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.to_account_number MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property toAccountNumber MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property type with lazy=false MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:type] MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for type MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.type MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property type MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:updatedAt] MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for updatedAt MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.updated_at MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property updatedAt MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property updatedBy with lazy=false MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:updatedBy] MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for updatedBy MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.updated_by MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property updatedBy MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: com.example.transaction_service.entity MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.j.e.i.CallbackDefinitionResolverLegacyImpl - Adding touchForUpdate as PreUpdate callback for entity com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.j.e.i.CallbackDefinitionResolverLegacyImpl - Adding prePersist as PrePersist callback for entity com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.j.e.i.CallbackDefinitionResolverLegacyImpl - Adding touchForCreate as PrePersist callback for entity com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bankType MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for createdAt MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for createdBy MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for currency MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for description MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for destinationBankCode MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for destinationBankName MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for failedReason MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for fromAccountNumber MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for referenceCode MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for timestamp MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for toAccountNumber MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for type MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for updatedAt MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for updatedBy MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [tbl_transaction] MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Building session factory MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Instantiating SessionFactory with settings: {jdk.tls.rejectClientInitiatedRenegotiation=true, java.specification.version=17, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@377cdc2, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=D:\LT_Web\SpringBoot\java-banking-phase2\backend\transaction-service\target\classes;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-actuator\3.3.11\spring-boot-starter-actuator-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter\3.3.11\spring-boot-starter-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.3.11\spring-boot-starter-logging-3.3.11.jar;C:\Users\A715-42G\.m2\repository\ch\qos\logback\logback-classic\1.5.18\logback-classic-1.5.18.jar;C:\Users\A715-42G\.m2\repository\ch\qos\logback\logback-core\1.5.18\logback-core-1.5.18.jar;C:\Users\A715-42G\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.23.1\log4j-to-slf4j-2.23.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\logging\log4j\log4j-api\2.23.1\log4j-api-2.23.1.jar;C:\Users\A715-42G\.m2\repository\org\slf4j\jul-to-slf4j\2.0.17\jul-to-slf4j-2.0.17.jar;C:\Users\A715-42G\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\A715-42G\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-actuator-autoconfigure\3.3.11\spring-boot-actuator-autoconfigure-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-actuator\3.3.11\spring-boot-actuator-3.3.11.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-observation\1.13.13\micrometer-observation-1.13.13.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-commons\1.13.13\micrometer-commons-1.13.13.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-jakarta9\1.13.13\micrometer-jakarta9-1.13.13.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-core\1.13.13\micrometer-core-1.13.13.jar;C:\Users\A715-42G\.m2\repository\org\hdrhistogram\HdrHistogram\2.2.2\HdrHistogram-2.2.2.jar;C:\Users\A715-42G\.m2\repository\org\latencyutils\LatencyUtils\2.0.3\LatencyUtils-2.0.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.3.11\spring-boot-starter-data-jpa-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.3.11\spring-boot-starter-aop-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\aspectj\aspectjweaver\1.9.24\aspectjweaver-1.9.24.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.3.11\spring-boot-starter-jdbc-3.3.11.jar;C:\Users\A715-42G\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-jdbc\6.1.19\spring-jdbc-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\orm\hibernate-core\6.5.3.Final\hibernate-core-6.5.3.Final.jar;C:\Users\A715-42G\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\A715-42G\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\A715-42G\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\A715-42G\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\A715-42G\.m2\repository\net\bytebuddy\byte-buddy\1.14.19\byte-buddy-1.14.19.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\A715-42G\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\A715-42G\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-jpa\3.3.11\spring-data-jpa-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-commons\3.3.11\spring-data-commons-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-orm\6.1.19\spring-orm-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-context\6.1.19\spring-context-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-tx\6.1.19\spring-tx-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-beans\6.1.19\spring-beans-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-aspects\6.1.19\spring-aspects-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.3.11\spring-boot-starter-web-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.3.11\spring-boot-starter-json-3.3.11.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.17.3\jackson-module-parameter-names-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.3.11\spring-boot-starter-tomcat-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.40\tomcat-embed-core-10.1.40.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.40\tomcat-embed-websocket-10.1.40.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-web\6.1.19\spring-web-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-webmvc\6.1.19\spring-webmvc-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-expression\6.1.19\spring-expression-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-devtools\3.3.11\spring-boot-devtools-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot\3.3.11\spring-boot-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.3.11\spring-boot-autoconfigure-3.3.11.jar;C:\Users\A715-42G\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\A715-42G\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-core\6.1.19\spring-core-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-jcl\6.1.19\spring-jcl-6.1.19.jar;C:\Users\A715-42G\.m2\repository\com\mysql\mysql-connector-j\8.3.0\mysql-connector-j-8.3.0.jar;C:\Users\A715-42G\.m2\repository\org\projectlombok\lombok\1.18.38\lombok-1.18.38.jar;C:\Users\A715-42G\.m2\repository\org\mapstruct\mapstruct\1.5.5.Final\mapstruct-1.5.5.Final.jar;C:\Users\A715-42G\.m2\repository\org\mapstruct\mapstruct-processor\1.5.5.Final\mapstruct-processor-1.5.5.Final.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-validation\3.3.11\spring-boot-starter-validation-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.40\tomcat-embed-el-10.1.40.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\validator\hibernate-validator\8.0.2.Final\hibernate-validator-8.0.2.Final.jar;C:\Users\A715-42G\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-ui\2.0.2\springdoc-openapi-starter-webmvc-ui-2.0.2.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-api\2.0.2\springdoc-openapi-starter-webmvc-api-2.0.2.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-common\2.0.2\springdoc-openapi-starter-common-2.0.2.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-core-jakarta\2.2.7\swagger-core-jakarta-2.2.7.jar;C:\Users\A715-42G\.m2\repository\org\apache\commons\commons-lang3\3.14.0\commons-lang3-3.14.0.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-annotations-jakarta\2.2.7\swagger-annotations-jakarta-2.2.7.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-models-jakarta\2.2.7\swagger-models-jakarta-2.2.7.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-yaml\2.17.3\jackson-dataformat-yaml-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\webjars\swagger-ui\4.15.5\swagger-ui-4.15.5.jar;C:\Users\A715-42G\.m2\repository\org\webjars\webjars-locator-core\0.58\webjars-locator-core-0.58.jar;C:\Users\A715-42G\.m2\repository\io\github\classgraph\classgraph\4.8.149\classgraph-4.8.149.jar;D:\LT_Web\SpringBoot\java-banking-phase2\backend\common-service\target\classes;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.17.3\jackson-databind-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\apache\dubbo\dubbo-spring-boot-starter\3.3.2\dubbo-spring-boot-starter-3.3.2.jar;C:\Users\A715-42G\.m2\repository\org\apache\dubbo\dubbo-spring-boot-autoconfigure\3.3.2\dubbo-spring-boot-autoconfigure-3.3.2.jar;C:\Users\A715-42G\.m2\repository\org\apache\dubbo\dubbo-spring-boot-autoconfigure-compatible\3.3.2\dubbo-spring-boot-autoconfigure-compatible-3.3.2.jar;C:\Users\A715-42G\.m2\repository\org\apache\dubbo\dubbo\3.3.2\dubbo-3.3.2.jar;C:\Users\A715-42G\.m2\repository\org\javassist\javassist\3.30.2-GA\javassist-3.30.2-GA.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-all\4.1.119.Final\netty-all-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-dns\4.1.119.Final\netty-codec-dns-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-haproxy\4.1.119.Final\netty-codec-haproxy-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-http\4.1.119.Final\netty-codec-http-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-http2\4.1.119.Final\netty-codec-http2-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-memcache\4.1.119.Final\netty-codec-memcache-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-mqtt\4.1.119.Final\netty-codec-mqtt-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-redis\4.1.119.Final\netty-codec-redis-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-smtp\4.1.119.Final\netty-codec-smtp-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-socks\4.1.119.Final\netty-codec-socks-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-stomp\4.1.119.Final\netty-codec-stomp-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-xml\4.1.119.Final\netty-codec-xml-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-handler-proxy\4.1.119.Final\netty-handler-proxy-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-handler-ssl-ocsp\4.1.119.Final\netty-handler-ssl-ocsp-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-resolver-dns\4.1.119.Final\netty-resolver-dns-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-rxtx\4.1.119.Final\netty-transport-rxtx-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-sctp\4.1.119.Final\netty-transport-sctp-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-udt\4.1.119.Final\netty-transport-udt-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-classes-kqueue\4.1.119.Final\netty-transport-classes-kqueue-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-resolver-dns-classes-macos\4.1.119.Final\netty-resolver-dns-classes-macos-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final-linux-x86_64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final-linux-aarch_64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final-linux-riscv64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-kqueue\4.1.119.Final\netty-transport-native-kqueue-4.1.119.Final-osx-x86_64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-kqueue\4.1.119.Final\netty-transport-native-kqueue-4.1.119.Final-osx-aarch_64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-resolver-dns-native-macos\4.1.119.Final\netty-resolver-dns-native-macos-4.1.119.Final-osx-x86_64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-resolver-dns-native-macos\4.1.119.Final\netty-resolver-dns-native-macos-4.1.119.Final-osx-aarch_64.jar;C:\Users\A715-42G\.m2\repository\org\apache\dubbo\hessian-lite\4.0.3\hessian-lite-4.0.3.jar;C:\Users\A715-42G\.m2\repository\com\alibaba\fastjson2\fastjson2\2.0.53\fastjson2-2.0.53.jar;C:\Users\A715-42G\.m2\repository\com\google\protobuf\protobuf-java\3.25.5\protobuf-java-3.25.5.jar;C:\Users\A715-42G\.m2\repository\org\apache\curator\curator-framework\5.1.0\curator-framework-5.1.0.jar;C:\Users\A715-42G\.m2\repository\org\apache\curator\curator-client\5.1.0\curator-client-5.1.0.jar;C:\Users\A715-42G\.m2\repository\com\google\guava\guava\27.0.1-jre\guava-27.0.1-jre.jar;C:\Users\A715-42G\.m2\repository\com\google\guava\failureaccess\1.0.1\failureaccess-1.0.1.jar;C:\Users\A715-42G\.m2\repository\com\google\guava\listenablefuture\9999.0-empty-to-avoid-conflict-with-guava\listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar;C:\Users\A715-42G\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\A715-42G\.m2\repository\org\checkerframework\checker-qual\2.5.2\checker-qual-2.5.2.jar;C:\Users\A715-42G\.m2\repository\com\google\errorprone\error_prone_annotations\2.2.0\error_prone_annotations-2.2.0.jar;C:\Users\A715-42G\.m2\repository\com\google\j2objc\j2objc-annotations\1.1\j2objc-annotations-1.1.jar;C:\Users\A715-42G\.m2\repository\org\codehaus\mojo\animal-sniffer-annotations\1.17\animal-sniffer-annotations-1.17.jar;C:\Users\A715-42G\.m2\repository\org\apache\zookeeper\zookeeper\3.7.1\zookeeper-3.7.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\zookeeper\zookeeper-jute\3.7.1\zookeeper-jute-3.7.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\yetus\audience-annotations\0.12.0\audience-annotations-0.12.0.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-handler\4.1.119.Final\netty-handler-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-common\4.1.119.Final\netty-common-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-resolver\4.1.119.Final\netty-resolver-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-buffer\4.1.119.Final\netty-buffer-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport\4.1.119.Final\netty-transport-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-unix-common\4.1.119.Final\netty-transport-native-unix-common-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec\4.1.119.Final\netty-codec-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-classes-epoll\4.1.119.Final\netty-transport-classes-epoll-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\org\slf4j\slf4j-api\2.0.17\slf4j-api-2.0.17.jar;C:\Users\A715-42G\.m2\repository\org\apache\curator\curator-recipes\5.5.0\curator-recipes-5.5.0.jar;C:\Users\A715-42G\.m2\repository\org\apache\curator\curator-x-discovery\5.5.0\curator-x-discovery-5.5.0.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-starter-vault-config\4.1.1\spring-cloud-starter-vault-config-4.1.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\httpcomponents\client5\httpclient5\5.3.1\httpclient5-5.3.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\httpcomponents\core5\httpcore5-h2\5.2.5\httpcore5-h2-5.2.5.jar;C:\Users\A715-42G\.m2\repository\org\apache\httpcomponents\core5\httpcore5\5.2.5\httpcore5-5.2.5.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-starter\4.1.2\spring-cloud-starter-4.1.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-context\4.1.2\spring-cloud-context-4.1.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-commons\4.1.2\spring-cloud-commons-4.1.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-rsa\1.1.2\spring-security-rsa-1.1.2.jar;C:\Users\A715-42G\.m2\repository\org\bouncycastle\bcprov-jdk18on\1.77\bcprov-jdk18on-1.77.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-vault-config\4.1.1\spring-cloud-vault-config-4.1.1.jar;C:\Users\A715-42G\.m2\repository\org\springframework\vault\spring-vault-core\3.1.1\spring-vault-core-3.1.1.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-data-redis\3.3.11\spring-boot-starter-data-redis-3.3.11.jar;C:\Users\A715-42G\.m2\repository\io\lettuce\lettuce-core\6.3.2.RELEASE\lettuce-core-6.3.2.RELEASE.jar;C:\Users\A715-42G\.m2\repository\io\projectreactor\reactor-core\3.6.16\reactor-core-3.6.16.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-redis\3.3.11\spring-data-redis-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-keyvalue\3.3.11\spring-data-keyvalue-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-oxm\6.1.19\spring-oxm-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-context-support\6.1.19\spring-context-support-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-stream\4.2.1\spring-cloud-stream-4.2.1.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-messaging\6.1.19\spring-messaging-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\integration\spring-integration-core\6.3.9\spring-integration-core-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\integration\spring-integration-jmx\6.3.9\spring-integration-jmx-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\retry\spring-retry\2.0.11\spring-retry-2.0.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-function-context\4.2.2\spring-cloud-function-context-4.2.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-function-core\4.2.2\spring-cloud-function-core-4.2.2.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-joda\2.17.3\jackson-datatype-joda-2.17.3.jar;C:\Users\A715-42G\.m2\repository\joda-time\joda-time\2.10.14\joda-time-2.10.14.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-starter-stream-kafka\4.2.1\spring-cloud-starter-stream-kafka-4.2.1.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-stream-binder-kafka\4.2.1\spring-cloud-stream-binder-kafka-4.2.1.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-stream-binder-kafka-core\4.2.1\spring-cloud-stream-binder-kafka-core-4.2.1.jar;C:\Users\A715-42G\.m2\repository\org\springframework\integration\spring-integration-kafka\6.3.9\spring-integration-kafka-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\kafka\spring-kafka\3.2.8\spring-kafka-3.2.8.jar;C:\Users\A715-42G\.m2\repository\org\apache\kafka\kafka-clients\3.7.2\kafka-clients-3.7.2.jar;C:\Users\A715-42G\.m2\repository\com\github\luben\zstd-jni\1.5.6-4\zstd-jni-1.5.6-4.jar;C:\Users\A715-42G\.m2\repository\org\lz4\lz4-java\1.8.0\lz4-java-1.8.0.jar;C:\Users\A715-42G\.m2\repository\org\xerial\snappy\snappy-java\1.1.10.5\snappy-java-1.1.10.5.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.3.11\spring-boot-starter-security-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-aop\6.1.19\spring-aop-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-config\6.3.9\spring-security-config-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-web\6.3.9\spring-security-web-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-oauth2-resource-server\3.3.11\spring-boot-starter-oauth2-resource-server-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-core\6.3.9\spring-security-core-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-crypto\6.3.9\spring-security-crypto-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-oauth2-resource-server\6.3.9\spring-security-oauth2-resource-server-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-oauth2-core\6.3.9\spring-security-oauth2-core-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-oauth2-jose\6.3.9\spring-security-oauth2-jose-6.3.9.jar;C:\Users\A715-42G\.m2\repository\com\nimbusds\nimbus-jose-jwt\9.37.3\nimbus-jose-jwt-9.37.3.jar;C:\Users\A715-42G\.m2\repository\com\github\stephenc\jcip\jcip-annotations\1.0-1\jcip-annotations-1.0-1.jar;C:\Users\A715-42G\.m2\repository\org\keycloak\keycloak-admin-client\26.0.0\keycloak-admin-client-26.0.0.jar;C:\Users\A715-42G\.m2\repository\org\keycloak\keycloak-client-common-synced\26.0.0\keycloak-client-common-synced-26.0.0.jar;C:\Users\A715-42G\.m2\repository\org\jboss\logging\commons-logging-jboss-logging\1.0.0.Final\commons-logging-jboss-logging-1.0.0.Final.jar;C:\Users\A715-42G\.m2\repository\org\apache\httpcomponents\httpclient\4.5.14\httpclient-4.5.14.jar;C:\Users\A715-42G\.m2\repository\org\apache\httpcomponents\httpcore\4.4.16\httpcore-4.4.16.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.17.3\jackson-core-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.17.3\jackson-annotations-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.17.3\jackson-datatype-jdk8-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.17.3\jackson-datatype-jsr310-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\eclipse\microprofile\openapi\microprofile-openapi-api\3.1.1\microprofile-openapi-api-3.1.1.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-client\6.2.9.Final\resteasy-client-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-client-api\6.2.9.Final\resteasy-client-api-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-core-spi\6.2.9.Final\resteasy-core-spi-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-core\6.2.9.Final\resteasy-core-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\org\jboss\jandex\2.4.5.Final\jandex-2.4.5.Final.jar;C:\Users\A715-42G\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\A715-42G\.m2\repository\com\ibm\async\asyncutil\0.1.0\asyncutil-0.1.0.jar;C:\Users\A715-42G\.m2\repository\commons-codec\commons-codec\1.16.1\commons-codec-1.16.1.jar;C:\Users\A715-42G\.m2\repository\jakarta\ws\rs\jakarta.ws.rs-api\3.1.0\jakarta.ws.rs-api-3.1.0.jar;C:\Users\A715-42G\.m2\repository\org\reactivestreams\reactive-streams\1.0.4\reactive-streams-1.0.4.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-multipart-provider\6.2.9.Final\resteasy-multipart-provider-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\jakarta\mail\jakarta.mail-api\2.1.3\jakarta.mail-api-2.1.3.jar;C:\Users\A715-42G\.m2\repository\org\eclipse\angus\angus-mail\2.0.3\angus-mail-2.0.3.jar;C:\Users\A715-42G\.m2\repository\org\apache\james\apache-mime4j-dom\0.8.11\apache-mime4j-dom-0.8.11.jar;C:\Users\A715-42G\.m2\repository\org\apache\james\apache-mime4j-core\0.8.11\apache-mime4j-core-0.8.11.jar;C:\Users\A715-42G\.m2\repository\org\apache\james\apache-mime4j-storage\0.8.11\apache-mime4j-storage-0.8.11.jar;C:\Users\A715-42G\.m2\repository\commons-io\commons-io\2.11.0\commons-io-2.11.0.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-jackson2-provider\6.2.9.Final\resteasy-jackson2-provider-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\jakarta\rs\jackson-jakarta-rs-base\2.17.3\jackson-jakarta-rs-base-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\jakarta\rs\jackson-jakarta-rs-json-provider\2.17.3\jackson-jakarta-rs-json-provider-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\module\jackson-module-jakarta-xmlbind-annotations\2.17.3\jackson-module-jakarta-xmlbind-annotations-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\github\java-json-tools\json-patch\1.13\json-patch-1.13.jar;C:\Users\A715-42G\.m2\repository\com\github\java-json-tools\msg-simple\1.2\msg-simple-1.2.jar;C:\Users\A715-42G\.m2\repository\com\github\java-json-tools\btf\1.3\btf-1.3.jar;C:\Users\A715-42G\.m2\repository\com\github\java-json-tools\jackson-coreutils\2.0\jackson-coreutils-2.0.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-jaxb-provider\6.2.9.Final\resteasy-jaxb-provider-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\codemodel\4.0.5\codemodel-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-jxc\4.0.5\jaxb-jxc-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-xjc\4.0.5\jaxb-xjc-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\xsom\4.0.5\xsom-4.0.5.jar;C:\Users\A715-42G\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\A715-42G\.m2\repository\com\sun\istack\istack-commons-tools\4.1.2\istack-commons-tools-4.1.2.jar;C:\Users\A715-42G\.m2\repository\com\sun\xml\bind\external\relaxng-datatype\4.0.3\relaxng-datatype-4.0.3.jar;C:\Users\A715-42G\.m2\repository\com\sun\xml\bind\external\rngom\4.0.3\rngom-4.0.3.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Saigon, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, java.vm.specification.version=17, os.name=Windows 10, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-17\bin, sun.java.command=com.example.transaction_service.TransactionServiceApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@70060322, com.sun.management.jmxremote=, jdk.debug=release, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, hibernate.cdi.extensions=true, user.home=C:\Users\A715-42G, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-01-17, java.home=C:\Program Files\Java\jdk-17, file.separator=\, spring.output.ansi.enabled=always, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.6+9-LTS-190, user.name=A715-42G, spring.jmx.enabled=true, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\A715-42G\AppData\Local\Temp\, catalina.home=C:\Users\A715-42G\AppData\Local\Temp\tomcat.8088.11515200115884541002, java.version=17.0.6, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=D:\LT_Web\SpringBoot\java-banking-phase2, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=900, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\A715-42G\AppData\Local\Temp\tomcat.8088.11515200115884541002, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@2dd0a8b3, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-17\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;D:\Document\xxx\apache-maven-3.9.1\bin;C:\Program Files (x86)\Dev-Cpp\MinGW64\bin;C:\Program Files\Git\cmd;C:\Program Files\Java\jdk-17\bin;C:\XamPP\php;D:\LT_Web\SpringBoot\SpringBootCLI\spring-3.2.1\bin;D:\sqlite;D:\Document\Java\Maven\apache-maven-3.9.9\bin;D:\Document\Java\Maven\apache-maven-3.9.9\bin;C:\Program Files\Cloudflare\Cloudflare WARP\;C:\ProgramData\chocolatey\bin;D:\KienLongBank\Vault;D:\GrafanaLabs\grafana\bin;D:\KienLongBank\InfluxData\influxdb-1.8.10-1;D:\Document\Work\Redis;C:\Program Files\Docker\Docker\resources\bin;D:\nodejs\nvm;C:\nvm4w\nodejs;C:\Program Files\nodejs\;C:\Users\A715-42G\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\A715-42G\AppData\Local\Programs\Python\Python310\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\A715-42G\AppData\Local\Programs\Eclipse Adoptium\jdk-17.0.3.7-hotspot\bin;C:\Users\A715-42G\AppData\Local\Microsoft\WindowsApps;C:\Users\A715-42G\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\Azure Data Studio\bin;C:\Program Files\Git\bin;D:\Document\HQT_ATCSDL\MongoDB\mongosh-1.8.2-win32-x64\bin;C:\XamPP\php;C:\Program Files\Azure Data Studio\bin;D:\nodejs\nvm;C:\nvm4w\nodejs;C:\Users\A715-42G\AppData\Roaming\npm;D:\Document\cursor\resources\app\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, emulated-client, sharing, java.vm.version=17.0.6+9-LTS-190, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=61.0, LOGGED_APPLICATION_NAME=[transaction-service] } MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {} MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.example.transaction_service.entity.Transaction] is safe MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@274aef13] under count; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@60d3a912] under every; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@58b45008] under any; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@145a4d8] under sinh; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@577c6578] under cosh; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@67b9d267] under tanh; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@127e0686] under pi; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3eb10375] under log; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : length -> character_length MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@cf2e259] under position; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@213ad8d8] under overlay; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@3185c74b] under trim; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@310e003a] under cast; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@75388cce] under collate; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@1b11a5a1] under extract; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@1dafa4ba] under ifnull; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@4da11c25] under pad; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@589740f5] under str; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@57286a7f] under format; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@57cea030] under timestampadd; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@7973c7b0] under timestampdiff; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1a06b23c] under current_date; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@457f14c6] under current_time; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@18d66296] under current_timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current date -> current_date MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current time -> current_time MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@185aa936] under local_date; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@37626f53] under local_time; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@a06845d] under local_datetime; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@21ef9559] under offset_datetime; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local date -> local_date MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local time -> local_time MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6c319b4b] under instant; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current_instant -> instant MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@4b041366] under sql; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3eb10375 MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@1e264e22] under lpad; prior registration was NamedSqmFunctionTemplate(lpad) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@794adb25] under rpad; prior registration was NamedSqmFunctionTemplate(rpad) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : day -> dayofmonth MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4e789ea] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@cf2e259 MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@6001abed] under trunc; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : truncate -> trunc MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@309f3a48] under bitand; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5fa9d2da] under bitor; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4a5405ad] under bitxor; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@27e781c9] under bitnot; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@6ee3b207] under format; prior registration was org.hibernate.dialect.function.FormatFunction@57286a7f MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@37626f53 MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@a06845d MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7fcd8203] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@127e0686 MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@15de993a] under chr; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : char -> chr MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@e2cbb81] under sysdate; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@648f0a8a] under listagg; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - abs(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double acos(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - addtime(TIME datetime, TIME time) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean any(BOOLEAN arg) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer ascii(STRING arg) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double asin(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - avg(arg) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bit_and(arg) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bit_or(arg) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitand(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitnot(arg) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitor(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitxor(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - cast(arg as Type) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - ceiling(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Character char(INTEGER arg) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Character chr(INTEGER arg) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]]) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String collate(STRING string as COLLATION collation) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]]) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double cos(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double cosh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double cot(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Long count([distinct ]{arg|*}) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer crc32(arg) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date curdate() MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date current date MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time current time MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current timestamp MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date current_date MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Instant current_instant MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time current_time MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current_timestamp MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time curtime() MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date date(arg) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer datediff(DATE end, DATE start) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer day(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String dayname(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofmonth(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofweek(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofyear(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double degrees(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean every(BOOLEAN arg) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double exp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - floor(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]]) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer hour(TIME arg) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - ifnull(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Instant instant MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]]) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date last_day(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]]) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String left(STRING string, INTEGER length) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double ln(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local date MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local datetime MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local time MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local_date MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local_datetime MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local_time MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtime MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtimestamp MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start]) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1]) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double log10(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double log2(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String lower(STRING string) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String lpad(string, length[, padding]) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters]) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - max(COMPARABLE arg) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String md5(arg) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer microsecond(TIME arg) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - min(COMPARABLE arg) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer minute(TIME arg) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer month(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String monthname(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp now() MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - nullif(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset datetime MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset_datetime MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length]) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character]) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double pi MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer position(STRING pattern in STRING string) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer quarter(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double radians(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double rand([INTEGER seed]) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String repeat(STRING string, INTEGER times) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String reverse(STRING arg) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String right(STRING string, INTEGER length) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places]) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String rpad(string, length[, padding]) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters]) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer second(TIME arg) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String sha(arg) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String sha1(arg) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String sha2(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer sign(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double sin(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double sinh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String soundex(arg) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String space(INTEGER arg) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Object sql MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double sqrt(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String str(arg) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length]) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length]) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - subtime(TIME datetime, TIME time) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - sum(arg) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp sysdate() MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double tan(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double tanh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String time(arg) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1]) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - trunc( ... ) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - truncate( ... ) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String upper(STRING string) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date utc_date MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time utc_time MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp utc_timestamp MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_pop(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_samp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double variance(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer week(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer year(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.orm.query.plan.cache - Starting QueryInterpretationCache(2048) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.e.i.EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.example.transaction_service.entity.Transaction] is safe MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.example.transaction_service.entity.Transaction]: private accessor [amount] MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.orm.model.mapping.creation - Starting post-init callbacks MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(com.example.transaction_service.entity.Transaction) `staticFetchableList` generator MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction)] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction.updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select id from tbl_transaction where id=? MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into tbl_transaction (amount,bank_type,created_at,created_by,currency,description,destination_bank_code,destination_bank_name,failed_reason,from_account_number,reference_code,status,timestamp,to_account_number,type,updated_at,updated_by,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update tbl_transaction set amount=?,bank_type=?,created_at=?,created_by=?,currency=?,description=?,destination_bank_code=?,destination_bank_name=?,failed_reason=?,from_account_number=?,reference_code=?,status=?,timestamp=?,to_account_number=?,type=?,updated_at=?,updated_by=? where id=? MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from tbl_transaction where id=? MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6e176e44] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@3586b063] MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named HQL queries MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named SQL queries MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG org.hibernate.mapping.Table - No alter strings for table : tbl_transaction MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@be84f01 MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.internal.SessionFactoryRegistry - Registering SessionFactory: a9e4a216-2df3-41b7-b5b2-229bd1243908 (<unnamed>) MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured MDC:[traceId=, spanId=]
2025-06-10 18:05:48 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Instantiated SessionFactory MDC:[traceId=, spanId=]
2025-06-10 18:05:49 [restartedMain] DEBUG o.h.s.internal.StatisticsInitiator - Statistics initialized [enabled=false] MDC:[traceId=, spanId=]
2025-06-10 18:05:49 [restartedMain] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy3/jdk.proxy3.$Proxy223.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.getCountQuery(JpaQueryLookupStrategy.java:204)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:171)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.example.transaction_service.TransactionServiceApplication.main(TransactionServiceApplication.java:15)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-06-10 18:05:49 [restartedMain] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy3/jdk.proxy3.$Proxy223.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.getCountQuery(JpaQueryLookupStrategy.java:204)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:171)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.example.transaction_service.TransactionServiceApplication.main(TransactionServiceApplication.java:15)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-06-10 18:05:49 [restartedMain] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy3/jdk.proxy3.$Proxy223.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.example.transaction_service.TransactionServiceApplication.main(TransactionServiceApplication.java:15)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-06-10 18:05:49 [restartedMain] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy3/jdk.proxy3.$Proxy223.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.example.transaction_service.TransactionServiceApplication.main(TransactionServiceApplication.java:15)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-06-10 18:05:52 [restartedMain] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-06-10 18:05:52 [restartedMain] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator MDC:[traceId=, spanId=]
2025-06-10 18:05:52 [restartedMain] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory MDC:[traceId=, spanId=]
2025-06-10 18:05:52 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-06-10 18:05:52 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader MDC:[traceId=, spanId=]
2025-06-10 18:05:52 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-06-10 18:05:52 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-06-10 18:05:52 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-06-10 18:05:52 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-06-10 18:05:52 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-06-10 18:05:52 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-06-10 18:05:52 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-06-10 18:05:52 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-06-10 18:05:52 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-06-10 18:05:52 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-06-10 18:05:52 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-06-10 18:05:54 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 18:05:54 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 18:05:54 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 18:05:54 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 18:05:54 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3ae3fd79 MDC:[traceId=, spanId=]
2025-06-10 18:05:54 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 18:05:54 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6a337775 MDC:[traceId=, spanId=]
2025-06-10 18:05:54 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:05:54 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 18:05:54 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 18:05:54 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 18:05:54 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@707568021 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 18:05:54 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 18:05:54 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 18:06:54 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 18:06:54 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 18:06:54 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 18:06:54 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 18:06:54 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@19e080a6 MDC:[traceId=, spanId=]
2025-06-10 18:06:54 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 18:06:54 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@595036f4 MDC:[traceId=, spanId=]
2025-06-10 18:06:54 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:06:54 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 18:06:54 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 18:06:54 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 18:06:54 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1795558287 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 18:06:54 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 18:06:54 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 18:07:54 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 18:07:54 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 18:07:54 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 18:07:54 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 18:07:54 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2e8ab74f MDC:[traceId=, spanId=]
2025-06-10 18:07:54 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 18:07:54 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@520ce238 MDC:[traceId=, spanId=]
2025-06-10 18:07:54 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:07:54 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 18:07:54 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 18:07:54 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 18:07:54 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1259989994 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 18:07:54 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 18:07:54 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 18:08:54 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 18:08:54 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 18:08:54 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 18:08:54 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 18:08:54 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2ac0216 MDC:[traceId=, spanId=]
2025-06-10 18:08:54 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 18:08:54 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6231b7b8 MDC:[traceId=, spanId=]
2025-06-10 18:08:54 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:08:54 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 18:08:54 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 18:08:54 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 18:08:54 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1598601130 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 18:08:54 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 18:08:54 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 18:09:54 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 18:09:54 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 18:09:54 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 18:09:54 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 18:09:54 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@43f4b45e MDC:[traceId=, spanId=]
2025-06-10 18:09:54 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 18:09:54 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@837b3b6 MDC:[traceId=, spanId=]
2025-06-10 18:09:54 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:09:54 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 18:09:54 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 18:09:54 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 18:09:54 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@609440655 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 18:09:54 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 18:09:54 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 18:10:25 [http-nio-8088-exec-3] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 18:10:25 [http-nio-8088-exec-3] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 18:10:25 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 18:10:25 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(5))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 18:10:25 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@790c3df6 MDC:[traceId=, spanId=]
2025-06-10 18:10:25 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(5).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:10:25 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@49642072 MDC:[traceId=, spanId=]
2025-06-10 18:10:25 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(5).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:10:25 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@492cd579 MDC:[traceId=, spanId=]
2025-06-10 18:10:25 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for generalized SqmExpression : org.hibernate.query.sqm.function.SelfRenderingSqmFunction@fc509bd MDC:[traceId=, spanId=]
2025-06-10 18:10:25 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@69c4c39b MDC:[traceId=, spanId=]
2025-06-10 18:10:25 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for generalized SqmExpression : org.hibernate.query.sqm.function.SelfRenderingSqmFunction@3bb9d56 MDC:[traceId=, spanId=]
2025-06-10 18:10:25 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4d07c520 MDC:[traceId=, spanId=]
2025-06-10 18:10:25 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(5).type)  MDC:[traceId=, spanId=]
2025-06-10 18:10:25 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3bd605fd MDC:[traceId=, spanId=]
2025-06-10 18:10:25 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(5).status)  MDC:[traceId=, spanId=]
2025-06-10 18:10:25 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@50248147 MDC:[traceId=, spanId=]
2025-06-10 18:10:25 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(5).currency)  MDC:[traceId=, spanId=]
2025-06-10 18:10:25 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@21aa7c9d MDC:[traceId=, spanId=]
2025-06-10 18:10:25 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(5).bankType)  MDC:[traceId=, spanId=]
2025-06-10 18:10:25 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3d17ffb4 MDC:[traceId=, spanId=]
2025-06-10 18:10:25 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(5).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:10:25 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2674d30d MDC:[traceId=, spanId=]
2025-06-10 18:10:25 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(5).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:10:25 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(5)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(5).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(5).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(5).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(5).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(5).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(5).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(5).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(5).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(5).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(5).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(5).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(5).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(5).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(5).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(5).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(5).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(5).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 18:10:25 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(5)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 18:10:25 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 18:10:25 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(5) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(5))@1623564762 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 18:10:25 [http-nio-8088-exec-3] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) and (lower(t1_0.description) like replace(?,'\\','\\\\') or lower(cast(t1_0.type as char)) like replace(?,'\\','\\\\')) and t1_0.type=? and t1_0.status=? and t1_0.currency=? and t1_0.bank_type=? and t1_0.timestamp between ? and ? order by t1_0.timestamp desc limit ?,? MDC:[traceId=, spanId=]
2025-06-10 18:10:25 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 18:10:25 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(6))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 18:10:25 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1a7307fb MDC:[traceId=, spanId=]
2025-06-10 18:10:25 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(6).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:10:25 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4bfbceeb MDC:[traceId=, spanId=]
2025-06-10 18:10:25 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(6).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:10:25 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@a12952a MDC:[traceId=, spanId=]
2025-06-10 18:10:25 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for generalized SqmExpression : org.hibernate.query.sqm.function.SelfRenderingSqmFunction@1d942c4b MDC:[traceId=, spanId=]
2025-06-10 18:10:25 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6e9fdf96 MDC:[traceId=, spanId=]
2025-06-10 18:10:25 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for generalized SqmExpression : org.hibernate.query.sqm.function.SelfRenderingSqmFunction@41eb8c65 MDC:[traceId=, spanId=]
2025-06-10 18:10:25 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1836f7c2 MDC:[traceId=, spanId=]
2025-06-10 18:10:25 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(6).type)  MDC:[traceId=, spanId=]
2025-06-10 18:10:25 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@455ab211 MDC:[traceId=, spanId=]
2025-06-10 18:10:25 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(6).status)  MDC:[traceId=, spanId=]
2025-06-10 18:10:25 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@70bbe3e2 MDC:[traceId=, spanId=]
2025-06-10 18:10:25 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(6).currency)  MDC:[traceId=, spanId=]
2025-06-10 18:10:25 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@787247ca MDC:[traceId=, spanId=]
2025-06-10 18:10:25 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(6).bankType)  MDC:[traceId=, spanId=]
2025-06-10 18:10:25 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6c67053b MDC:[traceId=, spanId=]
2025-06-10 18:10:25 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(6).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:10:25 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2b13beb2 MDC:[traceId=, spanId=]
2025-06-10 18:10:25 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(6).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:10:25 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-BasicResult
 MDC:[traceId=, spanId=]
2025-06-10 18:10:25 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(6)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 18:10:25 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 18:10:25 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-10 18:10:25 [http-nio-8088-exec-3] DEBUG org.hibernate.SQL - select count(t1_0.id) from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) and (lower(t1_0.description) like replace(?,'\\','\\\\') or lower(cast(t1_0.type as char)) like replace(?,'\\','\\\\')) and t1_0.type=? and t1_0.status=? and t1_0.currency=? and t1_0.bank_type=? and t1_0.timestamp between ? and ? MDC:[traceId=, spanId=]
2025-06-10 18:10:25 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@35bf773a MDC:[traceId=, spanId=]
2025-06-10 18:10:25 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [0] MDC:[traceId=, spanId=]
2025-06-10 18:10:25 [http-nio-8088-exec-3] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 18:10:45 [http-nio-8088-exec-8] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 18:10:45 [http-nio-8088-exec-8] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 18:10:45 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 18:10:45 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(7))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 18:10:45 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5e442c18 MDC:[traceId=, spanId=]
2025-06-10 18:10:45 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(7).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:10:45 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@46d0c375 MDC:[traceId=, spanId=]
2025-06-10 18:10:45 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(7).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:10:45 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1ff3d56a MDC:[traceId=, spanId=]
2025-06-10 18:10:45 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for generalized SqmExpression : org.hibernate.query.sqm.function.SelfRenderingSqmFunction@dcc41a4 MDC:[traceId=, spanId=]
2025-06-10 18:10:45 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1d5593c0 MDC:[traceId=, spanId=]
2025-06-10 18:10:45 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for generalized SqmExpression : org.hibernate.query.sqm.function.SelfRenderingSqmFunction@277a70c9 MDC:[traceId=, spanId=]
2025-06-10 18:10:45 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3c8827ed MDC:[traceId=, spanId=]
2025-06-10 18:10:45 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(7).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:10:45 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@21c3e7cd MDC:[traceId=, spanId=]
2025-06-10 18:10:45 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(7).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:10:45 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(7)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(7).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(7).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(7).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(7).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(7).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(7).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(7).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(7).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(7).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(7).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(7).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(7).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(7).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(7).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(7).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(7).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(7).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 18:10:45 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(7)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 18:10:45 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 18:10:45 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(7) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(7))@1315062752 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 18:10:45 [http-nio-8088-exec-8] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) and (lower(t1_0.description) like replace(?,'\\','\\\\') or lower(cast(t1_0.type as char)) like replace(?,'\\','\\\\')) and t1_0.timestamp between ? and ? order by t1_0.timestamp desc limit ?,? MDC:[traceId=, spanId=]
2025-06-10 18:10:45 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 18:10:45 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(8))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 18:10:45 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1a6d2c03 MDC:[traceId=, spanId=]
2025-06-10 18:10:45 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(8).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:10:45 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7100c6af MDC:[traceId=, spanId=]
2025-06-10 18:10:45 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(8).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:10:45 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@97ceaec MDC:[traceId=, spanId=]
2025-06-10 18:10:45 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for generalized SqmExpression : org.hibernate.query.sqm.function.SelfRenderingSqmFunction@37e7f6f6 MDC:[traceId=, spanId=]
2025-06-10 18:10:45 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@ad901a0 MDC:[traceId=, spanId=]
2025-06-10 18:10:45 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for generalized SqmExpression : org.hibernate.query.sqm.function.SelfRenderingSqmFunction@7b5d4b22 MDC:[traceId=, spanId=]
2025-06-10 18:10:45 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@816cfd8 MDC:[traceId=, spanId=]
2025-06-10 18:10:45 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(8).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:10:45 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6b92a85c MDC:[traceId=, spanId=]
2025-06-10 18:10:45 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(8).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:10:45 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-BasicResult
 MDC:[traceId=, spanId=]
2025-06-10 18:10:45 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(8)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 18:10:45 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 18:10:45 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-10 18:10:45 [http-nio-8088-exec-8] DEBUG org.hibernate.SQL - select count(t1_0.id) from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) and (lower(t1_0.description) like replace(?,'\\','\\\\') or lower(cast(t1_0.type as char)) like replace(?,'\\','\\\\')) and t1_0.timestamp between ? and ? MDC:[traceId=, spanId=]
2025-06-10 18:10:45 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@3bb88341 MDC:[traceId=, spanId=]
2025-06-10 18:10:45 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [0] MDC:[traceId=, spanId=]
2025-06-10 18:10:45 [http-nio-8088-exec-8] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 18:10:54 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 18:10:54 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 18:10:54 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 18:10:54 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 18:10:54 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5e13099a MDC:[traceId=, spanId=]
2025-06-10 18:10:54 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 18:10:54 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@445d86e2 MDC:[traceId=, spanId=]
2025-06-10 18:10:54 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:10:54 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 18:10:54 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 18:10:54 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 18:10:54 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@254582558 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 18:10:54 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 18:10:54 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 18:10:58 [http-nio-8088-exec-10] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 18:10:58 [http-nio-8088-exec-10] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 18:10:58 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 18:10:58 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(9))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 18:10:58 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6bb727bc MDC:[traceId=, spanId=]
2025-06-10 18:10:58 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(9).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:10:58 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@46efc3d4 MDC:[traceId=, spanId=]
2025-06-10 18:10:58 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(9).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:10:58 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@70ebf9b1 MDC:[traceId=, spanId=]
2025-06-10 18:10:58 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for generalized SqmExpression : org.hibernate.query.sqm.function.SelfRenderingSqmFunction@65292a7 MDC:[traceId=, spanId=]
2025-06-10 18:10:58 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@373fb0a6 MDC:[traceId=, spanId=]
2025-06-10 18:10:58 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for generalized SqmExpression : org.hibernate.query.sqm.function.SelfRenderingSqmFunction@7d13264 MDC:[traceId=, spanId=]
2025-06-10 18:10:58 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@273e97db MDC:[traceId=, spanId=]
2025-06-10 18:10:58 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(9).type)  MDC:[traceId=, spanId=]
2025-06-10 18:10:58 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@53998893 MDC:[traceId=, spanId=]
2025-06-10 18:10:58 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(9).status)  MDC:[traceId=, spanId=]
2025-06-10 18:10:58 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@364347e2 MDC:[traceId=, spanId=]
2025-06-10 18:10:58 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(9).currency)  MDC:[traceId=, spanId=]
2025-06-10 18:10:58 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7db0141e MDC:[traceId=, spanId=]
2025-06-10 18:10:58 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(9).bankType)  MDC:[traceId=, spanId=]
2025-06-10 18:10:58 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3037b171 MDC:[traceId=, spanId=]
2025-06-10 18:10:58 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(9).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:10:58 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@39f2ca10 MDC:[traceId=, spanId=]
2025-06-10 18:10:58 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(9).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:10:58 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(9)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(9).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(9).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(9).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(9).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(9).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(9).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(9).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(9).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(9).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(9).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(9).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(9).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(9).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(9).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(9).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(9).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(9).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 18:10:58 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(9)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 18:10:58 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 18:10:58 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(9) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(9))@74144993 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 18:10:58 [http-nio-8088-exec-10] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) and (lower(t1_0.description) like replace(?,'\\','\\\\') or lower(cast(t1_0.type as char)) like replace(?,'\\','\\\\')) and t1_0.type=? and t1_0.status=? and t1_0.currency=? and t1_0.bank_type=? and t1_0.timestamp between ? and ? order by t1_0.timestamp desc limit ?,? MDC:[traceId=, spanId=]
2025-06-10 18:10:58 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 18:10:58 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(10))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 18:10:58 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2b8ebedc MDC:[traceId=, spanId=]
2025-06-10 18:10:58 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(10).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:10:58 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2e67fd92 MDC:[traceId=, spanId=]
2025-06-10 18:10:58 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(10).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:10:58 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1fb34eb5 MDC:[traceId=, spanId=]
2025-06-10 18:10:58 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for generalized SqmExpression : org.hibernate.query.sqm.function.SelfRenderingSqmFunction@1c8bc82b MDC:[traceId=, spanId=]
2025-06-10 18:10:58 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3021a8a5 MDC:[traceId=, spanId=]
2025-06-10 18:10:58 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for generalized SqmExpression : org.hibernate.query.sqm.function.SelfRenderingSqmFunction@2b5057e6 MDC:[traceId=, spanId=]
2025-06-10 18:10:58 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5f1d4874 MDC:[traceId=, spanId=]
2025-06-10 18:10:58 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(10).type)  MDC:[traceId=, spanId=]
2025-06-10 18:10:58 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@19d7f9ec MDC:[traceId=, spanId=]
2025-06-10 18:10:58 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(10).status)  MDC:[traceId=, spanId=]
2025-06-10 18:10:58 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5d09cb2 MDC:[traceId=, spanId=]
2025-06-10 18:10:58 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(10).currency)  MDC:[traceId=, spanId=]
2025-06-10 18:10:58 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@77fe0ad4 MDC:[traceId=, spanId=]
2025-06-10 18:10:58 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(10).bankType)  MDC:[traceId=, spanId=]
2025-06-10 18:10:58 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1ff99081 MDC:[traceId=, spanId=]
2025-06-10 18:10:58 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(10).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:10:58 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4d4f1d9c MDC:[traceId=, spanId=]
2025-06-10 18:10:58 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(10).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:10:58 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-BasicResult
 MDC:[traceId=, spanId=]
2025-06-10 18:10:58 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(10)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 18:10:58 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 18:10:58 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-10 18:10:58 [http-nio-8088-exec-10] DEBUG org.hibernate.SQL - select count(t1_0.id) from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) and (lower(t1_0.description) like replace(?,'\\','\\\\') or lower(cast(t1_0.type as char)) like replace(?,'\\','\\\\')) and t1_0.type=? and t1_0.status=? and t1_0.currency=? and t1_0.bank_type=? and t1_0.timestamp between ? and ? MDC:[traceId=, spanId=]
2025-06-10 18:10:58 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@6a8020fa MDC:[traceId=, spanId=]
2025-06-10 18:10:58 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [0] MDC:[traceId=, spanId=]
2025-06-10 18:10:58 [http-nio-8088-exec-10] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 18:11:17 [http-nio-8088-exec-6] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 18:11:17 [http-nio-8088-exec-6] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 18:11:17 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 18:11:17 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(11))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 18:11:17 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@17fa24a6 MDC:[traceId=, spanId=]
2025-06-10 18:11:17 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for generalized SqmExpression : org.hibernate.query.sqm.function.SelfRenderingSqmFunction@23b46dce MDC:[traceId=, spanId=]
2025-06-10 18:11:17 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3c41ad01 MDC:[traceId=, spanId=]
2025-06-10 18:11:17 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for generalized SqmExpression : org.hibernate.query.sqm.function.SelfRenderingSqmFunction@52542321 MDC:[traceId=, spanId=]
2025-06-10 18:11:17 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7eb9c981 MDC:[traceId=, spanId=]
2025-06-10 18:11:17 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(11).type)  MDC:[traceId=, spanId=]
2025-06-10 18:11:17 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7e1c6966 MDC:[traceId=, spanId=]
2025-06-10 18:11:17 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(11).status)  MDC:[traceId=, spanId=]
2025-06-10 18:11:17 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7668ee2a MDC:[traceId=, spanId=]
2025-06-10 18:11:17 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(11).currency)  MDC:[traceId=, spanId=]
2025-06-10 18:11:17 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@32ff45a MDC:[traceId=, spanId=]
2025-06-10 18:11:17 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(11).bankType)  MDC:[traceId=, spanId=]
2025-06-10 18:11:17 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1a174459 MDC:[traceId=, spanId=]
2025-06-10 18:11:17 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(11).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:11:17 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@57ff729c MDC:[traceId=, spanId=]
2025-06-10 18:11:17 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(11).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:11:17 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(11)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(11).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(11).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(11).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(11).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(11).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(11).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(11).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(11).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(11).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(11).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(11).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(11).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(11).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(11).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(11).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(11).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(11).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 18:11:17 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(11)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 18:11:17 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 18:11:17 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(11) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(11))@735823934 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 18:11:17 [http-nio-8088-exec-6] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where (lower(t1_0.description) like replace(?,'\\','\\\\') or lower(cast(t1_0.type as char)) like replace(?,'\\','\\\\')) and t1_0.type=? and t1_0.status=? and t1_0.currency=? and t1_0.bank_type=? and t1_0.timestamp between ? and ? order by t1_0.timestamp desc limit ?,? MDC:[traceId=, spanId=]
2025-06-10 18:11:17 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 18:11:17 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(12))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 18:11:17 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@569c9004 MDC:[traceId=, spanId=]
2025-06-10 18:11:17 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for generalized SqmExpression : org.hibernate.query.sqm.function.SelfRenderingSqmFunction@7a9f801c MDC:[traceId=, spanId=]
2025-06-10 18:11:17 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@52d7a2a6 MDC:[traceId=, spanId=]
2025-06-10 18:11:17 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for generalized SqmExpression : org.hibernate.query.sqm.function.SelfRenderingSqmFunction@74c73edb MDC:[traceId=, spanId=]
2025-06-10 18:11:17 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3e9d49f8 MDC:[traceId=, spanId=]
2025-06-10 18:11:17 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(12).type)  MDC:[traceId=, spanId=]
2025-06-10 18:11:17 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@65d6fb0f MDC:[traceId=, spanId=]
2025-06-10 18:11:17 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(12).status)  MDC:[traceId=, spanId=]
2025-06-10 18:11:17 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@225693e0 MDC:[traceId=, spanId=]
2025-06-10 18:11:17 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(12).currency)  MDC:[traceId=, spanId=]
2025-06-10 18:11:17 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2775266d MDC:[traceId=, spanId=]
2025-06-10 18:11:17 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(12).bankType)  MDC:[traceId=, spanId=]
2025-06-10 18:11:17 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@41b89ed9 MDC:[traceId=, spanId=]
2025-06-10 18:11:17 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(12).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:11:17 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@774b173c MDC:[traceId=, spanId=]
2025-06-10 18:11:17 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(12).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:11:17 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-BasicResult
 MDC:[traceId=, spanId=]
2025-06-10 18:11:17 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(12)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 18:11:17 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 18:11:17 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-10 18:11:17 [http-nio-8088-exec-6] DEBUG org.hibernate.SQL - select count(t1_0.id) from tbl_transaction t1_0 where (lower(t1_0.description) like replace(?,'\\','\\\\') or lower(cast(t1_0.type as char)) like replace(?,'\\','\\\\')) and t1_0.type=? and t1_0.status=? and t1_0.currency=? and t1_0.bank_type=? and t1_0.timestamp between ? and ? MDC:[traceId=, spanId=]
2025-06-10 18:11:17 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@428d90a7 MDC:[traceId=, spanId=]
2025-06-10 18:11:17 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [0] MDC:[traceId=, spanId=]
2025-06-10 18:11:17 [http-nio-8088-exec-6] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 18:11:43 [http-nio-8088-exec-7] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 18:11:43 [http-nio-8088-exec-7] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 18:11:43 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 18:11:43 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(13))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 18:11:43 [http-nio-8088-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for generalized SqmExpression : org.hibernate.query.sqm.tree.expression.SqmLiteral@9f79c8a MDC:[traceId=, spanId=]
2025-06-10 18:11:43 [http-nio-8088-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for generalized SqmExpression : org.hibernate.query.sqm.tree.expression.SqmLiteral@1b86886f MDC:[traceId=, spanId=]
2025-06-10 18:11:43 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(13)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(13).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(13).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(13).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(13).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(13).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(13).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(13).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(13).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(13).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(13).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(13).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(13).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(13).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(13).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(13).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(13).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(13).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 18:11:43 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(13)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 18:11:43 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 18:11:43 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(13) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(13))@2120998851 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 18:11:43 [http-nio-8088-exec-7] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where 1=1 order by t1_0.timestamp desc limit ?,? MDC:[traceId=, spanId=]
2025-06-10 18:11:43 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [6c52dec1-7727-4105-9521-7b140e4b9fe6] MDC:[traceId=, spanId=]
2025-06-10 18:11:43 [http-nio-8088-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(13)): 6c52dec1-7727-4105-9521-7b140e4b9fe6 MDC:[traceId=, spanId=]
2025-06-10 18:11:43 [http-nio-8088-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(13)#6c52dec1-7727-4105-9521-7b140e4b9fe6] : 986474764 MDC:[traceId=, spanId=]
2025-06-10 18:11:43 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [21468.00] MDC:[traceId=, spanId=]
2025-06-10 18:11:43 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 18:11:43 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T15:51:54.770845] MDC:[traceId=, spanId=]
2025-06-10 18:11:43 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 18:11:43 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 18:11:43 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [LE VAN DAI RUT TIEN] MDC:[traceId=, spanId=]
2025-06-10 18:11:43 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 18:11:43 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 18:11:43 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-10 18:11:43 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 18:11:43 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-20250609155154feba46a7] MDC:[traceId=, spanId=]
2025-06-10 18:11:43 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-10 18:11:43 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T15:51:54.505223] MDC:[traceId=, spanId=]
2025-06-10 18:11:43 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-10 18:11:43 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [WITHDRAW] MDC:[traceId=, spanId=]
2025-06-10 18:11:43 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T15:52:11.861255] MDC:[traceId=, spanId=]
2025-06-10 18:11:43 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 18:11:43 [http-nio-8088-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(13)#6c52dec1-7727-4105-9521-7b140e4b9fe6 MDC:[traceId=, spanId=]
2025-06-10 18:11:43 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@50049d29 MDC:[traceId=, spanId=]
2025-06-10 18:11:43 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [e1a28032-24bc-4730-afde-450cf41c6a55] MDC:[traceId=, spanId=]
2025-06-10 18:11:43 [http-nio-8088-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(13)): e1a28032-24bc-4730-afde-450cf41c6a55 MDC:[traceId=, spanId=]
2025-06-10 18:11:43 [http-nio-8088-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(13)#e1a28032-24bc-4730-afde-450cf41c6a55] : 526729167 MDC:[traceId=, spanId=]
2025-06-10 18:11:43 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [1111.00] MDC:[traceId=, spanId=]
2025-06-10 18:11:43 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 18:11:43 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T15:42:37.016815] MDC:[traceId=, spanId=]
2025-06-10 18:11:43 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 18:11:43 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 18:11:43 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [LE VAN DAI RUT TIEN] MDC:[traceId=, spanId=]
2025-06-10 18:11:43 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 18:11:43 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 18:11:43 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [Quá thời gian cho phép của giao dịch] MDC:[traceId=, spanId=]
2025-06-10 18:11:43 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 18:11:43 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-202506091542360c5ce231] MDC:[traceId=, spanId=]
2025-06-10 18:11:43 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [FAILED] MDC:[traceId=, spanId=]
2025-06-10 18:11:43 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T15:42:36.864547] MDC:[traceId=, spanId=]
2025-06-10 18:11:43 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-10 18:11:43 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [WITHDRAW] MDC:[traceId=, spanId=]
2025-06-10 18:11:43 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T15:45:40.653921] MDC:[traceId=, spanId=]
2025-06-10 18:11:43 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 18:11:43 [http-nio-8088-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(13)#e1a28032-24bc-4730-afde-450cf41c6a55 MDC:[traceId=, spanId=]
2025-06-10 18:11:43 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@50049d29 MDC:[traceId=, spanId=]
2025-06-10 18:11:43 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 18:11:43 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(14))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 18:11:43 [http-nio-8088-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for generalized SqmExpression : org.hibernate.query.sqm.tree.expression.SqmLiteral@3af8c46 MDC:[traceId=, spanId=]
2025-06-10 18:11:43 [http-nio-8088-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for generalized SqmExpression : org.hibernate.query.sqm.tree.expression.SqmLiteral@16f90e12 MDC:[traceId=, spanId=]
2025-06-10 18:11:43 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-BasicResult
 MDC:[traceId=, spanId=]
2025-06-10 18:11:43 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(14)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 18:11:43 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 18:11:43 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-10 18:11:43 [http-nio-8088-exec-7] DEBUG org.hibernate.SQL - select count(t1_0.id) from tbl_transaction t1_0 where 1=1 MDC:[traceId=, spanId=]
2025-06-10 18:11:43 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@9d15c6c MDC:[traceId=, spanId=]
2025-06-10 18:11:43 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [32] MDC:[traceId=, spanId=]
2025-06-10 18:11:43 [http-nio-8088-exec-7] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 18:11:54 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 18:11:54 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 18:11:54 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 18:11:54 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 18:11:54 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@27da1ae0 MDC:[traceId=, spanId=]
2025-06-10 18:11:54 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 18:11:54 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4dcbbe8a MDC:[traceId=, spanId=]
2025-06-10 18:11:54 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:11:54 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 18:11:54 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 18:11:54 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 18:11:54 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1309584443 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 18:11:54 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 18:11:54 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 18:12:07 [http-nio-8088-exec-4] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 18:12:07 [http-nio-8088-exec-4] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 18:12:07 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 18:12:07 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(15))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 18:12:07 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@33a61860 MDC:[traceId=, spanId=]
2025-06-10 18:12:07 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(15).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:12:07 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7afbab97 MDC:[traceId=, spanId=]
2025-06-10 18:12:07 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(15).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:12:07 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(15)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(15).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(15).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(15).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(15).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(15).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(15).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(15).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(15).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(15).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(15).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(15).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(15).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(15).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(15).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(15).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(15).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(15).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 18:12:07 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(15)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 18:12:07 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 18:12:07 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(15) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(15))@809228685 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 18:12:07 [http-nio-8088-exec-4] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.timestamp between ? and ? order by t1_0.timestamp desc limit ?,? MDC:[traceId=, spanId=]
2025-06-10 18:12:07 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [d41a58db-a3d5-46ce-8424-1de5833b2b30] MDC:[traceId=, spanId=]
2025-06-10 18:12:07 [http-nio-8088-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(15)): d41a58db-a3d5-46ce-8424-1de5833b2b30 MDC:[traceId=, spanId=]
2025-06-10 18:12:07 [http-nio-8088-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(15)#d41a58db-a3d5-46ce-8424-1de5833b2b30] : 242263336 MDC:[traceId=, spanId=]
2025-06-10 18:12:07 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [222121.00] MDC:[traceId=, spanId=]
2025-06-10 18:12:07 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 18:12:07 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-06T14:55:17.181641] MDC:[traceId=, spanId=]
2025-06-10 18:12:07 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 18:12:07 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 18:12:07 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [] MDC:[traceId=, spanId=]
2025-06-10 18:12:07 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 18:12:07 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 18:12:07 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-10 18:12:07 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 18:12:07 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-2025060614551714b225e2] MDC:[traceId=, spanId=]
2025-06-10 18:12:07 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-10 18:12:07 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-06T14:55:17.070079] MDC:[traceId=, spanId=]
2025-06-10 18:12:07 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [27072000] MDC:[traceId=, spanId=]
2025-06-10 18:12:07 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 18:12:07 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-06T14:55:27.673405] MDC:[traceId=, spanId=]
2025-06-10 18:12:07 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 18:12:07 [http-nio-8088-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(15)#d41a58db-a3d5-46ce-8424-1de5833b2b30 MDC:[traceId=, spanId=]
2025-06-10 18:12:07 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6069f2da MDC:[traceId=, spanId=]
2025-06-10 18:12:07 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [0964f226-b8f2-438b-a461-96095a85cef2] MDC:[traceId=, spanId=]
2025-06-10 18:12:07 [http-nio-8088-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(15)): 0964f226-b8f2-438b-a461-96095a85cef2 MDC:[traceId=, spanId=]
2025-06-10 18:12:07 [http-nio-8088-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(15)#0964f226-b8f2-438b-a461-96095a85cef2] : 1168084567 MDC:[traceId=, spanId=]
2025-06-10 18:12:07 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [10000.00] MDC:[traceId=, spanId=]
2025-06-10 18:12:07 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 18:12:07 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-06T14:51:10.451897] MDC:[traceId=, spanId=]
2025-06-10 18:12:07 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 18:12:07 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 18:12:07 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [] MDC:[traceId=, spanId=]
2025-06-10 18:12:07 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 18:12:07 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 18:12:07 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [Lỗi hệ thống] MDC:[traceId=, spanId=]
2025-06-10 18:12:07 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [27072000] MDC:[traceId=, spanId=]
2025-06-10 18:12:07 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-27072000-2025060614510616988dab] MDC:[traceId=, spanId=]
2025-06-10 18:12:07 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [FAILED] MDC:[traceId=, spanId=]
2025-06-10 18:12:07 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-06T14:51:06.793483] MDC:[traceId=, spanId=]
2025-06-10 18:12:07 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [87654321] MDC:[traceId=, spanId=]
2025-06-10 18:12:07 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 18:12:07 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-06T14:51:52.032624] MDC:[traceId=, spanId=]
2025-06-10 18:12:07 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 18:12:07 [http-nio-8088-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(15)#0964f226-b8f2-438b-a461-96095a85cef2 MDC:[traceId=, spanId=]
2025-06-10 18:12:07 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6069f2da MDC:[traceId=, spanId=]
2025-06-10 18:12:07 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 18:12:07 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(16))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 18:12:07 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6183f367 MDC:[traceId=, spanId=]
2025-06-10 18:12:07 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(16).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:12:07 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@49e9d0f3 MDC:[traceId=, spanId=]
2025-06-10 18:12:07 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(16).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:12:07 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-BasicResult
 MDC:[traceId=, spanId=]
2025-06-10 18:12:07 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(16)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 18:12:07 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 18:12:07 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-10 18:12:07 [http-nio-8088-exec-4] DEBUG org.hibernate.SQL - select count(t1_0.id) from tbl_transaction t1_0 where t1_0.timestamp between ? and ? MDC:[traceId=, spanId=]
2025-06-10 18:12:07 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@51e80080 MDC:[traceId=, spanId=]
2025-06-10 18:12:07 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [5] MDC:[traceId=, spanId=]
2025-06-10 18:12:07 [http-nio-8088-exec-4] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 18:12:15 [http-nio-8088-exec-9] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 18:12:15 [http-nio-8088-exec-9] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 18:12:15 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 18:12:15 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(17))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 18:12:15 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@24cdec7c MDC:[traceId=, spanId=]
2025-06-10 18:12:15 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(17).bankType)  MDC:[traceId=, spanId=]
2025-06-10 18:12:15 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@cec07d MDC:[traceId=, spanId=]
2025-06-10 18:12:15 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(17).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:12:15 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4428ada1 MDC:[traceId=, spanId=]
2025-06-10 18:12:15 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(17).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:12:15 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(17)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(17).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(17).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(17).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(17).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(17).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(17).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(17).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(17).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(17).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(17).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(17).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(17).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(17).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(17).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(17).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(17).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(17).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 18:12:15 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(17)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 18:12:15 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 18:12:15 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(17) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(17))@1693938611 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 18:12:15 [http-nio-8088-exec-9] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.bank_type=? and t1_0.timestamp between ? and ? order by t1_0.timestamp desc limit ?,? MDC:[traceId=, spanId=]
2025-06-10 18:12:15 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [d41a58db-a3d5-46ce-8424-1de5833b2b30] MDC:[traceId=, spanId=]
2025-06-10 18:12:15 [http-nio-8088-exec-9] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(17)): d41a58db-a3d5-46ce-8424-1de5833b2b30 MDC:[traceId=, spanId=]
2025-06-10 18:12:15 [http-nio-8088-exec-9] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(17)#d41a58db-a3d5-46ce-8424-1de5833b2b30] : 1585890021 MDC:[traceId=, spanId=]
2025-06-10 18:12:15 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [222121.00] MDC:[traceId=, spanId=]
2025-06-10 18:12:15 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 18:12:15 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-06T14:55:17.181641] MDC:[traceId=, spanId=]
2025-06-10 18:12:15 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 18:12:15 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 18:12:15 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [] MDC:[traceId=, spanId=]
2025-06-10 18:12:15 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 18:12:15 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 18:12:15 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-10 18:12:15 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 18:12:15 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-2025060614551714b225e2] MDC:[traceId=, spanId=]
2025-06-10 18:12:15 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-10 18:12:15 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-06T14:55:17.070079] MDC:[traceId=, spanId=]
2025-06-10 18:12:15 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [27072000] MDC:[traceId=, spanId=]
2025-06-10 18:12:15 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 18:12:15 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-06T14:55:27.673405] MDC:[traceId=, spanId=]
2025-06-10 18:12:15 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 18:12:15 [http-nio-8088-exec-9] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(17)#d41a58db-a3d5-46ce-8424-1de5833b2b30 MDC:[traceId=, spanId=]
2025-06-10 18:12:15 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1b3486d MDC:[traceId=, spanId=]
2025-06-10 18:12:15 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [0964f226-b8f2-438b-a461-96095a85cef2] MDC:[traceId=, spanId=]
2025-06-10 18:12:15 [http-nio-8088-exec-9] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(17)): 0964f226-b8f2-438b-a461-96095a85cef2 MDC:[traceId=, spanId=]
2025-06-10 18:12:15 [http-nio-8088-exec-9] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(17)#0964f226-b8f2-438b-a461-96095a85cef2] : 1752328458 MDC:[traceId=, spanId=]
2025-06-10 18:12:15 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [10000.00] MDC:[traceId=, spanId=]
2025-06-10 18:12:15 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 18:12:15 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-06T14:51:10.451897] MDC:[traceId=, spanId=]
2025-06-10 18:12:15 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 18:12:15 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 18:12:15 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [] MDC:[traceId=, spanId=]
2025-06-10 18:12:15 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 18:12:15 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 18:12:15 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [Lỗi hệ thống] MDC:[traceId=, spanId=]
2025-06-10 18:12:15 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [27072000] MDC:[traceId=, spanId=]
2025-06-10 18:12:15 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-27072000-2025060614510616988dab] MDC:[traceId=, spanId=]
2025-06-10 18:12:15 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [FAILED] MDC:[traceId=, spanId=]
2025-06-10 18:12:15 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-06T14:51:06.793483] MDC:[traceId=, spanId=]
2025-06-10 18:12:15 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [87654321] MDC:[traceId=, spanId=]
2025-06-10 18:12:15 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 18:12:15 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-06T14:51:52.032624] MDC:[traceId=, spanId=]
2025-06-10 18:12:15 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 18:12:15 [http-nio-8088-exec-9] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(17)#0964f226-b8f2-438b-a461-96095a85cef2 MDC:[traceId=, spanId=]
2025-06-10 18:12:15 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1b3486d MDC:[traceId=, spanId=]
2025-06-10 18:12:15 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 18:12:15 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(18))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 18:12:15 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@424131b8 MDC:[traceId=, spanId=]
2025-06-10 18:12:15 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(18).bankType)  MDC:[traceId=, spanId=]
2025-06-10 18:12:15 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@62807a18 MDC:[traceId=, spanId=]
2025-06-10 18:12:15 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(18).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:12:15 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7560f18 MDC:[traceId=, spanId=]
2025-06-10 18:12:15 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(18).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:12:15 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-BasicResult
 MDC:[traceId=, spanId=]
2025-06-10 18:12:15 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(18)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 18:12:15 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 18:12:15 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-10 18:12:15 [http-nio-8088-exec-9] DEBUG org.hibernate.SQL - select count(t1_0.id) from tbl_transaction t1_0 where t1_0.bank_type=? and t1_0.timestamp between ? and ? MDC:[traceId=, spanId=]
2025-06-10 18:12:15 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@4fe247b3 MDC:[traceId=, spanId=]
2025-06-10 18:12:15 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [5] MDC:[traceId=, spanId=]
2025-06-10 18:12:15 [http-nio-8088-exec-9] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 18:12:21 [http-nio-8088-exec-5] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 18:12:21 [http-nio-8088-exec-5] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 18:12:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 18:12:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(19))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 18:12:21 [http-nio-8088-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6b714775 MDC:[traceId=, spanId=]
2025-06-10 18:12:21 [http-nio-8088-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(19).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:12:21 [http-nio-8088-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@36e664bd MDC:[traceId=, spanId=]
2025-06-10 18:12:21 [http-nio-8088-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(19).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:12:21 [http-nio-8088-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@51b0cad9 MDC:[traceId=, spanId=]
2025-06-10 18:12:21 [http-nio-8088-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(19).bankType)  MDC:[traceId=, spanId=]
2025-06-10 18:12:21 [http-nio-8088-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@13c9a9b9 MDC:[traceId=, spanId=]
2025-06-10 18:12:21 [http-nio-8088-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(19).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:12:21 [http-nio-8088-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2f42e82c MDC:[traceId=, spanId=]
2025-06-10 18:12:21 [http-nio-8088-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(19).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:12:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(19)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(19).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(19).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(19).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(19).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(19).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(19).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(19).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(19).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(19).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(19).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(19).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(19).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(19).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(19).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(19).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(19).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(19).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 18:12:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(19)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 18:12:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 18:12:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(19) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(19))@1968762890 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 18:12:21 [http-nio-8088-exec-5] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) and t1_0.bank_type=? and t1_0.timestamp between ? and ? order by t1_0.timestamp desc limit ?,? MDC:[traceId=, spanId=]
2025-06-10 18:12:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [f68527a8-92d7-4eb3-bc1e-029018e8df04] MDC:[traceId=, spanId=]
2025-06-10 18:12:21 [http-nio-8088-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(19)): f68527a8-92d7-4eb3-bc1e-029018e8df04 MDC:[traceId=, spanId=]
2025-06-10 18:12:21 [http-nio-8088-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(19)#f68527a8-92d7-4eb3-bc1e-029018e8df04] : 2046146933 MDC:[traceId=, spanId=]
2025-06-10 18:12:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [63260.00] MDC:[traceId=, spanId=]
2025-06-10 18:12:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 18:12:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-05T16:01:57.122103] MDC:[traceId=, spanId=]
2025-06-10 18:12:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 18:12:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 18:12:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [] MDC:[traceId=, spanId=]
2025-06-10 18:12:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 18:12:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 18:12:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [Nhập sai OTP quá 3 lần] MDC:[traceId=, spanId=]
2025-06-10 18:12:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 18:12:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-20250605160156231b8b12] MDC:[traceId=, spanId=]
2025-06-10 18:12:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [FAILED] MDC:[traceId=, spanId=]
2025-06-10 18:12:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-05T16:01:56.985819] MDC:[traceId=, spanId=]
2025-06-10 18:12:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [87654321] MDC:[traceId=, spanId=]
2025-06-10 18:12:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 18:12:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-05T16:02:05.089574] MDC:[traceId=, spanId=]
2025-06-10 18:12:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 18:12:21 [http-nio-8088-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(19)#f68527a8-92d7-4eb3-bc1e-029018e8df04 MDC:[traceId=, spanId=]
2025-06-10 18:12:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4b1fdee1 MDC:[traceId=, spanId=]
2025-06-10 18:12:21 [http-nio-8088-exec-5] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 18:12:27 [http-nio-8088-exec-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 18:12:27 [http-nio-8088-exec-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 18:12:27 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 18:12:27 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(20))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 18:12:27 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2014a8ad MDC:[traceId=, spanId=]
2025-06-10 18:12:27 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(20).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:12:27 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1cfa9338 MDC:[traceId=, spanId=]
2025-06-10 18:12:27 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(20).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:12:27 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1477f8ee MDC:[traceId=, spanId=]
2025-06-10 18:12:27 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(20).currency)  MDC:[traceId=, spanId=]
2025-06-10 18:12:27 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@607abca2 MDC:[traceId=, spanId=]
2025-06-10 18:12:27 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(20).bankType)  MDC:[traceId=, spanId=]
2025-06-10 18:12:27 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4115a8fe MDC:[traceId=, spanId=]
2025-06-10 18:12:27 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(20).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:12:27 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@508401b5 MDC:[traceId=, spanId=]
2025-06-10 18:12:27 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(20).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:12:27 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(20)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(20).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(20).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(20).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(20).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(20).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(20).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(20).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(20).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(20).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(20).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(20).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(20).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(20).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(20).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(20).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(20).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(20).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 18:12:27 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(20)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 18:12:27 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 18:12:27 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(20) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(20))@1512245048 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 18:12:27 [http-nio-8088-exec-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) and t1_0.currency=? and t1_0.bank_type=? and t1_0.timestamp between ? and ? order by t1_0.timestamp desc limit ?,? MDC:[traceId=, spanId=]
2025-06-10 18:12:27 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [f68527a8-92d7-4eb3-bc1e-029018e8df04] MDC:[traceId=, spanId=]
2025-06-10 18:12:27 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(20)): f68527a8-92d7-4eb3-bc1e-029018e8df04 MDC:[traceId=, spanId=]
2025-06-10 18:12:27 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(20)#f68527a8-92d7-4eb3-bc1e-029018e8df04] : 2040226694 MDC:[traceId=, spanId=]
2025-06-10 18:12:27 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [63260.00] MDC:[traceId=, spanId=]
2025-06-10 18:12:27 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 18:12:27 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-05T16:01:57.122103] MDC:[traceId=, spanId=]
2025-06-10 18:12:27 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 18:12:27 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 18:12:27 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [] MDC:[traceId=, spanId=]
2025-06-10 18:12:27 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 18:12:27 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 18:12:27 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [Nhập sai OTP quá 3 lần] MDC:[traceId=, spanId=]
2025-06-10 18:12:27 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 18:12:27 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-20250605160156231b8b12] MDC:[traceId=, spanId=]
2025-06-10 18:12:27 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [FAILED] MDC:[traceId=, spanId=]
2025-06-10 18:12:27 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-05T16:01:56.985819] MDC:[traceId=, spanId=]
2025-06-10 18:12:27 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [87654321] MDC:[traceId=, spanId=]
2025-06-10 18:12:27 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 18:12:27 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-05T16:02:05.089574] MDC:[traceId=, spanId=]
2025-06-10 18:12:27 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 18:12:27 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(20)#f68527a8-92d7-4eb3-bc1e-029018e8df04 MDC:[traceId=, spanId=]
2025-06-10 18:12:27 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3bc3b14a MDC:[traceId=, spanId=]
2025-06-10 18:12:27 [http-nio-8088-exec-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 18:12:36 [http-nio-8088-exec-2] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 18:12:36 [http-nio-8088-exec-2] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 18:12:36 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 18:12:36 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(21))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 18:12:36 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@572a3b61 MDC:[traceId=, spanId=]
2025-06-10 18:12:36 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(21).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:12:36 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@61ba9af8 MDC:[traceId=, spanId=]
2025-06-10 18:12:36 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(21).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:12:36 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4ac08cc MDC:[traceId=, spanId=]
2025-06-10 18:12:36 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(21).status)  MDC:[traceId=, spanId=]
2025-06-10 18:12:36 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@727b2a0f MDC:[traceId=, spanId=]
2025-06-10 18:12:36 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(21).currency)  MDC:[traceId=, spanId=]
2025-06-10 18:12:36 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4a24dc86 MDC:[traceId=, spanId=]
2025-06-10 18:12:36 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(21).bankType)  MDC:[traceId=, spanId=]
2025-06-10 18:12:36 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3ef2faa5 MDC:[traceId=, spanId=]
2025-06-10 18:12:36 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(21).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:12:36 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2ed7cf4a MDC:[traceId=, spanId=]
2025-06-10 18:12:36 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(21).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:12:36 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(21)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(21).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(21).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(21).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(21).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(21).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(21).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(21).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(21).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(21).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(21).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(21).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(21).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(21).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(21).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(21).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(21).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(21).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 18:12:36 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(21)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 18:12:36 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 18:12:36 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(21) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(21))@721849170 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 18:12:36 [http-nio-8088-exec-2] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) and t1_0.status=? and t1_0.currency=? and t1_0.bank_type=? and t1_0.timestamp between ? and ? order by t1_0.timestamp desc limit ?,? MDC:[traceId=, spanId=]
2025-06-10 18:12:36 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 18:12:36 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(22))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 18:12:36 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@42ef6b70 MDC:[traceId=, spanId=]
2025-06-10 18:12:36 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(22).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:12:36 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2778b09f MDC:[traceId=, spanId=]
2025-06-10 18:12:36 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(22).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:12:36 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4083111e MDC:[traceId=, spanId=]
2025-06-10 18:12:36 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(22).status)  MDC:[traceId=, spanId=]
2025-06-10 18:12:36 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4aaf26e0 MDC:[traceId=, spanId=]
2025-06-10 18:12:36 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(22).currency)  MDC:[traceId=, spanId=]
2025-06-10 18:12:36 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@19f4afbb MDC:[traceId=, spanId=]
2025-06-10 18:12:36 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(22).bankType)  MDC:[traceId=, spanId=]
2025-06-10 18:12:36 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@e739256 MDC:[traceId=, spanId=]
2025-06-10 18:12:36 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(22).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:12:36 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4971e241 MDC:[traceId=, spanId=]
2025-06-10 18:12:36 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(22).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:12:36 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-BasicResult
 MDC:[traceId=, spanId=]
2025-06-10 18:12:36 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(22)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 18:12:36 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 18:12:36 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-10 18:12:36 [http-nio-8088-exec-2] DEBUG org.hibernate.SQL - select count(t1_0.id) from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) and t1_0.status=? and t1_0.currency=? and t1_0.bank_type=? and t1_0.timestamp between ? and ? MDC:[traceId=, spanId=]
2025-06-10 18:12:36 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@26cabfe9 MDC:[traceId=, spanId=]
2025-06-10 18:12:36 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [1] MDC:[traceId=, spanId=]
2025-06-10 18:12:36 [http-nio-8088-exec-2] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 18:12:54 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 18:12:54 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 18:12:54 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 18:12:54 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 18:12:54 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4acc68c6 MDC:[traceId=, spanId=]
2025-06-10 18:12:54 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 18:12:54 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6638f71d MDC:[traceId=, spanId=]
2025-06-10 18:12:54 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:12:54 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 18:12:54 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 18:12:54 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 18:12:54 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@666579068 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 18:12:54 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 18:12:54 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 18:12:58 [http-nio-8088-exec-3] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 18:12:58 [http-nio-8088-exec-3] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 18:12:58 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 18:12:58 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(23))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 18:12:58 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@15348742 MDC:[traceId=, spanId=]
2025-06-10 18:12:58 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(23).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:12:58 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5cef85a0 MDC:[traceId=, spanId=]
2025-06-10 18:12:58 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(23).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:12:58 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4dc6244b MDC:[traceId=, spanId=]
2025-06-10 18:12:58 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(23).status)  MDC:[traceId=, spanId=]
2025-06-10 18:12:58 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@492e22e9 MDC:[traceId=, spanId=]
2025-06-10 18:12:58 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(23).currency)  MDC:[traceId=, spanId=]
2025-06-10 18:12:58 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@46e7f5e MDC:[traceId=, spanId=]
2025-06-10 18:12:58 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(23).bankType)  MDC:[traceId=, spanId=]
2025-06-10 18:12:58 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@36ee66b8 MDC:[traceId=, spanId=]
2025-06-10 18:12:58 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(23).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:12:58 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@ef701b1 MDC:[traceId=, spanId=]
2025-06-10 18:12:58 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(23).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:12:58 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(23)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(23).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(23).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(23).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(23).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(23).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(23).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(23).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(23).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(23).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(23).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(23).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(23).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(23).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(23).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(23).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(23).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(23).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 18:12:58 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(23)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 18:12:58 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 18:12:58 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(23) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(23))@988866464 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 18:12:58 [http-nio-8088-exec-3] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) and t1_0.status=? and t1_0.currency=? and t1_0.bank_type=? and t1_0.timestamp between ? and ? order by t1_0.timestamp desc limit ?,? MDC:[traceId=, spanId=]
2025-06-10 18:12:58 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 18:12:58 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(24))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 18:12:58 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@58920c8b MDC:[traceId=, spanId=]
2025-06-10 18:12:58 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(24).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:12:58 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@58b9ac5c MDC:[traceId=, spanId=]
2025-06-10 18:12:58 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(24).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:12:58 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5de0e8a7 MDC:[traceId=, spanId=]
2025-06-10 18:12:58 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(24).status)  MDC:[traceId=, spanId=]
2025-06-10 18:12:58 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@35ca65a9 MDC:[traceId=, spanId=]
2025-06-10 18:12:58 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(24).currency)  MDC:[traceId=, spanId=]
2025-06-10 18:12:58 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@84a4432 MDC:[traceId=, spanId=]
2025-06-10 18:12:58 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(24).bankType)  MDC:[traceId=, spanId=]
2025-06-10 18:12:58 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@697d01c7 MDC:[traceId=, spanId=]
2025-06-10 18:12:58 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(24).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:12:58 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@48da6f63 MDC:[traceId=, spanId=]
2025-06-10 18:12:58 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(24).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:12:58 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-BasicResult
 MDC:[traceId=, spanId=]
2025-06-10 18:12:58 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(24)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 18:12:58 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 18:12:58 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-10 18:12:58 [http-nio-8088-exec-3] DEBUG org.hibernate.SQL - select count(t1_0.id) from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) and t1_0.status=? and t1_0.currency=? and t1_0.bank_type=? and t1_0.timestamp between ? and ? MDC:[traceId=, spanId=]
2025-06-10 18:12:58 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@1c4752ae MDC:[traceId=, spanId=]
2025-06-10 18:12:58 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [1] MDC:[traceId=, spanId=]
2025-06-10 18:12:58 [http-nio-8088-exec-3] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 18:13:00 [http-nio-8088-exec-8] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 18:13:00 [http-nio-8088-exec-8] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 18:13:00 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 18:13:00 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(25))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 18:13:00 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3e36f8d2 MDC:[traceId=, spanId=]
2025-06-10 18:13:00 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(25).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:13:00 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5d7cf900 MDC:[traceId=, spanId=]
2025-06-10 18:13:00 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(25).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:13:00 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@f8a7440 MDC:[traceId=, spanId=]
2025-06-10 18:13:00 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(25).status)  MDC:[traceId=, spanId=]
2025-06-10 18:13:00 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5efd04f0 MDC:[traceId=, spanId=]
2025-06-10 18:13:00 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(25).currency)  MDC:[traceId=, spanId=]
2025-06-10 18:13:00 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1b82951d MDC:[traceId=, spanId=]
2025-06-10 18:13:00 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(25).bankType)  MDC:[traceId=, spanId=]
2025-06-10 18:13:00 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@534ff647 MDC:[traceId=, spanId=]
2025-06-10 18:13:00 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(25).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:13:00 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2d633ea8 MDC:[traceId=, spanId=]
2025-06-10 18:13:00 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(25).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:13:00 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(25)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(25).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(25).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(25).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(25).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(25).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(25).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(25).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(25).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(25).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(25).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(25).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(25).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(25).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(25).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(25).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(25).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(25).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 18:13:00 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(25)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 18:13:00 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 18:13:00 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(25) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(25))@844552267 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 18:13:00 [http-nio-8088-exec-8] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) and t1_0.status=? and t1_0.currency=? and t1_0.bank_type=? and t1_0.timestamp between ? and ? order by t1_0.timestamp desc limit ?,? MDC:[traceId=, spanId=]
2025-06-10 18:13:00 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 18:13:00 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(26))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 18:13:00 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@21285b71 MDC:[traceId=, spanId=]
2025-06-10 18:13:00 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(26).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:13:00 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@13dd9f98 MDC:[traceId=, spanId=]
2025-06-10 18:13:00 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(26).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:13:00 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@47482489 MDC:[traceId=, spanId=]
2025-06-10 18:13:00 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(26).status)  MDC:[traceId=, spanId=]
2025-06-10 18:13:00 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6b3c4153 MDC:[traceId=, spanId=]
2025-06-10 18:13:00 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(26).currency)  MDC:[traceId=, spanId=]
2025-06-10 18:13:00 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@96f0001 MDC:[traceId=, spanId=]
2025-06-10 18:13:00 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(26).bankType)  MDC:[traceId=, spanId=]
2025-06-10 18:13:00 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@55f985f MDC:[traceId=, spanId=]
2025-06-10 18:13:00 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(26).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:13:00 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@536bd796 MDC:[traceId=, spanId=]
2025-06-10 18:13:00 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(26).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:13:00 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-BasicResult
 MDC:[traceId=, spanId=]
2025-06-10 18:13:00 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(26)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 18:13:00 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 18:13:00 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-10 18:13:00 [http-nio-8088-exec-8] DEBUG org.hibernate.SQL - select count(t1_0.id) from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) and t1_0.status=? and t1_0.currency=? and t1_0.bank_type=? and t1_0.timestamp between ? and ? MDC:[traceId=, spanId=]
2025-06-10 18:13:00 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@195d4ab7 MDC:[traceId=, spanId=]
2025-06-10 18:13:00 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [1] MDC:[traceId=, spanId=]
2025-06-10 18:13:00 [http-nio-8088-exec-8] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 18:13:25 [http-nio-8088-exec-10] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 18:13:25 [http-nio-8088-exec-10] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 18:13:25 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 18:13:25 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(27))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 18:13:25 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2de9f3a8 MDC:[traceId=, spanId=]
2025-06-10 18:13:25 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(27).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:13:25 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@22e101e6 MDC:[traceId=, spanId=]
2025-06-10 18:13:25 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(27).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:13:25 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2066160c MDC:[traceId=, spanId=]
2025-06-10 18:13:25 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for generalized SqmExpression : org.hibernate.query.sqm.function.SelfRenderingSqmFunction@6e8b8065 MDC:[traceId=, spanId=]
2025-06-10 18:13:25 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@42988d6f MDC:[traceId=, spanId=]
2025-06-10 18:13:25 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for generalized SqmExpression : org.hibernate.query.sqm.function.SelfRenderingSqmFunction@1f62a082 MDC:[traceId=, spanId=]
2025-06-10 18:13:25 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@16a01e42 MDC:[traceId=, spanId=]
2025-06-10 18:13:25 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(27).type)  MDC:[traceId=, spanId=]
2025-06-10 18:13:25 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1afe6fe9 MDC:[traceId=, spanId=]
2025-06-10 18:13:25 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(27).currency)  MDC:[traceId=, spanId=]
2025-06-10 18:13:25 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3f18ba3b MDC:[traceId=, spanId=]
2025-06-10 18:13:25 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(27).bankType)  MDC:[traceId=, spanId=]
2025-06-10 18:13:25 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@11eb328e MDC:[traceId=, spanId=]
2025-06-10 18:13:25 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(27).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:13:25 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2550c559 MDC:[traceId=, spanId=]
2025-06-10 18:13:25 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(27).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:13:25 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(27)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(27).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(27).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(27).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(27).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(27).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(27).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(27).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(27).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(27).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(27).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(27).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(27).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(27).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(27).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(27).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(27).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(27).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 18:13:25 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(27)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 18:13:25 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 18:13:25 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(27) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(27))@1804320219 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 18:13:25 [http-nio-8088-exec-10] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) and (lower(t1_0.description) like replace(?,'\\','\\\\') or lower(cast(t1_0.type as char)) like replace(?,'\\','\\\\')) and t1_0.type=? and t1_0.currency=? and t1_0.bank_type=? and t1_0.timestamp between ? and ? order by t1_0.timestamp desc limit ?,? MDC:[traceId=, spanId=]
2025-06-10 18:13:25 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 18:13:25 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(28))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 18:13:25 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@282a2fc6 MDC:[traceId=, spanId=]
2025-06-10 18:13:25 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(28).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:13:25 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@77a73604 MDC:[traceId=, spanId=]
2025-06-10 18:13:25 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(28).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:13:25 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@445ef6 MDC:[traceId=, spanId=]
2025-06-10 18:13:25 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for generalized SqmExpression : org.hibernate.query.sqm.function.SelfRenderingSqmFunction@135d1192 MDC:[traceId=, spanId=]
2025-06-10 18:13:25 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3158b8c3 MDC:[traceId=, spanId=]
2025-06-10 18:13:25 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for generalized SqmExpression : org.hibernate.query.sqm.function.SelfRenderingSqmFunction@1034c594 MDC:[traceId=, spanId=]
2025-06-10 18:13:25 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@22c1d072 MDC:[traceId=, spanId=]
2025-06-10 18:13:25 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(28).type)  MDC:[traceId=, spanId=]
2025-06-10 18:13:25 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@24e9eed6 MDC:[traceId=, spanId=]
2025-06-10 18:13:25 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(28).currency)  MDC:[traceId=, spanId=]
2025-06-10 18:13:25 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@cb8ca8e MDC:[traceId=, spanId=]
2025-06-10 18:13:25 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(28).bankType)  MDC:[traceId=, spanId=]
2025-06-10 18:13:25 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@29d4a692 MDC:[traceId=, spanId=]
2025-06-10 18:13:25 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(28).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:13:25 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@75572da8 MDC:[traceId=, spanId=]
2025-06-10 18:13:25 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(28).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:13:25 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-BasicResult
 MDC:[traceId=, spanId=]
2025-06-10 18:13:25 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(28)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 18:13:25 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 18:13:25 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-10 18:13:25 [http-nio-8088-exec-10] DEBUG org.hibernate.SQL - select count(t1_0.id) from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) and (lower(t1_0.description) like replace(?,'\\','\\\\') or lower(cast(t1_0.type as char)) like replace(?,'\\','\\\\')) and t1_0.type=? and t1_0.currency=? and t1_0.bank_type=? and t1_0.timestamp between ? and ? MDC:[traceId=, spanId=]
2025-06-10 18:13:25 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@6e916227 MDC:[traceId=, spanId=]
2025-06-10 18:13:25 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [0] MDC:[traceId=, spanId=]
2025-06-10 18:13:25 [http-nio-8088-exec-10] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 18:13:28 [http-nio-8088-exec-6] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 18:13:28 [http-nio-8088-exec-6] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 18:13:28 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 18:13:28 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(29))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 18:13:28 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@9aa3c56 MDC:[traceId=, spanId=]
2025-06-10 18:13:28 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(29).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:13:28 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4c9f12b MDC:[traceId=, spanId=]
2025-06-10 18:13:28 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(29).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:13:28 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3611215d MDC:[traceId=, spanId=]
2025-06-10 18:13:28 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for generalized SqmExpression : org.hibernate.query.sqm.function.SelfRenderingSqmFunction@31453201 MDC:[traceId=, spanId=]
2025-06-10 18:13:28 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@43d50def MDC:[traceId=, spanId=]
2025-06-10 18:13:28 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for generalized SqmExpression : org.hibernate.query.sqm.function.SelfRenderingSqmFunction@c1d7ffb MDC:[traceId=, spanId=]
2025-06-10 18:13:28 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1dd3c058 MDC:[traceId=, spanId=]
2025-06-10 18:13:28 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(29).type)  MDC:[traceId=, spanId=]
2025-06-10 18:13:28 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@9083090 MDC:[traceId=, spanId=]
2025-06-10 18:13:28 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(29).currency)  MDC:[traceId=, spanId=]
2025-06-10 18:13:28 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1003b717 MDC:[traceId=, spanId=]
2025-06-10 18:13:28 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(29).bankType)  MDC:[traceId=, spanId=]
2025-06-10 18:13:28 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7529a620 MDC:[traceId=, spanId=]
2025-06-10 18:13:28 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(29).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:13:28 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6077bd5c MDC:[traceId=, spanId=]
2025-06-10 18:13:28 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(29).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:13:28 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(29)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(29).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(29).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(29).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(29).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(29).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(29).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(29).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(29).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(29).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(29).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(29).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(29).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(29).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(29).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(29).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(29).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(29).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 18:13:28 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(29)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 18:13:28 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 18:13:28 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(29) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(29))@514951258 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 18:13:28 [http-nio-8088-exec-6] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) and (lower(t1_0.description) like replace(?,'\\','\\\\') or lower(cast(t1_0.type as char)) like replace(?,'\\','\\\\')) and t1_0.type=? and t1_0.currency=? and t1_0.bank_type=? and t1_0.timestamp between ? and ? order by t1_0.timestamp desc limit ?,? MDC:[traceId=, spanId=]
2025-06-10 18:13:28 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 18:13:28 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(30))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 18:13:28 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5f2e445e MDC:[traceId=, spanId=]
2025-06-10 18:13:28 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(30).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:13:28 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@32177163 MDC:[traceId=, spanId=]
2025-06-10 18:13:28 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(30).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:13:28 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@243f2ef9 MDC:[traceId=, spanId=]
2025-06-10 18:13:28 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for generalized SqmExpression : org.hibernate.query.sqm.function.SelfRenderingSqmFunction@39c30f88 MDC:[traceId=, spanId=]
2025-06-10 18:13:28 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7d4fc8f7 MDC:[traceId=, spanId=]
2025-06-10 18:13:28 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for generalized SqmExpression : org.hibernate.query.sqm.function.SelfRenderingSqmFunction@6ee3251 MDC:[traceId=, spanId=]
2025-06-10 18:13:28 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5d004974 MDC:[traceId=, spanId=]
2025-06-10 18:13:28 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(30).type)  MDC:[traceId=, spanId=]
2025-06-10 18:13:28 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7b6fe7ba MDC:[traceId=, spanId=]
2025-06-10 18:13:28 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(30).currency)  MDC:[traceId=, spanId=]
2025-06-10 18:13:28 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@bfad111 MDC:[traceId=, spanId=]
2025-06-10 18:13:28 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(30).bankType)  MDC:[traceId=, spanId=]
2025-06-10 18:13:28 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@53154222 MDC:[traceId=, spanId=]
2025-06-10 18:13:28 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(30).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:13:28 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@293b3a7a MDC:[traceId=, spanId=]
2025-06-10 18:13:28 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(30).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:13:28 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-BasicResult
 MDC:[traceId=, spanId=]
2025-06-10 18:13:28 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(30)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 18:13:28 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 18:13:28 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-10 18:13:28 [http-nio-8088-exec-6] DEBUG org.hibernate.SQL - select count(t1_0.id) from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) and (lower(t1_0.description) like replace(?,'\\','\\\\') or lower(cast(t1_0.type as char)) like replace(?,'\\','\\\\')) and t1_0.type=? and t1_0.currency=? and t1_0.bank_type=? and t1_0.timestamp between ? and ? MDC:[traceId=, spanId=]
2025-06-10 18:13:28 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@60436049 MDC:[traceId=, spanId=]
2025-06-10 18:13:28 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [0] MDC:[traceId=, spanId=]
2025-06-10 18:13:28 [http-nio-8088-exec-6] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 18:13:33 [http-nio-8088-exec-7] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 18:13:33 [http-nio-8088-exec-7] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 18:13:33 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 18:13:33 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(31))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 18:13:33 [http-nio-8088-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@25f3b4f3 MDC:[traceId=, spanId=]
2025-06-10 18:13:33 [http-nio-8088-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(31).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:13:33 [http-nio-8088-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@b397346 MDC:[traceId=, spanId=]
2025-06-10 18:13:33 [http-nio-8088-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(31).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:13:33 [http-nio-8088-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2d1d22af MDC:[traceId=, spanId=]
2025-06-10 18:13:33 [http-nio-8088-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for generalized SqmExpression : org.hibernate.query.sqm.function.SelfRenderingSqmFunction@50729142 MDC:[traceId=, spanId=]
2025-06-10 18:13:33 [http-nio-8088-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@10f5c189 MDC:[traceId=, spanId=]
2025-06-10 18:13:33 [http-nio-8088-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for generalized SqmExpression : org.hibernate.query.sqm.function.SelfRenderingSqmFunction@72395fcc MDC:[traceId=, spanId=]
2025-06-10 18:13:33 [http-nio-8088-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4b119f6f MDC:[traceId=, spanId=]
2025-06-10 18:13:33 [http-nio-8088-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(31).currency)  MDC:[traceId=, spanId=]
2025-06-10 18:13:33 [http-nio-8088-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@147d629f MDC:[traceId=, spanId=]
2025-06-10 18:13:33 [http-nio-8088-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(31).bankType)  MDC:[traceId=, spanId=]
2025-06-10 18:13:33 [http-nio-8088-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@328f0919 MDC:[traceId=, spanId=]
2025-06-10 18:13:33 [http-nio-8088-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(31).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:13:33 [http-nio-8088-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@37e7b6dc MDC:[traceId=, spanId=]
2025-06-10 18:13:33 [http-nio-8088-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(31).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:13:33 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(31)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(31).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(31).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(31).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(31).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(31).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(31).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(31).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(31).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(31).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(31).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(31).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(31).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(31).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(31).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(31).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(31).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(31).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 18:13:33 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(31)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 18:13:33 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 18:13:33 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(31) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(31))@1287748410 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 18:13:33 [http-nio-8088-exec-7] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) and (lower(t1_0.description) like replace(?,'\\','\\\\') or lower(cast(t1_0.type as char)) like replace(?,'\\','\\\\')) and t1_0.currency=? and t1_0.bank_type=? and t1_0.timestamp between ? and ? order by t1_0.timestamp desc limit ?,? MDC:[traceId=, spanId=]
2025-06-10 18:13:33 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 18:13:33 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(32))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 18:13:33 [http-nio-8088-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2cae77c5 MDC:[traceId=, spanId=]
2025-06-10 18:13:33 [http-nio-8088-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(32).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:13:33 [http-nio-8088-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@61ef0ad7 MDC:[traceId=, spanId=]
2025-06-10 18:13:33 [http-nio-8088-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(32).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:13:33 [http-nio-8088-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@59966bba MDC:[traceId=, spanId=]
2025-06-10 18:13:33 [http-nio-8088-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for generalized SqmExpression : org.hibernate.query.sqm.function.SelfRenderingSqmFunction@208131ec MDC:[traceId=, spanId=]
2025-06-10 18:13:33 [http-nio-8088-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2f61faad MDC:[traceId=, spanId=]
2025-06-10 18:13:33 [http-nio-8088-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for generalized SqmExpression : org.hibernate.query.sqm.function.SelfRenderingSqmFunction@72e34b08 MDC:[traceId=, spanId=]
2025-06-10 18:13:33 [http-nio-8088-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@af1115d MDC:[traceId=, spanId=]
2025-06-10 18:13:33 [http-nio-8088-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(32).currency)  MDC:[traceId=, spanId=]
2025-06-10 18:13:33 [http-nio-8088-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@13a5bebd MDC:[traceId=, spanId=]
2025-06-10 18:13:33 [http-nio-8088-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(32).bankType)  MDC:[traceId=, spanId=]
2025-06-10 18:13:33 [http-nio-8088-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7285c7e9 MDC:[traceId=, spanId=]
2025-06-10 18:13:33 [http-nio-8088-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(32).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:13:33 [http-nio-8088-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@73122ea7 MDC:[traceId=, spanId=]
2025-06-10 18:13:33 [http-nio-8088-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(32).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:13:33 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-BasicResult
 MDC:[traceId=, spanId=]
2025-06-10 18:13:33 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(32)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 18:13:33 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 18:13:33 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-10 18:13:33 [http-nio-8088-exec-7] DEBUG org.hibernate.SQL - select count(t1_0.id) from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) and (lower(t1_0.description) like replace(?,'\\','\\\\') or lower(cast(t1_0.type as char)) like replace(?,'\\','\\\\')) and t1_0.currency=? and t1_0.bank_type=? and t1_0.timestamp between ? and ? MDC:[traceId=, spanId=]
2025-06-10 18:13:33 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@344932a7 MDC:[traceId=, spanId=]
2025-06-10 18:13:33 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [0] MDC:[traceId=, spanId=]
2025-06-10 18:13:33 [http-nio-8088-exec-7] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 18:13:37 [http-nio-8088-exec-4] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 18:13:37 [http-nio-8088-exec-4] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 18:13:37 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 18:13:37 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(33))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 18:13:37 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2d055302 MDC:[traceId=, spanId=]
2025-06-10 18:13:37 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(33).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:13:37 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1d8e2714 MDC:[traceId=, spanId=]
2025-06-10 18:13:37 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(33).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:13:37 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@436927cb MDC:[traceId=, spanId=]
2025-06-10 18:13:37 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for generalized SqmExpression : org.hibernate.query.sqm.function.SelfRenderingSqmFunction@345e6bc1 MDC:[traceId=, spanId=]
2025-06-10 18:13:37 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@815c36 MDC:[traceId=, spanId=]
2025-06-10 18:13:37 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for generalized SqmExpression : org.hibernate.query.sqm.function.SelfRenderingSqmFunction@3388c5df MDC:[traceId=, spanId=]
2025-06-10 18:13:37 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@517c4533 MDC:[traceId=, spanId=]
2025-06-10 18:13:37 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(33).currency)  MDC:[traceId=, spanId=]
2025-06-10 18:13:37 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6c7b153a MDC:[traceId=, spanId=]
2025-06-10 18:13:37 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(33).bankType)  MDC:[traceId=, spanId=]
2025-06-10 18:13:37 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@fdbffc1 MDC:[traceId=, spanId=]
2025-06-10 18:13:37 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(33).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:13:37 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@516f4843 MDC:[traceId=, spanId=]
2025-06-10 18:13:37 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(33).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:13:37 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(33)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(33).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(33).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(33).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(33).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(33).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(33).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(33).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(33).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(33).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(33).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(33).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(33).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(33).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(33).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(33).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(33).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(33).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 18:13:37 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(33)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 18:13:37 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 18:13:37 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(33) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(33))@195277532 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 18:13:37 [http-nio-8088-exec-4] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) and (lower(t1_0.description) like replace(?,'\\','\\\\') or lower(cast(t1_0.type as char)) like replace(?,'\\','\\\\')) and t1_0.currency=? and t1_0.bank_type=? and t1_0.timestamp between ? and ? order by t1_0.timestamp desc limit ?,? MDC:[traceId=, spanId=]
2025-06-10 18:13:37 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 18:13:37 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(34))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 18:13:37 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@64a87a12 MDC:[traceId=, spanId=]
2025-06-10 18:13:37 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(34).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:13:37 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@23050bab MDC:[traceId=, spanId=]
2025-06-10 18:13:37 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(34).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:13:37 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@383d9e97 MDC:[traceId=, spanId=]
2025-06-10 18:13:37 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for generalized SqmExpression : org.hibernate.query.sqm.function.SelfRenderingSqmFunction@22873852 MDC:[traceId=, spanId=]
2025-06-10 18:13:37 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@50021c77 MDC:[traceId=, spanId=]
2025-06-10 18:13:37 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for generalized SqmExpression : org.hibernate.query.sqm.function.SelfRenderingSqmFunction@a402f0e MDC:[traceId=, spanId=]
2025-06-10 18:13:37 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@b0efbb0 MDC:[traceId=, spanId=]
2025-06-10 18:13:37 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(34).currency)  MDC:[traceId=, spanId=]
2025-06-10 18:13:37 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@18ca26de MDC:[traceId=, spanId=]
2025-06-10 18:13:37 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(34).bankType)  MDC:[traceId=, spanId=]
2025-06-10 18:13:37 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@23ce7d14 MDC:[traceId=, spanId=]
2025-06-10 18:13:37 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(34).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:13:37 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@69531411 MDC:[traceId=, spanId=]
2025-06-10 18:13:37 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(34).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:13:37 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-BasicResult
 MDC:[traceId=, spanId=]
2025-06-10 18:13:37 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(34)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 18:13:37 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 18:13:37 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-10 18:13:37 [http-nio-8088-exec-4] DEBUG org.hibernate.SQL - select count(t1_0.id) from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) and (lower(t1_0.description) like replace(?,'\\','\\\\') or lower(cast(t1_0.type as char)) like replace(?,'\\','\\\\')) and t1_0.currency=? and t1_0.bank_type=? and t1_0.timestamp between ? and ? MDC:[traceId=, spanId=]
2025-06-10 18:13:37 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@3c8b0468 MDC:[traceId=, spanId=]
2025-06-10 18:13:37 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [0] MDC:[traceId=, spanId=]
2025-06-10 18:13:37 [http-nio-8088-exec-4] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 18:13:42 [http-nio-8088-exec-9] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 18:13:42 [http-nio-8088-exec-9] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 18:13:42 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 18:13:42 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(35))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 18:13:42 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@26ea4e1 MDC:[traceId=, spanId=]
2025-06-10 18:13:42 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(35).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:13:42 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4036e947 MDC:[traceId=, spanId=]
2025-06-10 18:13:42 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(35).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:13:42 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@830894d MDC:[traceId=, spanId=]
2025-06-10 18:13:42 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for generalized SqmExpression : org.hibernate.query.sqm.function.SelfRenderingSqmFunction@4d4e2f32 MDC:[traceId=, spanId=]
2025-06-10 18:13:42 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@53e9b898 MDC:[traceId=, spanId=]
2025-06-10 18:13:42 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for generalized SqmExpression : org.hibernate.query.sqm.function.SelfRenderingSqmFunction@29cde620 MDC:[traceId=, spanId=]
2025-06-10 18:13:42 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5382d82d MDC:[traceId=, spanId=]
2025-06-10 18:13:42 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(35).currency)  MDC:[traceId=, spanId=]
2025-06-10 18:13:42 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@796be4c5 MDC:[traceId=, spanId=]
2025-06-10 18:13:42 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(35).bankType)  MDC:[traceId=, spanId=]
2025-06-10 18:13:42 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@41a78f2e MDC:[traceId=, spanId=]
2025-06-10 18:13:42 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(35).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:13:42 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@45d86166 MDC:[traceId=, spanId=]
2025-06-10 18:13:42 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(35).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:13:42 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(35)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(35).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(35).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(35).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(35).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(35).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(35).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(35).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(35).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(35).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(35).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(35).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(35).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(35).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(35).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(35).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(35).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(35).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 18:13:42 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(35)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 18:13:42 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 18:13:42 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(35) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(35))@89626524 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 18:13:42 [http-nio-8088-exec-9] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) and (lower(t1_0.description) like replace(?,'\\','\\\\') or lower(cast(t1_0.type as char)) like replace(?,'\\','\\\\')) and t1_0.currency=? and t1_0.bank_type=? and t1_0.timestamp between ? and ? order by t1_0.timestamp desc limit ?,? MDC:[traceId=, spanId=]
2025-06-10 18:13:42 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 18:13:42 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(36))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 18:13:42 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3fefc781 MDC:[traceId=, spanId=]
2025-06-10 18:13:42 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(36).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:13:42 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@62bc6bfd MDC:[traceId=, spanId=]
2025-06-10 18:13:42 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(36).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:13:42 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@68e82756 MDC:[traceId=, spanId=]
2025-06-10 18:13:42 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for generalized SqmExpression : org.hibernate.query.sqm.function.SelfRenderingSqmFunction@779407ac MDC:[traceId=, spanId=]
2025-06-10 18:13:42 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@65584d0b MDC:[traceId=, spanId=]
2025-06-10 18:13:42 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for generalized SqmExpression : org.hibernate.query.sqm.function.SelfRenderingSqmFunction@3f826c73 MDC:[traceId=, spanId=]
2025-06-10 18:13:42 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@34509ae5 MDC:[traceId=, spanId=]
2025-06-10 18:13:42 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(36).currency)  MDC:[traceId=, spanId=]
2025-06-10 18:13:42 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@26c72d88 MDC:[traceId=, spanId=]
2025-06-10 18:13:42 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(36).bankType)  MDC:[traceId=, spanId=]
2025-06-10 18:13:42 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@55fc0b7b MDC:[traceId=, spanId=]
2025-06-10 18:13:42 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(36).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:13:42 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4bdca0e8 MDC:[traceId=, spanId=]
2025-06-10 18:13:42 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(36).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:13:42 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-BasicResult
 MDC:[traceId=, spanId=]
2025-06-10 18:13:42 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(36)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 18:13:42 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 18:13:42 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-10 18:13:42 [http-nio-8088-exec-9] DEBUG org.hibernate.SQL - select count(t1_0.id) from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) and (lower(t1_0.description) like replace(?,'\\','\\\\') or lower(cast(t1_0.type as char)) like replace(?,'\\','\\\\')) and t1_0.currency=? and t1_0.bank_type=? and t1_0.timestamp between ? and ? MDC:[traceId=, spanId=]
2025-06-10 18:13:42 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@3573003e MDC:[traceId=, spanId=]
2025-06-10 18:13:42 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [0] MDC:[traceId=, spanId=]
2025-06-10 18:13:42 [http-nio-8088-exec-9] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 18:13:43 [http-nio-8088-exec-5] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 18:13:43 [http-nio-8088-exec-5] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 18:13:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 18:13:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(37))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 18:13:43 [http-nio-8088-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@66bd4014 MDC:[traceId=, spanId=]
2025-06-10 18:13:43 [http-nio-8088-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(37).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:13:43 [http-nio-8088-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@11e5a42e MDC:[traceId=, spanId=]
2025-06-10 18:13:43 [http-nio-8088-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(37).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:13:43 [http-nio-8088-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1efc3588 MDC:[traceId=, spanId=]
2025-06-10 18:13:43 [http-nio-8088-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for generalized SqmExpression : org.hibernate.query.sqm.function.SelfRenderingSqmFunction@2eece6fb MDC:[traceId=, spanId=]
2025-06-10 18:13:43 [http-nio-8088-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6e03222c MDC:[traceId=, spanId=]
2025-06-10 18:13:43 [http-nio-8088-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for generalized SqmExpression : org.hibernate.query.sqm.function.SelfRenderingSqmFunction@46e70f61 MDC:[traceId=, spanId=]
2025-06-10 18:13:43 [http-nio-8088-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@68c9d60a MDC:[traceId=, spanId=]
2025-06-10 18:13:43 [http-nio-8088-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(37).currency)  MDC:[traceId=, spanId=]
2025-06-10 18:13:43 [http-nio-8088-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1498587b MDC:[traceId=, spanId=]
2025-06-10 18:13:43 [http-nio-8088-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(37).bankType)  MDC:[traceId=, spanId=]
2025-06-10 18:13:43 [http-nio-8088-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@128964dc MDC:[traceId=, spanId=]
2025-06-10 18:13:43 [http-nio-8088-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(37).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:13:43 [http-nio-8088-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4fd1a463 MDC:[traceId=, spanId=]
2025-06-10 18:13:43 [http-nio-8088-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(37).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:13:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(37)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(37).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(37).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(37).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(37).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(37).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(37).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(37).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(37).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(37).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(37).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(37).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(37).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(37).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(37).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(37).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(37).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(37).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 18:13:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(37)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 18:13:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 18:13:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(37) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(37))@1086558011 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 18:13:43 [http-nio-8088-exec-5] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) and (lower(t1_0.description) like replace(?,'\\','\\\\') or lower(cast(t1_0.type as char)) like replace(?,'\\','\\\\')) and t1_0.currency=? and t1_0.bank_type=? and t1_0.timestamp between ? and ? order by t1_0.timestamp desc limit ?,? MDC:[traceId=, spanId=]
2025-06-10 18:13:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 18:13:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(38))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 18:13:43 [http-nio-8088-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7e5d657 MDC:[traceId=, spanId=]
2025-06-10 18:13:43 [http-nio-8088-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(38).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:13:43 [http-nio-8088-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3c57ab0 MDC:[traceId=, spanId=]
2025-06-10 18:13:43 [http-nio-8088-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(38).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:13:43 [http-nio-8088-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6abf2631 MDC:[traceId=, spanId=]
2025-06-10 18:13:43 [http-nio-8088-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for generalized SqmExpression : org.hibernate.query.sqm.function.SelfRenderingSqmFunction@5eba8c0c MDC:[traceId=, spanId=]
2025-06-10 18:13:43 [http-nio-8088-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@185ac044 MDC:[traceId=, spanId=]
2025-06-10 18:13:43 [http-nio-8088-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for generalized SqmExpression : org.hibernate.query.sqm.function.SelfRenderingSqmFunction@5e17edb1 MDC:[traceId=, spanId=]
2025-06-10 18:13:43 [http-nio-8088-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@407604da MDC:[traceId=, spanId=]
2025-06-10 18:13:43 [http-nio-8088-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(38).currency)  MDC:[traceId=, spanId=]
2025-06-10 18:13:43 [http-nio-8088-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2fc38664 MDC:[traceId=, spanId=]
2025-06-10 18:13:43 [http-nio-8088-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(38).bankType)  MDC:[traceId=, spanId=]
2025-06-10 18:13:43 [http-nio-8088-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@55f377ee MDC:[traceId=, spanId=]
2025-06-10 18:13:43 [http-nio-8088-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(38).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:13:43 [http-nio-8088-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2eba98a5 MDC:[traceId=, spanId=]
2025-06-10 18:13:43 [http-nio-8088-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(38).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:13:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-BasicResult
 MDC:[traceId=, spanId=]
2025-06-10 18:13:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(38)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 18:13:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 18:13:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-10 18:13:43 [http-nio-8088-exec-5] DEBUG org.hibernate.SQL - select count(t1_0.id) from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) and (lower(t1_0.description) like replace(?,'\\','\\\\') or lower(cast(t1_0.type as char)) like replace(?,'\\','\\\\')) and t1_0.currency=? and t1_0.bank_type=? and t1_0.timestamp between ? and ? MDC:[traceId=, spanId=]
2025-06-10 18:13:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@52b49c90 MDC:[traceId=, spanId=]
2025-06-10 18:13:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [0] MDC:[traceId=, spanId=]
2025-06-10 18:13:43 [http-nio-8088-exec-5] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 18:13:44 [http-nio-8088-exec-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 18:13:44 [http-nio-8088-exec-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 18:13:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 18:13:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(39))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 18:13:44 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@14aa9213 MDC:[traceId=, spanId=]
2025-06-10 18:13:44 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(39).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:13:44 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1d22c57c MDC:[traceId=, spanId=]
2025-06-10 18:13:44 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(39).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:13:44 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5d60088a MDC:[traceId=, spanId=]
2025-06-10 18:13:44 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for generalized SqmExpression : org.hibernate.query.sqm.function.SelfRenderingSqmFunction@1e2f5044 MDC:[traceId=, spanId=]
2025-06-10 18:13:44 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6f17b83a MDC:[traceId=, spanId=]
2025-06-10 18:13:44 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for generalized SqmExpression : org.hibernate.query.sqm.function.SelfRenderingSqmFunction@12afda43 MDC:[traceId=, spanId=]
2025-06-10 18:13:44 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7e61a562 MDC:[traceId=, spanId=]
2025-06-10 18:13:44 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(39).currency)  MDC:[traceId=, spanId=]
2025-06-10 18:13:44 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@64ffc052 MDC:[traceId=, spanId=]
2025-06-10 18:13:44 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(39).bankType)  MDC:[traceId=, spanId=]
2025-06-10 18:13:44 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@72d59031 MDC:[traceId=, spanId=]
2025-06-10 18:13:44 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(39).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:13:44 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5621d46 MDC:[traceId=, spanId=]
2025-06-10 18:13:44 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(39).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:13:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(39)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(39).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(39).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(39).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(39).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(39).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(39).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(39).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(39).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(39).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(39).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(39).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(39).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(39).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(39).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(39).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(39).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(39).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 18:13:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(39)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 18:13:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 18:13:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(39) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(39))@2044383816 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 18:13:44 [http-nio-8088-exec-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) and (lower(t1_0.description) like replace(?,'\\','\\\\') or lower(cast(t1_0.type as char)) like replace(?,'\\','\\\\')) and t1_0.currency=? and t1_0.bank_type=? and t1_0.timestamp between ? and ? order by t1_0.timestamp desc limit ?,? MDC:[traceId=, spanId=]
2025-06-10 18:13:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 18:13:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(40))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 18:13:44 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6b1dc31 MDC:[traceId=, spanId=]
2025-06-10 18:13:44 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(40).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:13:44 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@37ccb08a MDC:[traceId=, spanId=]
2025-06-10 18:13:44 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(40).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:13:44 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5fc65448 MDC:[traceId=, spanId=]
2025-06-10 18:13:44 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for generalized SqmExpression : org.hibernate.query.sqm.function.SelfRenderingSqmFunction@770fd218 MDC:[traceId=, spanId=]
2025-06-10 18:13:44 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4a057b84 MDC:[traceId=, spanId=]
2025-06-10 18:13:44 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for generalized SqmExpression : org.hibernate.query.sqm.function.SelfRenderingSqmFunction@6988ff38 MDC:[traceId=, spanId=]
2025-06-10 18:13:44 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2617d81 MDC:[traceId=, spanId=]
2025-06-10 18:13:44 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(40).currency)  MDC:[traceId=, spanId=]
2025-06-10 18:13:44 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@52743d4 MDC:[traceId=, spanId=]
2025-06-10 18:13:44 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(40).bankType)  MDC:[traceId=, spanId=]
2025-06-10 18:13:44 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2365d768 MDC:[traceId=, spanId=]
2025-06-10 18:13:44 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(40).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:13:44 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@68a6017 MDC:[traceId=, spanId=]
2025-06-10 18:13:44 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(40).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:13:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-BasicResult
 MDC:[traceId=, spanId=]
2025-06-10 18:13:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(40)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 18:13:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 18:13:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-10 18:13:44 [http-nio-8088-exec-1] DEBUG org.hibernate.SQL - select count(t1_0.id) from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) and (lower(t1_0.description) like replace(?,'\\','\\\\') or lower(cast(t1_0.type as char)) like replace(?,'\\','\\\\')) and t1_0.currency=? and t1_0.bank_type=? and t1_0.timestamp between ? and ? MDC:[traceId=, spanId=]
2025-06-10 18:13:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@40db1d04 MDC:[traceId=, spanId=]
2025-06-10 18:13:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [0] MDC:[traceId=, spanId=]
2025-06-10 18:13:44 [http-nio-8088-exec-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 18:13:49 [http-nio-8088-exec-2] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 18:13:49 [http-nio-8088-exec-2] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 18:13:49 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 18:13:49 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(41))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 18:13:49 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2924a479 MDC:[traceId=, spanId=]
2025-06-10 18:13:49 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(41).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:13:49 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@44305772 MDC:[traceId=, spanId=]
2025-06-10 18:13:49 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(41).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:13:49 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6cffee5f MDC:[traceId=, spanId=]
2025-06-10 18:13:49 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(41).currency)  MDC:[traceId=, spanId=]
2025-06-10 18:13:49 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@54e26e4e MDC:[traceId=, spanId=]
2025-06-10 18:13:49 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(41).bankType)  MDC:[traceId=, spanId=]
2025-06-10 18:13:49 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3867af5 MDC:[traceId=, spanId=]
2025-06-10 18:13:49 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(41).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:13:49 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2f908333 MDC:[traceId=, spanId=]
2025-06-10 18:13:49 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(41).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:13:49 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(41)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(41).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(41).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(41).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(41).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(41).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(41).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(41).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(41).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(41).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(41).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(41).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(41).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(41).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(41).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(41).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(41).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(41).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 18:13:49 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(41)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 18:13:49 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 18:13:49 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(41) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(41))@1793155237 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 18:13:49 [http-nio-8088-exec-2] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) and t1_0.currency=? and t1_0.bank_type=? and t1_0.timestamp between ? and ? order by t1_0.timestamp desc limit ?,? MDC:[traceId=, spanId=]
2025-06-10 18:13:49 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [f68527a8-92d7-4eb3-bc1e-029018e8df04] MDC:[traceId=, spanId=]
2025-06-10 18:13:49 [http-nio-8088-exec-2] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(41)): f68527a8-92d7-4eb3-bc1e-029018e8df04 MDC:[traceId=, spanId=]
2025-06-10 18:13:49 [http-nio-8088-exec-2] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(41)#f68527a8-92d7-4eb3-bc1e-029018e8df04] : 1023552937 MDC:[traceId=, spanId=]
2025-06-10 18:13:49 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [63260.00] MDC:[traceId=, spanId=]
2025-06-10 18:13:49 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 18:13:49 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-05T16:01:57.122103] MDC:[traceId=, spanId=]
2025-06-10 18:13:49 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 18:13:49 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 18:13:49 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [] MDC:[traceId=, spanId=]
2025-06-10 18:13:49 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 18:13:49 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 18:13:49 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [Nhập sai OTP quá 3 lần] MDC:[traceId=, spanId=]
2025-06-10 18:13:49 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 18:13:49 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-20250605160156231b8b12] MDC:[traceId=, spanId=]
2025-06-10 18:13:49 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [FAILED] MDC:[traceId=, spanId=]
2025-06-10 18:13:49 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-05T16:01:56.985819] MDC:[traceId=, spanId=]
2025-06-10 18:13:49 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [87654321] MDC:[traceId=, spanId=]
2025-06-10 18:13:49 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 18:13:49 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-05T16:02:05.089574] MDC:[traceId=, spanId=]
2025-06-10 18:13:49 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 18:13:49 [http-nio-8088-exec-2] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(41)#f68527a8-92d7-4eb3-bc1e-029018e8df04 MDC:[traceId=, spanId=]
2025-06-10 18:13:49 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5c8796e4 MDC:[traceId=, spanId=]
2025-06-10 18:13:49 [http-nio-8088-exec-2] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 18:13:54 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 18:13:54 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 18:13:54 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 18:13:54 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 18:13:54 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@38d76618 MDC:[traceId=, spanId=]
2025-06-10 18:13:54 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 18:13:54 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3984b614 MDC:[traceId=, spanId=]
2025-06-10 18:13:54 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:13:54 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 18:13:54 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 18:13:54 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 18:13:54 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1343760095 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 18:13:54 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 18:13:54 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 18:14:54 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 18:14:54 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 18:14:54 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 18:14:54 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 18:14:54 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7703be3 MDC:[traceId=, spanId=]
2025-06-10 18:14:54 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 18:14:54 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@749a809a MDC:[traceId=, spanId=]
2025-06-10 18:14:54 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:14:54 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 18:14:54 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 18:14:54 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 18:14:54 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@709184552 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 18:14:54 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 18:14:54 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 18:15:54 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 18:15:54 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 18:15:54 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 18:15:54 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 18:15:54 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@607e23c0 MDC:[traceId=, spanId=]
2025-06-10 18:15:54 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 18:15:54 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@56c84dc2 MDC:[traceId=, spanId=]
2025-06-10 18:15:54 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:15:54 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 18:15:54 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 18:15:54 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 18:15:54 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@20268181 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 18:15:54 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 18:15:54 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 18:15:57 [http-nio-8088-exec-8] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 18:15:57 [http-nio-8088-exec-8] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 18:15:57 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 18:15:57 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(42))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 18:15:57 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6f268422 MDC:[traceId=, spanId=]
2025-06-10 18:15:57 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(42).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:15:57 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1c692a36 MDC:[traceId=, spanId=]
2025-06-10 18:15:57 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(42).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:15:57 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@47386921 MDC:[traceId=, spanId=]
2025-06-10 18:15:57 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(42).bankType)  MDC:[traceId=, spanId=]
2025-06-10 18:15:57 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@15112ba0 MDC:[traceId=, spanId=]
2025-06-10 18:15:57 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(42).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:15:57 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2a73b1a8 MDC:[traceId=, spanId=]
2025-06-10 18:15:57 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(42).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:15:57 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(42)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(42).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(42).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(42).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(42).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(42).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(42).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(42).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(42).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(42).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(42).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(42).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(42).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(42).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(42).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(42).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(42).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(42).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 18:15:57 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(42)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 18:15:57 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 18:15:57 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(42) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(42))@95020333 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 18:15:57 [http-nio-8088-exec-8] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) and t1_0.bank_type=? and t1_0.timestamp between ? and ? order by t1_0.timestamp desc limit ?,? MDC:[traceId=, spanId=]
2025-06-10 18:15:57 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [f68527a8-92d7-4eb3-bc1e-029018e8df04] MDC:[traceId=, spanId=]
2025-06-10 18:15:57 [http-nio-8088-exec-8] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(42)): f68527a8-92d7-4eb3-bc1e-029018e8df04 MDC:[traceId=, spanId=]
2025-06-10 18:15:57 [http-nio-8088-exec-8] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(42)#f68527a8-92d7-4eb3-bc1e-029018e8df04] : 512139277 MDC:[traceId=, spanId=]
2025-06-10 18:15:57 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [63260.00] MDC:[traceId=, spanId=]
2025-06-10 18:15:57 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 18:15:57 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-05T16:01:57.122103] MDC:[traceId=, spanId=]
2025-06-10 18:15:57 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 18:15:57 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 18:15:57 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [] MDC:[traceId=, spanId=]
2025-06-10 18:15:57 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 18:15:57 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 18:15:57 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [Nhập sai OTP quá 3 lần] MDC:[traceId=, spanId=]
2025-06-10 18:15:57 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 18:15:57 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-20250605160156231b8b12] MDC:[traceId=, spanId=]
2025-06-10 18:15:57 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [FAILED] MDC:[traceId=, spanId=]
2025-06-10 18:15:57 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-05T16:01:56.985819] MDC:[traceId=, spanId=]
2025-06-10 18:15:57 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [87654321] MDC:[traceId=, spanId=]
2025-06-10 18:15:57 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 18:15:57 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-05T16:02:05.089574] MDC:[traceId=, spanId=]
2025-06-10 18:15:57 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 18:15:57 [http-nio-8088-exec-8] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(42)#f68527a8-92d7-4eb3-bc1e-029018e8df04 MDC:[traceId=, spanId=]
2025-06-10 18:15:57 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@54ccbe7d MDC:[traceId=, spanId=]
2025-06-10 18:15:57 [http-nio-8088-exec-8] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 18:16:04 [http-nio-8088-exec-10] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 18:16:04 [http-nio-8088-exec-10] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 18:16:04 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 18:16:04 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(43))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 18:16:04 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@beb4d70 MDC:[traceId=, spanId=]
2025-06-10 18:16:04 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(43).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:16:04 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6b6fae79 MDC:[traceId=, spanId=]
2025-06-10 18:16:04 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(43).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:16:04 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3c1d0ba8 MDC:[traceId=, spanId=]
2025-06-10 18:16:04 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(43).currency)  MDC:[traceId=, spanId=]
2025-06-10 18:16:04 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@467d6586 MDC:[traceId=, spanId=]
2025-06-10 18:16:04 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(43).bankType)  MDC:[traceId=, spanId=]
2025-06-10 18:16:04 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1df75501 MDC:[traceId=, spanId=]
2025-06-10 18:16:04 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(43).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:16:04 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@58383aee MDC:[traceId=, spanId=]
2025-06-10 18:16:04 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(43).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:16:04 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(43)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(43).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(43).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(43).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(43).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(43).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(43).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(43).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(43).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(43).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(43).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(43).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(43).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(43).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(43).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(43).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(43).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(43).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 18:16:04 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(43)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 18:16:04 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 18:16:04 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(43) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(43))@1489211120 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 18:16:04 [http-nio-8088-exec-10] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) and t1_0.currency=? and t1_0.bank_type=? and t1_0.timestamp between ? and ? order by t1_0.timestamp desc limit ?,? MDC:[traceId=, spanId=]
2025-06-10 18:16:04 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [f68527a8-92d7-4eb3-bc1e-029018e8df04] MDC:[traceId=, spanId=]
2025-06-10 18:16:04 [http-nio-8088-exec-10] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(43)): f68527a8-92d7-4eb3-bc1e-029018e8df04 MDC:[traceId=, spanId=]
2025-06-10 18:16:04 [http-nio-8088-exec-10] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(43)#f68527a8-92d7-4eb3-bc1e-029018e8df04] : 440443816 MDC:[traceId=, spanId=]
2025-06-10 18:16:04 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [63260.00] MDC:[traceId=, spanId=]
2025-06-10 18:16:04 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 18:16:04 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-05T16:01:57.122103] MDC:[traceId=, spanId=]
2025-06-10 18:16:04 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 18:16:04 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 18:16:04 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [] MDC:[traceId=, spanId=]
2025-06-10 18:16:04 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 18:16:04 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 18:16:04 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [Nhập sai OTP quá 3 lần] MDC:[traceId=, spanId=]
2025-06-10 18:16:04 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 18:16:04 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-20250605160156231b8b12] MDC:[traceId=, spanId=]
2025-06-10 18:16:04 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [FAILED] MDC:[traceId=, spanId=]
2025-06-10 18:16:04 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-05T16:01:56.985819] MDC:[traceId=, spanId=]
2025-06-10 18:16:04 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [87654321] MDC:[traceId=, spanId=]
2025-06-10 18:16:04 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 18:16:04 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-05T16:02:05.089574] MDC:[traceId=, spanId=]
2025-06-10 18:16:04 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 18:16:04 [http-nio-8088-exec-10] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(43)#f68527a8-92d7-4eb3-bc1e-029018e8df04 MDC:[traceId=, spanId=]
2025-06-10 18:16:04 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5e301a1e MDC:[traceId=, spanId=]
2025-06-10 18:16:04 [http-nio-8088-exec-10] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 18:16:08 [http-nio-8088-exec-6] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 18:16:08 [http-nio-8088-exec-6] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 18:16:08 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 18:16:08 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(44))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 18:16:08 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@76b7592f MDC:[traceId=, spanId=]
2025-06-10 18:16:08 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(44).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:16:08 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2edd235f MDC:[traceId=, spanId=]
2025-06-10 18:16:08 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(44).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:16:08 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@64188c80 MDC:[traceId=, spanId=]
2025-06-10 18:16:08 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(44).currency)  MDC:[traceId=, spanId=]
2025-06-10 18:16:08 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@32c46668 MDC:[traceId=, spanId=]
2025-06-10 18:16:08 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(44).bankType)  MDC:[traceId=, spanId=]
2025-06-10 18:16:08 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6cf8893d MDC:[traceId=, spanId=]
2025-06-10 18:16:08 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(44).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:16:08 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2b2e6025 MDC:[traceId=, spanId=]
2025-06-10 18:16:08 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(44).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:16:08 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(44)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(44).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(44).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(44).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(44).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(44).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(44).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(44).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(44).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(44).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(44).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(44).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(44).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(44).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(44).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(44).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(44).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(44).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 18:16:08 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(44)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 18:16:08 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 18:16:08 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(44) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(44))@724120834 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 18:16:08 [http-nio-8088-exec-6] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) and t1_0.currency=? and t1_0.bank_type=? and t1_0.timestamp between ? and ? order by t1_0.timestamp desc limit ?,? MDC:[traceId=, spanId=]
2025-06-10 18:16:08 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [147c25ce-f4bb-4e62-a3db-0fe7e61b16da] MDC:[traceId=, spanId=]
2025-06-10 18:16:08 [http-nio-8088-exec-6] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(44)): 147c25ce-f4bb-4e62-a3db-0fe7e61b16da MDC:[traceId=, spanId=]
2025-06-10 18:16:08 [http-nio-8088-exec-6] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(44)#147c25ce-f4bb-4e62-a3db-0fe7e61b16da] : 491430879 MDC:[traceId=, spanId=]
2025-06-10 18:16:08 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [111212.00] MDC:[traceId=, spanId=]
2025-06-10 18:16:08 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 18:16:08 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-06T15:10:39.311458] MDC:[traceId=, spanId=]
2025-06-10 18:16:08 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 18:16:08 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 18:16:08 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [] MDC:[traceId=, spanId=]
2025-06-10 18:16:08 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 18:16:08 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 18:16:08 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [Quá thời gian cho phép của giao dịch] MDC:[traceId=, spanId=]
2025-06-10 18:16:08 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 18:16:08 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-20250606151039ee20157d] MDC:[traceId=, spanId=]
2025-06-10 18:16:08 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [FAILED] MDC:[traceId=, spanId=]
2025-06-10 18:16:08 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-06T15:10:39.081809] MDC:[traceId=, spanId=]
2025-06-10 18:16:08 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [27072000] MDC:[traceId=, spanId=]
2025-06-10 18:16:08 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 18:16:08 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-06T15:13:58.883446] MDC:[traceId=, spanId=]
2025-06-10 18:16:08 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 18:16:08 [http-nio-8088-exec-6] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(44)#147c25ce-f4bb-4e62-a3db-0fe7e61b16da MDC:[traceId=, spanId=]
2025-06-10 18:16:08 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7fa91451 MDC:[traceId=, spanId=]
2025-06-10 18:16:08 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [d41a58db-a3d5-46ce-8424-1de5833b2b30] MDC:[traceId=, spanId=]
2025-06-10 18:16:08 [http-nio-8088-exec-6] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(44)): d41a58db-a3d5-46ce-8424-1de5833b2b30 MDC:[traceId=, spanId=]
2025-06-10 18:16:08 [http-nio-8088-exec-6] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(44)#d41a58db-a3d5-46ce-8424-1de5833b2b30] : 247860303 MDC:[traceId=, spanId=]
2025-06-10 18:16:08 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [222121.00] MDC:[traceId=, spanId=]
2025-06-10 18:16:08 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 18:16:08 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-06T14:55:17.181641] MDC:[traceId=, spanId=]
2025-06-10 18:16:08 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 18:16:08 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 18:16:08 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [] MDC:[traceId=, spanId=]
2025-06-10 18:16:08 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 18:16:08 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 18:16:08 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-10 18:16:08 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 18:16:08 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-2025060614551714b225e2] MDC:[traceId=, spanId=]
2025-06-10 18:16:08 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-10 18:16:08 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-06T14:55:17.070079] MDC:[traceId=, spanId=]
2025-06-10 18:16:08 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [27072000] MDC:[traceId=, spanId=]
2025-06-10 18:16:08 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 18:16:08 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-06T14:55:27.673405] MDC:[traceId=, spanId=]
2025-06-10 18:16:08 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 18:16:08 [http-nio-8088-exec-6] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(44)#d41a58db-a3d5-46ce-8424-1de5833b2b30 MDC:[traceId=, spanId=]
2025-06-10 18:16:08 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7fa91451 MDC:[traceId=, spanId=]
2025-06-10 18:16:08 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 18:16:08 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(45))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 18:16:08 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@36367f8 MDC:[traceId=, spanId=]
2025-06-10 18:16:08 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(45).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:16:08 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7d554cb7 MDC:[traceId=, spanId=]
2025-06-10 18:16:08 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(45).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:16:08 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@58d04d84 MDC:[traceId=, spanId=]
2025-06-10 18:16:08 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(45).currency)  MDC:[traceId=, spanId=]
2025-06-10 18:16:08 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7339658c MDC:[traceId=, spanId=]
2025-06-10 18:16:08 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(45).bankType)  MDC:[traceId=, spanId=]
2025-06-10 18:16:08 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4c58bc7a MDC:[traceId=, spanId=]
2025-06-10 18:16:08 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(45).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:16:08 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@25504706 MDC:[traceId=, spanId=]
2025-06-10 18:16:08 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(45).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:16:08 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-BasicResult
 MDC:[traceId=, spanId=]
2025-06-10 18:16:08 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(45)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 18:16:08 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 18:16:08 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-10 18:16:08 [http-nio-8088-exec-6] DEBUG org.hibernate.SQL - select count(t1_0.id) from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) and t1_0.currency=? and t1_0.bank_type=? and t1_0.timestamp between ? and ? MDC:[traceId=, spanId=]
2025-06-10 18:16:08 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@1476cec6 MDC:[traceId=, spanId=]
2025-06-10 18:16:08 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [3] MDC:[traceId=, spanId=]
2025-06-10 18:16:08 [http-nio-8088-exec-6] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 18:16:27 [http-nio-8088-exec-7] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 18:16:27 [http-nio-8088-exec-7] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 18:16:27 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 18:16:27 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(46))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 18:16:27 [http-nio-8088-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6c8c7190 MDC:[traceId=, spanId=]
2025-06-10 18:16:27 [http-nio-8088-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(46).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:16:27 [http-nio-8088-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@380641c3 MDC:[traceId=, spanId=]
2025-06-10 18:16:27 [http-nio-8088-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(46).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:16:27 [http-nio-8088-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@353ae818 MDC:[traceId=, spanId=]
2025-06-10 18:16:27 [http-nio-8088-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(46).currency)  MDC:[traceId=, spanId=]
2025-06-10 18:16:27 [http-nio-8088-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6a4fac2b MDC:[traceId=, spanId=]
2025-06-10 18:16:27 [http-nio-8088-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(46).bankType)  MDC:[traceId=, spanId=]
2025-06-10 18:16:27 [http-nio-8088-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1a81ce88 MDC:[traceId=, spanId=]
2025-06-10 18:16:27 [http-nio-8088-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(46).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:16:27 [http-nio-8088-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@277e427 MDC:[traceId=, spanId=]
2025-06-10 18:16:27 [http-nio-8088-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(46).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:16:27 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(46)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(46).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(46).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(46).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(46).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(46).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(46).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(46).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(46).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(46).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(46).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(46).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(46).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(46).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(46).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(46).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(46).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(46).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 18:16:27 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(46)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 18:16:27 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 18:16:27 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(46) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(46))@314316629 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 18:16:27 [http-nio-8088-exec-7] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) and t1_0.currency=? and t1_0.bank_type=? and t1_0.timestamp between ? and ? order by t1_0.timestamp desc limit ?,? MDC:[traceId=, spanId=]
2025-06-10 18:16:27 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [f68527a8-92d7-4eb3-bc1e-029018e8df04] MDC:[traceId=, spanId=]
2025-06-10 18:16:27 [http-nio-8088-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(46)): f68527a8-92d7-4eb3-bc1e-029018e8df04 MDC:[traceId=, spanId=]
2025-06-10 18:16:27 [http-nio-8088-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(46)#f68527a8-92d7-4eb3-bc1e-029018e8df04] : 1802006027 MDC:[traceId=, spanId=]
2025-06-10 18:16:27 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [63260.00] MDC:[traceId=, spanId=]
2025-06-10 18:16:27 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 18:16:27 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-05T16:01:57.122103] MDC:[traceId=, spanId=]
2025-06-10 18:16:27 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 18:16:27 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 18:16:27 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [] MDC:[traceId=, spanId=]
2025-06-10 18:16:27 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 18:16:27 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 18:16:27 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [Nhập sai OTP quá 3 lần] MDC:[traceId=, spanId=]
2025-06-10 18:16:27 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 18:16:27 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-20250605160156231b8b12] MDC:[traceId=, spanId=]
2025-06-10 18:16:27 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [FAILED] MDC:[traceId=, spanId=]
2025-06-10 18:16:27 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-05T16:01:56.985819] MDC:[traceId=, spanId=]
2025-06-10 18:16:27 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [87654321] MDC:[traceId=, spanId=]
2025-06-10 18:16:27 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 18:16:27 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-05T16:02:05.089574] MDC:[traceId=, spanId=]
2025-06-10 18:16:27 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 18:16:27 [http-nio-8088-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(46)#f68527a8-92d7-4eb3-bc1e-029018e8df04 MDC:[traceId=, spanId=]
2025-06-10 18:16:27 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@199cca8c MDC:[traceId=, spanId=]
2025-06-10 18:16:27 [http-nio-8088-exec-7] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 18:16:32 [http-nio-8088-exec-4] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 18:16:32 [http-nio-8088-exec-4] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 18:16:32 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 18:16:32 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(47))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 18:16:32 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@25043916 MDC:[traceId=, spanId=]
2025-06-10 18:16:32 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(47).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:16:32 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@136413e0 MDC:[traceId=, spanId=]
2025-06-10 18:16:32 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(47).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:16:32 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3750e7f7 MDC:[traceId=, spanId=]
2025-06-10 18:16:32 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(47).currency)  MDC:[traceId=, spanId=]
2025-06-10 18:16:32 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7b131b1 MDC:[traceId=, spanId=]
2025-06-10 18:16:32 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(47).bankType)  MDC:[traceId=, spanId=]
2025-06-10 18:16:32 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4120db37 MDC:[traceId=, spanId=]
2025-06-10 18:16:32 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(47).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:16:32 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@35ef710a MDC:[traceId=, spanId=]
2025-06-10 18:16:32 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(47).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:16:32 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(47)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(47).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(47).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(47).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(47).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(47).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(47).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(47).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(47).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(47).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(47).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(47).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(47).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(47).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(47).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(47).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(47).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(47).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 18:16:32 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(47)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 18:16:32 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 18:16:32 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(47) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(47))@1318815831 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 18:16:32 [http-nio-8088-exec-4] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) and t1_0.currency=? and t1_0.bank_type=? and t1_0.timestamp between ? and ? order by t1_0.timestamp desc limit ?,? MDC:[traceId=, spanId=]
2025-06-10 18:16:32 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [147c25ce-f4bb-4e62-a3db-0fe7e61b16da] MDC:[traceId=, spanId=]
2025-06-10 18:16:32 [http-nio-8088-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(47)): 147c25ce-f4bb-4e62-a3db-0fe7e61b16da MDC:[traceId=, spanId=]
2025-06-10 18:16:32 [http-nio-8088-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(47)#147c25ce-f4bb-4e62-a3db-0fe7e61b16da] : 1156761899 MDC:[traceId=, spanId=]
2025-06-10 18:16:32 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [111212.00] MDC:[traceId=, spanId=]
2025-06-10 18:16:32 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 18:16:32 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-06T15:10:39.311458] MDC:[traceId=, spanId=]
2025-06-10 18:16:32 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 18:16:32 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 18:16:32 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [] MDC:[traceId=, spanId=]
2025-06-10 18:16:32 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 18:16:32 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 18:16:32 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [Quá thời gian cho phép của giao dịch] MDC:[traceId=, spanId=]
2025-06-10 18:16:32 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 18:16:32 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-20250606151039ee20157d] MDC:[traceId=, spanId=]
2025-06-10 18:16:32 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [FAILED] MDC:[traceId=, spanId=]
2025-06-10 18:16:32 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-06T15:10:39.081809] MDC:[traceId=, spanId=]
2025-06-10 18:16:32 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [27072000] MDC:[traceId=, spanId=]
2025-06-10 18:16:32 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 18:16:32 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-06T15:13:58.883446] MDC:[traceId=, spanId=]
2025-06-10 18:16:32 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 18:16:32 [http-nio-8088-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(47)#147c25ce-f4bb-4e62-a3db-0fe7e61b16da MDC:[traceId=, spanId=]
2025-06-10 18:16:32 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@56b938d2 MDC:[traceId=, spanId=]
2025-06-10 18:16:32 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [d41a58db-a3d5-46ce-8424-1de5833b2b30] MDC:[traceId=, spanId=]
2025-06-10 18:16:32 [http-nio-8088-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(47)): d41a58db-a3d5-46ce-8424-1de5833b2b30 MDC:[traceId=, spanId=]
2025-06-10 18:16:32 [http-nio-8088-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(47)#d41a58db-a3d5-46ce-8424-1de5833b2b30] : 848741162 MDC:[traceId=, spanId=]
2025-06-10 18:16:32 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [222121.00] MDC:[traceId=, spanId=]
2025-06-10 18:16:32 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 18:16:32 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-06T14:55:17.181641] MDC:[traceId=, spanId=]
2025-06-10 18:16:32 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 18:16:32 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 18:16:32 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [] MDC:[traceId=, spanId=]
2025-06-10 18:16:32 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 18:16:32 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 18:16:32 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-10 18:16:32 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 18:16:32 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-2025060614551714b225e2] MDC:[traceId=, spanId=]
2025-06-10 18:16:32 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-10 18:16:32 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-06T14:55:17.070079] MDC:[traceId=, spanId=]
2025-06-10 18:16:32 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [27072000] MDC:[traceId=, spanId=]
2025-06-10 18:16:32 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 18:16:32 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-06T14:55:27.673405] MDC:[traceId=, spanId=]
2025-06-10 18:16:32 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 18:16:32 [http-nio-8088-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(47)#d41a58db-a3d5-46ce-8424-1de5833b2b30 MDC:[traceId=, spanId=]
2025-06-10 18:16:32 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@56b938d2 MDC:[traceId=, spanId=]
2025-06-10 18:16:32 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 18:16:32 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(48))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 18:16:32 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7fe531f7 MDC:[traceId=, spanId=]
2025-06-10 18:16:32 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(48).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:16:32 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@71676e63 MDC:[traceId=, spanId=]
2025-06-10 18:16:32 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(48).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:16:32 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4a4313a6 MDC:[traceId=, spanId=]
2025-06-10 18:16:32 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(48).currency)  MDC:[traceId=, spanId=]
2025-06-10 18:16:32 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6b3678b8 MDC:[traceId=, spanId=]
2025-06-10 18:16:32 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(48).bankType)  MDC:[traceId=, spanId=]
2025-06-10 18:16:32 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5abc3741 MDC:[traceId=, spanId=]
2025-06-10 18:16:32 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(48).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:16:32 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@636af260 MDC:[traceId=, spanId=]
2025-06-10 18:16:32 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(48).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:16:32 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-BasicResult
 MDC:[traceId=, spanId=]
2025-06-10 18:16:32 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(48)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 18:16:32 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 18:16:32 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-10 18:16:32 [http-nio-8088-exec-4] DEBUG org.hibernate.SQL - select count(t1_0.id) from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) and t1_0.currency=? and t1_0.bank_type=? and t1_0.timestamp between ? and ? MDC:[traceId=, spanId=]
2025-06-10 18:16:32 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@446b4ba1 MDC:[traceId=, spanId=]
2025-06-10 18:16:32 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [3] MDC:[traceId=, spanId=]
2025-06-10 18:16:32 [http-nio-8088-exec-4] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 18:16:54 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 18:16:54 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 18:16:54 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 18:16:54 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 18:16:54 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1ae43378 MDC:[traceId=, spanId=]
2025-06-10 18:16:54 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 18:16:54 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@48653ce1 MDC:[traceId=, spanId=]
2025-06-10 18:16:54 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:16:54 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 18:16:54 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 18:16:54 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 18:16:54 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@706727783 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 18:16:54 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 18:16:54 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 18:17:08 [http-nio-8088-exec-9] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 18:17:08 [http-nio-8088-exec-9] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 18:17:08 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 18:17:08 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(49))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 18:17:08 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6e781a75 MDC:[traceId=, spanId=]
2025-06-10 18:17:08 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(49).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:17:08 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@71b3fc64 MDC:[traceId=, spanId=]
2025-06-10 18:17:08 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(49).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:17:08 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3a4e8aa8 MDC:[traceId=, spanId=]
2025-06-10 18:17:08 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(49).status)  MDC:[traceId=, spanId=]
2025-06-10 18:17:08 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@54f4f2c0 MDC:[traceId=, spanId=]
2025-06-10 18:17:08 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(49).currency)  MDC:[traceId=, spanId=]
2025-06-10 18:17:08 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@522dcf64 MDC:[traceId=, spanId=]
2025-06-10 18:17:08 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(49).bankType)  MDC:[traceId=, spanId=]
2025-06-10 18:17:08 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4856a0bb MDC:[traceId=, spanId=]
2025-06-10 18:17:08 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(49).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:17:08 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@28f443f5 MDC:[traceId=, spanId=]
2025-06-10 18:17:08 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(49).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:17:08 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(49)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(49).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(49).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(49).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(49).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(49).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(49).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(49).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(49).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(49).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(49).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(49).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(49).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(49).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(49).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(49).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(49).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(49).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 18:17:08 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(49)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 18:17:08 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 18:17:08 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(49) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(49))@1109789469 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 18:17:08 [http-nio-8088-exec-9] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) and t1_0.status=? and t1_0.currency=? and t1_0.bank_type=? and t1_0.timestamp between ? and ? order by t1_0.timestamp desc limit ?,? MDC:[traceId=, spanId=]
2025-06-10 18:17:08 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [d41a58db-a3d5-46ce-8424-1de5833b2b30] MDC:[traceId=, spanId=]
2025-06-10 18:17:08 [http-nio-8088-exec-9] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(49)): d41a58db-a3d5-46ce-8424-1de5833b2b30 MDC:[traceId=, spanId=]
2025-06-10 18:17:08 [http-nio-8088-exec-9] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(49)#d41a58db-a3d5-46ce-8424-1de5833b2b30] : 336611883 MDC:[traceId=, spanId=]
2025-06-10 18:17:08 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [222121.00] MDC:[traceId=, spanId=]
2025-06-10 18:17:08 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 18:17:08 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-06T14:55:17.181641] MDC:[traceId=, spanId=]
2025-06-10 18:17:08 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 18:17:08 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 18:17:08 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [] MDC:[traceId=, spanId=]
2025-06-10 18:17:08 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 18:17:08 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 18:17:08 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-10 18:17:08 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 18:17:08 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-2025060614551714b225e2] MDC:[traceId=, spanId=]
2025-06-10 18:17:08 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-10 18:17:08 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-06T14:55:17.070079] MDC:[traceId=, spanId=]
2025-06-10 18:17:08 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [27072000] MDC:[traceId=, spanId=]
2025-06-10 18:17:08 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 18:17:08 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-06T14:55:27.673405] MDC:[traceId=, spanId=]
2025-06-10 18:17:08 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 18:17:08 [http-nio-8088-exec-9] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(49)#d41a58db-a3d5-46ce-8424-1de5833b2b30 MDC:[traceId=, spanId=]
2025-06-10 18:17:08 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@661cc557 MDC:[traceId=, spanId=]
2025-06-10 18:17:08 [http-nio-8088-exec-9] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 18:17:22 [http-nio-8088-exec-5] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 18:17:22 [http-nio-8088-exec-5] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 18:17:22 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 18:17:22 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(50))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 18:17:22 [http-nio-8088-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7468cbff MDC:[traceId=, spanId=]
2025-06-10 18:17:22 [http-nio-8088-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(50).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:17:22 [http-nio-8088-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3f94a899 MDC:[traceId=, spanId=]
2025-06-10 18:17:22 [http-nio-8088-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(50).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:17:22 [http-nio-8088-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4c15be31 MDC:[traceId=, spanId=]
2025-06-10 18:17:22 [http-nio-8088-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(50).type)  MDC:[traceId=, spanId=]
2025-06-10 18:17:22 [http-nio-8088-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3ab3d561 MDC:[traceId=, spanId=]
2025-06-10 18:17:22 [http-nio-8088-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(50).status)  MDC:[traceId=, spanId=]
2025-06-10 18:17:22 [http-nio-8088-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@20f4ecfc MDC:[traceId=, spanId=]
2025-06-10 18:17:22 [http-nio-8088-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(50).currency)  MDC:[traceId=, spanId=]
2025-06-10 18:17:22 [http-nio-8088-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6fd698fd MDC:[traceId=, spanId=]
2025-06-10 18:17:22 [http-nio-8088-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(50).bankType)  MDC:[traceId=, spanId=]
2025-06-10 18:17:22 [http-nio-8088-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@20cd4747 MDC:[traceId=, spanId=]
2025-06-10 18:17:22 [http-nio-8088-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(50).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:17:22 [http-nio-8088-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@62d55a78 MDC:[traceId=, spanId=]
2025-06-10 18:17:22 [http-nio-8088-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(50).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:17:22 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(50)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(50).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(50).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(50).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(50).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(50).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(50).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(50).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(50).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(50).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(50).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(50).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(50).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(50).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(50).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(50).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(50).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(50).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 18:17:22 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(50)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 18:17:22 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 18:17:22 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(50) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(50))@730554286 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 18:17:22 [http-nio-8088-exec-5] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) and t1_0.type=? and t1_0.status=? and t1_0.currency=? and t1_0.bank_type=? and t1_0.timestamp between ? and ? order by t1_0.timestamp desc limit ?,? MDC:[traceId=, spanId=]
2025-06-10 18:17:22 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [d41a58db-a3d5-46ce-8424-1de5833b2b30] MDC:[traceId=, spanId=]
2025-06-10 18:17:22 [http-nio-8088-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(50)): d41a58db-a3d5-46ce-8424-1de5833b2b30 MDC:[traceId=, spanId=]
2025-06-10 18:17:22 [http-nio-8088-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(50)#d41a58db-a3d5-46ce-8424-1de5833b2b30] : 1497893612 MDC:[traceId=, spanId=]
2025-06-10 18:17:22 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [222121.00] MDC:[traceId=, spanId=]
2025-06-10 18:17:22 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 18:17:22 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-06T14:55:17.181641] MDC:[traceId=, spanId=]
2025-06-10 18:17:22 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 18:17:22 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 18:17:22 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [] MDC:[traceId=, spanId=]
2025-06-10 18:17:22 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 18:17:22 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 18:17:22 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-10 18:17:22 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 18:17:22 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-2025060614551714b225e2] MDC:[traceId=, spanId=]
2025-06-10 18:17:22 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-10 18:17:22 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-06T14:55:17.070079] MDC:[traceId=, spanId=]
2025-06-10 18:17:22 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [27072000] MDC:[traceId=, spanId=]
2025-06-10 18:17:22 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 18:17:22 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-06T14:55:27.673405] MDC:[traceId=, spanId=]
2025-06-10 18:17:22 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 18:17:22 [http-nio-8088-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(50)#d41a58db-a3d5-46ce-8424-1de5833b2b30 MDC:[traceId=, spanId=]
2025-06-10 18:17:22 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@284f4844 MDC:[traceId=, spanId=]
2025-06-10 18:17:22 [http-nio-8088-exec-5] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 18:17:54 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 18:17:54 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 18:17:54 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 18:17:54 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 18:17:54 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@55ac0e1e MDC:[traceId=, spanId=]
2025-06-10 18:17:54 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 18:17:54 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@56b52722 MDC:[traceId=, spanId=]
2025-06-10 18:17:54 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:17:54 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 18:17:54 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 18:17:54 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 18:17:54 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@603838793 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 18:17:54 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 18:17:54 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 18:18:03 [http-nio-8088-exec-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 18:18:03 [http-nio-8088-exec-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 18:18:03 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 18:18:03 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(51))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 18:18:03 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@700108f MDC:[traceId=, spanId=]
2025-06-10 18:18:03 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(51).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:18:03 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@256b4f82 MDC:[traceId=, spanId=]
2025-06-10 18:18:03 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(51).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:18:03 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6bc242ef MDC:[traceId=, spanId=]
2025-06-10 18:18:03 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for generalized SqmExpression : org.hibernate.query.sqm.function.SelfRenderingSqmFunction@64335306 MDC:[traceId=, spanId=]
2025-06-10 18:18:03 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@63477e44 MDC:[traceId=, spanId=]
2025-06-10 18:18:03 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for generalized SqmExpression : org.hibernate.query.sqm.function.SelfRenderingSqmFunction@32c8ab01 MDC:[traceId=, spanId=]
2025-06-10 18:18:03 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7b57e305 MDC:[traceId=, spanId=]
2025-06-10 18:18:03 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(51).type)  MDC:[traceId=, spanId=]
2025-06-10 18:18:03 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@46d8d6fa MDC:[traceId=, spanId=]
2025-06-10 18:18:03 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(51).status)  MDC:[traceId=, spanId=]
2025-06-10 18:18:03 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@58962297 MDC:[traceId=, spanId=]
2025-06-10 18:18:03 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(51).currency)  MDC:[traceId=, spanId=]
2025-06-10 18:18:03 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6f0a97ad MDC:[traceId=, spanId=]
2025-06-10 18:18:03 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(51).bankType)  MDC:[traceId=, spanId=]
2025-06-10 18:18:03 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7723d7b7 MDC:[traceId=, spanId=]
2025-06-10 18:18:03 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(51).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:18:03 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@c97f4c4 MDC:[traceId=, spanId=]
2025-06-10 18:18:03 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(51).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:18:03 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(51)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(51).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(51).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(51).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(51).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(51).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(51).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(51).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(51).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(51).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(51).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(51).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(51).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(51).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(51).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(51).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(51).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(51).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 18:18:03 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(51)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 18:18:03 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 18:18:03 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(51) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(51))@341845179 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 18:18:03 [http-nio-8088-exec-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) and (lower(t1_0.description) like replace(?,'\\','\\\\') or lower(cast(t1_0.type as char)) like replace(?,'\\','\\\\')) and t1_0.type=? and t1_0.status=? and t1_0.currency=? and t1_0.bank_type=? and t1_0.timestamp between ? and ? order by t1_0.timestamp desc limit ?,? MDC:[traceId=, spanId=]
2025-06-10 18:18:03 [http-nio-8088-exec-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 18:18:12 [http-nio-8088-exec-2] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 18:18:12 [http-nio-8088-exec-2] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 18:18:12 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 18:18:12 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(52))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 18:18:12 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3136cd3c MDC:[traceId=, spanId=]
2025-06-10 18:18:12 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(52).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:18:12 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4ea629ba MDC:[traceId=, spanId=]
2025-06-10 18:18:12 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(52).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:18:12 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6dfb27ed MDC:[traceId=, spanId=]
2025-06-10 18:18:12 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for generalized SqmExpression : org.hibernate.query.sqm.function.SelfRenderingSqmFunction@56129aab MDC:[traceId=, spanId=]
2025-06-10 18:18:12 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6facdc75 MDC:[traceId=, spanId=]
2025-06-10 18:18:12 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for generalized SqmExpression : org.hibernate.query.sqm.function.SelfRenderingSqmFunction@71441b16 MDC:[traceId=, spanId=]
2025-06-10 18:18:12 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2b4aa7f5 MDC:[traceId=, spanId=]
2025-06-10 18:18:12 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(52).type)  MDC:[traceId=, spanId=]
2025-06-10 18:18:12 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@74031b40 MDC:[traceId=, spanId=]
2025-06-10 18:18:12 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(52).status)  MDC:[traceId=, spanId=]
2025-06-10 18:18:12 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@44019074 MDC:[traceId=, spanId=]
2025-06-10 18:18:12 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(52).currency)  MDC:[traceId=, spanId=]
2025-06-10 18:18:12 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7c5a85bc MDC:[traceId=, spanId=]
2025-06-10 18:18:12 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(52).bankType)  MDC:[traceId=, spanId=]
2025-06-10 18:18:12 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@59194b93 MDC:[traceId=, spanId=]
2025-06-10 18:18:12 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(52).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:18:12 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1bec8160 MDC:[traceId=, spanId=]
2025-06-10 18:18:12 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(52).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:18:12 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(52)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(52).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(52).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(52).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(52).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(52).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(52).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(52).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(52).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(52).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(52).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(52).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(52).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(52).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(52).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(52).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(52).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(52).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 18:18:12 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(52)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 18:18:12 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 18:18:12 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(52) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(52))@726260704 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 18:18:12 [http-nio-8088-exec-2] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) and (lower(t1_0.description) like replace(?,'\\','\\\\') or lower(cast(t1_0.type as char)) like replace(?,'\\','\\\\')) and t1_0.type=? and t1_0.status=? and t1_0.currency=? and t1_0.bank_type=? and t1_0.timestamp between ? and ? order by t1_0.timestamp desc limit ?,? MDC:[traceId=, spanId=]
2025-06-10 18:18:12 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 18:18:12 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(53))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 18:18:12 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6fda176c MDC:[traceId=, spanId=]
2025-06-10 18:18:12 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(53).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:18:12 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@afc448d MDC:[traceId=, spanId=]
2025-06-10 18:18:12 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(53).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:18:12 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3a4352e MDC:[traceId=, spanId=]
2025-06-10 18:18:12 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for generalized SqmExpression : org.hibernate.query.sqm.function.SelfRenderingSqmFunction@6213a352 MDC:[traceId=, spanId=]
2025-06-10 18:18:12 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@56da833a MDC:[traceId=, spanId=]
2025-06-10 18:18:12 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for generalized SqmExpression : org.hibernate.query.sqm.function.SelfRenderingSqmFunction@9a64979 MDC:[traceId=, spanId=]
2025-06-10 18:18:12 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1947fd39 MDC:[traceId=, spanId=]
2025-06-10 18:18:12 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(53).type)  MDC:[traceId=, spanId=]
2025-06-10 18:18:12 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@76834876 MDC:[traceId=, spanId=]
2025-06-10 18:18:12 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(53).status)  MDC:[traceId=, spanId=]
2025-06-10 18:18:12 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2e8c6f5f MDC:[traceId=, spanId=]
2025-06-10 18:18:12 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(53).currency)  MDC:[traceId=, spanId=]
2025-06-10 18:18:12 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@203443ea MDC:[traceId=, spanId=]
2025-06-10 18:18:12 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(53).bankType)  MDC:[traceId=, spanId=]
2025-06-10 18:18:12 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@420ee46c MDC:[traceId=, spanId=]
2025-06-10 18:18:12 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(53).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:18:12 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4f270858 MDC:[traceId=, spanId=]
2025-06-10 18:18:12 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(53).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:18:12 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-BasicResult
 MDC:[traceId=, spanId=]
2025-06-10 18:18:12 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(53)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 18:18:12 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 18:18:12 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-10 18:18:12 [http-nio-8088-exec-2] DEBUG org.hibernate.SQL - select count(t1_0.id) from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) and (lower(t1_0.description) like replace(?,'\\','\\\\') or lower(cast(t1_0.type as char)) like replace(?,'\\','\\\\')) and t1_0.type=? and t1_0.status=? and t1_0.currency=? and t1_0.bank_type=? and t1_0.timestamp between ? and ? MDC:[traceId=, spanId=]
2025-06-10 18:18:12 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@20640072 MDC:[traceId=, spanId=]
2025-06-10 18:18:12 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [0] MDC:[traceId=, spanId=]
2025-06-10 18:18:12 [http-nio-8088-exec-2] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 18:18:18 [http-nio-8088-exec-3] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 18:18:18 [http-nio-8088-exec-3] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 18:18:18 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 18:18:18 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(54))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 18:18:18 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@21f04f38 MDC:[traceId=, spanId=]
2025-06-10 18:18:18 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(54).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:18:18 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@660fc277 MDC:[traceId=, spanId=]
2025-06-10 18:18:18 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(54).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:18:18 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@f5142fd MDC:[traceId=, spanId=]
2025-06-10 18:18:18 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for generalized SqmExpression : org.hibernate.query.sqm.function.SelfRenderingSqmFunction@27f253cf MDC:[traceId=, spanId=]
2025-06-10 18:18:18 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4d35c06b MDC:[traceId=, spanId=]
2025-06-10 18:18:18 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for generalized SqmExpression : org.hibernate.query.sqm.function.SelfRenderingSqmFunction@d899000 MDC:[traceId=, spanId=]
2025-06-10 18:18:18 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3e75ae50 MDC:[traceId=, spanId=]
2025-06-10 18:18:18 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(54).type)  MDC:[traceId=, spanId=]
2025-06-10 18:18:18 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5af604e MDC:[traceId=, spanId=]
2025-06-10 18:18:18 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(54).status)  MDC:[traceId=, spanId=]
2025-06-10 18:18:18 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1faf08ae MDC:[traceId=, spanId=]
2025-06-10 18:18:18 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(54).currency)  MDC:[traceId=, spanId=]
2025-06-10 18:18:18 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@51a518db MDC:[traceId=, spanId=]
2025-06-10 18:18:18 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(54).bankType)  MDC:[traceId=, spanId=]
2025-06-10 18:18:18 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@63c4b1ef MDC:[traceId=, spanId=]
2025-06-10 18:18:18 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(54).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:18:18 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@b10c2a MDC:[traceId=, spanId=]
2025-06-10 18:18:18 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(54).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:18:18 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(54)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(54).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(54).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(54).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(54).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(54).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(54).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(54).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(54).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(54).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(54).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(54).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(54).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(54).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(54).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(54).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(54).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(54).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 18:18:18 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(54)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 18:18:18 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 18:18:18 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(54) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(54))@1006259801 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 18:18:18 [http-nio-8088-exec-3] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) and (lower(t1_0.description) like replace(?,'\\','\\\\') or lower(cast(t1_0.type as char)) like replace(?,'\\','\\\\')) and t1_0.type=? and t1_0.status=? and t1_0.currency=? and t1_0.bank_type=? and t1_0.timestamp between ? and ? order by t1_0.timestamp desc limit ?,? MDC:[traceId=, spanId=]
2025-06-10 18:18:18 [http-nio-8088-exec-3] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 18:18:24 [http-nio-8088-exec-8] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 18:18:24 [http-nio-8088-exec-8] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 18:18:24 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 18:18:24 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(55))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 18:18:24 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@362348b2 MDC:[traceId=, spanId=]
2025-06-10 18:18:24 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(55).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:18:24 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7b014b18 MDC:[traceId=, spanId=]
2025-06-10 18:18:24 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(55).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:18:24 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@29193424 MDC:[traceId=, spanId=]
2025-06-10 18:18:24 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(55).status)  MDC:[traceId=, spanId=]
2025-06-10 18:18:24 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1ea48cc0 MDC:[traceId=, spanId=]
2025-06-10 18:18:24 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(55).currency)  MDC:[traceId=, spanId=]
2025-06-10 18:18:24 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@67619d0d MDC:[traceId=, spanId=]
2025-06-10 18:18:24 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(55).bankType)  MDC:[traceId=, spanId=]
2025-06-10 18:18:24 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@50858003 MDC:[traceId=, spanId=]
2025-06-10 18:18:24 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(55).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:18:24 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@751e339f MDC:[traceId=, spanId=]
2025-06-10 18:18:24 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(55).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:18:24 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(55)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(55).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(55).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(55).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(55).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(55).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(55).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(55).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(55).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(55).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(55).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(55).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(55).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(55).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(55).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(55).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(55).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(55).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 18:18:24 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(55)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 18:18:24 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 18:18:24 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(55) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(55))@1641348663 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 18:18:24 [http-nio-8088-exec-8] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) and t1_0.status=? and t1_0.currency=? and t1_0.bank_type=? and t1_0.timestamp between ? and ? order by t1_0.timestamp desc limit ?,? MDC:[traceId=, spanId=]
2025-06-10 18:18:24 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [d41a58db-a3d5-46ce-8424-1de5833b2b30] MDC:[traceId=, spanId=]
2025-06-10 18:18:24 [http-nio-8088-exec-8] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(55)): d41a58db-a3d5-46ce-8424-1de5833b2b30 MDC:[traceId=, spanId=]
2025-06-10 18:18:24 [http-nio-8088-exec-8] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(55)#d41a58db-a3d5-46ce-8424-1de5833b2b30] : 233737252 MDC:[traceId=, spanId=]
2025-06-10 18:18:24 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [222121.00] MDC:[traceId=, spanId=]
2025-06-10 18:18:24 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 18:18:24 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-06T14:55:17.181641] MDC:[traceId=, spanId=]
2025-06-10 18:18:24 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 18:18:24 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 18:18:24 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [] MDC:[traceId=, spanId=]
2025-06-10 18:18:24 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 18:18:24 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 18:18:24 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-10 18:18:24 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 18:18:24 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-2025060614551714b225e2] MDC:[traceId=, spanId=]
2025-06-10 18:18:24 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-10 18:18:24 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-06T14:55:17.070079] MDC:[traceId=, spanId=]
2025-06-10 18:18:24 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [27072000] MDC:[traceId=, spanId=]
2025-06-10 18:18:24 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 18:18:24 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-06T14:55:27.673405] MDC:[traceId=, spanId=]
2025-06-10 18:18:24 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 18:18:24 [http-nio-8088-exec-8] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(55)#d41a58db-a3d5-46ce-8424-1de5833b2b30 MDC:[traceId=, spanId=]
2025-06-10 18:18:24 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4b8dfee8 MDC:[traceId=, spanId=]
2025-06-10 18:18:24 [http-nio-8088-exec-8] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(56))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@434f65fe MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(56).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@351d397e MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(56).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@77fb21e2 MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(56).status)  MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7e77274f MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(56).currency)  MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1349577 MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(56).bankType)  MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@ded02ae MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(56).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@754ee283 MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(56).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(56)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(56).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(56).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(56).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(56).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(56).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(56).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(56).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(56).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(56).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(56).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(56).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(56).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(56).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(56).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(56).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(56).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(56).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(56)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(56) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(56))@756442896 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) and t1_0.status=? and t1_0.currency=? and t1_0.bank_type=? and t1_0.timestamp between ? and ? order by t1_0.timestamp desc limit ?,? MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [6c52dec1-7727-4105-9521-7b140e4b9fe6] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(56)): 6c52dec1-7727-4105-9521-7b140e4b9fe6 MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(56)#6c52dec1-7727-4105-9521-7b140e4b9fe6] : 816347913 MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [21468.00] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T15:51:54.770845] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [LE VAN DAI RUT TIEN] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-20250609155154feba46a7] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T15:51:54.505223] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [WITHDRAW] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T15:52:11.861255] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(56)#6c52dec1-7727-4105-9521-7b140e4b9fe6 MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2e98b4eb MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [b88a97aa-b4ea-4c5b-901e-9315c412c554] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(56)): b88a97aa-b4ea-4c5b-901e-9315c412c554 MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(56)#b88a97aa-b4ea-4c5b-901e-9315c412c554] : 1204880467 MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [23000.00] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T13:55:06.439062] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Chuyển tiền] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-202506091355063d72d7f8] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T13:55:06.236412] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [87654321] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T13:55:15.761254] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(56)#b88a97aa-b4ea-4c5b-901e-9315c412c554 MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2e98b4eb MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [67a7c3cd-f37f-4349-b15f-c544c58d6f9d] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(56)): 67a7c3cd-f37f-4349-b15f-c544c58d6f9d MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(56)#67a7c3cd-f37f-4349-b15f-c544c58d6f9d] : 400399892 MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [20000.00] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T13:30:37.135201] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Nộp tiền] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-970452999999999-20250609133036a1299e4f] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T13:30:36.621149] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [DEPOSIT] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T13:30:53.218895] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(56)#67a7c3cd-f37f-4349-b15f-c544c58d6f9d MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2e98b4eb MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [7f1d5e96-1d5c-497b-8c1e-0dcc13cfb943] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(56)): 7f1d5e96-1d5c-497b-8c1e-0dcc13cfb943 MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(56)#7f1d5e96-1d5c-497b-8c1e-0dcc13cfb943] : 1692323797 MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [20000.00] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T13:18:10.375275] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Nộp tiền] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-970452999999999-2025060913181033dff6b6] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T13:18:10.280358] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [DEPOSIT] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T13:18:39.988512] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(56)#7f1d5e96-1d5c-497b-8c1e-0dcc13cfb943 MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2e98b4eb MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [69eb51a4-db2f-49ab-acb9-073a0060ce38] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(56)): 69eb51a4-db2f-49ab-acb9-073a0060ce38 MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(56)#69eb51a4-db2f-49ab-acb9-073a0060ce38] : 252313673 MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [10000.00] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T13:17:40.592964] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Chuyển tiền] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-202506091317401be1dea3] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T13:17:40.336221] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [87654321] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T13:17:50.910739] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(56)#69eb51a4-db2f-49ab-acb9-073a0060ce38 MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2e98b4eb MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [3fe3fd28-b6bd-47e9-bf88-3dde7c475e04] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(56)): 3fe3fd28-b6bd-47e9-bf88-3dde7c475e04 MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(56)#3fe3fd28-b6bd-47e9-bf88-3dde7c475e04] : 1085697639 MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [10000.00] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T12:32:48.519810] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Nộp] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-970452999999999-202506091232481d6a1173] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T12:32:48.109591] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [DEPOSIT] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T12:32:59.786597] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(56)#3fe3fd28-b6bd-47e9-bf88-3dde7c475e04 MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2e98b4eb MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [60b48ba6-46c0-4498-bcc9-dc1811609ea2] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(56)): 60b48ba6-46c0-4498-bcc9-dc1811609ea2 MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(56)#60b48ba6-46c0-4498-bcc9-dc1811609ea2] : 1004565851 MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [100000.00] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T11:08:38.645157] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Nộp xiền] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-970452999999999-2025060911083877769034] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T11:08:38.578529] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [DEPOSIT] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T11:08:47.733949] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(56)#60b48ba6-46c0-4498-bcc9-dc1811609ea2 MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2e98b4eb MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [f8e292ca-c595-4f82-9bcf-443fcc8987a8] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(56)): f8e292ca-c595-4f82-9bcf-443fcc8987a8 MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(56)#f8e292ca-c595-4f82-9bcf-443fcc8987a8] : 693286293 MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [50000.00] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T11:07:06.798744] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Nộp tiền
] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-970452999999999-2025060911070608f7d648] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T11:07:06.750533] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [DEPOSIT] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T11:07:19.906258] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(56)#f8e292ca-c595-4f82-9bcf-443fcc8987a8 MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2e98b4eb MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [cda6ebd8-49f6-43a5-bd96-0776189d31df] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(56)): cda6ebd8-49f6-43a5-bd96-0776189d31df MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(56)#cda6ebd8-49f6-43a5-bd96-0776189d31df] : 1980100798 MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [23000.00] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T11:02:58.124193] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Nộp tiền] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-970452999999999-20250609110258bd83f9b3] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T11:02:58.049014] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [DEPOSIT] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T11:03:07.756817] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(56)#cda6ebd8-49f6-43a5-bd96-0776189d31df MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2e98b4eb MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [7bc62a37-4e1d-4d5a-a411-7ab3b54c26ba] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(56)): 7bc62a37-4e1d-4d5a-a411-7ab3b54c26ba MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(56)#7bc62a37-4e1d-4d5a-a411-7ab3b54c26ba] : 87256399 MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [30000.00] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T11:01:03.744642] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Đại Lê chuyển tiền] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-20250609110103251c5a17] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T11:01:03.632657] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [87654321] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T11:01:19.381894] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(56)#7bc62a37-4e1d-4d5a-a411-7ab3b54c26ba MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2e98b4eb MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(57))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@391708ad MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(57).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4a4ea090 MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(57).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@b51ed71 MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(57).status)  MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@25c7ba6b MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(57).currency)  MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3d902da0 MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(57).bankType)  MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@29bedf1b MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(57).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5fb77923 MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(57).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-BasicResult
 MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(57)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-10 18:18:52 [http-nio-8088-exec-10] DEBUG org.hibernate.SQL - select count(t1_0.id) from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) and t1_0.status=? and t1_0.currency=? and t1_0.bank_type=? and t1_0.timestamp between ? and ? MDC:[traceId=, spanId=]
2025-06-10 18:18:53 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@321750db MDC:[traceId=, spanId=]
2025-06-10 18:18:53 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [12] MDC:[traceId=, spanId=]
2025-06-10 18:18:53 [http-nio-8088-exec-10] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 18:18:54 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 18:18:54 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 18:18:54 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 18:18:54 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 18:18:54 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@17329c MDC:[traceId=, spanId=]
2025-06-10 18:18:54 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 18:18:54 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7ea571b MDC:[traceId=, spanId=]
2025-06-10 18:18:54 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:18:54 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 18:18:54 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 18:18:54 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 18:18:54 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@981822553 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 18:18:54 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 18:18:54 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 18:19:02 [http-nio-8088-exec-6] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 18:19:02 [http-nio-8088-exec-6] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 18:19:02 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 18:19:02 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(58))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 18:19:02 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@544f14 MDC:[traceId=, spanId=]
2025-06-10 18:19:02 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(58).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:19:02 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6ff6c4a3 MDC:[traceId=, spanId=]
2025-06-10 18:19:02 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(58).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:19:02 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@745f620 MDC:[traceId=, spanId=]
2025-06-10 18:19:02 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(58).status)  MDC:[traceId=, spanId=]
2025-06-10 18:19:02 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@45bd66f1 MDC:[traceId=, spanId=]
2025-06-10 18:19:02 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(58).currency)  MDC:[traceId=, spanId=]
2025-06-10 18:19:02 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@11dd0ae3 MDC:[traceId=, spanId=]
2025-06-10 18:19:02 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(58).bankType)  MDC:[traceId=, spanId=]
2025-06-10 18:19:02 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@18b9b736 MDC:[traceId=, spanId=]
2025-06-10 18:19:02 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(58).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:19:02 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@500277cc MDC:[traceId=, spanId=]
2025-06-10 18:19:02 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(58).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:19:02 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(58)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(58).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(58).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(58).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(58).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(58).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(58).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(58).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(58).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(58).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(58).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(58).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(58).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(58).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(58).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(58).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(58).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(58).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 18:19:02 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(58)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 18:19:02 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 18:19:02 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(58) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(58))@174694330 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 18:19:02 [http-nio-8088-exec-6] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) and t1_0.status=? and t1_0.currency=? and t1_0.bank_type=? and t1_0.timestamp between ? and ? order by t1_0.timestamp desc limit ?,? MDC:[traceId=, spanId=]
2025-06-10 18:19:02 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [6c52dec1-7727-4105-9521-7b140e4b9fe6] MDC:[traceId=, spanId=]
2025-06-10 18:19:02 [http-nio-8088-exec-6] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(58)): 6c52dec1-7727-4105-9521-7b140e4b9fe6 MDC:[traceId=, spanId=]
2025-06-10 18:19:02 [http-nio-8088-exec-6] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(58)#6c52dec1-7727-4105-9521-7b140e4b9fe6] : 695166321 MDC:[traceId=, spanId=]
2025-06-10 18:19:02 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [21468.00] MDC:[traceId=, spanId=]
2025-06-10 18:19:02 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 18:19:02 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T15:51:54.770845] MDC:[traceId=, spanId=]
2025-06-10 18:19:02 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 18:19:02 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 18:19:02 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [LE VAN DAI RUT TIEN] MDC:[traceId=, spanId=]
2025-06-10 18:19:02 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 18:19:02 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 18:19:02 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-10 18:19:02 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 18:19:02 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-20250609155154feba46a7] MDC:[traceId=, spanId=]
2025-06-10 18:19:02 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-10 18:19:02 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T15:51:54.505223] MDC:[traceId=, spanId=]
2025-06-10 18:19:02 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-10 18:19:02 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [WITHDRAW] MDC:[traceId=, spanId=]
2025-06-10 18:19:02 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T15:52:11.861255] MDC:[traceId=, spanId=]
2025-06-10 18:19:02 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 18:19:02 [http-nio-8088-exec-6] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(58)#6c52dec1-7727-4105-9521-7b140e4b9fe6 MDC:[traceId=, spanId=]
2025-06-10 18:19:02 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6f3dbba9 MDC:[traceId=, spanId=]
2025-06-10 18:19:02 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [b88a97aa-b4ea-4c5b-901e-9315c412c554] MDC:[traceId=, spanId=]
2025-06-10 18:19:02 [http-nio-8088-exec-6] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(58)): b88a97aa-b4ea-4c5b-901e-9315c412c554 MDC:[traceId=, spanId=]
2025-06-10 18:19:02 [http-nio-8088-exec-6] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(58)#b88a97aa-b4ea-4c5b-901e-9315c412c554] : 407657955 MDC:[traceId=, spanId=]
2025-06-10 18:19:02 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [23000.00] MDC:[traceId=, spanId=]
2025-06-10 18:19:02 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 18:19:02 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T13:55:06.439062] MDC:[traceId=, spanId=]
2025-06-10 18:19:02 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 18:19:02 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 18:19:02 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Chuyển tiền] MDC:[traceId=, spanId=]
2025-06-10 18:19:02 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 18:19:02 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 18:19:02 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-10 18:19:02 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 18:19:02 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-202506091355063d72d7f8] MDC:[traceId=, spanId=]
2025-06-10 18:19:02 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-10 18:19:02 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T13:55:06.236412] MDC:[traceId=, spanId=]
2025-06-10 18:19:02 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [87654321] MDC:[traceId=, spanId=]
2025-06-10 18:19:02 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 18:19:02 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T13:55:15.761254] MDC:[traceId=, spanId=]
2025-06-10 18:19:02 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 18:19:02 [http-nio-8088-exec-6] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(58)#b88a97aa-b4ea-4c5b-901e-9315c412c554 MDC:[traceId=, spanId=]
2025-06-10 18:19:02 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6f3dbba9 MDC:[traceId=, spanId=]
2025-06-10 18:19:02 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 18:19:02 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(59))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 18:19:02 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@325575aa MDC:[traceId=, spanId=]
2025-06-10 18:19:02 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(59).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:19:02 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3d48687e MDC:[traceId=, spanId=]
2025-06-10 18:19:02 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(59).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:19:02 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1b0c36ed MDC:[traceId=, spanId=]
2025-06-10 18:19:02 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(59).status)  MDC:[traceId=, spanId=]
2025-06-10 18:19:02 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3e9dec02 MDC:[traceId=, spanId=]
2025-06-10 18:19:02 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(59).currency)  MDC:[traceId=, spanId=]
2025-06-10 18:19:02 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2985a326 MDC:[traceId=, spanId=]
2025-06-10 18:19:02 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(59).bankType)  MDC:[traceId=, spanId=]
2025-06-10 18:19:02 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7b7dca64 MDC:[traceId=, spanId=]
2025-06-10 18:19:02 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(59).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:19:02 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@eb74ca2 MDC:[traceId=, spanId=]
2025-06-10 18:19:02 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(59).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:19:02 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-BasicResult
 MDC:[traceId=, spanId=]
2025-06-10 18:19:02 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(59)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 18:19:02 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 18:19:02 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-10 18:19:02 [http-nio-8088-exec-6] DEBUG org.hibernate.SQL - select count(t1_0.id) from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) and t1_0.status=? and t1_0.currency=? and t1_0.bank_type=? and t1_0.timestamp between ? and ? MDC:[traceId=, spanId=]
2025-06-10 18:19:02 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@530ab660 MDC:[traceId=, spanId=]
2025-06-10 18:19:02 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [12] MDC:[traceId=, spanId=]
2025-06-10 18:19:02 [http-nio-8088-exec-6] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 18:19:54 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 18:19:54 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 18:19:54 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 18:19:54 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 18:19:54 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6abcceb8 MDC:[traceId=, spanId=]
2025-06-10 18:19:54 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 18:19:54 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@45787dbe MDC:[traceId=, spanId=]
2025-06-10 18:19:54 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:19:54 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 18:19:54 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 18:19:54 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 18:19:54 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@2092607555 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 18:19:54 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 18:19:54 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 18:20:00 [http-nio-8088-exec-7] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 18:20:00 [http-nio-8088-exec-7] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 18:20:00 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 18:20:00 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(60))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 18:20:00 [http-nio-8088-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@40715b8a MDC:[traceId=, spanId=]
2025-06-10 18:20:00 [http-nio-8088-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(60).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:20:00 [http-nio-8088-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@478aa0b9 MDC:[traceId=, spanId=]
2025-06-10 18:20:00 [http-nio-8088-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(60).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:20:00 [http-nio-8088-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1373fc66 MDC:[traceId=, spanId=]
2025-06-10 18:20:00 [http-nio-8088-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for generalized SqmExpression : org.hibernate.query.sqm.function.SelfRenderingSqmFunction@3148b20e MDC:[traceId=, spanId=]
2025-06-10 18:20:00 [http-nio-8088-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@e597ee9 MDC:[traceId=, spanId=]
2025-06-10 18:20:00 [http-nio-8088-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for generalized SqmExpression : org.hibernate.query.sqm.function.SelfRenderingSqmFunction@5581b49c MDC:[traceId=, spanId=]
2025-06-10 18:20:00 [http-nio-8088-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@79a4de93 MDC:[traceId=, spanId=]
2025-06-10 18:20:00 [http-nio-8088-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(60).type)  MDC:[traceId=, spanId=]
2025-06-10 18:20:00 [http-nio-8088-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4e6ca73 MDC:[traceId=, spanId=]
2025-06-10 18:20:00 [http-nio-8088-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(60).status)  MDC:[traceId=, spanId=]
2025-06-10 18:20:00 [http-nio-8088-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6a846a69 MDC:[traceId=, spanId=]
2025-06-10 18:20:00 [http-nio-8088-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(60).currency)  MDC:[traceId=, spanId=]
2025-06-10 18:20:00 [http-nio-8088-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7371e319 MDC:[traceId=, spanId=]
2025-06-10 18:20:00 [http-nio-8088-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(60).bankType)  MDC:[traceId=, spanId=]
2025-06-10 18:20:00 [http-nio-8088-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@54da520b MDC:[traceId=, spanId=]
2025-06-10 18:20:00 [http-nio-8088-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(60).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:20:00 [http-nio-8088-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5928a42f MDC:[traceId=, spanId=]
2025-06-10 18:20:00 [http-nio-8088-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(60).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:20:00 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(60)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(60).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(60).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(60).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(60).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(60).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(60).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(60).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(60).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(60).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(60).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(60).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(60).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(60).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(60).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(60).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(60).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(60).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 18:20:00 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(60)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 18:20:00 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 18:20:00 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(60) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(60))@1477582109 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 18:20:00 [http-nio-8088-exec-7] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) and (lower(t1_0.description) like replace(?,'\\','\\\\') or lower(cast(t1_0.type as char)) like replace(?,'\\','\\\\')) and t1_0.type=? and t1_0.status=? and t1_0.currency=? and t1_0.bank_type=? and t1_0.timestamp between ? and ? order by t1_0.timestamp desc limit ?,? MDC:[traceId=, spanId=]
2025-06-10 18:20:00 [http-nio-8088-exec-7] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 18:20:08 [http-nio-8088-exec-4] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 18:20:08 [http-nio-8088-exec-4] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 18:20:08 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 18:20:08 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(61))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 18:20:08 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@40763ede MDC:[traceId=, spanId=]
2025-06-10 18:20:08 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(61).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:20:08 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@52636d31 MDC:[traceId=, spanId=]
2025-06-10 18:20:08 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(61).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:20:08 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@47093ae9 MDC:[traceId=, spanId=]
2025-06-10 18:20:08 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(61).type)  MDC:[traceId=, spanId=]
2025-06-10 18:20:08 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4e9d4be7 MDC:[traceId=, spanId=]
2025-06-10 18:20:08 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(61).status)  MDC:[traceId=, spanId=]
2025-06-10 18:20:08 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3551523b MDC:[traceId=, spanId=]
2025-06-10 18:20:08 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(61).currency)  MDC:[traceId=, spanId=]
2025-06-10 18:20:08 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@63bd6152 MDC:[traceId=, spanId=]
2025-06-10 18:20:08 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(61).bankType)  MDC:[traceId=, spanId=]
2025-06-10 18:20:08 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@68b91bc5 MDC:[traceId=, spanId=]
2025-06-10 18:20:08 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(61).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:20:08 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7985645b MDC:[traceId=, spanId=]
2025-06-10 18:20:08 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(61).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:20:08 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(61)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(61).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(61).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(61).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(61).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(61).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(61).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(61).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(61).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(61).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(61).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(61).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(61).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(61).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(61).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(61).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(61).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(61).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 18:20:08 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(61)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 18:20:08 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 18:20:08 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(61) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(61))@1900199547 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 18:20:08 [http-nio-8088-exec-4] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) and t1_0.type=? and t1_0.status=? and t1_0.currency=? and t1_0.bank_type=? and t1_0.timestamp between ? and ? order by t1_0.timestamp desc limit ?,? MDC:[traceId=, spanId=]
2025-06-10 18:20:08 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [b88a97aa-b4ea-4c5b-901e-9315c412c554] MDC:[traceId=, spanId=]
2025-06-10 18:20:08 [http-nio-8088-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(61)): b88a97aa-b4ea-4c5b-901e-9315c412c554 MDC:[traceId=, spanId=]
2025-06-10 18:20:08 [http-nio-8088-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(61)#b88a97aa-b4ea-4c5b-901e-9315c412c554] : 762094780 MDC:[traceId=, spanId=]
2025-06-10 18:20:08 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [23000.00] MDC:[traceId=, spanId=]
2025-06-10 18:20:08 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 18:20:08 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T13:55:06.439062] MDC:[traceId=, spanId=]
2025-06-10 18:20:08 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 18:20:08 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 18:20:08 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Chuyển tiền] MDC:[traceId=, spanId=]
2025-06-10 18:20:08 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 18:20:08 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 18:20:08 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-10 18:20:08 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 18:20:08 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-202506091355063d72d7f8] MDC:[traceId=, spanId=]
2025-06-10 18:20:08 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-10 18:20:08 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T13:55:06.236412] MDC:[traceId=, spanId=]
2025-06-10 18:20:08 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [87654321] MDC:[traceId=, spanId=]
2025-06-10 18:20:08 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 18:20:08 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T13:55:15.761254] MDC:[traceId=, spanId=]
2025-06-10 18:20:08 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 18:20:08 [http-nio-8088-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(61)#b88a97aa-b4ea-4c5b-901e-9315c412c554 MDC:[traceId=, spanId=]
2025-06-10 18:20:08 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@49b9660c MDC:[traceId=, spanId=]
2025-06-10 18:20:08 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [69eb51a4-db2f-49ab-acb9-073a0060ce38] MDC:[traceId=, spanId=]
2025-06-10 18:20:08 [http-nio-8088-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(61)): 69eb51a4-db2f-49ab-acb9-073a0060ce38 MDC:[traceId=, spanId=]
2025-06-10 18:20:08 [http-nio-8088-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(61)#69eb51a4-db2f-49ab-acb9-073a0060ce38] : 1082337751 MDC:[traceId=, spanId=]
2025-06-10 18:20:08 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [10000.00] MDC:[traceId=, spanId=]
2025-06-10 18:20:08 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 18:20:08 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T13:17:40.592964] MDC:[traceId=, spanId=]
2025-06-10 18:20:08 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 18:20:08 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 18:20:08 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Chuyển tiền] MDC:[traceId=, spanId=]
2025-06-10 18:20:08 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 18:20:08 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 18:20:08 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-10 18:20:08 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 18:20:08 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-202506091317401be1dea3] MDC:[traceId=, spanId=]
2025-06-10 18:20:08 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-10 18:20:08 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T13:17:40.336221] MDC:[traceId=, spanId=]
2025-06-10 18:20:08 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [87654321] MDC:[traceId=, spanId=]
2025-06-10 18:20:08 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 18:20:08 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T13:17:50.910739] MDC:[traceId=, spanId=]
2025-06-10 18:20:08 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 18:20:08 [http-nio-8088-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(61)#69eb51a4-db2f-49ab-acb9-073a0060ce38 MDC:[traceId=, spanId=]
2025-06-10 18:20:08 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@49b9660c MDC:[traceId=, spanId=]
2025-06-10 18:20:08 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 18:20:08 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(62))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 18:20:08 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3a31ecf2 MDC:[traceId=, spanId=]
2025-06-10 18:20:08 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(62).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:20:08 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1b08113a MDC:[traceId=, spanId=]
2025-06-10 18:20:08 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(62).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:20:08 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@50334080 MDC:[traceId=, spanId=]
2025-06-10 18:20:08 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(62).type)  MDC:[traceId=, spanId=]
2025-06-10 18:20:08 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@43cf8e37 MDC:[traceId=, spanId=]
2025-06-10 18:20:08 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(62).status)  MDC:[traceId=, spanId=]
2025-06-10 18:20:08 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6f3146d5 MDC:[traceId=, spanId=]
2025-06-10 18:20:08 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(62).currency)  MDC:[traceId=, spanId=]
2025-06-10 18:20:08 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@667d1e7e MDC:[traceId=, spanId=]
2025-06-10 18:20:08 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(62).bankType)  MDC:[traceId=, spanId=]
2025-06-10 18:20:08 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@473acbb8 MDC:[traceId=, spanId=]
2025-06-10 18:20:08 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(62).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:20:08 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7411b750 MDC:[traceId=, spanId=]
2025-06-10 18:20:08 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(62).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:20:08 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-BasicResult
 MDC:[traceId=, spanId=]
2025-06-10 18:20:08 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(62)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 18:20:08 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 18:20:08 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-10 18:20:08 [http-nio-8088-exec-4] DEBUG org.hibernate.SQL - select count(t1_0.id) from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) and t1_0.type=? and t1_0.status=? and t1_0.currency=? and t1_0.bank_type=? and t1_0.timestamp between ? and ? MDC:[traceId=, spanId=]
2025-06-10 18:20:08 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@239dfb71 MDC:[traceId=, spanId=]
2025-06-10 18:20:08 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [4] MDC:[traceId=, spanId=]
2025-06-10 18:20:08 [http-nio-8088-exec-4] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(63))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@631f4bc7 MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(63).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@753817ee MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(63).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3f958ae1 MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for generalized SqmExpression : org.hibernate.query.sqm.function.SelfRenderingSqmFunction@4f0355b8 MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6966a976 MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for generalized SqmExpression : org.hibernate.query.sqm.function.SelfRenderingSqmFunction@5730dcb9 MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@315515a9 MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(63).type)  MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@139d131e MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(63).status)  MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@a74bfe0 MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(63).currency)  MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5fbc0a99 MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(63).bankType)  MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4bf5d7e5 MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(63).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@471476bc MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(63).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(63)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(63).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(63).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(63).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(63).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(63).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(63).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(63).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(63).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(63).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(63).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(63).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(63).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(63).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(63).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(63).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(63).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(63).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(63)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(63) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(63))@1371400625 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) and (lower(t1_0.description) like replace(?,'\\','\\\\') or lower(cast(t1_0.type as char)) like replace(?,'\\','\\\\')) and t1_0.type=? and t1_0.status=? and t1_0.currency=? and t1_0.bank_type=? and t1_0.timestamp between ? and ? order by t1_0.timestamp desc limit ?,? MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [b88a97aa-b4ea-4c5b-901e-9315c412c554] MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(63)): b88a97aa-b4ea-4c5b-901e-9315c412c554 MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(63)#b88a97aa-b4ea-4c5b-901e-9315c412c554] : 312288518 MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [23000.00] MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T13:55:06.439062] MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Chuyển tiền] MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-202506091355063d72d7f8] MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T13:55:06.236412] MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [87654321] MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T13:55:15.761254] MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(63)#b88a97aa-b4ea-4c5b-901e-9315c412c554 MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2cd3a685 MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [69eb51a4-db2f-49ab-acb9-073a0060ce38] MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(63)): 69eb51a4-db2f-49ab-acb9-073a0060ce38 MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(63)#69eb51a4-db2f-49ab-acb9-073a0060ce38] : 1650283806 MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [10000.00] MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T13:17:40.592964] MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Chuyển tiền] MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-202506091317401be1dea3] MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T13:17:40.336221] MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [87654321] MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T13:17:50.910739] MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(63)#69eb51a4-db2f-49ab-acb9-073a0060ce38 MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2cd3a685 MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(64))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@461d8825 MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(64).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4a1a411e MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(64).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1696ec21 MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for generalized SqmExpression : org.hibernate.query.sqm.function.SelfRenderingSqmFunction@5eb1fa37 MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@28b6f710 MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for generalized SqmExpression : org.hibernate.query.sqm.function.SelfRenderingSqmFunction@2913b0d3 MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3505ed26 MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(64).type)  MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@78ef35b4 MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(64).status)  MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@692291f5 MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(64).currency)  MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7d8b0b65 MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(64).bankType)  MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@52aeac1d MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(64).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4db7b560 MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(64).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-BasicResult
 MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(64)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG org.hibernate.SQL - select count(t1_0.id) from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) and (lower(t1_0.description) like replace(?,'\\','\\\\') or lower(cast(t1_0.type as char)) like replace(?,'\\','\\\\')) and t1_0.type=? and t1_0.status=? and t1_0.currency=? and t1_0.bank_type=? and t1_0.timestamp between ? and ? MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@55e560be MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [3] MDC:[traceId=, spanId=]
2025-06-10 18:20:34 [http-nio-8088-exec-9] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 18:20:54 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 18:20:54 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 18:20:54 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 18:20:54 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 18:20:54 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2344f9af MDC:[traceId=, spanId=]
2025-06-10 18:20:54 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 18:20:54 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@44682930 MDC:[traceId=, spanId=]
2025-06-10 18:20:54 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 18:20:54 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 18:20:54 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 18:20:54 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 18:20:54 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@72945350 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 18:20:54 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 18:20:54 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 18:21:18 [SpringContextShutdownHook] DEBUG o.h.internal.SessionFactoryImpl - HHH000031: Closing MDC:[traceId=, spanId=]
2025-06-10 18:21:18 [SpringContextShutdownHook] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@e365f08] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@3586b063] MDC:[traceId=, spanId=]
2025-06-10 18:21:18 [SpringContextShutdownHook] DEBUG o.h.s.i.AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries MDC:[traceId=, spanId=]
2025-06-10 18:21:18 [SpringContextShutdownHook] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries MDC:[traceId=, spanId=]
2025-06-10 20:45:12 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final MDC:[traceId=, spanId=]
2025-06-10 20:45:12 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-06-10 20:45:12 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-06-10 20:45:12 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-06-10 20:45:12 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-06-10 20:45:12 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-06-10 20:45:12 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-06-10 20:45:12 [background-preinit] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-06-10 20:45:12 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-06-10 20:45:12 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-06-10 20:45:12 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-06-10 20:45:12 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-06-10 20:45:12 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-06-10 20:45:12 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.h.jpa.internal.util.LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@245ba335
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/LT_Web/SpringBoot/java-banking-phase2/backend/transaction-service/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.example.transaction_service.entity.Transaction]
	Mapping files names []
	Properties [] MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator]. MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator]. MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG org.hibernate.cfg.Environment - HHH000206: 'hibernate.properties' not found MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator] MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator] MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator] MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator] MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned] MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator] MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator] MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator] MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator] MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator] MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.h.c.i.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@3686e66 MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@3686e66 MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@3686e66 MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@3bdf643 MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@3bdf643 MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@58e9b745 MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@58e9b745 MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@40c34d41 MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@40c34d41 MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@981061 MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@981061 MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@981061 MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@6cfbe1df MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@6cfbe1df MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@6cfbe1df MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@793d309a MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@793d309a MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@234ed3b9 MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@6315c4a9 MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@6315c4a9 MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@50d3340d MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@40fa776d MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@15fcb7d0 MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@15fcb7d0 MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@15fcb7d0 MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@5881194a MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@5881194a MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@5881194a MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@11bb2d0b MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@11bb2d0b MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@11bb2d0b MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@269614e MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@269614e MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@269614e MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@725b14e4 MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@725b14e4 MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@725b14e4 MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@22c018ac MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@22c018ac MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@6a5baa8a MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@6a5baa8a MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@2371c59e MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@2371c59e MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@2371c59e MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@9271920 MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@2b8065d0 MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@2b8065d0 MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@1cb885d0 MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@31c8feec MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@31c8feec MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@31c8feec MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@171fec MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@281144db MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@70dfd20c MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@6167d65 MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@6167d65 MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@3ec6fa34 MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@3ec6fa34 MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@1c5346ab MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@1292b89f MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@275a02fd MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@2ec45b78 MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@28242615 MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@2f7525ce MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@584f9737 MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@584f9737 MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@545c08dd MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@545c08dd MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@5dc188cd MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@5dc188cd MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@5b9c8dee MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@5b9c8dee MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@7fce5f85 MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@7fce5f85 MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4be0ba41 MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1a36c410 MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@257ad945 MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@257ad945 MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@28c59818 MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@66390df3 MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4a035360 MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@39401b94 MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@39401b94 MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3dc151fc MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@13399522 MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@43f14c76 MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@43f14c76 MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@7ad47327 MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@7ad47327 MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@4dad8330 MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@4dad8330 MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@4dad8330 MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@12629f22 MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@12629f22 MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@12629f22 MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@5bb9f3e4 MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@22dfeff MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@23b85989 MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@23b85989 MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@25255953 MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@25255953 MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@25255953 MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@3197b8c0 MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@5ca0620b MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@3db51c07 MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@3db51c07 MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@32d52523 MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@32d52523 MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@32d52523 MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@3e08ca01 MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@3e08ca01 MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@616757f1 MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@616757f1 MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@74272afe MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@74272afe MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@6f40e564 MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@6f40e564 MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@17e0624f MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@17e0624f MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@4c63679d MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@15ec435 MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@742c9ea7 MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@742c9ea7 MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@1d390ddb MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@69dac282 MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@5d11c735 MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@3e38203a MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@6bbab5f3 MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@544ba4d4 MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@7b0e907 MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@78f6303b MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@465d17fb MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@351307ef] into BootstrapContext; was [null] MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@351307ef) [was null] MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@704da186] into BootstrapContext; was [null] MDC:[traceId=, spanId=]
2025-06-10 20:45:23 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@133017ca] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@419267b9] MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@351307ef] MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@351307ef] MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Database ->
	   name : MySQL
	version : 8.0.32
	  major : 8
	  minor : 0 MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Driver ->
	   name : MySQL Connector/J
	version : mysql-connector-j-8.3.0 (Revision: 805f872a57875f311cb82487efcfb070411a3fa0)
	  major : 8
	  minor : 3 MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - JDBC version : 4.2 MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default) MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG org.hibernate.orm.dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQL8Dialect, version: 8.0 MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@b6f3ab) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@52ca931b) MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4a2e0785) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1eff25e0) MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2963a63f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2fb7aa43) MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@159f921f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@72a86569) MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@464e775d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@54392865) MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3ddf5797) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@cedfe68) MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@392c8437) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@244be977) MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@63ef7186) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@12dd2d) MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5dc2fc24) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2639a6ba) MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor) MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor) MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor) MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT)) MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT)) MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@69f34329 MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@1d390ddb` MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7b7911b9] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3475f0b4] MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.boot.model.relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}] MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Transaction MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity com.example.transaction_service.entity.Transaction on table tbl_transaction MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE') MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.example.transaction_service.entity.Transaction] is safe MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property id with lazy=false MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:id] MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for id MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.id MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property id MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, assigned, , ...) MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property amount with lazy=false MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:amount] MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for amount MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.amount MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property amount MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property bankType with lazy=false MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:bankType] MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for bankType MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.bank_type MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property bankType MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:createdAt] MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for createdAt MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.created_at MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property createdAt MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property createdBy with lazy=false MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:createdBy] MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for createdBy MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.created_by MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property createdBy MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property currency with lazy=false MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:currency] MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for currency MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.currency MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property currency MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property description with lazy=false MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:description] MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for description MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.description MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property description MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property destinationBankCode with lazy=false MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:destinationBankCode] MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for destinationBankCode MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.destination_bank_code MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property destinationBankCode MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property destinationBankName with lazy=false MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:destinationBankName] MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for destinationBankName MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.destination_bank_name MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property destinationBankName MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property failedReason with lazy=false MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:failedReason] MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for failedReason MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.failed_reason MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property failedReason MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property fromAccountNumber with lazy=false MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:fromAccountNumber] MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for fromAccountNumber MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.from_account_number MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property fromAccountNumber MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property referenceCode with lazy=false MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:referenceCode] MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for referenceCode MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.reference_code MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property referenceCode MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property status with lazy=false MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:status] MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for status MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.status MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property status MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property timestamp with lazy=false MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:timestamp] MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for timestamp MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.timestamp MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property timestamp MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property toAccountNumber with lazy=false MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:toAccountNumber] MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for toAccountNumber MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.to_account_number MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property toAccountNumber MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property type with lazy=false MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:type] MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for type MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.type MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property type MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:updatedAt] MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for updatedAt MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.updated_at MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property updatedAt MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property updatedBy with lazy=false MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:updatedBy] MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for updatedBy MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.updated_by MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property updatedBy MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: com.example.transaction_service.entity MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.j.e.i.CallbackDefinitionResolverLegacyImpl - Adding touchForUpdate as PreUpdate callback for entity com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.j.e.i.CallbackDefinitionResolverLegacyImpl - Adding prePersist as PrePersist callback for entity com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.j.e.i.CallbackDefinitionResolverLegacyImpl - Adding touchForCreate as PrePersist callback for entity com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bankType MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for createdAt MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for createdBy MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for currency MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for description MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for destinationBankCode MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for destinationBankName MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for failedReason MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for fromAccountNumber MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for referenceCode MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for timestamp MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for toAccountNumber MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for type MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for updatedAt MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for updatedBy MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [tbl_transaction] MDC:[traceId=, spanId=]
2025-06-10 20:45:24 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Building session factory MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Instantiating SessionFactory with settings: {jdk.tls.rejectClientInitiatedRenegotiation=true, java.specification.version=17, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@34bd7854, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=D:\LT_Web\SpringBoot\java-banking-phase2\backend\transaction-service\target\classes;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-actuator\3.3.11\spring-boot-starter-actuator-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter\3.3.11\spring-boot-starter-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.3.11\spring-boot-starter-logging-3.3.11.jar;C:\Users\A715-42G\.m2\repository\ch\qos\logback\logback-classic\1.5.18\logback-classic-1.5.18.jar;C:\Users\A715-42G\.m2\repository\ch\qos\logback\logback-core\1.5.18\logback-core-1.5.18.jar;C:\Users\A715-42G\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.23.1\log4j-to-slf4j-2.23.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\logging\log4j\log4j-api\2.23.1\log4j-api-2.23.1.jar;C:\Users\A715-42G\.m2\repository\org\slf4j\jul-to-slf4j\2.0.17\jul-to-slf4j-2.0.17.jar;C:\Users\A715-42G\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\A715-42G\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-actuator-autoconfigure\3.3.11\spring-boot-actuator-autoconfigure-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-actuator\3.3.11\spring-boot-actuator-3.3.11.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-observation\1.13.13\micrometer-observation-1.13.13.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-commons\1.13.13\micrometer-commons-1.13.13.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-jakarta9\1.13.13\micrometer-jakarta9-1.13.13.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-core\1.13.13\micrometer-core-1.13.13.jar;C:\Users\A715-42G\.m2\repository\org\hdrhistogram\HdrHistogram\2.2.2\HdrHistogram-2.2.2.jar;C:\Users\A715-42G\.m2\repository\org\latencyutils\LatencyUtils\2.0.3\LatencyUtils-2.0.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.3.11\spring-boot-starter-data-jpa-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.3.11\spring-boot-starter-aop-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\aspectj\aspectjweaver\1.9.24\aspectjweaver-1.9.24.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.3.11\spring-boot-starter-jdbc-3.3.11.jar;C:\Users\A715-42G\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-jdbc\6.1.19\spring-jdbc-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\orm\hibernate-core\6.5.3.Final\hibernate-core-6.5.3.Final.jar;C:\Users\A715-42G\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\A715-42G\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\A715-42G\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\A715-42G\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\A715-42G\.m2\repository\net\bytebuddy\byte-buddy\1.14.19\byte-buddy-1.14.19.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\A715-42G\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\A715-42G\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-jpa\3.3.11\spring-data-jpa-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-commons\3.3.11\spring-data-commons-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-orm\6.1.19\spring-orm-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-context\6.1.19\spring-context-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-tx\6.1.19\spring-tx-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-beans\6.1.19\spring-beans-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-aspects\6.1.19\spring-aspects-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.3.11\spring-boot-starter-web-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.3.11\spring-boot-starter-json-3.3.11.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.17.3\jackson-module-parameter-names-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.3.11\spring-boot-starter-tomcat-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.40\tomcat-embed-core-10.1.40.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.40\tomcat-embed-websocket-10.1.40.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-web\6.1.19\spring-web-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-webmvc\6.1.19\spring-webmvc-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-expression\6.1.19\spring-expression-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-devtools\3.3.11\spring-boot-devtools-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot\3.3.11\spring-boot-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.3.11\spring-boot-autoconfigure-3.3.11.jar;C:\Users\A715-42G\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\A715-42G\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-core\6.1.19\spring-core-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-jcl\6.1.19\spring-jcl-6.1.19.jar;C:\Users\A715-42G\.m2\repository\com\mysql\mysql-connector-j\8.3.0\mysql-connector-j-8.3.0.jar;C:\Users\A715-42G\.m2\repository\org\projectlombok\lombok\1.18.38\lombok-1.18.38.jar;C:\Users\A715-42G\.m2\repository\org\mapstruct\mapstruct\1.5.5.Final\mapstruct-1.5.5.Final.jar;C:\Users\A715-42G\.m2\repository\org\mapstruct\mapstruct-processor\1.5.5.Final\mapstruct-processor-1.5.5.Final.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-validation\3.3.11\spring-boot-starter-validation-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.40\tomcat-embed-el-10.1.40.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\validator\hibernate-validator\8.0.2.Final\hibernate-validator-8.0.2.Final.jar;C:\Users\A715-42G\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-ui\2.0.2\springdoc-openapi-starter-webmvc-ui-2.0.2.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-api\2.0.2\springdoc-openapi-starter-webmvc-api-2.0.2.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-common\2.0.2\springdoc-openapi-starter-common-2.0.2.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-core-jakarta\2.2.7\swagger-core-jakarta-2.2.7.jar;C:\Users\A715-42G\.m2\repository\org\apache\commons\commons-lang3\3.14.0\commons-lang3-3.14.0.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-annotations-jakarta\2.2.7\swagger-annotations-jakarta-2.2.7.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-models-jakarta\2.2.7\swagger-models-jakarta-2.2.7.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-yaml\2.17.3\jackson-dataformat-yaml-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\webjars\swagger-ui\4.15.5\swagger-ui-4.15.5.jar;C:\Users\A715-42G\.m2\repository\org\webjars\webjars-locator-core\0.58\webjars-locator-core-0.58.jar;C:\Users\A715-42G\.m2\repository\io\github\classgraph\classgraph\4.8.149\classgraph-4.8.149.jar;D:\LT_Web\SpringBoot\java-banking-phase2\backend\common-service\target\classes;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.17.3\jackson-databind-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\apache\dubbo\dubbo-spring-boot-starter\3.3.2\dubbo-spring-boot-starter-3.3.2.jar;C:\Users\A715-42G\.m2\repository\org\apache\dubbo\dubbo-spring-boot-autoconfigure\3.3.2\dubbo-spring-boot-autoconfigure-3.3.2.jar;C:\Users\A715-42G\.m2\repository\org\apache\dubbo\dubbo-spring-boot-autoconfigure-compatible\3.3.2\dubbo-spring-boot-autoconfigure-compatible-3.3.2.jar;C:\Users\A715-42G\.m2\repository\org\apache\dubbo\dubbo\3.3.2\dubbo-3.3.2.jar;C:\Users\A715-42G\.m2\repository\org\javassist\javassist\3.30.2-GA\javassist-3.30.2-GA.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-all\4.1.119.Final\netty-all-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-dns\4.1.119.Final\netty-codec-dns-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-haproxy\4.1.119.Final\netty-codec-haproxy-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-http\4.1.119.Final\netty-codec-http-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-http2\4.1.119.Final\netty-codec-http2-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-memcache\4.1.119.Final\netty-codec-memcache-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-mqtt\4.1.119.Final\netty-codec-mqtt-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-redis\4.1.119.Final\netty-codec-redis-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-smtp\4.1.119.Final\netty-codec-smtp-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-socks\4.1.119.Final\netty-codec-socks-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-stomp\4.1.119.Final\netty-codec-stomp-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-xml\4.1.119.Final\netty-codec-xml-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-handler-proxy\4.1.119.Final\netty-handler-proxy-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-handler-ssl-ocsp\4.1.119.Final\netty-handler-ssl-ocsp-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-resolver-dns\4.1.119.Final\netty-resolver-dns-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-rxtx\4.1.119.Final\netty-transport-rxtx-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-sctp\4.1.119.Final\netty-transport-sctp-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-udt\4.1.119.Final\netty-transport-udt-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-classes-kqueue\4.1.119.Final\netty-transport-classes-kqueue-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-resolver-dns-classes-macos\4.1.119.Final\netty-resolver-dns-classes-macos-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final-linux-x86_64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final-linux-aarch_64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final-linux-riscv64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-kqueue\4.1.119.Final\netty-transport-native-kqueue-4.1.119.Final-osx-x86_64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-kqueue\4.1.119.Final\netty-transport-native-kqueue-4.1.119.Final-osx-aarch_64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-resolver-dns-native-macos\4.1.119.Final\netty-resolver-dns-native-macos-4.1.119.Final-osx-x86_64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-resolver-dns-native-macos\4.1.119.Final\netty-resolver-dns-native-macos-4.1.119.Final-osx-aarch_64.jar;C:\Users\A715-42G\.m2\repository\org\apache\dubbo\hessian-lite\4.0.3\hessian-lite-4.0.3.jar;C:\Users\A715-42G\.m2\repository\com\alibaba\fastjson2\fastjson2\2.0.53\fastjson2-2.0.53.jar;C:\Users\A715-42G\.m2\repository\com\google\protobuf\protobuf-java\3.25.5\protobuf-java-3.25.5.jar;C:\Users\A715-42G\.m2\repository\org\apache\curator\curator-framework\5.1.0\curator-framework-5.1.0.jar;C:\Users\A715-42G\.m2\repository\org\apache\curator\curator-client\5.1.0\curator-client-5.1.0.jar;C:\Users\A715-42G\.m2\repository\com\google\guava\guava\27.0.1-jre\guava-27.0.1-jre.jar;C:\Users\A715-42G\.m2\repository\com\google\guava\failureaccess\1.0.1\failureaccess-1.0.1.jar;C:\Users\A715-42G\.m2\repository\com\google\guava\listenablefuture\9999.0-empty-to-avoid-conflict-with-guava\listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar;C:\Users\A715-42G\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\A715-42G\.m2\repository\org\checkerframework\checker-qual\2.5.2\checker-qual-2.5.2.jar;C:\Users\A715-42G\.m2\repository\com\google\errorprone\error_prone_annotations\2.2.0\error_prone_annotations-2.2.0.jar;C:\Users\A715-42G\.m2\repository\com\google\j2objc\j2objc-annotations\1.1\j2objc-annotations-1.1.jar;C:\Users\A715-42G\.m2\repository\org\codehaus\mojo\animal-sniffer-annotations\1.17\animal-sniffer-annotations-1.17.jar;C:\Users\A715-42G\.m2\repository\org\apache\zookeeper\zookeeper\3.7.1\zookeeper-3.7.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\zookeeper\zookeeper-jute\3.7.1\zookeeper-jute-3.7.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\yetus\audience-annotations\0.12.0\audience-annotations-0.12.0.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-handler\4.1.119.Final\netty-handler-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-common\4.1.119.Final\netty-common-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-resolver\4.1.119.Final\netty-resolver-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-buffer\4.1.119.Final\netty-buffer-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport\4.1.119.Final\netty-transport-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-unix-common\4.1.119.Final\netty-transport-native-unix-common-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec\4.1.119.Final\netty-codec-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-classes-epoll\4.1.119.Final\netty-transport-classes-epoll-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\org\slf4j\slf4j-api\2.0.17\slf4j-api-2.0.17.jar;C:\Users\A715-42G\.m2\repository\org\apache\curator\curator-recipes\5.5.0\curator-recipes-5.5.0.jar;C:\Users\A715-42G\.m2\repository\org\apache\curator\curator-x-discovery\5.5.0\curator-x-discovery-5.5.0.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-starter-vault-config\4.1.1\spring-cloud-starter-vault-config-4.1.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\httpcomponents\client5\httpclient5\5.3.1\httpclient5-5.3.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\httpcomponents\core5\httpcore5-h2\5.2.5\httpcore5-h2-5.2.5.jar;C:\Users\A715-42G\.m2\repository\org\apache\httpcomponents\core5\httpcore5\5.2.5\httpcore5-5.2.5.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-starter\4.1.2\spring-cloud-starter-4.1.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-context\4.1.2\spring-cloud-context-4.1.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-commons\4.1.2\spring-cloud-commons-4.1.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-rsa\1.1.2\spring-security-rsa-1.1.2.jar;C:\Users\A715-42G\.m2\repository\org\bouncycastle\bcprov-jdk18on\1.77\bcprov-jdk18on-1.77.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-vault-config\4.1.1\spring-cloud-vault-config-4.1.1.jar;C:\Users\A715-42G\.m2\repository\org\springframework\vault\spring-vault-core\3.1.1\spring-vault-core-3.1.1.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-data-redis\3.3.11\spring-boot-starter-data-redis-3.3.11.jar;C:\Users\A715-42G\.m2\repository\io\lettuce\lettuce-core\6.3.2.RELEASE\lettuce-core-6.3.2.RELEASE.jar;C:\Users\A715-42G\.m2\repository\io\projectreactor\reactor-core\3.6.16\reactor-core-3.6.16.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-redis\3.3.11\spring-data-redis-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-keyvalue\3.3.11\spring-data-keyvalue-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-oxm\6.1.19\spring-oxm-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-context-support\6.1.19\spring-context-support-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-stream\4.2.1\spring-cloud-stream-4.2.1.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-messaging\6.1.19\spring-messaging-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\integration\spring-integration-core\6.3.9\spring-integration-core-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\integration\spring-integration-jmx\6.3.9\spring-integration-jmx-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\retry\spring-retry\2.0.11\spring-retry-2.0.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-function-context\4.2.2\spring-cloud-function-context-4.2.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-function-core\4.2.2\spring-cloud-function-core-4.2.2.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-joda\2.17.3\jackson-datatype-joda-2.17.3.jar;C:\Users\A715-42G\.m2\repository\joda-time\joda-time\2.10.14\joda-time-2.10.14.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-starter-stream-kafka\4.2.1\spring-cloud-starter-stream-kafka-4.2.1.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-stream-binder-kafka\4.2.1\spring-cloud-stream-binder-kafka-4.2.1.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-stream-binder-kafka-core\4.2.1\spring-cloud-stream-binder-kafka-core-4.2.1.jar;C:\Users\A715-42G\.m2\repository\org\springframework\integration\spring-integration-kafka\6.3.9\spring-integration-kafka-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\kafka\spring-kafka\3.2.8\spring-kafka-3.2.8.jar;C:\Users\A715-42G\.m2\repository\org\apache\kafka\kafka-clients\3.7.2\kafka-clients-3.7.2.jar;C:\Users\A715-42G\.m2\repository\com\github\luben\zstd-jni\1.5.6-4\zstd-jni-1.5.6-4.jar;C:\Users\A715-42G\.m2\repository\org\lz4\lz4-java\1.8.0\lz4-java-1.8.0.jar;C:\Users\A715-42G\.m2\repository\org\xerial\snappy\snappy-java\1.1.10.5\snappy-java-1.1.10.5.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.3.11\spring-boot-starter-security-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-aop\6.1.19\spring-aop-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-config\6.3.9\spring-security-config-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-web\6.3.9\spring-security-web-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-oauth2-resource-server\3.3.11\spring-boot-starter-oauth2-resource-server-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-core\6.3.9\spring-security-core-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-crypto\6.3.9\spring-security-crypto-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-oauth2-resource-server\6.3.9\spring-security-oauth2-resource-server-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-oauth2-core\6.3.9\spring-security-oauth2-core-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-oauth2-jose\6.3.9\spring-security-oauth2-jose-6.3.9.jar;C:\Users\A715-42G\.m2\repository\com\nimbusds\nimbus-jose-jwt\9.37.3\nimbus-jose-jwt-9.37.3.jar;C:\Users\A715-42G\.m2\repository\com\github\stephenc\jcip\jcip-annotations\1.0-1\jcip-annotations-1.0-1.jar;C:\Users\A715-42G\.m2\repository\org\keycloak\keycloak-admin-client\26.0.0\keycloak-admin-client-26.0.0.jar;C:\Users\A715-42G\.m2\repository\org\keycloak\keycloak-client-common-synced\26.0.0\keycloak-client-common-synced-26.0.0.jar;C:\Users\A715-42G\.m2\repository\org\jboss\logging\commons-logging-jboss-logging\1.0.0.Final\commons-logging-jboss-logging-1.0.0.Final.jar;C:\Users\A715-42G\.m2\repository\org\apache\httpcomponents\httpclient\4.5.14\httpclient-4.5.14.jar;C:\Users\A715-42G\.m2\repository\org\apache\httpcomponents\httpcore\4.4.16\httpcore-4.4.16.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.17.3\jackson-core-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.17.3\jackson-annotations-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.17.3\jackson-datatype-jdk8-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.17.3\jackson-datatype-jsr310-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\eclipse\microprofile\openapi\microprofile-openapi-api\3.1.1\microprofile-openapi-api-3.1.1.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-client\6.2.9.Final\resteasy-client-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-client-api\6.2.9.Final\resteasy-client-api-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-core-spi\6.2.9.Final\resteasy-core-spi-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-core\6.2.9.Final\resteasy-core-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\org\jboss\jandex\2.4.5.Final\jandex-2.4.5.Final.jar;C:\Users\A715-42G\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\A715-42G\.m2\repository\com\ibm\async\asyncutil\0.1.0\asyncutil-0.1.0.jar;C:\Users\A715-42G\.m2\repository\commons-codec\commons-codec\1.16.1\commons-codec-1.16.1.jar;C:\Users\A715-42G\.m2\repository\jakarta\ws\rs\jakarta.ws.rs-api\3.1.0\jakarta.ws.rs-api-3.1.0.jar;C:\Users\A715-42G\.m2\repository\org\reactivestreams\reactive-streams\1.0.4\reactive-streams-1.0.4.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-multipart-provider\6.2.9.Final\resteasy-multipart-provider-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\jakarta\mail\jakarta.mail-api\2.1.3\jakarta.mail-api-2.1.3.jar;C:\Users\A715-42G\.m2\repository\org\eclipse\angus\angus-mail\2.0.3\angus-mail-2.0.3.jar;C:\Users\A715-42G\.m2\repository\org\apache\james\apache-mime4j-dom\0.8.11\apache-mime4j-dom-0.8.11.jar;C:\Users\A715-42G\.m2\repository\org\apache\james\apache-mime4j-core\0.8.11\apache-mime4j-core-0.8.11.jar;C:\Users\A715-42G\.m2\repository\org\apache\james\apache-mime4j-storage\0.8.11\apache-mime4j-storage-0.8.11.jar;C:\Users\A715-42G\.m2\repository\commons-io\commons-io\2.11.0\commons-io-2.11.0.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-jackson2-provider\6.2.9.Final\resteasy-jackson2-provider-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\jakarta\rs\jackson-jakarta-rs-base\2.17.3\jackson-jakarta-rs-base-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\jakarta\rs\jackson-jakarta-rs-json-provider\2.17.3\jackson-jakarta-rs-json-provider-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\module\jackson-module-jakarta-xmlbind-annotations\2.17.3\jackson-module-jakarta-xmlbind-annotations-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\github\java-json-tools\json-patch\1.13\json-patch-1.13.jar;C:\Users\A715-42G\.m2\repository\com\github\java-json-tools\msg-simple\1.2\msg-simple-1.2.jar;C:\Users\A715-42G\.m2\repository\com\github\java-json-tools\btf\1.3\btf-1.3.jar;C:\Users\A715-42G\.m2\repository\com\github\java-json-tools\jackson-coreutils\2.0\jackson-coreutils-2.0.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-jaxb-provider\6.2.9.Final\resteasy-jaxb-provider-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\codemodel\4.0.5\codemodel-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-jxc\4.0.5\jaxb-jxc-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-xjc\4.0.5\jaxb-xjc-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\xsom\4.0.5\xsom-4.0.5.jar;C:\Users\A715-42G\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\A715-42G\.m2\repository\com\sun\istack\istack-commons-tools\4.1.2\istack-commons-tools-4.1.2.jar;C:\Users\A715-42G\.m2\repository\com\sun\xml\bind\external\relaxng-datatype\4.0.3\relaxng-datatype-4.0.3.jar;C:\Users\A715-42G\.m2\repository\com\sun\xml\bind\external\rngom\4.0.3\rngom-4.0.3.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Saigon, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, java.vm.specification.version=17, os.name=Windows 10, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-17\bin, sun.java.command=com.example.transaction_service.TransactionServiceApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@45cf1ff, com.sun.management.jmxremote=, jdk.debug=release, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, hibernate.cdi.extensions=true, user.home=C:\Users\A715-42G, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-01-17, java.home=C:\Program Files\Java\jdk-17, file.separator=\, spring.output.ansi.enabled=always, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.6+9-LTS-190, user.name=A715-42G, spring.jmx.enabled=true, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\A715-42G\AppData\Local\Temp\, catalina.home=C:\Users\A715-42G\AppData\Local\Temp\tomcat.8088.5395082999738292095, java.version=17.0.6, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=D:\LT_Web\SpringBoot\java-banking-phase2, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=27496, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\A715-42G\AppData\Local\Temp\tomcat.8088.5395082999738292095, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@2f5db22f, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-17\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;D:\Document\xxx\apache-maven-3.9.1\bin;C:\Program Files (x86)\Dev-Cpp\MinGW64\bin;C:\Program Files\Git\cmd;C:\Program Files\Java\jdk-17\bin;C:\XamPP\php;D:\LT_Web\SpringBoot\SpringBootCLI\spring-3.2.1\bin;D:\sqlite;D:\Document\Java\Maven\apache-maven-3.9.9\bin;D:\Document\Java\Maven\apache-maven-3.9.9\bin;C:\Program Files\Cloudflare\Cloudflare WARP\;C:\ProgramData\chocolatey\bin;D:\KienLongBank\Vault;D:\GrafanaLabs\grafana\bin;D:\KienLongBank\InfluxData\influxdb-1.8.10-1;D:\Document\Work\Redis;C:\Program Files\Docker\Docker\resources\bin;D:\nodejs\nvm;C:\nvm4w\nodejs;C:\Program Files\nodejs\;C:\Users\A715-42G\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\A715-42G\AppData\Local\Programs\Python\Python310\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\A715-42G\AppData\Local\Programs\Eclipse Adoptium\jdk-17.0.3.7-hotspot\bin;C:\Users\A715-42G\AppData\Local\Microsoft\WindowsApps;C:\Users\A715-42G\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\Azure Data Studio\bin;C:\Program Files\Git\bin;D:\Document\HQT_ATCSDL\MongoDB\mongosh-1.8.2-win32-x64\bin;C:\XamPP\php;C:\Program Files\Azure Data Studio\bin;D:\nodejs\nvm;C:\nvm4w\nodejs;C:\Users\A715-42G\AppData\Roaming\npm;D:\Document\cursor\resources\app\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, emulated-client, sharing, java.vm.version=17.0.6+9-LTS-190, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=61.0, LOGGED_APPLICATION_NAME=[transaction-service] } MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {} MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.example.transaction_service.entity.Transaction] is safe MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@1d5f8ec3] under count; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@4389d575] under every; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@2b04f391] under any; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3090134b] under sinh; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@18876e78] under cosh; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2e321f4a] under tanh; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@274ba939] under pi; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1771ecd0] under log; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : length -> character_length MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@eb060f5] under position; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@4d38e76c] under overlay; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@7c063193] under trim; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@73d74091] under cast; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2d6c95df] under collate; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@39c47662] under extract; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@c8027b] under ifnull; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@192fb6fb] under pad; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@11174eb9] under str; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@71dfca7] under format; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@4ce95254] under timestampadd; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@7e6bfd56] under timestampdiff; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@19ae289a] under current_date; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@fd55929] under current_time; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@611a1770] under current_timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current date -> current_date MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current time -> current_time MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2ec7eaa0] under local_date; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@46c5fd1a] under local_time; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@63fce8fa] under local_datetime; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@52ecc262] under offset_datetime; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local date -> local_date MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local time -> local_time MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@436fb075] under instant; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current_instant -> instant MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@240df1fc] under sql; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1771ecd0 MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@75bc7a96] under lpad; prior registration was NamedSqmFunctionTemplate(lpad) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@2481576c] under rpad; prior registration was NamedSqmFunctionTemplate(rpad) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : day -> dayofmonth MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@e808230] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@eb060f5 MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@60b00f3] under trunc; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : truncate -> trunc MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@75625711] under bitand; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2fa5501f] under bitor; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7bf9edbb] under bitxor; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@252b76af] under bitnot; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@421667c4] under format; prior registration was org.hibernate.dialect.function.FormatFunction@71dfca7 MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@46c5fd1a MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@63fce8fa MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@47b6e231] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@274ba939 MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@73965b49] under chr; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : char -> chr MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@df6c59a] under sysdate; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@7694f19d] under listagg; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - abs(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double acos(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - addtime(TIME datetime, TIME time) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean any(BOOLEAN arg) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer ascii(STRING arg) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double asin(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - avg(arg) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bit_and(arg) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bit_or(arg) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitand(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitnot(arg) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitor(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitxor(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - cast(arg as Type) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - ceiling(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Character char(INTEGER arg) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Character chr(INTEGER arg) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]]) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String collate(STRING string as COLLATION collation) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]]) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double cos(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double cosh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double cot(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Long count([distinct ]{arg|*}) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer crc32(arg) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date curdate() MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date current date MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time current time MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current timestamp MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date current_date MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Instant current_instant MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time current_time MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current_timestamp MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time curtime() MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date date(arg) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer datediff(DATE end, DATE start) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer day(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String dayname(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofmonth(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofweek(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofyear(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double degrees(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean every(BOOLEAN arg) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double exp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - floor(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]]) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer hour(TIME arg) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - ifnull(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Instant instant MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]]) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date last_day(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]]) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String left(STRING string, INTEGER length) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double ln(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local date MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local datetime MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local time MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local_date MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local_datetime MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local_time MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtime MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtimestamp MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start]) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1]) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double log10(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double log2(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String lower(STRING string) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String lpad(string, length[, padding]) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters]) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - max(COMPARABLE arg) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String md5(arg) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer microsecond(TIME arg) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - min(COMPARABLE arg) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer minute(TIME arg) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer month(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String monthname(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp now() MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - nullif(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset datetime MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset_datetime MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length]) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character]) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double pi MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer position(STRING pattern in STRING string) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer quarter(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double radians(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double rand([INTEGER seed]) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String repeat(STRING string, INTEGER times) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String reverse(STRING arg) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String right(STRING string, INTEGER length) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places]) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String rpad(string, length[, padding]) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters]) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer second(TIME arg) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String sha(arg) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String sha1(arg) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String sha2(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer sign(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double sin(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double sinh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String soundex(arg) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String space(INTEGER arg) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Object sql MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double sqrt(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String str(arg) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length]) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length]) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - subtime(TIME datetime, TIME time) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - sum(arg) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp sysdate() MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double tan(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double tanh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String time(arg) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1]) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - trunc( ... ) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - truncate( ... ) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String upper(STRING string) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date utc_date MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time utc_time MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp utc_timestamp MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_pop(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_samp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double variance(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer week(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer year(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG org.hibernate.orm.query.plan.cache - Starting QueryInterpretationCache(2048) MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.e.i.EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.example.transaction_service.entity.Transaction] is safe MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.example.transaction_service.entity.Transaction]: private accessor [amount] MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.orm.model.mapping.creation - Starting post-init callbacks MDC:[traceId=, spanId=]
2025-06-10 20:45:25 [restartedMain] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(com.example.transaction_service.entity.Transaction) `staticFetchableList` generator MDC:[traceId=, spanId=]
2025-06-10 20:45:26 [restartedMain] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 20:45:26 [restartedMain] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction)] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 20:45:26 [restartedMain] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction.updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 20:45:26 [restartedMain] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 20:45:26 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-10 20:45:26 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select id from tbl_transaction where id=? MDC:[traceId=, spanId=]
2025-06-10 20:45:26 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into tbl_transaction (amount,bank_type,created_at,created_by,currency,description,destination_bank_code,destination_bank_name,failed_reason,from_account_number,reference_code,status,timestamp,to_account_number,type,updated_at,updated_by,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) MDC:[traceId=, spanId=]
2025-06-10 20:45:26 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update tbl_transaction set amount=?,bank_type=?,created_at=?,created_by=?,currency=?,description=?,destination_bank_code=?,destination_bank_name=?,failed_reason=?,from_account_number=?,reference_code=?,status=?,timestamp=?,to_account_number=?,type=?,updated_at=?,updated_by=? where id=? MDC:[traceId=, spanId=]
2025-06-10 20:45:26 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from tbl_transaction where id=? MDC:[traceId=, spanId=]
2025-06-10 20:45:26 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration) MDC:[traceId=, spanId=]
2025-06-10 20:45:26 [restartedMain] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7b7911b9] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@265c463d] MDC:[traceId=, spanId=]
2025-06-10 20:45:26 [restartedMain] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named HQL queries MDC:[traceId=, spanId=]
2025-06-10 20:45:26 [restartedMain] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named SQL queries MDC:[traceId=, spanId=]
2025-06-10 20:45:26 [restartedMain] DEBUG org.hibernate.mapping.Table - No alter strings for table : tbl_transaction MDC:[traceId=, spanId=]
2025-06-10 20:45:26 [restartedMain] DEBUG o.h.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@53b5fff0 MDC:[traceId=, spanId=]
2025-06-10 20:45:26 [restartedMain] DEBUG o.h.internal.SessionFactoryRegistry - Registering SessionFactory: 0ce4b288-6889-4f49-a9d0-26f1417a5b5f (<unnamed>) MDC:[traceId=, spanId=]
2025-06-10 20:45:26 [restartedMain] DEBUG o.h.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured MDC:[traceId=, spanId=]
2025-06-10 20:45:26 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Instantiated SessionFactory MDC:[traceId=, spanId=]
2025-06-10 20:45:26 [restartedMain] DEBUG o.h.s.internal.StatisticsInitiator - Statistics initialized [enabled=false] MDC:[traceId=, spanId=]
2025-06-10 20:45:26 [restartedMain] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy3/jdk.proxy3.$Proxy223.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.getCountQuery(JpaQueryLookupStrategy.java:204)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:171)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.example.transaction_service.TransactionServiceApplication.main(TransactionServiceApplication.java:15)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-06-10 20:45:26 [restartedMain] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy3/jdk.proxy3.$Proxy223.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.getCountQuery(JpaQueryLookupStrategy.java:204)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:171)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.example.transaction_service.TransactionServiceApplication.main(TransactionServiceApplication.java:15)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-06-10 20:45:26 [restartedMain] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy3/jdk.proxy3.$Proxy223.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.example.transaction_service.TransactionServiceApplication.main(TransactionServiceApplication.java:15)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-06-10 20:45:26 [restartedMain] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy3/jdk.proxy3.$Proxy223.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.example.transaction_service.TransactionServiceApplication.main(TransactionServiceApplication.java:15)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-06-10 20:45:30 [restartedMain] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-06-10 20:45:30 [restartedMain] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator MDC:[traceId=, spanId=]
2025-06-10 20:45:30 [restartedMain] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory MDC:[traceId=, spanId=]
2025-06-10 20:45:30 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-06-10 20:45:30 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader MDC:[traceId=, spanId=]
2025-06-10 20:45:30 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-06-10 20:45:30 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-06-10 20:45:30 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-06-10 20:45:30 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-06-10 20:45:30 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-06-10 20:45:30 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-06-10 20:45:30 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-06-10 20:45:30 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-06-10 20:45:30 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-06-10 20:45:30 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-06-10 20:45:30 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-06-10 20:45:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 20:45:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 20:45:33 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 20:45:33 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 20:45:33 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7eeaa54e MDC:[traceId=, spanId=]
2025-06-10 20:45:33 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 20:45:33 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@54626f88 MDC:[traceId=, spanId=]
2025-06-10 20:45:33 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 20:45:33 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 20:45:33 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 20:45:33 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 20:45:33 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@697821650 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 20:45:33 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 20:45:33 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 20:46:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 20:46:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 20:46:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 20:46:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 20:46:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3c1e4a41 MDC:[traceId=, spanId=]
2025-06-10 20:46:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 20:46:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7b8520d5 MDC:[traceId=, spanId=]
2025-06-10 20:46:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 20:46:32 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 20:46:33 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 20:46:33 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 20:46:33 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@578994737 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 20:46:33 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 20:46:33 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 20:47:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 20:47:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 20:47:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 20:47:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 20:47:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5ddaac44 MDC:[traceId=, spanId=]
2025-06-10 20:47:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 20:47:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@156573d6 MDC:[traceId=, spanId=]
2025-06-10 20:47:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 20:47:32 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 20:47:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 20:47:32 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 20:47:32 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@2033415071 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 20:47:32 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 20:47:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 20:48:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 20:48:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 20:48:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 20:48:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 20:48:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1647fa81 MDC:[traceId=, spanId=]
2025-06-10 20:48:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 20:48:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3ae94172 MDC:[traceId=, spanId=]
2025-06-10 20:48:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 20:48:32 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 20:48:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 20:48:32 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 20:48:32 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1453149032 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 20:48:32 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 20:48:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 20:49:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 20:49:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 20:49:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 20:49:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 20:49:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@52e24353 MDC:[traceId=, spanId=]
2025-06-10 20:49:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 20:49:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@25476a3e MDC:[traceId=, spanId=]
2025-06-10 20:49:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 20:49:32 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 20:49:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 20:49:32 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 20:49:32 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@816092324 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 20:49:32 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 20:49:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 20:50:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 20:50:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 20:50:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 20:50:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 20:50:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@28f5a827 MDC:[traceId=, spanId=]
2025-06-10 20:50:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 20:50:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4c81b251 MDC:[traceId=, spanId=]
2025-06-10 20:50:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 20:50:32 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 20:50:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 20:50:32 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 20:50:32 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@621735339 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 20:50:32 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 20:50:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 20:51:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 20:51:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 20:51:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 20:51:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 20:51:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2bf9513 MDC:[traceId=, spanId=]
2025-06-10 20:51:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 20:51:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@64031aa3 MDC:[traceId=, spanId=]
2025-06-10 20:51:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 20:51:32 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 20:51:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 20:51:32 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 20:51:32 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@10368899 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 20:51:32 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 20:51:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 20:52:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 20:52:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 20:52:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 20:52:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 20:52:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7ae5f1cf MDC:[traceId=, spanId=]
2025-06-10 20:52:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 20:52:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6378976f MDC:[traceId=, spanId=]
2025-06-10 20:52:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 20:52:32 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 20:52:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 20:52:32 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 20:52:32 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@286642527 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 20:52:32 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 20:52:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 20:53:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 20:53:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 20:53:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 20:53:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 20:53:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@79a7a9d2 MDC:[traceId=, spanId=]
2025-06-10 20:53:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 20:53:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4f12e819 MDC:[traceId=, spanId=]
2025-06-10 20:53:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 20:53:32 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 20:53:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 20:53:32 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 20:53:32 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1815230259 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 20:53:32 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 20:53:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 20:54:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 20:54:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 20:54:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 20:54:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 20:54:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@96ad4d3 MDC:[traceId=, spanId=]
2025-06-10 20:54:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 20:54:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@36f0e1d8 MDC:[traceId=, spanId=]
2025-06-10 20:54:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 20:54:32 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 20:54:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 20:54:32 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 20:54:32 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1055127026 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 20:54:32 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 20:54:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 20:55:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 20:55:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 20:55:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 20:55:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 20:55:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2d53d73e MDC:[traceId=, spanId=]
2025-06-10 20:55:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 20:55:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@31cb49d4 MDC:[traceId=, spanId=]
2025-06-10 20:55:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 20:55:32 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 20:55:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 20:55:32 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 20:55:32 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1782707014 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 20:55:32 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 20:55:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 20:56:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 20:56:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 20:56:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 20:56:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 20:56:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6bfe6ce1 MDC:[traceId=, spanId=]
2025-06-10 20:56:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 20:56:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6cebe689 MDC:[traceId=, spanId=]
2025-06-10 20:56:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 20:56:32 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 20:56:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 20:56:32 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 20:56:32 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@2142544265 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 20:56:32 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 20:56:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 20:57:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 20:57:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 20:57:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 20:57:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 20:57:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@213b789b MDC:[traceId=, spanId=]
2025-06-10 20:57:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 20:57:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@75c5a560 MDC:[traceId=, spanId=]
2025-06-10 20:57:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 20:57:32 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 20:57:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 20:57:32 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 20:57:32 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@38752464 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 20:57:32 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 20:57:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 20:58:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 20:58:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 20:58:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 20:58:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 20:58:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@244b28eb MDC:[traceId=, spanId=]
2025-06-10 20:58:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 20:58:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@182a4cb8 MDC:[traceId=, spanId=]
2025-06-10 20:58:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 20:58:32 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 20:58:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 20:58:32 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 20:58:32 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1954216915 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 20:58:32 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 20:58:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 20:59:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 20:59:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 20:59:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 20:59:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 20:59:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3c6559b2 MDC:[traceId=, spanId=]
2025-06-10 20:59:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 20:59:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@46954d2b MDC:[traceId=, spanId=]
2025-06-10 20:59:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 20:59:32 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 20:59:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 20:59:32 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 20:59:32 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1956673267 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 20:59:32 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 20:59:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 21:00:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 21:00:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 21:00:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 21:00:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 21:00:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@e8d9665 MDC:[traceId=, spanId=]
2025-06-10 21:00:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 21:00:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7378be5e MDC:[traceId=, spanId=]
2025-06-10 21:00:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 21:00:32 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 21:00:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 21:00:32 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 21:00:32 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@309362024 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 21:00:32 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 21:00:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 21:01:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 21:01:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 21:01:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 21:01:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 21:01:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5957ea7e MDC:[traceId=, spanId=]
2025-06-10 21:01:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 21:01:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4dd3cc1a MDC:[traceId=, spanId=]
2025-06-10 21:01:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 21:01:32 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 21:01:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 21:01:32 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 21:01:32 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1734960513 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 21:01:32 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 21:01:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 21:02:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 21:02:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 21:02:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 21:02:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 21:02:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@116a01c8 MDC:[traceId=, spanId=]
2025-06-10 21:02:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 21:02:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6f213e98 MDC:[traceId=, spanId=]
2025-06-10 21:02:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 21:02:32 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 21:02:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 21:02:32 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 21:02:32 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@774538975 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 21:02:32 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 21:02:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 21:03:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 21:03:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 21:03:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 21:03:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 21:03:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6a78542f MDC:[traceId=, spanId=]
2025-06-10 21:03:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 21:03:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@212fc0b8 MDC:[traceId=, spanId=]
2025-06-10 21:03:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 21:03:32 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 21:03:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 21:03:32 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 21:03:32 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@495872930 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 21:03:32 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 21:03:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 21:04:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 21:04:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 21:04:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 21:04:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 21:04:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@51425d72 MDC:[traceId=, spanId=]
2025-06-10 21:04:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 21:04:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1498aea5 MDC:[traceId=, spanId=]
2025-06-10 21:04:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 21:04:32 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 21:04:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 21:04:32 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 21:04:32 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1352110176 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 21:04:32 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 21:04:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 21:05:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 21:05:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 21:05:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 21:05:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 21:05:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4bbf183d MDC:[traceId=, spanId=]
2025-06-10 21:05:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 21:05:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2e46d552 MDC:[traceId=, spanId=]
2025-06-10 21:05:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 21:05:32 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 21:05:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 21:05:32 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 21:05:32 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@786094146 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 21:05:32 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 21:05:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 21:06:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 21:06:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 21:06:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 21:06:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 21:06:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@61282a34 MDC:[traceId=, spanId=]
2025-06-10 21:06:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 21:06:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6998ecd5 MDC:[traceId=, spanId=]
2025-06-10 21:06:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 21:06:32 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 21:06:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 21:06:32 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 21:06:32 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@491477835 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 21:06:32 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 21:06:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 21:07:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 21:07:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 21:07:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 21:07:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 21:07:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3ae281f5 MDC:[traceId=, spanId=]
2025-06-10 21:07:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 21:07:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4ccb4351 MDC:[traceId=, spanId=]
2025-06-10 21:07:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 21:07:32 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 21:07:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 21:07:32 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 21:07:32 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1289797761 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 21:07:32 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 21:07:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 21:08:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 21:08:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 21:08:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 21:08:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 21:08:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@77344feb MDC:[traceId=, spanId=]
2025-06-10 21:08:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 21:08:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2373d78e MDC:[traceId=, spanId=]
2025-06-10 21:08:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 21:08:32 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 21:08:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 21:08:32 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 21:08:32 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1669639442 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 21:08:32 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 21:08:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 21:09:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 21:09:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 21:09:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 21:09:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 21:09:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5098a8d MDC:[traceId=, spanId=]
2025-06-10 21:09:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 21:09:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5647d20c MDC:[traceId=, spanId=]
2025-06-10 21:09:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 21:09:32 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 21:09:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 21:09:32 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 21:09:32 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1354056416 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 21:09:32 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 21:09:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 21:10:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 21:10:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 21:10:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 21:10:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 21:10:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3c4ad292 MDC:[traceId=, spanId=]
2025-06-10 21:10:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 21:10:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@152d16cb MDC:[traceId=, spanId=]
2025-06-10 21:10:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 21:10:32 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 21:10:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 21:10:32 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 21:10:32 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1700169515 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 21:10:32 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 21:10:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 21:11:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 21:11:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 21:11:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 21:11:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 21:11:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6e46787b MDC:[traceId=, spanId=]
2025-06-10 21:11:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 21:11:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@28a97367 MDC:[traceId=, spanId=]
2025-06-10 21:11:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 21:11:32 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 21:11:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 21:11:32 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 21:11:32 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@903902422 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 21:11:32 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 21:11:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 21:12:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 21:12:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 21:12:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 21:12:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 21:12:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7284d82c MDC:[traceId=, spanId=]
2025-06-10 21:12:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 21:12:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@37a4a2b MDC:[traceId=, spanId=]
2025-06-10 21:12:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 21:12:32 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 21:12:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 21:12:32 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 21:12:32 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1800319972 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 21:12:32 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 21:12:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 21:13:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 21:13:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 21:13:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 21:13:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 21:13:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3408fe29 MDC:[traceId=, spanId=]
2025-06-10 21:13:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 21:13:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3f1c0d45 MDC:[traceId=, spanId=]
2025-06-10 21:13:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 21:13:32 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 21:13:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 21:13:32 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 21:13:32 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@957184987 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 21:13:32 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 21:13:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 21:14:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 21:14:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 21:14:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 21:14:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 21:14:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7b35bed0 MDC:[traceId=, spanId=]
2025-06-10 21:14:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 21:14:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@463179ae MDC:[traceId=, spanId=]
2025-06-10 21:14:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 21:14:32 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 21:14:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 21:14:32 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 21:14:32 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@480755644 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 21:14:32 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 21:14:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 21:15:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 21:15:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 21:15:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 21:15:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 21:15:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6f6bd4d5 MDC:[traceId=, spanId=]
2025-06-10 21:15:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 21:15:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@79347372 MDC:[traceId=, spanId=]
2025-06-10 21:15:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 21:15:32 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 21:15:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 21:15:32 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 21:15:32 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1373559653 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 21:15:32 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 21:15:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 21:16:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 21:16:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 21:16:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 21:16:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 21:16:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@10142897 MDC:[traceId=, spanId=]
2025-06-10 21:16:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 21:16:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3efdc0e8 MDC:[traceId=, spanId=]
2025-06-10 21:16:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 21:16:32 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 21:16:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 21:16:32 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 21:16:32 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1208309742 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 21:16:32 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 21:16:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 21:17:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 21:17:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 21:17:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 21:17:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 21:17:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4eb2e4d2 MDC:[traceId=, spanId=]
2025-06-10 21:17:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 21:17:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@35820cea MDC:[traceId=, spanId=]
2025-06-10 21:17:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 21:17:32 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 21:17:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 21:17:32 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 21:17:32 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@2141438331 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 21:17:32 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 21:17:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 21:18:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 21:18:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 21:18:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 21:18:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 21:18:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2a3e3605 MDC:[traceId=, spanId=]
2025-06-10 21:18:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 21:18:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@60250fb MDC:[traceId=, spanId=]
2025-06-10 21:18:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 21:18:32 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 21:18:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 21:18:32 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 21:18:32 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@2095334429 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 21:18:32 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 21:18:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 21:19:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 21:19:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 21:19:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 21:19:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 21:19:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@11a1e5e7 MDC:[traceId=, spanId=]
2025-06-10 21:19:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 21:19:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7db303c9 MDC:[traceId=, spanId=]
2025-06-10 21:19:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 21:19:32 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 21:19:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 21:19:32 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 21:19:32 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1619376277 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 21:19:32 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 21:19:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 21:20:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 21:20:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 21:20:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 21:20:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 21:20:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3d35cce0 MDC:[traceId=, spanId=]
2025-06-10 21:20:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 21:20:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6f6c0781 MDC:[traceId=, spanId=]
2025-06-10 21:20:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 21:20:32 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 21:20:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 21:20:32 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 21:20:32 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@543021245 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 21:20:32 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 21:20:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 21:21:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 21:21:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 21:21:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 21:21:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 21:21:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1c7c94bb MDC:[traceId=, spanId=]
2025-06-10 21:21:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 21:21:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@197f4e12 MDC:[traceId=, spanId=]
2025-06-10 21:21:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 21:21:32 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 21:21:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 21:21:32 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 21:21:32 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1094837906 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 21:21:32 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 21:21:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 21:22:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 21:22:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 21:22:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 21:22:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 21:22:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@122f866c MDC:[traceId=, spanId=]
2025-06-10 21:22:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 21:22:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1d8b146b MDC:[traceId=, spanId=]
2025-06-10 21:22:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 21:22:32 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 21:22:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 21:22:32 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 21:22:32 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@187932950 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 21:22:32 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 21:22:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 21:23:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 21:23:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 21:23:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 21:23:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 21:23:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3c94811a MDC:[traceId=, spanId=]
2025-06-10 21:23:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 21:23:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5a03b1a2 MDC:[traceId=, spanId=]
2025-06-10 21:23:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 21:23:32 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 21:23:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 21:23:32 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 21:23:32 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@818370848 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 21:23:32 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 21:23:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 21:24:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 21:24:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 21:24:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 21:24:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 21:24:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@380094f1 MDC:[traceId=, spanId=]
2025-06-10 21:24:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 21:24:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6ef0967e MDC:[traceId=, spanId=]
2025-06-10 21:24:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 21:24:32 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 21:24:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 21:24:32 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 21:24:32 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1574490337 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 21:24:32 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 21:24:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 21:25:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 21:25:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 21:25:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 21:25:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 21:25:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1b77ae35 MDC:[traceId=, spanId=]
2025-06-10 21:25:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 21:25:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@14dd37eb MDC:[traceId=, spanId=]
2025-06-10 21:25:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 21:25:32 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 21:25:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 21:25:32 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 21:25:32 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@2057859448 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 21:25:32 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 21:25:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 21:26:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 21:26:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 21:26:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 21:26:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 21:26:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7219ad7b MDC:[traceId=, spanId=]
2025-06-10 21:26:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 21:26:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3234d727 MDC:[traceId=, spanId=]
2025-06-10 21:26:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 21:26:32 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 21:26:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 21:26:32 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 21:26:32 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@2118278102 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 21:26:32 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 21:26:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 21:27:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 21:27:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 21:27:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 21:27:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 21:27:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4fede6c7 MDC:[traceId=, spanId=]
2025-06-10 21:27:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 21:27:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@69831bd9 MDC:[traceId=, spanId=]
2025-06-10 21:27:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 21:27:32 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 21:27:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 21:27:32 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 21:27:32 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1489276420 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 21:27:32 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 21:27:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 21:28:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 21:28:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 21:28:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 21:28:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 21:28:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7542b2ad MDC:[traceId=, spanId=]
2025-06-10 21:28:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 21:28:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@45b55648 MDC:[traceId=, spanId=]
2025-06-10 21:28:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 21:28:32 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 21:28:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 21:28:32 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 21:28:32 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1709761854 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 21:28:32 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 21:28:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 21:29:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 21:29:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 21:29:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 21:29:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 21:29:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@68f112e0 MDC:[traceId=, spanId=]
2025-06-10 21:29:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 21:29:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1d240c44 MDC:[traceId=, spanId=]
2025-06-10 21:29:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 21:29:32 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 21:29:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 21:29:32 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 21:29:32 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1869859138 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 21:29:32 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 21:29:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 21:30:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 21:30:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 21:30:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 21:30:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 21:30:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@42343425 MDC:[traceId=, spanId=]
2025-06-10 21:30:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 21:30:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4795fb9a MDC:[traceId=, spanId=]
2025-06-10 21:30:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 21:30:32 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 21:30:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 21:30:32 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 21:30:32 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@2123643472 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 21:30:32 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 21:30:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 21:31:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 21:31:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 21:31:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 21:31:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 21:31:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3562c41a MDC:[traceId=, spanId=]
2025-06-10 21:31:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 21:31:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3f60efca MDC:[traceId=, spanId=]
2025-06-10 21:31:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 21:31:32 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 21:31:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 21:31:32 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 21:31:32 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1491578284 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 21:31:32 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 21:31:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 21:32:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 21:32:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 21:32:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 21:32:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 21:32:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4e76ac66 MDC:[traceId=, spanId=]
2025-06-10 21:32:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 21:32:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5f94bc60 MDC:[traceId=, spanId=]
2025-06-10 21:32:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 21:32:32 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 21:32:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 21:32:32 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 21:32:32 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1223901802 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 21:32:32 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 21:32:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 21:33:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 21:33:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 21:33:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 21:33:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 21:33:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@49118e02 MDC:[traceId=, spanId=]
2025-06-10 21:33:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 21:33:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7f126c4c MDC:[traceId=, spanId=]
2025-06-10 21:33:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 21:33:32 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 21:33:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 21:33:32 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 21:33:32 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@788074090 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 21:33:32 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 21:33:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 21:34:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 21:34:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 21:34:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 21:34:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 21:34:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7f689947 MDC:[traceId=, spanId=]
2025-06-10 21:34:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 21:34:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4a9cb851 MDC:[traceId=, spanId=]
2025-06-10 21:34:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 21:34:32 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 21:34:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 21:34:32 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 21:34:32 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1219286010 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 21:34:32 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 21:34:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 21:35:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 21:35:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 21:35:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 21:35:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 21:35:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3e952600 MDC:[traceId=, spanId=]
2025-06-10 21:35:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 21:35:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5010632b MDC:[traceId=, spanId=]
2025-06-10 21:35:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 21:35:32 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 21:35:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 21:35:32 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 21:35:32 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@2104038385 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 21:35:32 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 21:35:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 21:36:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 21:36:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 21:36:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 21:36:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 21:36:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@54eb54d3 MDC:[traceId=, spanId=]
2025-06-10 21:36:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 21:36:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7a551bb3 MDC:[traceId=, spanId=]
2025-06-10 21:36:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 21:36:32 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 21:36:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 21:36:32 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 21:36:32 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@970047773 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 21:36:32 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 21:36:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 21:37:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 21:37:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 21:37:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 21:37:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 21:37:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@39d2b7c5 MDC:[traceId=, spanId=]
2025-06-10 21:37:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 21:37:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2742af24 MDC:[traceId=, spanId=]
2025-06-10 21:37:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 21:37:32 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 21:37:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 21:37:32 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 21:37:32 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@739381007 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 21:37:32 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 21:37:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 21:38:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 21:38:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 21:38:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 21:38:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 21:38:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@345dfe57 MDC:[traceId=, spanId=]
2025-06-10 21:38:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 21:38:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@50a3d0a7 MDC:[traceId=, spanId=]
2025-06-10 21:38:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 21:38:32 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 21:38:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 21:38:32 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 21:38:32 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1479647027 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 21:38:32 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 21:38:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 21:39:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 21:39:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 21:39:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 21:39:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 21:39:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6b987a44 MDC:[traceId=, spanId=]
2025-06-10 21:39:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 21:39:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@60a5f666 MDC:[traceId=, spanId=]
2025-06-10 21:39:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 21:39:32 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 21:39:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 21:39:32 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 21:39:32 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@512158018 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 21:39:32 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 21:39:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 21:40:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 21:40:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 21:40:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 21:40:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 21:40:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@54bd8af3 MDC:[traceId=, spanId=]
2025-06-10 21:40:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 21:40:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4e2cd5be MDC:[traceId=, spanId=]
2025-06-10 21:40:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 21:40:32 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 21:40:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 21:40:32 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 21:40:32 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1004272871 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 21:40:32 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 21:40:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 21:41:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 21:41:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 21:41:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 21:41:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 21:41:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@596d4ec9 MDC:[traceId=, spanId=]
2025-06-10 21:41:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 21:41:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@690700a1 MDC:[traceId=, spanId=]
2025-06-10 21:41:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 21:41:32 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 21:41:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 21:41:32 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 21:41:32 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@289367706 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 21:41:32 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 21:41:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 21:42:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 21:42:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 21:42:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 21:42:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 21:42:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@37e34f1c MDC:[traceId=, spanId=]
2025-06-10 21:42:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 21:42:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3ec2c44c MDC:[traceId=, spanId=]
2025-06-10 21:42:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 21:42:32 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 21:42:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 21:42:32 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 21:42:32 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1857033673 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 21:42:32 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 21:42:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 21:43:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 21:43:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 21:43:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 21:43:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 21:43:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6f86eb0b MDC:[traceId=, spanId=]
2025-06-10 21:43:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 21:43:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@67c8da89 MDC:[traceId=, spanId=]
2025-06-10 21:43:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 21:43:32 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 21:43:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 21:43:32 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 21:43:32 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@36634936 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 21:43:32 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 21:43:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 21:44:15 [SpringContextShutdownHook] DEBUG o.h.internal.SessionFactoryImpl - HHH000031: Closing MDC:[traceId=, spanId=]
2025-06-10 21:44:15 [SpringContextShutdownHook] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@56c49e97] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@265c463d] MDC:[traceId=, spanId=]
2025-06-10 21:44:15 [SpringContextShutdownHook] DEBUG o.h.s.i.AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries MDC:[traceId=, spanId=]
2025-06-10 21:44:16 [SpringContextShutdownHook] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries MDC:[traceId=, spanId=]
2025-06-10 21:44:38 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final MDC:[traceId=, spanId=]
2025-06-10 21:44:38 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-06-10 21:44:38 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-06-10 21:44:38 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-06-10 21:44:38 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-06-10 21:44:38 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-06-10 21:44:38 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-06-10 21:44:38 [background-preinit] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-06-10 21:44:38 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-06-10 21:44:38 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-06-10 21:44:38 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-06-10 21:44:38 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-06-10 21:44:38 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-06-10 21:44:38 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.h.jpa.internal.util.LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@7b22ca5e
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/LT_Web/SpringBoot/java-banking-phase2/backend/transaction-service/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.example.transaction_service.entity.Transaction]
	Mapping files names []
	Properties [] MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator]. MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator]. MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG org.hibernate.cfg.Environment - HHH000206: 'hibernate.properties' not found MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator] MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator] MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator] MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator] MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned] MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator] MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator] MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator] MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator] MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator] MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.h.c.i.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7efe86e4 MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7efe86e4 MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@7efe86e4 MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@2a51914e MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@2a51914e MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@6cafbcaf MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@6cafbcaf MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@4707eb64 MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@4707eb64 MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@4d448cc6 MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@4d448cc6 MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@4d448cc6 MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@6bb9afc1 MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@6bb9afc1 MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@6bb9afc1 MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@7ae23cdd MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@7ae23cdd MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@2c6b42e MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@6b0d3a0c MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@6b0d3a0c MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@4dec570b MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@26038ebf MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@11d33995 MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@11d33995 MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@11d33995 MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@130cbcf9 MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@130cbcf9 MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@130cbcf9 MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@3c77e59c MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@3c77e59c MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@3c77e59c MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@6bbe2db MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@6bbe2db MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@6bbe2db MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@e2c7c08 MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@e2c7c08 MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@e2c7c08 MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@78b1e240 MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@78b1e240 MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@7b69b3cf MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@7b69b3cf MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@229d3b43 MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@229d3b43 MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@229d3b43 MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@4f3cdf24 MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@38688761 MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@38688761 MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@e29bc68 MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@4525c9cd MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@4525c9cd MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@4525c9cd MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@6cc9ebb2 MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@10e62ac5 MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@53ef0e4d MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@386fce5c MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@386fce5c MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1b583698 MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1b583698 MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@3a498734 MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@11ff6b56 MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@57244a1b MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@d125a91 MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@7b941c20 MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@115b6ddf MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@645a897d MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@645a897d MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@7b8391b5 MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@7b8391b5 MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@202df7f9 MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@202df7f9 MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@6ad243b6 MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@6ad243b6 MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@5a733ef0 MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@5a733ef0 MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3d1a1232 MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7247a857 MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@a709a5a MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@a709a5a MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@49b7b15a MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2451a1dc MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6b1ba011 MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@65b75562 MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@65b75562 MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@11fe15ef MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3888194d MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@ea53d65 MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@ea53d65 MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@51e67596 MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@51e67596 MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@30d65328 MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@30d65328 MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@30d65328 MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@486c760e MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@486c760e MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@486c760e MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@6f852473 MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@d2db6d0 MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@f60eb4e MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@f60eb4e MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@249730aa MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@249730aa MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@249730aa MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@62f72ef7 MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@20c9f4f MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@a3e2edb MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@a3e2edb MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@17b14d56 MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@17b14d56 MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@17b14d56 MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@4c6a59c1 MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@4c6a59c1 MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@2a7a41e4 MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@2a7a41e4 MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@5149ea86 MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@5149ea86 MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@4c0fd604 MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@4c0fd604 MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@52b52a15 MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@52b52a15 MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@2ab834c6 MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@343bf6cd MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@5d3562b7 MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5d3562b7 MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@6045c710 MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@fbf601d MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@3357d906 MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@66b4d1cd MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@2887f74c MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@5c4cd5c9 MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@51deb8af MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@11a421e0 MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@60e990f MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@609a7e3f] into BootstrapContext; was [null] MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@609a7e3f) [was null] MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@6cb70c4f] into BootstrapContext; was [null] MDC:[traceId=, spanId=]
2025-06-10 21:44:49 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@36954089] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@11244449] MDC:[traceId=, spanId=]
2025-06-10 21:44:50 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@609a7e3f] MDC:[traceId=, spanId=]
2025-06-10 21:44:50 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@609a7e3f] MDC:[traceId=, spanId=]
2025-06-10 21:44:50 [restartedMain] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Database ->
	   name : MySQL
	version : 8.0.32
	  major : 8
	  minor : 0 MDC:[traceId=, spanId=]
2025-06-10 21:44:50 [restartedMain] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Driver ->
	   name : MySQL Connector/J
	version : mysql-connector-j-8.3.0 (Revision: 805f872a57875f311cb82487efcfb070411a3fa0)
	  major : 8
	  minor : 3 MDC:[traceId=, spanId=]
2025-06-10 21:44:50 [restartedMain] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - JDBC version : 4.2 MDC:[traceId=, spanId=]
2025-06-10 21:44:50 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default) MDC:[traceId=, spanId=]
2025-06-10 21:44:50 [restartedMain] DEBUG org.hibernate.orm.dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQL8Dialect, version: 8.0 MDC:[traceId=, spanId=]
2025-06-10 21:44:50 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead MDC:[traceId=, spanId=]
2025-06-10 21:44:50 [restartedMain] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case MDC:[traceId=, spanId=]
2025-06-10 21:44:50 [restartedMain] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers MDC:[traceId=, spanId=]
2025-06-10 21:44:50 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@ce61dd3) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3c7962c5) MDC:[traceId=, spanId=]
2025-06-10 21:44:50 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@563df190) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@189ce4b4) MDC:[traceId=, spanId=]
2025-06-10 21:44:50 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@24287af1) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@53b05bfb) MDC:[traceId=, spanId=]
2025-06-10 21:44:50 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6a38816c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@15fe61db) MDC:[traceId=, spanId=]
2025-06-10 21:44:50 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@72667e67) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@23588c53) MDC:[traceId=, spanId=]
2025-06-10 21:44:50 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@d454ab5) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6bd3127f) MDC:[traceId=, spanId=]
2025-06-10 21:44:50 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2a87dc24) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4ddaf733) MDC:[traceId=, spanId=]
2025-06-10 21:44:50 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6a6d0cdf) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@195ebb07) MDC:[traceId=, spanId=]
2025-06-10 21:44:50 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@d2c32f4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@17d52f0d) MDC:[traceId=, spanId=]
2025-06-10 21:44:50 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor) MDC:[traceId=, spanId=]
2025-06-10 21:44:50 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor) MDC:[traceId=, spanId=]
2025-06-10 21:44:50 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor) MDC:[traceId=, spanId=]
2025-06-10 21:44:50 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT)) MDC:[traceId=, spanId=]
2025-06-10 21:44:50 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT)) MDC:[traceId=, spanId=]
2025-06-10 21:44:50 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@26ed6f5b MDC:[traceId=, spanId=]
2025-06-10 21:44:50 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@6045c710` MDC:[traceId=, spanId=]
2025-06-10 21:44:50 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-06-10 21:44:50 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-06-10 21:44:50 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-06-10 21:44:50 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-06-10 21:44:50 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-06-10 21:44:50 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-06-10 21:44:50 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-06-10 21:44:50 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-06-10 21:44:50 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-06-10 21:44:50 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-06-10 21:44:50 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-06-10 21:44:50 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-06-10 21:44:50 [restartedMain] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7b414832] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@46de107] MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.boot.model.relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}] MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Transaction MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity com.example.transaction_service.entity.Transaction on table tbl_transaction MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE') MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.example.transaction_service.entity.Transaction] is safe MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property id with lazy=false MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:id] MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for id MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.id MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property id MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, assigned, , ...) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property amount with lazy=false MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:amount] MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for amount MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.amount MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property amount MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property bankType with lazy=false MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:bankType] MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for bankType MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.bank_type MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property bankType MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:createdAt] MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for createdAt MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.created_at MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property createdAt MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property createdBy with lazy=false MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:createdBy] MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for createdBy MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.created_by MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property createdBy MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property currency with lazy=false MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:currency] MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for currency MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.currency MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property currency MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property description with lazy=false MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:description] MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for description MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.description MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property description MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property destinationBankCode with lazy=false MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:destinationBankCode] MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for destinationBankCode MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.destination_bank_code MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property destinationBankCode MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property destinationBankName with lazy=false MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:destinationBankName] MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for destinationBankName MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.destination_bank_name MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property destinationBankName MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property failedReason with lazy=false MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:failedReason] MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for failedReason MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.failed_reason MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property failedReason MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property fromAccountNumber with lazy=false MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:fromAccountNumber] MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for fromAccountNumber MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.from_account_number MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property fromAccountNumber MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property referenceCode with lazy=false MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:referenceCode] MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for referenceCode MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.reference_code MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property referenceCode MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property status with lazy=false MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:status] MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for status MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.status MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property status MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property timestamp with lazy=false MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:timestamp] MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for timestamp MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.timestamp MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property timestamp MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property toAccountNumber with lazy=false MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:toAccountNumber] MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for toAccountNumber MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.to_account_number MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property toAccountNumber MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property type with lazy=false MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:type] MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for type MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.type MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property type MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:updatedAt] MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for updatedAt MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.updated_at MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property updatedAt MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property updatedBy with lazy=false MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:updatedBy] MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for updatedBy MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.updated_by MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property updatedBy MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: com.example.transaction_service.entity MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.j.e.i.CallbackDefinitionResolverLegacyImpl - Adding touchForUpdate as PreUpdate callback for entity com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.j.e.i.CallbackDefinitionResolverLegacyImpl - Adding prePersist as PrePersist callback for entity com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.j.e.i.CallbackDefinitionResolverLegacyImpl - Adding touchForCreate as PrePersist callback for entity com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bankType MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for createdAt MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for createdBy MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for currency MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for description MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for destinationBankCode MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for destinationBankName MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for failedReason MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for fromAccountNumber MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for referenceCode MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for timestamp MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for toAccountNumber MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for type MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for updatedAt MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for updatedBy MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [tbl_transaction] MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Building session factory MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Instantiating SessionFactory with settings: {jdk.tls.rejectClientInitiatedRenegotiation=true, java.specification.version=17, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@318dc2f6, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=D:\LT_Web\SpringBoot\java-banking-phase2\backend\transaction-service\target\classes;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-actuator\3.3.11\spring-boot-starter-actuator-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter\3.3.11\spring-boot-starter-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.3.11\spring-boot-starter-logging-3.3.11.jar;C:\Users\A715-42G\.m2\repository\ch\qos\logback\logback-classic\1.5.18\logback-classic-1.5.18.jar;C:\Users\A715-42G\.m2\repository\ch\qos\logback\logback-core\1.5.18\logback-core-1.5.18.jar;C:\Users\A715-42G\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.23.1\log4j-to-slf4j-2.23.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\logging\log4j\log4j-api\2.23.1\log4j-api-2.23.1.jar;C:\Users\A715-42G\.m2\repository\org\slf4j\jul-to-slf4j\2.0.17\jul-to-slf4j-2.0.17.jar;C:\Users\A715-42G\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\A715-42G\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-actuator-autoconfigure\3.3.11\spring-boot-actuator-autoconfigure-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-actuator\3.3.11\spring-boot-actuator-3.3.11.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-observation\1.13.13\micrometer-observation-1.13.13.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-commons\1.13.13\micrometer-commons-1.13.13.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-jakarta9\1.13.13\micrometer-jakarta9-1.13.13.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-core\1.13.13\micrometer-core-1.13.13.jar;C:\Users\A715-42G\.m2\repository\org\hdrhistogram\HdrHistogram\2.2.2\HdrHistogram-2.2.2.jar;C:\Users\A715-42G\.m2\repository\org\latencyutils\LatencyUtils\2.0.3\LatencyUtils-2.0.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.3.11\spring-boot-starter-data-jpa-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.3.11\spring-boot-starter-aop-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\aspectj\aspectjweaver\1.9.24\aspectjweaver-1.9.24.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.3.11\spring-boot-starter-jdbc-3.3.11.jar;C:\Users\A715-42G\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-jdbc\6.1.19\spring-jdbc-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\orm\hibernate-core\6.5.3.Final\hibernate-core-6.5.3.Final.jar;C:\Users\A715-42G\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\A715-42G\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\A715-42G\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\A715-42G\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\A715-42G\.m2\repository\net\bytebuddy\byte-buddy\1.14.19\byte-buddy-1.14.19.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\A715-42G\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\A715-42G\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-jpa\3.3.11\spring-data-jpa-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-commons\3.3.11\spring-data-commons-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-orm\6.1.19\spring-orm-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-context\6.1.19\spring-context-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-tx\6.1.19\spring-tx-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-beans\6.1.19\spring-beans-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-aspects\6.1.19\spring-aspects-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.3.11\spring-boot-starter-web-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.3.11\spring-boot-starter-json-3.3.11.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.17.3\jackson-module-parameter-names-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.3.11\spring-boot-starter-tomcat-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.40\tomcat-embed-core-10.1.40.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.40\tomcat-embed-websocket-10.1.40.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-web\6.1.19\spring-web-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-webmvc\6.1.19\spring-webmvc-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-expression\6.1.19\spring-expression-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-devtools\3.3.11\spring-boot-devtools-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot\3.3.11\spring-boot-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.3.11\spring-boot-autoconfigure-3.3.11.jar;C:\Users\A715-42G\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\A715-42G\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-core\6.1.19\spring-core-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-jcl\6.1.19\spring-jcl-6.1.19.jar;C:\Users\A715-42G\.m2\repository\com\mysql\mysql-connector-j\8.3.0\mysql-connector-j-8.3.0.jar;C:\Users\A715-42G\.m2\repository\org\projectlombok\lombok\1.18.38\lombok-1.18.38.jar;C:\Users\A715-42G\.m2\repository\org\mapstruct\mapstruct\1.5.5.Final\mapstruct-1.5.5.Final.jar;C:\Users\A715-42G\.m2\repository\org\mapstruct\mapstruct-processor\1.5.5.Final\mapstruct-processor-1.5.5.Final.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-validation\3.3.11\spring-boot-starter-validation-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.40\tomcat-embed-el-10.1.40.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\validator\hibernate-validator\8.0.2.Final\hibernate-validator-8.0.2.Final.jar;C:\Users\A715-42G\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-ui\2.0.2\springdoc-openapi-starter-webmvc-ui-2.0.2.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-api\2.0.2\springdoc-openapi-starter-webmvc-api-2.0.2.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-common\2.0.2\springdoc-openapi-starter-common-2.0.2.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-core-jakarta\2.2.7\swagger-core-jakarta-2.2.7.jar;C:\Users\A715-42G\.m2\repository\org\apache\commons\commons-lang3\3.14.0\commons-lang3-3.14.0.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-annotations-jakarta\2.2.7\swagger-annotations-jakarta-2.2.7.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-models-jakarta\2.2.7\swagger-models-jakarta-2.2.7.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-yaml\2.17.3\jackson-dataformat-yaml-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\webjars\swagger-ui\4.15.5\swagger-ui-4.15.5.jar;C:\Users\A715-42G\.m2\repository\org\webjars\webjars-locator-core\0.58\webjars-locator-core-0.58.jar;C:\Users\A715-42G\.m2\repository\io\github\classgraph\classgraph\4.8.149\classgraph-4.8.149.jar;D:\LT_Web\SpringBoot\java-banking-phase2\backend\common-service\target\classes;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.17.3\jackson-databind-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\apache\dubbo\dubbo-spring-boot-starter\3.3.2\dubbo-spring-boot-starter-3.3.2.jar;C:\Users\A715-42G\.m2\repository\org\apache\dubbo\dubbo-spring-boot-autoconfigure\3.3.2\dubbo-spring-boot-autoconfigure-3.3.2.jar;C:\Users\A715-42G\.m2\repository\org\apache\dubbo\dubbo-spring-boot-autoconfigure-compatible\3.3.2\dubbo-spring-boot-autoconfigure-compatible-3.3.2.jar;C:\Users\A715-42G\.m2\repository\org\apache\dubbo\dubbo\3.3.2\dubbo-3.3.2.jar;C:\Users\A715-42G\.m2\repository\org\javassist\javassist\3.30.2-GA\javassist-3.30.2-GA.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-all\4.1.119.Final\netty-all-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-dns\4.1.119.Final\netty-codec-dns-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-haproxy\4.1.119.Final\netty-codec-haproxy-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-http\4.1.119.Final\netty-codec-http-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-http2\4.1.119.Final\netty-codec-http2-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-memcache\4.1.119.Final\netty-codec-memcache-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-mqtt\4.1.119.Final\netty-codec-mqtt-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-redis\4.1.119.Final\netty-codec-redis-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-smtp\4.1.119.Final\netty-codec-smtp-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-socks\4.1.119.Final\netty-codec-socks-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-stomp\4.1.119.Final\netty-codec-stomp-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-xml\4.1.119.Final\netty-codec-xml-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-handler-proxy\4.1.119.Final\netty-handler-proxy-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-handler-ssl-ocsp\4.1.119.Final\netty-handler-ssl-ocsp-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-resolver-dns\4.1.119.Final\netty-resolver-dns-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-rxtx\4.1.119.Final\netty-transport-rxtx-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-sctp\4.1.119.Final\netty-transport-sctp-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-udt\4.1.119.Final\netty-transport-udt-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-classes-kqueue\4.1.119.Final\netty-transport-classes-kqueue-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-resolver-dns-classes-macos\4.1.119.Final\netty-resolver-dns-classes-macos-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final-linux-x86_64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final-linux-aarch_64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final-linux-riscv64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-kqueue\4.1.119.Final\netty-transport-native-kqueue-4.1.119.Final-osx-x86_64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-kqueue\4.1.119.Final\netty-transport-native-kqueue-4.1.119.Final-osx-aarch_64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-resolver-dns-native-macos\4.1.119.Final\netty-resolver-dns-native-macos-4.1.119.Final-osx-x86_64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-resolver-dns-native-macos\4.1.119.Final\netty-resolver-dns-native-macos-4.1.119.Final-osx-aarch_64.jar;C:\Users\A715-42G\.m2\repository\org\apache\dubbo\hessian-lite\4.0.3\hessian-lite-4.0.3.jar;C:\Users\A715-42G\.m2\repository\com\alibaba\fastjson2\fastjson2\2.0.53\fastjson2-2.0.53.jar;C:\Users\A715-42G\.m2\repository\com\google\protobuf\protobuf-java\3.25.5\protobuf-java-3.25.5.jar;C:\Users\A715-42G\.m2\repository\org\apache\curator\curator-framework\5.1.0\curator-framework-5.1.0.jar;C:\Users\A715-42G\.m2\repository\org\apache\curator\curator-client\5.1.0\curator-client-5.1.0.jar;C:\Users\A715-42G\.m2\repository\com\google\guava\guava\27.0.1-jre\guava-27.0.1-jre.jar;C:\Users\A715-42G\.m2\repository\com\google\guava\failureaccess\1.0.1\failureaccess-1.0.1.jar;C:\Users\A715-42G\.m2\repository\com\google\guava\listenablefuture\9999.0-empty-to-avoid-conflict-with-guava\listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar;C:\Users\A715-42G\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\A715-42G\.m2\repository\org\checkerframework\checker-qual\2.5.2\checker-qual-2.5.2.jar;C:\Users\A715-42G\.m2\repository\com\google\errorprone\error_prone_annotations\2.2.0\error_prone_annotations-2.2.0.jar;C:\Users\A715-42G\.m2\repository\com\google\j2objc\j2objc-annotations\1.1\j2objc-annotations-1.1.jar;C:\Users\A715-42G\.m2\repository\org\codehaus\mojo\animal-sniffer-annotations\1.17\animal-sniffer-annotations-1.17.jar;C:\Users\A715-42G\.m2\repository\org\apache\zookeeper\zookeeper\3.7.1\zookeeper-3.7.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\zookeeper\zookeeper-jute\3.7.1\zookeeper-jute-3.7.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\yetus\audience-annotations\0.12.0\audience-annotations-0.12.0.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-handler\4.1.119.Final\netty-handler-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-common\4.1.119.Final\netty-common-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-resolver\4.1.119.Final\netty-resolver-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-buffer\4.1.119.Final\netty-buffer-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport\4.1.119.Final\netty-transport-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-unix-common\4.1.119.Final\netty-transport-native-unix-common-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec\4.1.119.Final\netty-codec-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-classes-epoll\4.1.119.Final\netty-transport-classes-epoll-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\org\slf4j\slf4j-api\2.0.17\slf4j-api-2.0.17.jar;C:\Users\A715-42G\.m2\repository\org\apache\curator\curator-recipes\5.5.0\curator-recipes-5.5.0.jar;C:\Users\A715-42G\.m2\repository\org\apache\curator\curator-x-discovery\5.5.0\curator-x-discovery-5.5.0.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-starter-vault-config\4.1.1\spring-cloud-starter-vault-config-4.1.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\httpcomponents\client5\httpclient5\5.3.1\httpclient5-5.3.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\httpcomponents\core5\httpcore5-h2\5.2.5\httpcore5-h2-5.2.5.jar;C:\Users\A715-42G\.m2\repository\org\apache\httpcomponents\core5\httpcore5\5.2.5\httpcore5-5.2.5.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-starter\4.1.2\spring-cloud-starter-4.1.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-context\4.1.2\spring-cloud-context-4.1.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-commons\4.1.2\spring-cloud-commons-4.1.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-rsa\1.1.2\spring-security-rsa-1.1.2.jar;C:\Users\A715-42G\.m2\repository\org\bouncycastle\bcprov-jdk18on\1.77\bcprov-jdk18on-1.77.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-vault-config\4.1.1\spring-cloud-vault-config-4.1.1.jar;C:\Users\A715-42G\.m2\repository\org\springframework\vault\spring-vault-core\3.1.1\spring-vault-core-3.1.1.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-data-redis\3.3.11\spring-boot-starter-data-redis-3.3.11.jar;C:\Users\A715-42G\.m2\repository\io\lettuce\lettuce-core\6.3.2.RELEASE\lettuce-core-6.3.2.RELEASE.jar;C:\Users\A715-42G\.m2\repository\io\projectreactor\reactor-core\3.6.16\reactor-core-3.6.16.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-redis\3.3.11\spring-data-redis-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-keyvalue\3.3.11\spring-data-keyvalue-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-oxm\6.1.19\spring-oxm-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-context-support\6.1.19\spring-context-support-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-stream\4.2.1\spring-cloud-stream-4.2.1.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-messaging\6.1.19\spring-messaging-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\integration\spring-integration-core\6.3.9\spring-integration-core-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\integration\spring-integration-jmx\6.3.9\spring-integration-jmx-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\retry\spring-retry\2.0.11\spring-retry-2.0.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-function-context\4.2.2\spring-cloud-function-context-4.2.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-function-core\4.2.2\spring-cloud-function-core-4.2.2.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-joda\2.17.3\jackson-datatype-joda-2.17.3.jar;C:\Users\A715-42G\.m2\repository\joda-time\joda-time\2.10.14\joda-time-2.10.14.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-starter-stream-kafka\4.2.1\spring-cloud-starter-stream-kafka-4.2.1.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-stream-binder-kafka\4.2.1\spring-cloud-stream-binder-kafka-4.2.1.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-stream-binder-kafka-core\4.2.1\spring-cloud-stream-binder-kafka-core-4.2.1.jar;C:\Users\A715-42G\.m2\repository\org\springframework\integration\spring-integration-kafka\6.3.9\spring-integration-kafka-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\kafka\spring-kafka\3.2.8\spring-kafka-3.2.8.jar;C:\Users\A715-42G\.m2\repository\org\apache\kafka\kafka-clients\3.7.2\kafka-clients-3.7.2.jar;C:\Users\A715-42G\.m2\repository\com\github\luben\zstd-jni\1.5.6-4\zstd-jni-1.5.6-4.jar;C:\Users\A715-42G\.m2\repository\org\lz4\lz4-java\1.8.0\lz4-java-1.8.0.jar;C:\Users\A715-42G\.m2\repository\org\xerial\snappy\snappy-java\1.1.10.5\snappy-java-1.1.10.5.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.3.11\spring-boot-starter-security-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-aop\6.1.19\spring-aop-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-config\6.3.9\spring-security-config-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-web\6.3.9\spring-security-web-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-oauth2-resource-server\3.3.11\spring-boot-starter-oauth2-resource-server-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-core\6.3.9\spring-security-core-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-crypto\6.3.9\spring-security-crypto-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-oauth2-resource-server\6.3.9\spring-security-oauth2-resource-server-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-oauth2-core\6.3.9\spring-security-oauth2-core-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-oauth2-jose\6.3.9\spring-security-oauth2-jose-6.3.9.jar;C:\Users\A715-42G\.m2\repository\com\nimbusds\nimbus-jose-jwt\9.37.3\nimbus-jose-jwt-9.37.3.jar;C:\Users\A715-42G\.m2\repository\com\github\stephenc\jcip\jcip-annotations\1.0-1\jcip-annotations-1.0-1.jar;C:\Users\A715-42G\.m2\repository\org\keycloak\keycloak-admin-client\26.0.0\keycloak-admin-client-26.0.0.jar;C:\Users\A715-42G\.m2\repository\org\keycloak\keycloak-client-common-synced\26.0.0\keycloak-client-common-synced-26.0.0.jar;C:\Users\A715-42G\.m2\repository\org\jboss\logging\commons-logging-jboss-logging\1.0.0.Final\commons-logging-jboss-logging-1.0.0.Final.jar;C:\Users\A715-42G\.m2\repository\org\apache\httpcomponents\httpclient\4.5.14\httpclient-4.5.14.jar;C:\Users\A715-42G\.m2\repository\org\apache\httpcomponents\httpcore\4.4.16\httpcore-4.4.16.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.17.3\jackson-core-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.17.3\jackson-annotations-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.17.3\jackson-datatype-jdk8-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.17.3\jackson-datatype-jsr310-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\eclipse\microprofile\openapi\microprofile-openapi-api\3.1.1\microprofile-openapi-api-3.1.1.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-client\6.2.9.Final\resteasy-client-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-client-api\6.2.9.Final\resteasy-client-api-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-core-spi\6.2.9.Final\resteasy-core-spi-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-core\6.2.9.Final\resteasy-core-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\org\jboss\jandex\2.4.5.Final\jandex-2.4.5.Final.jar;C:\Users\A715-42G\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\A715-42G\.m2\repository\com\ibm\async\asyncutil\0.1.0\asyncutil-0.1.0.jar;C:\Users\A715-42G\.m2\repository\commons-codec\commons-codec\1.16.1\commons-codec-1.16.1.jar;C:\Users\A715-42G\.m2\repository\jakarta\ws\rs\jakarta.ws.rs-api\3.1.0\jakarta.ws.rs-api-3.1.0.jar;C:\Users\A715-42G\.m2\repository\org\reactivestreams\reactive-streams\1.0.4\reactive-streams-1.0.4.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-multipart-provider\6.2.9.Final\resteasy-multipart-provider-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\jakarta\mail\jakarta.mail-api\2.1.3\jakarta.mail-api-2.1.3.jar;C:\Users\A715-42G\.m2\repository\org\eclipse\angus\angus-mail\2.0.3\angus-mail-2.0.3.jar;C:\Users\A715-42G\.m2\repository\org\apache\james\apache-mime4j-dom\0.8.11\apache-mime4j-dom-0.8.11.jar;C:\Users\A715-42G\.m2\repository\org\apache\james\apache-mime4j-core\0.8.11\apache-mime4j-core-0.8.11.jar;C:\Users\A715-42G\.m2\repository\org\apache\james\apache-mime4j-storage\0.8.11\apache-mime4j-storage-0.8.11.jar;C:\Users\A715-42G\.m2\repository\commons-io\commons-io\2.11.0\commons-io-2.11.0.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-jackson2-provider\6.2.9.Final\resteasy-jackson2-provider-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\jakarta\rs\jackson-jakarta-rs-base\2.17.3\jackson-jakarta-rs-base-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\jakarta\rs\jackson-jakarta-rs-json-provider\2.17.3\jackson-jakarta-rs-json-provider-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\module\jackson-module-jakarta-xmlbind-annotations\2.17.3\jackson-module-jakarta-xmlbind-annotations-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\github\java-json-tools\json-patch\1.13\json-patch-1.13.jar;C:\Users\A715-42G\.m2\repository\com\github\java-json-tools\msg-simple\1.2\msg-simple-1.2.jar;C:\Users\A715-42G\.m2\repository\com\github\java-json-tools\btf\1.3\btf-1.3.jar;C:\Users\A715-42G\.m2\repository\com\github\java-json-tools\jackson-coreutils\2.0\jackson-coreutils-2.0.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-jaxb-provider\6.2.9.Final\resteasy-jaxb-provider-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\codemodel\4.0.5\codemodel-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-jxc\4.0.5\jaxb-jxc-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-xjc\4.0.5\jaxb-xjc-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\xsom\4.0.5\xsom-4.0.5.jar;C:\Users\A715-42G\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\A715-42G\.m2\repository\com\sun\istack\istack-commons-tools\4.1.2\istack-commons-tools-4.1.2.jar;C:\Users\A715-42G\.m2\repository\com\sun\xml\bind\external\relaxng-datatype\4.0.3\relaxng-datatype-4.0.3.jar;C:\Users\A715-42G\.m2\repository\com\sun\xml\bind\external\rngom\4.0.3\rngom-4.0.3.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Saigon, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, java.vm.specification.version=17, os.name=Windows 10, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-17\bin, sun.java.command=com.example.transaction_service.TransactionServiceApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@30465ca7, com.sun.management.jmxremote=, jdk.debug=release, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, hibernate.cdi.extensions=true, user.home=C:\Users\A715-42G, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-01-17, java.home=C:\Program Files\Java\jdk-17, file.separator=\, spring.output.ansi.enabled=always, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.6+9-LTS-190, user.name=A715-42G, spring.jmx.enabled=true, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\A715-42G\AppData\Local\Temp\, catalina.home=C:\Users\A715-42G\AppData\Local\Temp\tomcat.8088.10219713387079211933, java.version=17.0.6, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=D:\LT_Web\SpringBoot\java-banking-phase2, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=23752, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\A715-42G\AppData\Local\Temp\tomcat.8088.10219713387079211933, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@19529d1d, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-17\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;D:\Document\xxx\apache-maven-3.9.1\bin;C:\Program Files (x86)\Dev-Cpp\MinGW64\bin;C:\Program Files\Git\cmd;C:\Program Files\Java\jdk-17\bin;C:\XamPP\php;D:\LT_Web\SpringBoot\SpringBootCLI\spring-3.2.1\bin;D:\sqlite;D:\Document\Java\Maven\apache-maven-3.9.9\bin;D:\Document\Java\Maven\apache-maven-3.9.9\bin;C:\Program Files\Cloudflare\Cloudflare WARP\;C:\ProgramData\chocolatey\bin;D:\KienLongBank\Vault;D:\GrafanaLabs\grafana\bin;D:\KienLongBank\InfluxData\influxdb-1.8.10-1;D:\Document\Work\Redis;C:\Program Files\Docker\Docker\resources\bin;D:\nodejs\nvm;C:\nvm4w\nodejs;C:\Program Files\nodejs\;C:\Users\A715-42G\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\A715-42G\AppData\Local\Programs\Python\Python310\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\A715-42G\AppData\Local\Programs\Eclipse Adoptium\jdk-17.0.3.7-hotspot\bin;C:\Users\A715-42G\AppData\Local\Microsoft\WindowsApps;C:\Users\A715-42G\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\Azure Data Studio\bin;C:\Program Files\Git\bin;D:\Document\HQT_ATCSDL\MongoDB\mongosh-1.8.2-win32-x64\bin;C:\XamPP\php;C:\Program Files\Azure Data Studio\bin;D:\nodejs\nvm;C:\nvm4w\nodejs;C:\Users\A715-42G\AppData\Roaming\npm;D:\Document\cursor\resources\app\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, emulated-client, sharing, java.vm.version=17.0.6+9-LTS-190, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=61.0, LOGGED_APPLICATION_NAME=[transaction-service] } MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {} MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.example.transaction_service.entity.Transaction] is safe MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@fe8ce03] under count; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@26957cc5] under every; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@29c4e0c7] under any; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2b67f77d] under sinh; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@67354ed3] under cosh; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1af0d971] under tanh; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@70c17367] under pi; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6409ae1d] under log; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : length -> character_length MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@404d87e4] under position; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@5c6e36cb] under overlay; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@3d49e4b0] under trim; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@35cdc233] under cast; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@17dfe86c] under collate; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@38523333] under extract; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@4cfb03da] under ifnull; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@7dd2f66b] under pad; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@6175b5ae] under str; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@2cba721f] under format; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@58ffea8e] under timestampadd; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@61f57304] under timestampdiff; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6758fa6b] under current_date; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5b25913c] under current_time; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@25610270] under current_timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current date -> current_date MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current time -> current_time MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7641ac96] under local_date; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@566a9b97] under local_time; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@21314c17] under local_datetime; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@ceea8c3] under offset_datetime; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local date -> local_date MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local time -> local_time MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@773090d4] under instant; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current_instant -> instant MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@54ea3178] under sql; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6409ae1d MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@75be7c7f] under lpad; prior registration was NamedSqmFunctionTemplate(lpad) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@4e20cf98] under rpad; prior registration was NamedSqmFunctionTemplate(rpad) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : day -> dayofmonth MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@415e5785] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@404d87e4 MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@28af8e43] under trunc; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : truncate -> trunc MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@206e868b] under bitand; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@63214287] under bitor; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@9ee94a2] under bitxor; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5de7de4a] under bitnot; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@9e941a3] under format; prior registration was org.hibernate.dialect.function.FormatFunction@2cba721f MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@566a9b97 MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@21314c17 MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@60351f63] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@70c17367 MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1d03dc43] under chr; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : char -> chr MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7ef54427] under sysdate; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@22b6a57d] under listagg; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - abs(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double acos(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - addtime(TIME datetime, TIME time) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean any(BOOLEAN arg) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer ascii(STRING arg) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double asin(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - avg(arg) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bit_and(arg) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bit_or(arg) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitand(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitnot(arg) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitor(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitxor(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - cast(arg as Type) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - ceiling(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Character char(INTEGER arg) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Character chr(INTEGER arg) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]]) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String collate(STRING string as COLLATION collation) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]]) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double cos(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double cosh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double cot(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Long count([distinct ]{arg|*}) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer crc32(arg) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date curdate() MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date current date MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time current time MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current timestamp MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date current_date MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Instant current_instant MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time current_time MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current_timestamp MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time curtime() MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date date(arg) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer datediff(DATE end, DATE start) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer day(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String dayname(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofmonth(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofweek(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofyear(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double degrees(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean every(BOOLEAN arg) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double exp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - floor(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]]) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer hour(TIME arg) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - ifnull(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Instant instant MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]]) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date last_day(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]]) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String left(STRING string, INTEGER length) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double ln(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local date MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local datetime MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local time MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local_date MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local_datetime MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local_time MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtime MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtimestamp MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start]) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1]) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double log10(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double log2(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String lower(STRING string) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String lpad(string, length[, padding]) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters]) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - max(COMPARABLE arg) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String md5(arg) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer microsecond(TIME arg) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - min(COMPARABLE arg) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer minute(TIME arg) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer month(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String monthname(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp now() MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - nullif(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset datetime MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset_datetime MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length]) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character]) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double pi MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer position(STRING pattern in STRING string) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer quarter(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double radians(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double rand([INTEGER seed]) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String repeat(STRING string, INTEGER times) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String reverse(STRING arg) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String right(STRING string, INTEGER length) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places]) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String rpad(string, length[, padding]) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters]) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer second(TIME arg) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String sha(arg) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String sha1(arg) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String sha2(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer sign(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double sin(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double sinh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String soundex(arg) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String space(INTEGER arg) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Object sql MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double sqrt(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String str(arg) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length]) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length]) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - subtime(TIME datetime, TIME time) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - sum(arg) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp sysdate() MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double tan(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double tanh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String time(arg) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1]) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - trunc( ... ) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - truncate( ... ) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String upper(STRING string) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date utc_date MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time utc_time MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp utc_timestamp MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_pop(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_samp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double variance(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer week(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer year(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG org.hibernate.orm.query.plan.cache - Starting QueryInterpretationCache(2048) MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.e.i.EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.example.transaction_service.entity.Transaction] is safe MDC:[traceId=, spanId=]
2025-06-10 21:44:51 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-10 21:44:52 [restartedMain] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.example.transaction_service.entity.Transaction]: private accessor [amount] MDC:[traceId=, spanId=]
2025-06-10 21:44:52 [restartedMain] DEBUG o.h.orm.model.mapping.creation - Starting post-init callbacks MDC:[traceId=, spanId=]
2025-06-10 21:44:52 [restartedMain] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(com.example.transaction_service.entity.Transaction) `staticFetchableList` generator MDC:[traceId=, spanId=]
2025-06-10 21:44:52 [restartedMain] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 21:44:52 [restartedMain] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction)] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 21:44:52 [restartedMain] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction.updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 21:44:52 [restartedMain] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 21:44:52 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-10 21:44:52 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select id from tbl_transaction where id=? MDC:[traceId=, spanId=]
2025-06-10 21:44:52 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into tbl_transaction (amount,bank_type,created_at,created_by,currency,description,destination_bank_code,destination_bank_name,failed_reason,from_account_number,reference_code,status,timestamp,to_account_number,type,updated_at,updated_by,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) MDC:[traceId=, spanId=]
2025-06-10 21:44:52 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update tbl_transaction set amount=?,bank_type=?,created_at=?,created_by=?,currency=?,description=?,destination_bank_code=?,destination_bank_name=?,failed_reason=?,from_account_number=?,reference_code=?,status=?,timestamp=?,to_account_number=?,type=?,updated_at=?,updated_by=? where id=? MDC:[traceId=, spanId=]
2025-06-10 21:44:52 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from tbl_transaction where id=? MDC:[traceId=, spanId=]
2025-06-10 21:44:52 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration) MDC:[traceId=, spanId=]
2025-06-10 21:44:52 [restartedMain] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7b414832] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@79847d2e] MDC:[traceId=, spanId=]
2025-06-10 21:44:52 [restartedMain] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named HQL queries MDC:[traceId=, spanId=]
2025-06-10 21:44:52 [restartedMain] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named SQL queries MDC:[traceId=, spanId=]
2025-06-10 21:44:52 [restartedMain] DEBUG org.hibernate.mapping.Table - No alter strings for table : tbl_transaction MDC:[traceId=, spanId=]
2025-06-10 21:44:52 [restartedMain] DEBUG o.h.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@bb70d43 MDC:[traceId=, spanId=]
2025-06-10 21:44:52 [restartedMain] DEBUG o.h.internal.SessionFactoryRegistry - Registering SessionFactory: c4bc407f-5234-48e2-864b-d4c16915a40b (<unnamed>) MDC:[traceId=, spanId=]
2025-06-10 21:44:52 [restartedMain] DEBUG o.h.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured MDC:[traceId=, spanId=]
2025-06-10 21:44:52 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Instantiated SessionFactory MDC:[traceId=, spanId=]
2025-06-10 21:44:53 [restartedMain] DEBUG o.h.s.internal.StatisticsInitiator - Statistics initialized [enabled=false] MDC:[traceId=, spanId=]
2025-06-10 21:44:53 [restartedMain] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy3/jdk.proxy3.$Proxy223.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.getCountQuery(JpaQueryLookupStrategy.java:204)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:171)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.example.transaction_service.TransactionServiceApplication.main(TransactionServiceApplication.java:15)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-06-10 21:44:53 [restartedMain] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy3/jdk.proxy3.$Proxy223.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.getCountQuery(JpaQueryLookupStrategy.java:204)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:171)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.example.transaction_service.TransactionServiceApplication.main(TransactionServiceApplication.java:15)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-06-10 21:44:53 [restartedMain] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy3/jdk.proxy3.$Proxy223.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.example.transaction_service.TransactionServiceApplication.main(TransactionServiceApplication.java:15)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-06-10 21:44:53 [restartedMain] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy3/jdk.proxy3.$Proxy223.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.example.transaction_service.TransactionServiceApplication.main(TransactionServiceApplication.java:15)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-06-10 21:44:57 [restartedMain] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-06-10 21:44:57 [restartedMain] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator MDC:[traceId=, spanId=]
2025-06-10 21:44:57 [restartedMain] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory MDC:[traceId=, spanId=]
2025-06-10 21:44:57 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-06-10 21:44:57 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader MDC:[traceId=, spanId=]
2025-06-10 21:44:57 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-06-10 21:44:57 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-06-10 21:44:57 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-06-10 21:44:57 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-06-10 21:44:57 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-06-10 21:44:57 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-06-10 21:44:57 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-06-10 21:44:57 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-06-10 21:44:57 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-06-10 21:44:57 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-06-10 21:44:57 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-06-10 21:45:00 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 21:45:00 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 21:45:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 21:45:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 21:45:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7eeaa54e MDC:[traceId=, spanId=]
2025-06-10 21:45:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-10 21:45:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@54626f88 MDC:[traceId=, spanId=]
2025-06-10 21:45:01 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 21:45:01 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 21:45:01 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 21:45:01 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 21:45:01 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@697821650 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 21:45:01 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 21:45:01 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 21:46:00 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 21:46:00 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 21:46:00 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 21:46:00 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 21:46:00 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3c1e4a41 MDC:[traceId=, spanId=]
2025-06-10 21:46:00 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-10 21:46:00 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7b8520d5 MDC:[traceId=, spanId=]
2025-06-10 21:46:00 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 21:46:00 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 21:46:00 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 21:46:00 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 21:46:00 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@578994737 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 21:46:00 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 21:46:00 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 21:47:00 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 21:47:00 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 21:47:00 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 21:47:00 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 21:47:00 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5ddaac44 MDC:[traceId=, spanId=]
2025-06-10 21:47:00 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-10 21:47:00 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@156573d6 MDC:[traceId=, spanId=]
2025-06-10 21:47:00 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 21:47:00 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 21:47:00 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 21:47:00 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 21:47:00 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@2033415071 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 21:47:00 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 21:47:00 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 21:48:00 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 21:48:00 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 21:48:00 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 21:48:00 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 21:48:00 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1647fa81 MDC:[traceId=, spanId=]
2025-06-10 21:48:00 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-10 21:48:00 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3ae94172 MDC:[traceId=, spanId=]
2025-06-10 21:48:00 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 21:48:00 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 21:48:00 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 21:48:00 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 21:48:00 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@1453149032 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 21:48:00 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 21:48:00 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 21:49:00 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 21:49:00 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 21:49:00 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 21:49:00 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 21:49:00 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@52e24353 MDC:[traceId=, spanId=]
2025-06-10 21:49:00 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-10 21:49:00 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@25476a3e MDC:[traceId=, spanId=]
2025-06-10 21:49:00 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 21:49:00 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 21:49:00 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 21:49:00 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 21:49:00 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@816092324 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 21:49:00 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 21:49:00 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 21:50:00 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 21:50:00 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 21:50:00 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 21:50:00 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 21:50:00 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@28f5a827 MDC:[traceId=, spanId=]
2025-06-10 21:50:00 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-10 21:50:00 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4c81b251 MDC:[traceId=, spanId=]
2025-06-10 21:50:00 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 21:50:00 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 21:50:00 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 21:50:00 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 21:50:00 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@621735339 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 21:50:00 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 21:50:00 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 21:51:04 [SpringContextShutdownHook] DEBUG o.h.internal.SessionFactoryImpl - HHH000031: Closing MDC:[traceId=, spanId=]
2025-06-10 21:51:05 [SpringContextShutdownHook] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@4069a68c] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@79847d2e] MDC:[traceId=, spanId=]
2025-06-10 21:51:05 [SpringContextShutdownHook] DEBUG o.h.s.i.AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries MDC:[traceId=, spanId=]
2025-06-10 21:51:05 [SpringContextShutdownHook] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries MDC:[traceId=, spanId=]
2025-06-10 21:51:31 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final MDC:[traceId=, spanId=]
2025-06-10 21:51:31 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-06-10 21:51:31 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-06-10 21:51:31 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-06-10 21:51:31 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-06-10 21:51:31 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-06-10 21:51:31 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-06-10 21:51:31 [background-preinit] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-06-10 21:51:32 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-06-10 21:51:32 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-06-10 21:51:32 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-06-10 21:51:32 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-06-10 21:51:32 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-06-10 21:51:32 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-06-10 21:51:43 [restartedMain] DEBUG o.h.jpa.internal.util.LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@12a83a08
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/LT_Web/SpringBoot/java-banking-phase2/backend/transaction-service/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.example.transaction_service.entity.Transaction]
	Mapping files names []
	Properties [] MDC:[traceId=, spanId=]
2025-06-10 21:51:43 [restartedMain] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator]. MDC:[traceId=, spanId=]
2025-06-10 21:51:43 [restartedMain] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator]. MDC:[traceId=, spanId=]
2025-06-10 21:51:43 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final MDC:[traceId=, spanId=]
2025-06-10 21:51:43 [restartedMain] DEBUG org.hibernate.cfg.Environment - HHH000206: 'hibernate.properties' not found MDC:[traceId=, spanId=]
2025-06-10 21:51:43 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator] MDC:[traceId=, spanId=]
2025-06-10 21:51:43 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator] MDC:[traceId=, spanId=]
2025-06-10 21:51:43 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator] MDC:[traceId=, spanId=]
2025-06-10 21:51:43 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator] MDC:[traceId=, spanId=]
2025-06-10 21:51:43 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned] MDC:[traceId=, spanId=]
2025-06-10 21:51:43 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator] MDC:[traceId=, spanId=]
2025-06-10 21:51:43 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator] MDC:[traceId=, spanId=]
2025-06-10 21:51:43 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] MDC:[traceId=, spanId=]
2025-06-10 21:51:43 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator] MDC:[traceId=, spanId=]
2025-06-10 21:51:43 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator] MDC:[traceId=, spanId=]
2025-06-10 21:51:43 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] MDC:[traceId=, spanId=]
2025-06-10 21:51:43 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator] MDC:[traceId=, spanId=]
2025-06-10 21:51:43 [restartedMain] DEBUG o.h.c.i.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered MDC:[traceId=, spanId=]
2025-06-10 21:51:43 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@120ca37e MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@120ca37e MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@120ca37e MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@d383b8a MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@d383b8a MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@471ab6b4 MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@471ab6b4 MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@61b66129 MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@61b66129 MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@16d62932 MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@16d62932 MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@16d62932 MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@5afea409 MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@5afea409 MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@5afea409 MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@484306f4 MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@484306f4 MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@1a2e89fc MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@3d16ac32 MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@3d16ac32 MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@12e78975 MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@4243497b MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@2c4c49a6 MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@2c4c49a6 MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@2c4c49a6 MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@24330721 MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@24330721 MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@24330721 MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@a318ef3 MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@a318ef3 MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@a318ef3 MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@5261065f MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@5261065f MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@5261065f MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@1c2e64cc MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@1c2e64cc MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@1c2e64cc MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@20987267 MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@20987267 MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@26d82691 MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@26d82691 MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@7c518feb MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@7c518feb MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@7c518feb MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@13b69ca9 MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@705edff2 MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@705edff2 MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@175583c6 MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@670b7810 MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@670b7810 MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@670b7810 MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@40fff38c MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@4658052e MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@7da8e590 MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@415fd9cd MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@415fd9cd MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@7e0321f9 MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@7e0321f9 MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@78742a62 MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@42cac499 MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@7de4ecbc MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@1a8f1610 MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@43711819 MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@578bf2e2 MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@dd075a3 MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@dd075a3 MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@6f0dcd9f MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@6f0dcd9f MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@2477a1b7 MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@2477a1b7 MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@2c634b39 MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@2c634b39 MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@22104e7b MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@22104e7b MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@23700e93 MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3a137953 MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@c9fd7ab MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@c9fd7ab MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@2cdc23d5 MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@ffbb44b MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2e038d06 MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@5cd325e2 MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@5cd325e2 MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@11dc7726 MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4357c0ba MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@710e0e6b MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@710e0e6b MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@34b7d99d MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@34b7d99d MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@4620ed6a MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@4620ed6a MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@4620ed6a MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@3b0fa704 MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@3b0fa704 MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@3b0fa704 MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@3af38b58 MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@3082d6aa MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@7188366d MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@7188366d MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@37f998df MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@37f998df MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@37f998df MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@11766c33 MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@37e7cf31 MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@76cacfe MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@76cacfe MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@7c28e3ac MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@7c28e3ac MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@7c28e3ac MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@5e1d1fee MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@5e1d1fee MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@578add5b MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@578add5b MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@35639008 MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@35639008 MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@eed208b MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@eed208b MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@3839bcd7 MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@3839bcd7 MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@39d8ce8e MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@1012fa6d MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@5324aecc MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5324aecc MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@7eeadb4e MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@22e01041 MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@f65a068 MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@3538f7c3 MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@1d206a81 MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@3fe0137c MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@1da48208 MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@6fd0f890 MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@71bae389 MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@2f653051] into BootstrapContext; was [null] MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@2f653051) [was null] MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@40d1fe80] into BootstrapContext; was [null] MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@1bd43c72] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@7e8705e3] MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@2f653051] MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@2f653051] MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Database ->
	   name : MySQL
	version : 8.0.32
	  major : 8
	  minor : 0 MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Driver ->
	   name : MySQL Connector/J
	version : mysql-connector-j-8.3.0 (Revision: 805f872a57875f311cb82487efcfb070411a3fa0)
	  major : 8
	  minor : 3 MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - JDBC version : 4.2 MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default) MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG org.hibernate.orm.dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQL8Dialect, version: 8.0 MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@56c1737a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5c9e8b) MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4bb119b2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@291ae6a5) MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@741d1a5f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@10517a91) MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@53ee9da0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2d3f76b6) MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@316c4eac) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2af23fe2) MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@dd6a481) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5b0ae94b) MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@840d5a8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@33f6f66d) MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@bbcbe3e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7f04eb3) MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@9133670) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@d52eca1) MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor) MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor) MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor) MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT)) MDC:[traceId=, spanId=]
2025-06-10 21:51:44 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT)) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@3519ffa7 MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@7eeadb4e` MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6c996e2b] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@b2d3dc4] MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.boot.model.relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}] MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Transaction MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity com.example.transaction_service.entity.Transaction on table tbl_transaction MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE') MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.example.transaction_service.entity.Transaction] is safe MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property id with lazy=false MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:id] MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for id MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.id MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property id MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, assigned, , ...) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property amount with lazy=false MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:amount] MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for amount MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.amount MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property amount MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property bankType with lazy=false MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:bankType] MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for bankType MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.bank_type MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property bankType MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:createdAt] MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for createdAt MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.created_at MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property createdAt MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property createdBy with lazy=false MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:createdBy] MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for createdBy MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.created_by MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property createdBy MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property currency with lazy=false MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:currency] MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for currency MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.currency MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property currency MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property description with lazy=false MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:description] MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for description MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.description MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property description MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property destinationBankCode with lazy=false MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:destinationBankCode] MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for destinationBankCode MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.destination_bank_code MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property destinationBankCode MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property destinationBankName with lazy=false MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:destinationBankName] MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for destinationBankName MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.destination_bank_name MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property destinationBankName MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property failedReason with lazy=false MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:failedReason] MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for failedReason MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.failed_reason MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property failedReason MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property fromAccountNumber with lazy=false MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:fromAccountNumber] MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for fromAccountNumber MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.from_account_number MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property fromAccountNumber MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property referenceCode with lazy=false MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:referenceCode] MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for referenceCode MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.reference_code MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property referenceCode MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property status with lazy=false MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:status] MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for status MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.status MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property status MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property timestamp with lazy=false MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:timestamp] MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for timestamp MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.timestamp MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property timestamp MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property toAccountNumber with lazy=false MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:toAccountNumber] MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for toAccountNumber MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.to_account_number MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property toAccountNumber MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property type with lazy=false MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:type] MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for type MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.type MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property type MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:updatedAt] MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for updatedAt MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.updated_at MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property updatedAt MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property updatedBy with lazy=false MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:updatedBy] MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for updatedBy MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.updated_by MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property updatedBy MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: com.example.transaction_service.entity MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.j.e.i.CallbackDefinitionResolverLegacyImpl - Adding touchForUpdate as PreUpdate callback for entity com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.j.e.i.CallbackDefinitionResolverLegacyImpl - Adding prePersist as PrePersist callback for entity com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.j.e.i.CallbackDefinitionResolverLegacyImpl - Adding touchForCreate as PrePersist callback for entity com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bankType MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for createdAt MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for createdBy MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for currency MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for description MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for destinationBankCode MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for destinationBankName MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for failedReason MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for fromAccountNumber MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for referenceCode MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for timestamp MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for toAccountNumber MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for type MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for updatedAt MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for updatedBy MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [tbl_transaction] MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Building session factory MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Instantiating SessionFactory with settings: {jdk.tls.rejectClientInitiatedRenegotiation=true, java.specification.version=17, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@1b78dc61, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=D:\LT_Web\SpringBoot\java-banking-phase2\backend\transaction-service\target\classes;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-actuator\3.3.11\spring-boot-starter-actuator-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter\3.3.11\spring-boot-starter-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.3.11\spring-boot-starter-logging-3.3.11.jar;C:\Users\A715-42G\.m2\repository\ch\qos\logback\logback-classic\1.5.18\logback-classic-1.5.18.jar;C:\Users\A715-42G\.m2\repository\ch\qos\logback\logback-core\1.5.18\logback-core-1.5.18.jar;C:\Users\A715-42G\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.23.1\log4j-to-slf4j-2.23.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\logging\log4j\log4j-api\2.23.1\log4j-api-2.23.1.jar;C:\Users\A715-42G\.m2\repository\org\slf4j\jul-to-slf4j\2.0.17\jul-to-slf4j-2.0.17.jar;C:\Users\A715-42G\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\A715-42G\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-actuator-autoconfigure\3.3.11\spring-boot-actuator-autoconfigure-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-actuator\3.3.11\spring-boot-actuator-3.3.11.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-observation\1.13.13\micrometer-observation-1.13.13.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-commons\1.13.13\micrometer-commons-1.13.13.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-jakarta9\1.13.13\micrometer-jakarta9-1.13.13.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-core\1.13.13\micrometer-core-1.13.13.jar;C:\Users\A715-42G\.m2\repository\org\hdrhistogram\HdrHistogram\2.2.2\HdrHistogram-2.2.2.jar;C:\Users\A715-42G\.m2\repository\org\latencyutils\LatencyUtils\2.0.3\LatencyUtils-2.0.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.3.11\spring-boot-starter-data-jpa-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.3.11\spring-boot-starter-aop-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\aspectj\aspectjweaver\1.9.24\aspectjweaver-1.9.24.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.3.11\spring-boot-starter-jdbc-3.3.11.jar;C:\Users\A715-42G\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-jdbc\6.1.19\spring-jdbc-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\orm\hibernate-core\6.5.3.Final\hibernate-core-6.5.3.Final.jar;C:\Users\A715-42G\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\A715-42G\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\A715-42G\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\A715-42G\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\A715-42G\.m2\repository\net\bytebuddy\byte-buddy\1.14.19\byte-buddy-1.14.19.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\A715-42G\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\A715-42G\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-jpa\3.3.11\spring-data-jpa-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-commons\3.3.11\spring-data-commons-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-orm\6.1.19\spring-orm-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-context\6.1.19\spring-context-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-tx\6.1.19\spring-tx-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-beans\6.1.19\spring-beans-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-aspects\6.1.19\spring-aspects-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.3.11\spring-boot-starter-web-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.3.11\spring-boot-starter-json-3.3.11.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.17.3\jackson-module-parameter-names-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.3.11\spring-boot-starter-tomcat-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.40\tomcat-embed-core-10.1.40.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.40\tomcat-embed-websocket-10.1.40.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-web\6.1.19\spring-web-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-webmvc\6.1.19\spring-webmvc-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-expression\6.1.19\spring-expression-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-devtools\3.3.11\spring-boot-devtools-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot\3.3.11\spring-boot-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.3.11\spring-boot-autoconfigure-3.3.11.jar;C:\Users\A715-42G\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\A715-42G\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-core\6.1.19\spring-core-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-jcl\6.1.19\spring-jcl-6.1.19.jar;C:\Users\A715-42G\.m2\repository\com\mysql\mysql-connector-j\8.3.0\mysql-connector-j-8.3.0.jar;C:\Users\A715-42G\.m2\repository\org\projectlombok\lombok\1.18.38\lombok-1.18.38.jar;C:\Users\A715-42G\.m2\repository\org\mapstruct\mapstruct\1.5.5.Final\mapstruct-1.5.5.Final.jar;C:\Users\A715-42G\.m2\repository\org\mapstruct\mapstruct-processor\1.5.5.Final\mapstruct-processor-1.5.5.Final.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-validation\3.3.11\spring-boot-starter-validation-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.40\tomcat-embed-el-10.1.40.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\validator\hibernate-validator\8.0.2.Final\hibernate-validator-8.0.2.Final.jar;C:\Users\A715-42G\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-ui\2.0.2\springdoc-openapi-starter-webmvc-ui-2.0.2.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-api\2.0.2\springdoc-openapi-starter-webmvc-api-2.0.2.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-common\2.0.2\springdoc-openapi-starter-common-2.0.2.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-core-jakarta\2.2.7\swagger-core-jakarta-2.2.7.jar;C:\Users\A715-42G\.m2\repository\org\apache\commons\commons-lang3\3.14.0\commons-lang3-3.14.0.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-annotations-jakarta\2.2.7\swagger-annotations-jakarta-2.2.7.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-models-jakarta\2.2.7\swagger-models-jakarta-2.2.7.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-yaml\2.17.3\jackson-dataformat-yaml-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\webjars\swagger-ui\4.15.5\swagger-ui-4.15.5.jar;C:\Users\A715-42G\.m2\repository\org\webjars\webjars-locator-core\0.58\webjars-locator-core-0.58.jar;C:\Users\A715-42G\.m2\repository\io\github\classgraph\classgraph\4.8.149\classgraph-4.8.149.jar;D:\LT_Web\SpringBoot\java-banking-phase2\backend\common-service\target\classes;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.17.3\jackson-databind-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\apache\dubbo\dubbo-spring-boot-starter\3.3.2\dubbo-spring-boot-starter-3.3.2.jar;C:\Users\A715-42G\.m2\repository\org\apache\dubbo\dubbo-spring-boot-autoconfigure\3.3.2\dubbo-spring-boot-autoconfigure-3.3.2.jar;C:\Users\A715-42G\.m2\repository\org\apache\dubbo\dubbo-spring-boot-autoconfigure-compatible\3.3.2\dubbo-spring-boot-autoconfigure-compatible-3.3.2.jar;C:\Users\A715-42G\.m2\repository\org\apache\dubbo\dubbo\3.3.2\dubbo-3.3.2.jar;C:\Users\A715-42G\.m2\repository\org\javassist\javassist\3.30.2-GA\javassist-3.30.2-GA.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-all\4.1.119.Final\netty-all-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-dns\4.1.119.Final\netty-codec-dns-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-haproxy\4.1.119.Final\netty-codec-haproxy-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-http\4.1.119.Final\netty-codec-http-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-http2\4.1.119.Final\netty-codec-http2-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-memcache\4.1.119.Final\netty-codec-memcache-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-mqtt\4.1.119.Final\netty-codec-mqtt-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-redis\4.1.119.Final\netty-codec-redis-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-smtp\4.1.119.Final\netty-codec-smtp-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-socks\4.1.119.Final\netty-codec-socks-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-stomp\4.1.119.Final\netty-codec-stomp-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-xml\4.1.119.Final\netty-codec-xml-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-handler-proxy\4.1.119.Final\netty-handler-proxy-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-handler-ssl-ocsp\4.1.119.Final\netty-handler-ssl-ocsp-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-resolver-dns\4.1.119.Final\netty-resolver-dns-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-rxtx\4.1.119.Final\netty-transport-rxtx-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-sctp\4.1.119.Final\netty-transport-sctp-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-udt\4.1.119.Final\netty-transport-udt-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-classes-kqueue\4.1.119.Final\netty-transport-classes-kqueue-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-resolver-dns-classes-macos\4.1.119.Final\netty-resolver-dns-classes-macos-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final-linux-x86_64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final-linux-aarch_64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final-linux-riscv64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-kqueue\4.1.119.Final\netty-transport-native-kqueue-4.1.119.Final-osx-x86_64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-kqueue\4.1.119.Final\netty-transport-native-kqueue-4.1.119.Final-osx-aarch_64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-resolver-dns-native-macos\4.1.119.Final\netty-resolver-dns-native-macos-4.1.119.Final-osx-x86_64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-resolver-dns-native-macos\4.1.119.Final\netty-resolver-dns-native-macos-4.1.119.Final-osx-aarch_64.jar;C:\Users\A715-42G\.m2\repository\org\apache\dubbo\hessian-lite\4.0.3\hessian-lite-4.0.3.jar;C:\Users\A715-42G\.m2\repository\com\alibaba\fastjson2\fastjson2\2.0.53\fastjson2-2.0.53.jar;C:\Users\A715-42G\.m2\repository\com\google\protobuf\protobuf-java\3.25.5\protobuf-java-3.25.5.jar;C:\Users\A715-42G\.m2\repository\org\apache\curator\curator-framework\5.1.0\curator-framework-5.1.0.jar;C:\Users\A715-42G\.m2\repository\org\apache\curator\curator-client\5.1.0\curator-client-5.1.0.jar;C:\Users\A715-42G\.m2\repository\com\google\guava\guava\27.0.1-jre\guava-27.0.1-jre.jar;C:\Users\A715-42G\.m2\repository\com\google\guava\failureaccess\1.0.1\failureaccess-1.0.1.jar;C:\Users\A715-42G\.m2\repository\com\google\guava\listenablefuture\9999.0-empty-to-avoid-conflict-with-guava\listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar;C:\Users\A715-42G\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\A715-42G\.m2\repository\org\checkerframework\checker-qual\2.5.2\checker-qual-2.5.2.jar;C:\Users\A715-42G\.m2\repository\com\google\errorprone\error_prone_annotations\2.2.0\error_prone_annotations-2.2.0.jar;C:\Users\A715-42G\.m2\repository\com\google\j2objc\j2objc-annotations\1.1\j2objc-annotations-1.1.jar;C:\Users\A715-42G\.m2\repository\org\codehaus\mojo\animal-sniffer-annotations\1.17\animal-sniffer-annotations-1.17.jar;C:\Users\A715-42G\.m2\repository\org\apache\zookeeper\zookeeper\3.7.1\zookeeper-3.7.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\zookeeper\zookeeper-jute\3.7.1\zookeeper-jute-3.7.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\yetus\audience-annotations\0.12.0\audience-annotations-0.12.0.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-handler\4.1.119.Final\netty-handler-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-common\4.1.119.Final\netty-common-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-resolver\4.1.119.Final\netty-resolver-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-buffer\4.1.119.Final\netty-buffer-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport\4.1.119.Final\netty-transport-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-unix-common\4.1.119.Final\netty-transport-native-unix-common-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec\4.1.119.Final\netty-codec-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-classes-epoll\4.1.119.Final\netty-transport-classes-epoll-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\org\slf4j\slf4j-api\2.0.17\slf4j-api-2.0.17.jar;C:\Users\A715-42G\.m2\repository\org\apache\curator\curator-recipes\5.5.0\curator-recipes-5.5.0.jar;C:\Users\A715-42G\.m2\repository\org\apache\curator\curator-x-discovery\5.5.0\curator-x-discovery-5.5.0.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-starter-vault-config\4.1.1\spring-cloud-starter-vault-config-4.1.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\httpcomponents\client5\httpclient5\5.3.1\httpclient5-5.3.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\httpcomponents\core5\httpcore5-h2\5.2.5\httpcore5-h2-5.2.5.jar;C:\Users\A715-42G\.m2\repository\org\apache\httpcomponents\core5\httpcore5\5.2.5\httpcore5-5.2.5.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-starter\4.1.2\spring-cloud-starter-4.1.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-context\4.1.2\spring-cloud-context-4.1.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-commons\4.1.2\spring-cloud-commons-4.1.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-rsa\1.1.2\spring-security-rsa-1.1.2.jar;C:\Users\A715-42G\.m2\repository\org\bouncycastle\bcprov-jdk18on\1.77\bcprov-jdk18on-1.77.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-vault-config\4.1.1\spring-cloud-vault-config-4.1.1.jar;C:\Users\A715-42G\.m2\repository\org\springframework\vault\spring-vault-core\3.1.1\spring-vault-core-3.1.1.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-data-redis\3.3.11\spring-boot-starter-data-redis-3.3.11.jar;C:\Users\A715-42G\.m2\repository\io\lettuce\lettuce-core\6.3.2.RELEASE\lettuce-core-6.3.2.RELEASE.jar;C:\Users\A715-42G\.m2\repository\io\projectreactor\reactor-core\3.6.16\reactor-core-3.6.16.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-redis\3.3.11\spring-data-redis-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-keyvalue\3.3.11\spring-data-keyvalue-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-oxm\6.1.19\spring-oxm-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-context-support\6.1.19\spring-context-support-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-stream\4.2.1\spring-cloud-stream-4.2.1.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-messaging\6.1.19\spring-messaging-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\integration\spring-integration-core\6.3.9\spring-integration-core-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\integration\spring-integration-jmx\6.3.9\spring-integration-jmx-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\retry\spring-retry\2.0.11\spring-retry-2.0.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-function-context\4.2.2\spring-cloud-function-context-4.2.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-function-core\4.2.2\spring-cloud-function-core-4.2.2.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-joda\2.17.3\jackson-datatype-joda-2.17.3.jar;C:\Users\A715-42G\.m2\repository\joda-time\joda-time\2.10.14\joda-time-2.10.14.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-starter-stream-kafka\4.2.1\spring-cloud-starter-stream-kafka-4.2.1.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-stream-binder-kafka\4.2.1\spring-cloud-stream-binder-kafka-4.2.1.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-stream-binder-kafka-core\4.2.1\spring-cloud-stream-binder-kafka-core-4.2.1.jar;C:\Users\A715-42G\.m2\repository\org\springframework\integration\spring-integration-kafka\6.3.9\spring-integration-kafka-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\kafka\spring-kafka\3.2.8\spring-kafka-3.2.8.jar;C:\Users\A715-42G\.m2\repository\org\apache\kafka\kafka-clients\3.7.2\kafka-clients-3.7.2.jar;C:\Users\A715-42G\.m2\repository\com\github\luben\zstd-jni\1.5.6-4\zstd-jni-1.5.6-4.jar;C:\Users\A715-42G\.m2\repository\org\lz4\lz4-java\1.8.0\lz4-java-1.8.0.jar;C:\Users\A715-42G\.m2\repository\org\xerial\snappy\snappy-java\1.1.10.5\snappy-java-1.1.10.5.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.3.11\spring-boot-starter-security-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-aop\6.1.19\spring-aop-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-config\6.3.9\spring-security-config-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-web\6.3.9\spring-security-web-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-oauth2-resource-server\3.3.11\spring-boot-starter-oauth2-resource-server-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-core\6.3.9\spring-security-core-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-crypto\6.3.9\spring-security-crypto-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-oauth2-resource-server\6.3.9\spring-security-oauth2-resource-server-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-oauth2-core\6.3.9\spring-security-oauth2-core-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-oauth2-jose\6.3.9\spring-security-oauth2-jose-6.3.9.jar;C:\Users\A715-42G\.m2\repository\com\nimbusds\nimbus-jose-jwt\9.37.3\nimbus-jose-jwt-9.37.3.jar;C:\Users\A715-42G\.m2\repository\com\github\stephenc\jcip\jcip-annotations\1.0-1\jcip-annotations-1.0-1.jar;C:\Users\A715-42G\.m2\repository\org\keycloak\keycloak-admin-client\26.0.0\keycloak-admin-client-26.0.0.jar;C:\Users\A715-42G\.m2\repository\org\keycloak\keycloak-client-common-synced\26.0.0\keycloak-client-common-synced-26.0.0.jar;C:\Users\A715-42G\.m2\repository\org\jboss\logging\commons-logging-jboss-logging\1.0.0.Final\commons-logging-jboss-logging-1.0.0.Final.jar;C:\Users\A715-42G\.m2\repository\org\apache\httpcomponents\httpclient\4.5.14\httpclient-4.5.14.jar;C:\Users\A715-42G\.m2\repository\org\apache\httpcomponents\httpcore\4.4.16\httpcore-4.4.16.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.17.3\jackson-core-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.17.3\jackson-annotations-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.17.3\jackson-datatype-jdk8-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.17.3\jackson-datatype-jsr310-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\eclipse\microprofile\openapi\microprofile-openapi-api\3.1.1\microprofile-openapi-api-3.1.1.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-client\6.2.9.Final\resteasy-client-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-client-api\6.2.9.Final\resteasy-client-api-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-core-spi\6.2.9.Final\resteasy-core-spi-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-core\6.2.9.Final\resteasy-core-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\org\jboss\jandex\2.4.5.Final\jandex-2.4.5.Final.jar;C:\Users\A715-42G\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\A715-42G\.m2\repository\com\ibm\async\asyncutil\0.1.0\asyncutil-0.1.0.jar;C:\Users\A715-42G\.m2\repository\commons-codec\commons-codec\1.16.1\commons-codec-1.16.1.jar;C:\Users\A715-42G\.m2\repository\jakarta\ws\rs\jakarta.ws.rs-api\3.1.0\jakarta.ws.rs-api-3.1.0.jar;C:\Users\A715-42G\.m2\repository\org\reactivestreams\reactive-streams\1.0.4\reactive-streams-1.0.4.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-multipart-provider\6.2.9.Final\resteasy-multipart-provider-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\jakarta\mail\jakarta.mail-api\2.1.3\jakarta.mail-api-2.1.3.jar;C:\Users\A715-42G\.m2\repository\org\eclipse\angus\angus-mail\2.0.3\angus-mail-2.0.3.jar;C:\Users\A715-42G\.m2\repository\org\apache\james\apache-mime4j-dom\0.8.11\apache-mime4j-dom-0.8.11.jar;C:\Users\A715-42G\.m2\repository\org\apache\james\apache-mime4j-core\0.8.11\apache-mime4j-core-0.8.11.jar;C:\Users\A715-42G\.m2\repository\org\apache\james\apache-mime4j-storage\0.8.11\apache-mime4j-storage-0.8.11.jar;C:\Users\A715-42G\.m2\repository\commons-io\commons-io\2.11.0\commons-io-2.11.0.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-jackson2-provider\6.2.9.Final\resteasy-jackson2-provider-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\jakarta\rs\jackson-jakarta-rs-base\2.17.3\jackson-jakarta-rs-base-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\jakarta\rs\jackson-jakarta-rs-json-provider\2.17.3\jackson-jakarta-rs-json-provider-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\module\jackson-module-jakarta-xmlbind-annotations\2.17.3\jackson-module-jakarta-xmlbind-annotations-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\github\java-json-tools\json-patch\1.13\json-patch-1.13.jar;C:\Users\A715-42G\.m2\repository\com\github\java-json-tools\msg-simple\1.2\msg-simple-1.2.jar;C:\Users\A715-42G\.m2\repository\com\github\java-json-tools\btf\1.3\btf-1.3.jar;C:\Users\A715-42G\.m2\repository\com\github\java-json-tools\jackson-coreutils\2.0\jackson-coreutils-2.0.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-jaxb-provider\6.2.9.Final\resteasy-jaxb-provider-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\codemodel\4.0.5\codemodel-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-jxc\4.0.5\jaxb-jxc-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-xjc\4.0.5\jaxb-xjc-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\xsom\4.0.5\xsom-4.0.5.jar;C:\Users\A715-42G\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\A715-42G\.m2\repository\com\sun\istack\istack-commons-tools\4.1.2\istack-commons-tools-4.1.2.jar;C:\Users\A715-42G\.m2\repository\com\sun\xml\bind\external\relaxng-datatype\4.0.3\relaxng-datatype-4.0.3.jar;C:\Users\A715-42G\.m2\repository\com\sun\xml\bind\external\rngom\4.0.3\rngom-4.0.3.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Saigon, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, java.vm.specification.version=17, os.name=Windows 10, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-17\bin, sun.java.command=com.example.transaction_service.TransactionServiceApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@5d04dcd9, com.sun.management.jmxremote=, jdk.debug=release, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, hibernate.cdi.extensions=true, user.home=C:\Users\A715-42G, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-01-17, java.home=C:\Program Files\Java\jdk-17, file.separator=\, spring.output.ansi.enabled=always, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.6+9-LTS-190, user.name=A715-42G, spring.jmx.enabled=true, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\A715-42G\AppData\Local\Temp\, catalina.home=C:\Users\A715-42G\AppData\Local\Temp\tomcat.8088.802172336804455244, java.version=17.0.6, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=D:\LT_Web\SpringBoot\java-banking-phase2, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=20852, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\A715-42G\AppData\Local\Temp\tomcat.8088.802172336804455244, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@6cbad830, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-17\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;D:\Document\xxx\apache-maven-3.9.1\bin;C:\Program Files (x86)\Dev-Cpp\MinGW64\bin;C:\Program Files\Git\cmd;C:\Program Files\Java\jdk-17\bin;C:\XamPP\php;D:\LT_Web\SpringBoot\SpringBootCLI\spring-3.2.1\bin;D:\sqlite;D:\Document\Java\Maven\apache-maven-3.9.9\bin;D:\Document\Java\Maven\apache-maven-3.9.9\bin;C:\Program Files\Cloudflare\Cloudflare WARP\;C:\ProgramData\chocolatey\bin;D:\KienLongBank\Vault;D:\GrafanaLabs\grafana\bin;D:\KienLongBank\InfluxData\influxdb-1.8.10-1;D:\Document\Work\Redis;C:\Program Files\Docker\Docker\resources\bin;D:\nodejs\nvm;C:\nvm4w\nodejs;C:\Program Files\nodejs\;C:\Users\A715-42G\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\A715-42G\AppData\Local\Programs\Python\Python310\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\A715-42G\AppData\Local\Programs\Eclipse Adoptium\jdk-17.0.3.7-hotspot\bin;C:\Users\A715-42G\AppData\Local\Microsoft\WindowsApps;C:\Users\A715-42G\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\Azure Data Studio\bin;C:\Program Files\Git\bin;D:\Document\HQT_ATCSDL\MongoDB\mongosh-1.8.2-win32-x64\bin;C:\XamPP\php;C:\Program Files\Azure Data Studio\bin;D:\nodejs\nvm;C:\nvm4w\nodejs;C:\Users\A715-42G\AppData\Roaming\npm;D:\Document\cursor\resources\app\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, emulated-client, sharing, java.vm.version=17.0.6+9-LTS-190, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=61.0, LOGGED_APPLICATION_NAME=[transaction-service] } MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {} MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.example.transaction_service.entity.Transaction] is safe MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@7d0717bc] under count; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@67eb0769] under every; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@78e0d0d5] under any; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@47b8e75e] under sinh; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@b30a7a8] under cosh; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5a3713cf] under tanh; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@20ce2ece] under pi; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@20ccaf9e] under log; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : length -> character_length MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@2a213b34] under position; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@728cc8de] under overlay; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@1b85279d] under trim; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@239c8997] under cast; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@18d3401f] under collate; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@7b5ecce4] under extract; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@669f3c18] under ifnull; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@11ef7cc3] under pad; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@d53817a] under str; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@271e1698] under format; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@52f9fe5d] under timestampadd; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@174cfacc] under timestampdiff; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@66fa2738] under current_date; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2877267b] under current_time; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@c56c5fe] under current_timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current date -> current_date MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current time -> current_time MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1b7c3c1d] under local_date; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2c080bad] under local_time; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3dddb4a9] under local_datetime; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@79eefd9] under offset_datetime; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local date -> local_date MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local time -> local_time MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7d78b7e3] under instant; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current_instant -> instant MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@906a95f] under sql; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@20ccaf9e MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@5e46ba8b] under lpad; prior registration was NamedSqmFunctionTemplate(lpad) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@3e139f2b] under rpad; prior registration was NamedSqmFunctionTemplate(rpad) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : day -> dayofmonth MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@69b27987] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@2a213b34 MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@36a8063f] under trunc; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : truncate -> trunc MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@cb68488] under bitand; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@700182d7] under bitor; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@479ea0ce] under bitxor; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@31f1cffc] under bitnot; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@95b8f8e] under format; prior registration was org.hibernate.dialect.function.FormatFunction@271e1698 MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@2c080bad MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@3dddb4a9 MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@75b0b348] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@20ce2ece MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@479af5e0] under chr; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : char -> chr MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@782b4cc0] under sysdate; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@6f498439] under listagg; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - abs(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double acos(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - addtime(TIME datetime, TIME time) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean any(BOOLEAN arg) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer ascii(STRING arg) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double asin(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - avg(arg) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bit_and(arg) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bit_or(arg) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitand(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitnot(arg) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitor(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitxor(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - cast(arg as Type) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - ceiling(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Character char(INTEGER arg) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Character chr(INTEGER arg) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]]) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String collate(STRING string as COLLATION collation) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]]) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double cos(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double cosh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double cot(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Long count([distinct ]{arg|*}) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer crc32(arg) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date curdate() MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date current date MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time current time MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current timestamp MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date current_date MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Instant current_instant MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time current_time MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current_timestamp MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time curtime() MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date date(arg) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer datediff(DATE end, DATE start) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer day(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String dayname(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofmonth(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofweek(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofyear(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double degrees(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean every(BOOLEAN arg) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double exp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - floor(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]]) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer hour(TIME arg) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - ifnull(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Instant instant MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]]) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date last_day(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]]) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String left(STRING string, INTEGER length) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double ln(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local date MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local datetime MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local time MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local_date MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local_datetime MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local_time MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtime MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtimestamp MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start]) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1]) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double log10(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double log2(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String lower(STRING string) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String lpad(string, length[, padding]) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters]) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - max(COMPARABLE arg) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String md5(arg) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer microsecond(TIME arg) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - min(COMPARABLE arg) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer minute(TIME arg) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer month(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String monthname(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp now() MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - nullif(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset datetime MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset_datetime MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length]) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character]) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double pi MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer position(STRING pattern in STRING string) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer quarter(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double radians(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double rand([INTEGER seed]) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String repeat(STRING string, INTEGER times) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String reverse(STRING arg) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String right(STRING string, INTEGER length) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places]) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String rpad(string, length[, padding]) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters]) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer second(TIME arg) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String sha(arg) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String sha1(arg) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String sha2(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer sign(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double sin(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double sinh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String soundex(arg) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String space(INTEGER arg) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Object sql MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double sqrt(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String str(arg) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length]) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length]) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - subtime(TIME datetime, TIME time) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - sum(arg) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp sysdate() MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double tan(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double tanh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String time(arg) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1]) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - trunc( ... ) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - truncate( ... ) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String upper(STRING string) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date utc_date MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time utc_time MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp utc_timestamp MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_pop(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_samp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double variance(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer week(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer year(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG org.hibernate.orm.query.plan.cache - Starting QueryInterpretationCache(2048) MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.e.i.EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.example.transaction_service.entity.Transaction] is safe MDC:[traceId=, spanId=]
2025-06-10 21:51:45 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-10 21:51:46 [restartedMain] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.example.transaction_service.entity.Transaction]: private accessor [amount] MDC:[traceId=, spanId=]
2025-06-10 21:51:46 [restartedMain] DEBUG o.h.orm.model.mapping.creation - Starting post-init callbacks MDC:[traceId=, spanId=]
2025-06-10 21:51:46 [restartedMain] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(com.example.transaction_service.entity.Transaction) `staticFetchableList` generator MDC:[traceId=, spanId=]
2025-06-10 21:51:46 [restartedMain] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 21:51:46 [restartedMain] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction)] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 21:51:46 [restartedMain] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction.updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 21:51:46 [restartedMain] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 21:51:46 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-10 21:51:46 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select id from tbl_transaction where id=? MDC:[traceId=, spanId=]
2025-06-10 21:51:46 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into tbl_transaction (amount,bank_type,created_at,created_by,currency,description,destination_bank_code,destination_bank_name,failed_reason,from_account_number,reference_code,status,timestamp,to_account_number,type,updated_at,updated_by,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) MDC:[traceId=, spanId=]
2025-06-10 21:51:46 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update tbl_transaction set amount=?,bank_type=?,created_at=?,created_by=?,currency=?,description=?,destination_bank_code=?,destination_bank_name=?,failed_reason=?,from_account_number=?,reference_code=?,status=?,timestamp=?,to_account_number=?,type=?,updated_at=?,updated_by=? where id=? MDC:[traceId=, spanId=]
2025-06-10 21:51:46 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from tbl_transaction where id=? MDC:[traceId=, spanId=]
2025-06-10 21:51:46 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration) MDC:[traceId=, spanId=]
2025-06-10 21:51:46 [restartedMain] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6c996e2b] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@20cf0e1a] MDC:[traceId=, spanId=]
2025-06-10 21:51:46 [restartedMain] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named HQL queries MDC:[traceId=, spanId=]
2025-06-10 21:51:46 [restartedMain] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named SQL queries MDC:[traceId=, spanId=]
2025-06-10 21:51:46 [restartedMain] DEBUG org.hibernate.mapping.Table - No alter strings for table : tbl_transaction MDC:[traceId=, spanId=]
2025-06-10 21:51:46 [restartedMain] DEBUG o.h.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@29c07948 MDC:[traceId=, spanId=]
2025-06-10 21:51:46 [restartedMain] DEBUG o.h.internal.SessionFactoryRegistry - Registering SessionFactory: f1f726b8-047d-4d22-bb30-cb2f2d775876 (<unnamed>) MDC:[traceId=, spanId=]
2025-06-10 21:51:46 [restartedMain] DEBUG o.h.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured MDC:[traceId=, spanId=]
2025-06-10 21:51:46 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Instantiated SessionFactory MDC:[traceId=, spanId=]
2025-06-10 21:51:46 [restartedMain] DEBUG o.h.s.internal.StatisticsInitiator - Statistics initialized [enabled=false] MDC:[traceId=, spanId=]
2025-06-10 21:51:47 [restartedMain] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy3/jdk.proxy3.$Proxy223.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.getCountQuery(JpaQueryLookupStrategy.java:204)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:171)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.example.transaction_service.TransactionServiceApplication.main(TransactionServiceApplication.java:15)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-06-10 21:51:47 [restartedMain] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy3/jdk.proxy3.$Proxy223.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.getCountQuery(JpaQueryLookupStrategy.java:204)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:171)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.example.transaction_service.TransactionServiceApplication.main(TransactionServiceApplication.java:15)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-06-10 21:51:47 [restartedMain] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy3/jdk.proxy3.$Proxy223.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.example.transaction_service.TransactionServiceApplication.main(TransactionServiceApplication.java:15)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-06-10 21:51:47 [restartedMain] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy3/jdk.proxy3.$Proxy223.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.example.transaction_service.TransactionServiceApplication.main(TransactionServiceApplication.java:15)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-06-10 21:51:50 [restartedMain] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-06-10 21:51:50 [restartedMain] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator MDC:[traceId=, spanId=]
2025-06-10 21:51:50 [restartedMain] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory MDC:[traceId=, spanId=]
2025-06-10 21:51:50 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-06-10 21:51:50 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader MDC:[traceId=, spanId=]
2025-06-10 21:51:50 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-06-10 21:51:50 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-06-10 21:51:50 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-06-10 21:51:50 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-06-10 21:51:50 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-06-10 21:51:50 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-06-10 21:51:50 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-06-10 21:51:50 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-06-10 21:51:50 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-06-10 21:51:50 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-06-10 21:51:50 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-06-10 21:51:55 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 21:51:55 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 21:51:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 21:51:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 21:51:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2ba1c0a9 MDC:[traceId=, spanId=]
2025-06-10 21:51:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 21:51:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@25c732b6 MDC:[traceId=, spanId=]
2025-06-10 21:51:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 21:51:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 21:51:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 21:51:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 21:51:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@12151631 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 21:51:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 21:51:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 21:52:55 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 21:52:55 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 21:52:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 21:52:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 21:52:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3b9586ac MDC:[traceId=, spanId=]
2025-06-10 21:52:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 21:52:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@14326cba MDC:[traceId=, spanId=]
2025-06-10 21:52:56 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 21:52:56 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 21:52:56 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 21:52:56 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 21:52:56 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1227500792 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 21:52:56 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 21:52:56 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 21:53:55 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 21:53:55 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 21:53:55 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 21:53:55 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 21:53:55 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2f1dbb8c MDC:[traceId=, spanId=]
2025-06-10 21:53:55 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 21:53:55 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7ded574f MDC:[traceId=, spanId=]
2025-06-10 21:53:55 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 21:53:55 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 21:53:55 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 21:53:55 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 21:53:55 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@721112125 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 21:53:55 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 21:53:55 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 21:54:55 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 21:54:55 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 21:54:55 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 21:54:55 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 21:54:55 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@286cf13b MDC:[traceId=, spanId=]
2025-06-10 21:54:55 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 21:54:55 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@39c9a007 MDC:[traceId=, spanId=]
2025-06-10 21:54:55 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 21:54:55 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 21:54:55 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 21:54:55 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 21:54:55 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1627139499 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 21:54:55 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 21:54:55 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 21:55:58 [SpringContextShutdownHook] DEBUG o.h.internal.SessionFactoryImpl - HHH000031: Closing MDC:[traceId=, spanId=]
2025-06-10 21:55:58 [SpringContextShutdownHook] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@61145a38] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@20cf0e1a] MDC:[traceId=, spanId=]
2025-06-10 21:55:58 [SpringContextShutdownHook] DEBUG o.h.s.i.AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries MDC:[traceId=, spanId=]
2025-06-10 21:55:58 [SpringContextShutdownHook] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries MDC:[traceId=, spanId=]
2025-06-10 21:56:15 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final MDC:[traceId=, spanId=]
2025-06-10 21:56:15 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-06-10 21:56:15 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-06-10 21:56:15 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-06-10 21:56:15 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-06-10 21:56:15 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-06-10 21:56:15 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-06-10 21:56:15 [background-preinit] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-06-10 21:56:15 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-06-10 21:56:15 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-06-10 21:56:15 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-06-10 21:56:15 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-06-10 21:56:15 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-06-10 21:56:15 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-06-10 21:56:23 [restartedMain] DEBUG o.h.jpa.internal.util.LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@75e44db0
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/LT_Web/SpringBoot/java-banking-phase2/backend/transaction-service/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.example.transaction_service.entity.Transaction]
	Mapping files names []
	Properties [] MDC:[traceId=, spanId=]
2025-06-10 21:56:23 [restartedMain] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator]. MDC:[traceId=, spanId=]
2025-06-10 21:56:23 [restartedMain] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator]. MDC:[traceId=, spanId=]
2025-06-10 21:56:23 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final MDC:[traceId=, spanId=]
2025-06-10 21:56:23 [restartedMain] DEBUG org.hibernate.cfg.Environment - HHH000206: 'hibernate.properties' not found MDC:[traceId=, spanId=]
2025-06-10 21:56:23 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator] MDC:[traceId=, spanId=]
2025-06-10 21:56:23 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator] MDC:[traceId=, spanId=]
2025-06-10 21:56:23 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator] MDC:[traceId=, spanId=]
2025-06-10 21:56:23 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator] MDC:[traceId=, spanId=]
2025-06-10 21:56:23 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned] MDC:[traceId=, spanId=]
2025-06-10 21:56:23 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator] MDC:[traceId=, spanId=]
2025-06-10 21:56:23 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator] MDC:[traceId=, spanId=]
2025-06-10 21:56:23 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] MDC:[traceId=, spanId=]
2025-06-10 21:56:23 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator] MDC:[traceId=, spanId=]
2025-06-10 21:56:23 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator] MDC:[traceId=, spanId=]
2025-06-10 21:56:23 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] MDC:[traceId=, spanId=]
2025-06-10 21:56:23 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator] MDC:[traceId=, spanId=]
2025-06-10 21:56:23 [restartedMain] DEBUG o.h.c.i.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered MDC:[traceId=, spanId=]
2025-06-10 21:56:23 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@741e6f2 MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@741e6f2 MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@741e6f2 MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@12a630fd MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@12a630fd MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@127aabe5 MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@127aabe5 MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@7364503b MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@7364503b MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@7b1a5ed3 MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@7b1a5ed3 MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@7b1a5ed3 MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@5898a895 MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@5898a895 MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@5898a895 MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@1ffa15e0 MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@1ffa15e0 MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@4e4e6bac MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@670b5870 MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@670b5870 MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@7aca8804 MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@35d0c7a8 MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@87ed9b5 MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@87ed9b5 MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@87ed9b5 MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@358bd812 MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@358bd812 MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@358bd812 MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@1b2fec0f MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@1b2fec0f MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@1b2fec0f MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@28719545 MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@28719545 MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@28719545 MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@56bc528f MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@56bc528f MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@56bc528f MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@3d1c5b02 MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@3d1c5b02 MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@59b7973a MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@59b7973a MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@7dc8faf4 MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@7dc8faf4 MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@7dc8faf4 MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@4954e7e8 MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@16cf618b MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@16cf618b MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@73242a2f MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@498171e5 MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@498171e5 MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@498171e5 MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@2704b49a MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@4aaa5ac8 MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@180d64e0 MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@5a41305d MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@5a41305d MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@5863ffeb MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@5863ffeb MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@40878235 MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@33dec4a1 MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@604ed95f MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@2715ee1a MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@5bff46e7 MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@1ec16af5 MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@853cc53 MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@853cc53 MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@3e967d MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@3e967d MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@21d720e3 MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@21d720e3 MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@345470ee MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@345470ee MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@22f31363 MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@22f31363 MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@568af43e MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4ec21634 MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@5986dc02 MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@5986dc02 MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@63d4b45a MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@62fe971a MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3c535ec7 MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@535ae383 MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@535ae383 MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@15eaebd6 MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@33ae836 MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@25b93bf0 MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@25b93bf0 MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@21fb923f MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@21fb923f MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@630d698d MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@630d698d MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@630d698d MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@37225682 MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@37225682 MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@37225682 MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@5b289d2d MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@263f861d MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@2ef6d256 MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@2ef6d256 MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@bc5074c MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@bc5074c MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@bc5074c MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@149b22ec MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@4ece410c MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@56324ee1 MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@56324ee1 MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@756ecc0c MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@756ecc0c MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@756ecc0c MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@382f0c0f MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@382f0c0f MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@4d5fc27 MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@4d5fc27 MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@40d4ef1a MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@40d4ef1a MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@43d955a0 MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@43d955a0 MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@35676a0 MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@35676a0 MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@28498629 MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@4f821005 MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@1c93801 MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@1c93801 MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@697d483b MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@2584a2ca MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@9834bd3 MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@3ca4e8ef MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@3f9b53d0 MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@3f89241b MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@2cc72dea MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@37bf4b0d MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@52df9bf9 MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@7f71f4de] into BootstrapContext; was [null] MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@7f71f4de) [was null] MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@39bf094e] into BootstrapContext; was [null] MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@2e4c3120] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@19b351e2] MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@7f71f4de] MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@7f71f4de] MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Database ->
	   name : MySQL
	version : 8.0.32
	  major : 8
	  minor : 0 MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Driver ->
	   name : MySQL Connector/J
	version : mysql-connector-j-8.3.0 (Revision: 805f872a57875f311cb82487efcfb070411a3fa0)
	  major : 8
	  minor : 3 MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - JDBC version : 4.2 MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default) MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG org.hibernate.orm.dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQL8Dialect, version: 8.0 MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@36b7ebe2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5934cb3) MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6f911eff) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@72c92f05) MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7b282245) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@64411f47) MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3c093d6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@38ca35ac) MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@24a02fa) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6e9d8ed3) MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6944eef5) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4ad124) MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@52c55e05) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@502cb998) MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1e51d62e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@48c4f731) MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3009ad5a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@55c32ba) MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor) MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor) MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor) MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT)) MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT)) MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@588e5510 MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@697d483b` MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7f1eb224] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@25ab3060] MDC:[traceId=, spanId=]
2025-06-10 21:56:24 [restartedMain] DEBUG o.h.boot.model.relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}] MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Transaction MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity com.example.transaction_service.entity.Transaction on table tbl_transaction MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE') MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.example.transaction_service.entity.Transaction] is safe MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property id with lazy=false MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:id] MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for id MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.id MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property id MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, assigned, , ...) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property amount with lazy=false MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:amount] MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for amount MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.amount MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property amount MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property bankType with lazy=false MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:bankType] MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for bankType MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.bank_type MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property bankType MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:createdAt] MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for createdAt MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.created_at MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property createdAt MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property createdBy with lazy=false MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:createdBy] MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for createdBy MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.created_by MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property createdBy MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property currency with lazy=false MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:currency] MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for currency MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.currency MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property currency MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property description with lazy=false MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:description] MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for description MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.description MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property description MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property destinationBankCode with lazy=false MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:destinationBankCode] MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for destinationBankCode MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.destination_bank_code MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property destinationBankCode MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property destinationBankName with lazy=false MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:destinationBankName] MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for destinationBankName MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.destination_bank_name MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property destinationBankName MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property failedReason with lazy=false MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:failedReason] MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for failedReason MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.failed_reason MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property failedReason MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property fromAccountNumber with lazy=false MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:fromAccountNumber] MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for fromAccountNumber MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.from_account_number MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property fromAccountNumber MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property referenceCode with lazy=false MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:referenceCode] MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for referenceCode MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.reference_code MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property referenceCode MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property status with lazy=false MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:status] MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for status MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.status MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property status MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property timestamp with lazy=false MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:timestamp] MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for timestamp MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.timestamp MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property timestamp MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property toAccountNumber with lazy=false MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:toAccountNumber] MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for toAccountNumber MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.to_account_number MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property toAccountNumber MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property type with lazy=false MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:type] MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for type MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.type MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property type MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:updatedAt] MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for updatedAt MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.updated_at MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property updatedAt MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property updatedBy with lazy=false MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:updatedBy] MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for updatedBy MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.updated_by MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property updatedBy MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: com.example.transaction_service.entity MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.j.e.i.CallbackDefinitionResolverLegacyImpl - Adding touchForUpdate as PreUpdate callback for entity com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.j.e.i.CallbackDefinitionResolverLegacyImpl - Adding prePersist as PrePersist callback for entity com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.j.e.i.CallbackDefinitionResolverLegacyImpl - Adding touchForCreate as PrePersist callback for entity com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bankType MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for createdAt MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for createdBy MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for currency MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for description MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for destinationBankCode MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for destinationBankName MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for failedReason MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for fromAccountNumber MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for referenceCode MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for timestamp MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for toAccountNumber MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for type MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for updatedAt MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for updatedBy MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [tbl_transaction] MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Building session factory MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Instantiating SessionFactory with settings: {jdk.tls.rejectClientInitiatedRenegotiation=true, java.specification.version=17, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@bef707b, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=D:\LT_Web\SpringBoot\java-banking-phase2\backend\transaction-service\target\classes;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-actuator\3.3.11\spring-boot-starter-actuator-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter\3.3.11\spring-boot-starter-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.3.11\spring-boot-starter-logging-3.3.11.jar;C:\Users\A715-42G\.m2\repository\ch\qos\logback\logback-classic\1.5.18\logback-classic-1.5.18.jar;C:\Users\A715-42G\.m2\repository\ch\qos\logback\logback-core\1.5.18\logback-core-1.5.18.jar;C:\Users\A715-42G\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.23.1\log4j-to-slf4j-2.23.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\logging\log4j\log4j-api\2.23.1\log4j-api-2.23.1.jar;C:\Users\A715-42G\.m2\repository\org\slf4j\jul-to-slf4j\2.0.17\jul-to-slf4j-2.0.17.jar;C:\Users\A715-42G\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\A715-42G\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-actuator-autoconfigure\3.3.11\spring-boot-actuator-autoconfigure-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-actuator\3.3.11\spring-boot-actuator-3.3.11.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-observation\1.13.13\micrometer-observation-1.13.13.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-commons\1.13.13\micrometer-commons-1.13.13.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-jakarta9\1.13.13\micrometer-jakarta9-1.13.13.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-core\1.13.13\micrometer-core-1.13.13.jar;C:\Users\A715-42G\.m2\repository\org\hdrhistogram\HdrHistogram\2.2.2\HdrHistogram-2.2.2.jar;C:\Users\A715-42G\.m2\repository\org\latencyutils\LatencyUtils\2.0.3\LatencyUtils-2.0.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.3.11\spring-boot-starter-data-jpa-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.3.11\spring-boot-starter-aop-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\aspectj\aspectjweaver\1.9.24\aspectjweaver-1.9.24.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.3.11\spring-boot-starter-jdbc-3.3.11.jar;C:\Users\A715-42G\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-jdbc\6.1.19\spring-jdbc-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\orm\hibernate-core\6.5.3.Final\hibernate-core-6.5.3.Final.jar;C:\Users\A715-42G\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\A715-42G\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\A715-42G\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\A715-42G\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\A715-42G\.m2\repository\net\bytebuddy\byte-buddy\1.14.19\byte-buddy-1.14.19.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\A715-42G\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\A715-42G\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-jpa\3.3.11\spring-data-jpa-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-commons\3.3.11\spring-data-commons-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-orm\6.1.19\spring-orm-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-context\6.1.19\spring-context-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-tx\6.1.19\spring-tx-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-beans\6.1.19\spring-beans-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-aspects\6.1.19\spring-aspects-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.3.11\spring-boot-starter-web-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.3.11\spring-boot-starter-json-3.3.11.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.17.3\jackson-module-parameter-names-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.3.11\spring-boot-starter-tomcat-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.40\tomcat-embed-core-10.1.40.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.40\tomcat-embed-websocket-10.1.40.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-web\6.1.19\spring-web-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-webmvc\6.1.19\spring-webmvc-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-expression\6.1.19\spring-expression-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-devtools\3.3.11\spring-boot-devtools-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot\3.3.11\spring-boot-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.3.11\spring-boot-autoconfigure-3.3.11.jar;C:\Users\A715-42G\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\A715-42G\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-core\6.1.19\spring-core-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-jcl\6.1.19\spring-jcl-6.1.19.jar;C:\Users\A715-42G\.m2\repository\com\mysql\mysql-connector-j\8.3.0\mysql-connector-j-8.3.0.jar;C:\Users\A715-42G\.m2\repository\org\projectlombok\lombok\1.18.38\lombok-1.18.38.jar;C:\Users\A715-42G\.m2\repository\org\mapstruct\mapstruct\1.5.5.Final\mapstruct-1.5.5.Final.jar;C:\Users\A715-42G\.m2\repository\org\mapstruct\mapstruct-processor\1.5.5.Final\mapstruct-processor-1.5.5.Final.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-validation\3.3.11\spring-boot-starter-validation-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.40\tomcat-embed-el-10.1.40.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\validator\hibernate-validator\8.0.2.Final\hibernate-validator-8.0.2.Final.jar;C:\Users\A715-42G\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-ui\2.0.2\springdoc-openapi-starter-webmvc-ui-2.0.2.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-api\2.0.2\springdoc-openapi-starter-webmvc-api-2.0.2.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-common\2.0.2\springdoc-openapi-starter-common-2.0.2.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-core-jakarta\2.2.7\swagger-core-jakarta-2.2.7.jar;C:\Users\A715-42G\.m2\repository\org\apache\commons\commons-lang3\3.14.0\commons-lang3-3.14.0.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-annotations-jakarta\2.2.7\swagger-annotations-jakarta-2.2.7.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-models-jakarta\2.2.7\swagger-models-jakarta-2.2.7.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-yaml\2.17.3\jackson-dataformat-yaml-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\webjars\swagger-ui\4.15.5\swagger-ui-4.15.5.jar;C:\Users\A715-42G\.m2\repository\org\webjars\webjars-locator-core\0.58\webjars-locator-core-0.58.jar;C:\Users\A715-42G\.m2\repository\io\github\classgraph\classgraph\4.8.149\classgraph-4.8.149.jar;D:\LT_Web\SpringBoot\java-banking-phase2\backend\common-service\target\classes;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.17.3\jackson-databind-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\apache\dubbo\dubbo-spring-boot-starter\3.3.2\dubbo-spring-boot-starter-3.3.2.jar;C:\Users\A715-42G\.m2\repository\org\apache\dubbo\dubbo-spring-boot-autoconfigure\3.3.2\dubbo-spring-boot-autoconfigure-3.3.2.jar;C:\Users\A715-42G\.m2\repository\org\apache\dubbo\dubbo-spring-boot-autoconfigure-compatible\3.3.2\dubbo-spring-boot-autoconfigure-compatible-3.3.2.jar;C:\Users\A715-42G\.m2\repository\org\apache\dubbo\dubbo\3.3.2\dubbo-3.3.2.jar;C:\Users\A715-42G\.m2\repository\org\javassist\javassist\3.30.2-GA\javassist-3.30.2-GA.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-all\4.1.119.Final\netty-all-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-dns\4.1.119.Final\netty-codec-dns-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-haproxy\4.1.119.Final\netty-codec-haproxy-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-http\4.1.119.Final\netty-codec-http-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-http2\4.1.119.Final\netty-codec-http2-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-memcache\4.1.119.Final\netty-codec-memcache-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-mqtt\4.1.119.Final\netty-codec-mqtt-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-redis\4.1.119.Final\netty-codec-redis-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-smtp\4.1.119.Final\netty-codec-smtp-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-socks\4.1.119.Final\netty-codec-socks-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-stomp\4.1.119.Final\netty-codec-stomp-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-xml\4.1.119.Final\netty-codec-xml-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-handler-proxy\4.1.119.Final\netty-handler-proxy-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-handler-ssl-ocsp\4.1.119.Final\netty-handler-ssl-ocsp-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-resolver-dns\4.1.119.Final\netty-resolver-dns-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-rxtx\4.1.119.Final\netty-transport-rxtx-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-sctp\4.1.119.Final\netty-transport-sctp-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-udt\4.1.119.Final\netty-transport-udt-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-classes-kqueue\4.1.119.Final\netty-transport-classes-kqueue-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-resolver-dns-classes-macos\4.1.119.Final\netty-resolver-dns-classes-macos-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final-linux-x86_64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final-linux-aarch_64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final-linux-riscv64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-kqueue\4.1.119.Final\netty-transport-native-kqueue-4.1.119.Final-osx-x86_64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-kqueue\4.1.119.Final\netty-transport-native-kqueue-4.1.119.Final-osx-aarch_64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-resolver-dns-native-macos\4.1.119.Final\netty-resolver-dns-native-macos-4.1.119.Final-osx-x86_64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-resolver-dns-native-macos\4.1.119.Final\netty-resolver-dns-native-macos-4.1.119.Final-osx-aarch_64.jar;C:\Users\A715-42G\.m2\repository\org\apache\dubbo\hessian-lite\4.0.3\hessian-lite-4.0.3.jar;C:\Users\A715-42G\.m2\repository\com\alibaba\fastjson2\fastjson2\2.0.53\fastjson2-2.0.53.jar;C:\Users\A715-42G\.m2\repository\com\google\protobuf\protobuf-java\3.25.5\protobuf-java-3.25.5.jar;C:\Users\A715-42G\.m2\repository\org\apache\curator\curator-framework\5.1.0\curator-framework-5.1.0.jar;C:\Users\A715-42G\.m2\repository\org\apache\curator\curator-client\5.1.0\curator-client-5.1.0.jar;C:\Users\A715-42G\.m2\repository\com\google\guava\guava\27.0.1-jre\guava-27.0.1-jre.jar;C:\Users\A715-42G\.m2\repository\com\google\guava\failureaccess\1.0.1\failureaccess-1.0.1.jar;C:\Users\A715-42G\.m2\repository\com\google\guava\listenablefuture\9999.0-empty-to-avoid-conflict-with-guava\listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar;C:\Users\A715-42G\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\A715-42G\.m2\repository\org\checkerframework\checker-qual\2.5.2\checker-qual-2.5.2.jar;C:\Users\A715-42G\.m2\repository\com\google\errorprone\error_prone_annotations\2.2.0\error_prone_annotations-2.2.0.jar;C:\Users\A715-42G\.m2\repository\com\google\j2objc\j2objc-annotations\1.1\j2objc-annotations-1.1.jar;C:\Users\A715-42G\.m2\repository\org\codehaus\mojo\animal-sniffer-annotations\1.17\animal-sniffer-annotations-1.17.jar;C:\Users\A715-42G\.m2\repository\org\apache\zookeeper\zookeeper\3.7.1\zookeeper-3.7.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\zookeeper\zookeeper-jute\3.7.1\zookeeper-jute-3.7.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\yetus\audience-annotations\0.12.0\audience-annotations-0.12.0.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-handler\4.1.119.Final\netty-handler-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-common\4.1.119.Final\netty-common-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-resolver\4.1.119.Final\netty-resolver-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-buffer\4.1.119.Final\netty-buffer-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport\4.1.119.Final\netty-transport-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-unix-common\4.1.119.Final\netty-transport-native-unix-common-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec\4.1.119.Final\netty-codec-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-classes-epoll\4.1.119.Final\netty-transport-classes-epoll-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\org\slf4j\slf4j-api\2.0.17\slf4j-api-2.0.17.jar;C:\Users\A715-42G\.m2\repository\org\apache\curator\curator-recipes\5.5.0\curator-recipes-5.5.0.jar;C:\Users\A715-42G\.m2\repository\org\apache\curator\curator-x-discovery\5.5.0\curator-x-discovery-5.5.0.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-starter-vault-config\4.1.1\spring-cloud-starter-vault-config-4.1.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\httpcomponents\client5\httpclient5\5.3.1\httpclient5-5.3.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\httpcomponents\core5\httpcore5-h2\5.2.5\httpcore5-h2-5.2.5.jar;C:\Users\A715-42G\.m2\repository\org\apache\httpcomponents\core5\httpcore5\5.2.5\httpcore5-5.2.5.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-starter\4.1.2\spring-cloud-starter-4.1.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-context\4.1.2\spring-cloud-context-4.1.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-commons\4.1.2\spring-cloud-commons-4.1.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-rsa\1.1.2\spring-security-rsa-1.1.2.jar;C:\Users\A715-42G\.m2\repository\org\bouncycastle\bcprov-jdk18on\1.77\bcprov-jdk18on-1.77.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-vault-config\4.1.1\spring-cloud-vault-config-4.1.1.jar;C:\Users\A715-42G\.m2\repository\org\springframework\vault\spring-vault-core\3.1.1\spring-vault-core-3.1.1.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-data-redis\3.3.11\spring-boot-starter-data-redis-3.3.11.jar;C:\Users\A715-42G\.m2\repository\io\lettuce\lettuce-core\6.3.2.RELEASE\lettuce-core-6.3.2.RELEASE.jar;C:\Users\A715-42G\.m2\repository\io\projectreactor\reactor-core\3.6.16\reactor-core-3.6.16.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-redis\3.3.11\spring-data-redis-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-keyvalue\3.3.11\spring-data-keyvalue-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-oxm\6.1.19\spring-oxm-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-context-support\6.1.19\spring-context-support-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-stream\4.2.1\spring-cloud-stream-4.2.1.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-messaging\6.1.19\spring-messaging-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\integration\spring-integration-core\6.3.9\spring-integration-core-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\integration\spring-integration-jmx\6.3.9\spring-integration-jmx-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\retry\spring-retry\2.0.11\spring-retry-2.0.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-function-context\4.2.2\spring-cloud-function-context-4.2.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-function-core\4.2.2\spring-cloud-function-core-4.2.2.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-joda\2.17.3\jackson-datatype-joda-2.17.3.jar;C:\Users\A715-42G\.m2\repository\joda-time\joda-time\2.10.14\joda-time-2.10.14.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-starter-stream-kafka\4.2.1\spring-cloud-starter-stream-kafka-4.2.1.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-stream-binder-kafka\4.2.1\spring-cloud-stream-binder-kafka-4.2.1.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-stream-binder-kafka-core\4.2.1\spring-cloud-stream-binder-kafka-core-4.2.1.jar;C:\Users\A715-42G\.m2\repository\org\springframework\integration\spring-integration-kafka\6.3.9\spring-integration-kafka-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\kafka\spring-kafka\3.2.8\spring-kafka-3.2.8.jar;C:\Users\A715-42G\.m2\repository\org\apache\kafka\kafka-clients\3.7.2\kafka-clients-3.7.2.jar;C:\Users\A715-42G\.m2\repository\com\github\luben\zstd-jni\1.5.6-4\zstd-jni-1.5.6-4.jar;C:\Users\A715-42G\.m2\repository\org\lz4\lz4-java\1.8.0\lz4-java-1.8.0.jar;C:\Users\A715-42G\.m2\repository\org\xerial\snappy\snappy-java\1.1.10.5\snappy-java-1.1.10.5.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.3.11\spring-boot-starter-security-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-aop\6.1.19\spring-aop-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-config\6.3.9\spring-security-config-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-web\6.3.9\spring-security-web-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-oauth2-resource-server\3.3.11\spring-boot-starter-oauth2-resource-server-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-core\6.3.9\spring-security-core-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-crypto\6.3.9\spring-security-crypto-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-oauth2-resource-server\6.3.9\spring-security-oauth2-resource-server-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-oauth2-core\6.3.9\spring-security-oauth2-core-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-oauth2-jose\6.3.9\spring-security-oauth2-jose-6.3.9.jar;C:\Users\A715-42G\.m2\repository\com\nimbusds\nimbus-jose-jwt\9.37.3\nimbus-jose-jwt-9.37.3.jar;C:\Users\A715-42G\.m2\repository\com\github\stephenc\jcip\jcip-annotations\1.0-1\jcip-annotations-1.0-1.jar;C:\Users\A715-42G\.m2\repository\org\keycloak\keycloak-admin-client\26.0.0\keycloak-admin-client-26.0.0.jar;C:\Users\A715-42G\.m2\repository\org\keycloak\keycloak-client-common-synced\26.0.0\keycloak-client-common-synced-26.0.0.jar;C:\Users\A715-42G\.m2\repository\org\jboss\logging\commons-logging-jboss-logging\1.0.0.Final\commons-logging-jboss-logging-1.0.0.Final.jar;C:\Users\A715-42G\.m2\repository\org\apache\httpcomponents\httpclient\4.5.14\httpclient-4.5.14.jar;C:\Users\A715-42G\.m2\repository\org\apache\httpcomponents\httpcore\4.4.16\httpcore-4.4.16.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.17.3\jackson-core-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.17.3\jackson-annotations-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.17.3\jackson-datatype-jdk8-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.17.3\jackson-datatype-jsr310-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\eclipse\microprofile\openapi\microprofile-openapi-api\3.1.1\microprofile-openapi-api-3.1.1.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-client\6.2.9.Final\resteasy-client-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-client-api\6.2.9.Final\resteasy-client-api-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-core-spi\6.2.9.Final\resteasy-core-spi-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-core\6.2.9.Final\resteasy-core-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\org\jboss\jandex\2.4.5.Final\jandex-2.4.5.Final.jar;C:\Users\A715-42G\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\A715-42G\.m2\repository\com\ibm\async\asyncutil\0.1.0\asyncutil-0.1.0.jar;C:\Users\A715-42G\.m2\repository\commons-codec\commons-codec\1.16.1\commons-codec-1.16.1.jar;C:\Users\A715-42G\.m2\repository\jakarta\ws\rs\jakarta.ws.rs-api\3.1.0\jakarta.ws.rs-api-3.1.0.jar;C:\Users\A715-42G\.m2\repository\org\reactivestreams\reactive-streams\1.0.4\reactive-streams-1.0.4.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-multipart-provider\6.2.9.Final\resteasy-multipart-provider-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\jakarta\mail\jakarta.mail-api\2.1.3\jakarta.mail-api-2.1.3.jar;C:\Users\A715-42G\.m2\repository\org\eclipse\angus\angus-mail\2.0.3\angus-mail-2.0.3.jar;C:\Users\A715-42G\.m2\repository\org\apache\james\apache-mime4j-dom\0.8.11\apache-mime4j-dom-0.8.11.jar;C:\Users\A715-42G\.m2\repository\org\apache\james\apache-mime4j-core\0.8.11\apache-mime4j-core-0.8.11.jar;C:\Users\A715-42G\.m2\repository\org\apache\james\apache-mime4j-storage\0.8.11\apache-mime4j-storage-0.8.11.jar;C:\Users\A715-42G\.m2\repository\commons-io\commons-io\2.11.0\commons-io-2.11.0.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-jackson2-provider\6.2.9.Final\resteasy-jackson2-provider-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\jakarta\rs\jackson-jakarta-rs-base\2.17.3\jackson-jakarta-rs-base-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\jakarta\rs\jackson-jakarta-rs-json-provider\2.17.3\jackson-jakarta-rs-json-provider-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\module\jackson-module-jakarta-xmlbind-annotations\2.17.3\jackson-module-jakarta-xmlbind-annotations-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\github\java-json-tools\json-patch\1.13\json-patch-1.13.jar;C:\Users\A715-42G\.m2\repository\com\github\java-json-tools\msg-simple\1.2\msg-simple-1.2.jar;C:\Users\A715-42G\.m2\repository\com\github\java-json-tools\btf\1.3\btf-1.3.jar;C:\Users\A715-42G\.m2\repository\com\github\java-json-tools\jackson-coreutils\2.0\jackson-coreutils-2.0.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-jaxb-provider\6.2.9.Final\resteasy-jaxb-provider-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\codemodel\4.0.5\codemodel-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-jxc\4.0.5\jaxb-jxc-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-xjc\4.0.5\jaxb-xjc-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\xsom\4.0.5\xsom-4.0.5.jar;C:\Users\A715-42G\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\A715-42G\.m2\repository\com\sun\istack\istack-commons-tools\4.1.2\istack-commons-tools-4.1.2.jar;C:\Users\A715-42G\.m2\repository\com\sun\xml\bind\external\relaxng-datatype\4.0.3\relaxng-datatype-4.0.3.jar;C:\Users\A715-42G\.m2\repository\com\sun\xml\bind\external\rngom\4.0.3\rngom-4.0.3.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Saigon, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, java.vm.specification.version=17, os.name=Windows 10, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-17\bin, sun.java.command=com.example.transaction_service.TransactionServiceApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@695e947f, com.sun.management.jmxremote=, jdk.debug=release, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, hibernate.cdi.extensions=true, user.home=C:\Users\A715-42G, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-01-17, java.home=C:\Program Files\Java\jdk-17, file.separator=\, spring.output.ansi.enabled=always, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.6+9-LTS-190, user.name=A715-42G, spring.jmx.enabled=true, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\A715-42G\AppData\Local\Temp\, catalina.home=C:\Users\A715-42G\AppData\Local\Temp\tomcat.8088.11828639516248162752, java.version=17.0.6, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=D:\LT_Web\SpringBoot\java-banking-phase2, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=5292, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\A715-42G\AppData\Local\Temp\tomcat.8088.11828639516248162752, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@5b33f90d, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-17\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;D:\Document\xxx\apache-maven-3.9.1\bin;C:\Program Files (x86)\Dev-Cpp\MinGW64\bin;C:\Program Files\Git\cmd;C:\Program Files\Java\jdk-17\bin;C:\XamPP\php;D:\LT_Web\SpringBoot\SpringBootCLI\spring-3.2.1\bin;D:\sqlite;D:\Document\Java\Maven\apache-maven-3.9.9\bin;D:\Document\Java\Maven\apache-maven-3.9.9\bin;C:\Program Files\Cloudflare\Cloudflare WARP\;C:\ProgramData\chocolatey\bin;D:\KienLongBank\Vault;D:\GrafanaLabs\grafana\bin;D:\KienLongBank\InfluxData\influxdb-1.8.10-1;D:\Document\Work\Redis;C:\Program Files\Docker\Docker\resources\bin;D:\nodejs\nvm;C:\nvm4w\nodejs;C:\Program Files\nodejs\;C:\Users\A715-42G\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\A715-42G\AppData\Local\Programs\Python\Python310\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\A715-42G\AppData\Local\Programs\Eclipse Adoptium\jdk-17.0.3.7-hotspot\bin;C:\Users\A715-42G\AppData\Local\Microsoft\WindowsApps;C:\Users\A715-42G\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\Azure Data Studio\bin;C:\Program Files\Git\bin;D:\Document\HQT_ATCSDL\MongoDB\mongosh-1.8.2-win32-x64\bin;C:\XamPP\php;C:\Program Files\Azure Data Studio\bin;D:\nodejs\nvm;C:\nvm4w\nodejs;C:\Users\A715-42G\AppData\Roaming\npm;D:\Document\cursor\resources\app\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, emulated-client, sharing, java.vm.version=17.0.6+9-LTS-190, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=61.0, LOGGED_APPLICATION_NAME=[transaction-service] } MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {} MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.example.transaction_service.entity.Transaction] is safe MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@39ef5060] under count; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@231beb42] under every; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@72a88726] under any; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@28340d61] under sinh; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5fa1b306] under cosh; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7841feed] under tanh; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4b81eb0a] under pi; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@43d6a81e] under log; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : length -> character_length MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@2a4072fa] under position; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@5487a0b0] under overlay; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@56980057] under trim; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@72532bb9] under cast; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6c7896a4] under collate; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@24cbdc0] under extract; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@58fe78ea] under ifnull; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@6884baca] under pad; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@2914beb] under str; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@127f786a] under format; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@59e59aec] under timestampadd; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@23d137a9] under timestampdiff; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@405fb193] under current_date; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4b567cbc] under current_time; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@165af282] under current_timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current date -> current_date MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current time -> current_time MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@319c1ed0] under local_date; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@cf2e259] under local_time; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7439dce7] under local_datetime; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@35b6ee00] under offset_datetime; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local date -> local_date MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local time -> local_time MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@640d0cf8] under instant; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current_instant -> instant MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@4bb07175] under sql; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@43d6a81e MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@69c92e53] under lpad; prior registration was NamedSqmFunctionTemplate(lpad) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@114a0425] under rpad; prior registration was NamedSqmFunctionTemplate(rpad) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : day -> dayofmonth MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@460e2b4a] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@2a4072fa MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@6e0bb2d4] under trunc; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : truncate -> trunc MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@432151b9] under bitand; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@57cea030] under bitor; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@57e82167] under bitxor; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@64c6b45c] under bitnot; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@2da38de4] under format; prior registration was org.hibernate.dialect.function.FormatFunction@127f786a MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@cf2e259 MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@7439dce7 MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@f4e7740] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4b81eb0a MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@193b9cd7] under chr; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : char -> chr MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@480eaff8] under sysdate; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@7d2fa46e] under listagg; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - abs(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double acos(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - addtime(TIME datetime, TIME time) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean any(BOOLEAN arg) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer ascii(STRING arg) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double asin(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - avg(arg) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bit_and(arg) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bit_or(arg) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitand(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitnot(arg) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitor(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitxor(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - cast(arg as Type) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - ceiling(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Character char(INTEGER arg) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Character chr(INTEGER arg) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]]) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String collate(STRING string as COLLATION collation) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]]) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double cos(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double cosh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double cot(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Long count([distinct ]{arg|*}) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer crc32(arg) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date curdate() MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date current date MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time current time MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current timestamp MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date current_date MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Instant current_instant MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time current_time MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current_timestamp MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time curtime() MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date date(arg) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer datediff(DATE end, DATE start) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer day(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String dayname(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofmonth(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofweek(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofyear(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double degrees(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean every(BOOLEAN arg) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double exp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - floor(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]]) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer hour(TIME arg) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - ifnull(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Instant instant MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]]) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date last_day(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]]) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String left(STRING string, INTEGER length) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double ln(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local date MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local datetime MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local time MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local_date MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local_datetime MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local_time MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtime MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtimestamp MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start]) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1]) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double log10(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double log2(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String lower(STRING string) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String lpad(string, length[, padding]) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters]) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - max(COMPARABLE arg) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String md5(arg) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer microsecond(TIME arg) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - min(COMPARABLE arg) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer minute(TIME arg) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer month(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String monthname(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp now() MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - nullif(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset datetime MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset_datetime MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length]) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character]) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double pi MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer position(STRING pattern in STRING string) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer quarter(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double radians(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double rand([INTEGER seed]) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String repeat(STRING string, INTEGER times) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String reverse(STRING arg) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String right(STRING string, INTEGER length) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places]) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String rpad(string, length[, padding]) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters]) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer second(TIME arg) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String sha(arg) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String sha1(arg) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String sha2(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer sign(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double sin(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double sinh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String soundex(arg) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String space(INTEGER arg) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Object sql MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double sqrt(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String str(arg) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length]) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length]) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - subtime(TIME datetime, TIME time) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - sum(arg) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp sysdate() MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double tan(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double tanh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String time(arg) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1]) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - trunc( ... ) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - truncate( ... ) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String upper(STRING string) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date utc_date MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time utc_time MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp utc_timestamp MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_pop(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_samp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double variance(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer week(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer year(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG org.hibernate.orm.query.plan.cache - Starting QueryInterpretationCache(2048) MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.e.i.EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.example.transaction_service.entity.Transaction] is safe MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.example.transaction_service.entity.Transaction]: private accessor [amount] MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.orm.model.mapping.creation - Starting post-init callbacks MDC:[traceId=, spanId=]
2025-06-10 21:56:25 [restartedMain] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(com.example.transaction_service.entity.Transaction) `staticFetchableList` generator MDC:[traceId=, spanId=]
2025-06-10 21:56:26 [restartedMain] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 21:56:26 [restartedMain] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction)] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 21:56:26 [restartedMain] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction.updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 21:56:26 [restartedMain] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 21:56:26 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-10 21:56:26 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select id from tbl_transaction where id=? MDC:[traceId=, spanId=]
2025-06-10 21:56:26 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into tbl_transaction (amount,bank_type,created_at,created_by,currency,description,destination_bank_code,destination_bank_name,failed_reason,from_account_number,reference_code,status,timestamp,to_account_number,type,updated_at,updated_by,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) MDC:[traceId=, spanId=]
2025-06-10 21:56:26 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update tbl_transaction set amount=?,bank_type=?,created_at=?,created_by=?,currency=?,description=?,destination_bank_code=?,destination_bank_name=?,failed_reason=?,from_account_number=?,reference_code=?,status=?,timestamp=?,to_account_number=?,type=?,updated_at=?,updated_by=? where id=? MDC:[traceId=, spanId=]
2025-06-10 21:56:26 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from tbl_transaction where id=? MDC:[traceId=, spanId=]
2025-06-10 21:56:26 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration) MDC:[traceId=, spanId=]
2025-06-10 21:56:26 [restartedMain] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7f1eb224] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@6495c213] MDC:[traceId=, spanId=]
2025-06-10 21:56:26 [restartedMain] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named HQL queries MDC:[traceId=, spanId=]
2025-06-10 21:56:26 [restartedMain] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named SQL queries MDC:[traceId=, spanId=]
2025-06-10 21:56:26 [restartedMain] DEBUG org.hibernate.mapping.Table - No alter strings for table : tbl_transaction MDC:[traceId=, spanId=]
2025-06-10 21:56:26 [restartedMain] DEBUG o.h.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6558d5dd MDC:[traceId=, spanId=]
2025-06-10 21:56:26 [restartedMain] DEBUG o.h.internal.SessionFactoryRegistry - Registering SessionFactory: 607cd379-4ac8-4cd4-b981-0b2f125e98e1 (<unnamed>) MDC:[traceId=, spanId=]
2025-06-10 21:56:26 [restartedMain] DEBUG o.h.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured MDC:[traceId=, spanId=]
2025-06-10 21:56:26 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Instantiated SessionFactory MDC:[traceId=, spanId=]
2025-06-10 21:56:26 [restartedMain] DEBUG o.h.s.internal.StatisticsInitiator - Statistics initialized [enabled=false] MDC:[traceId=, spanId=]
2025-06-10 21:56:26 [restartedMain] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy3/jdk.proxy3.$Proxy223.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.example.transaction_service.TransactionServiceApplication.main(TransactionServiceApplication.java:15)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-06-10 21:56:26 [restartedMain] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy3/jdk.proxy3.$Proxy223.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.getCountQuery(JpaQueryLookupStrategy.java:204)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:171)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.example.transaction_service.TransactionServiceApplication.main(TransactionServiceApplication.java:15)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-06-10 21:56:26 [restartedMain] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy3/jdk.proxy3.$Proxy223.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.getCountQuery(JpaQueryLookupStrategy.java:204)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:171)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.example.transaction_service.TransactionServiceApplication.main(TransactionServiceApplication.java:15)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-06-10 21:56:26 [restartedMain] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy3/jdk.proxy3.$Proxy223.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.example.transaction_service.TransactionServiceApplication.main(TransactionServiceApplication.java:15)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-06-10 21:56:29 [restartedMain] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-06-10 21:56:29 [restartedMain] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator MDC:[traceId=, spanId=]
2025-06-10 21:56:29 [restartedMain] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory MDC:[traceId=, spanId=]
2025-06-10 21:56:29 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-06-10 21:56:29 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader MDC:[traceId=, spanId=]
2025-06-10 21:56:29 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-06-10 21:56:29 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-06-10 21:56:29 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-06-10 21:56:29 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-06-10 21:56:29 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-06-10 21:56:29 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-06-10 21:56:29 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-06-10 21:56:29 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-06-10 21:56:29 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-06-10 21:56:29 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-06-10 21:56:29 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-06-10 21:56:31 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 21:56:31 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 21:56:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 21:56:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 21:56:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@72aa84a4 MDC:[traceId=, spanId=]
2025-06-10 21:56:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-10 21:56:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3dbb49cc MDC:[traceId=, spanId=]
2025-06-10 21:56:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 21:56:32 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 21:56:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 21:56:32 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 21:56:32 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@265039042 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 21:56:32 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 21:56:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 21:57:31 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 21:57:31 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 21:57:31 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 21:57:31 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 21:57:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@74effeea MDC:[traceId=, spanId=]
2025-06-10 21:57:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-10 21:57:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@ca7b8a MDC:[traceId=, spanId=]
2025-06-10 21:57:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 21:57:32 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 21:57:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 21:57:32 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 21:57:32 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@1383752903 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 21:57:32 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 21:57:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 21:58:31 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 21:58:31 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 21:58:31 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 21:58:31 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 21:58:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@e0ce15f MDC:[traceId=, spanId=]
2025-06-10 21:58:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-10 21:58:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@705318e1 MDC:[traceId=, spanId=]
2025-06-10 21:58:32 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 21:58:32 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 21:58:32 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 21:58:32 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 21:58:32 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@2073338818 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 21:58:32 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 21:58:32 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 21:59:31 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 21:59:31 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 21:59:31 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 21:59:31 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 21:59:31 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@75f9cbc9 MDC:[traceId=, spanId=]
2025-06-10 21:59:31 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-10 21:59:31 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@520d16f0 MDC:[traceId=, spanId=]
2025-06-10 21:59:31 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 21:59:31 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 21:59:31 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 21:59:31 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 21:59:31 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@93762081 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 21:59:31 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 21:59:31 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 22:00:12 [SpringContextShutdownHook] DEBUG o.h.internal.SessionFactoryImpl - HHH000031: Closing MDC:[traceId=, spanId=]
2025-06-10 22:00:12 [SpringContextShutdownHook] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@4764b0e] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@6495c213] MDC:[traceId=, spanId=]
2025-06-10 22:00:12 [SpringContextShutdownHook] DEBUG o.h.s.i.AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries MDC:[traceId=, spanId=]
2025-06-10 22:00:12 [SpringContextShutdownHook] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries MDC:[traceId=, spanId=]
2025-06-10 22:00:46 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final MDC:[traceId=, spanId=]
2025-06-10 22:00:46 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-06-10 22:00:46 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-06-10 22:00:46 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-06-10 22:00:46 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-06-10 22:00:46 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-06-10 22:00:46 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-06-10 22:00:46 [background-preinit] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-06-10 22:00:46 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-06-10 22:00:46 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-06-10 22:00:46 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-06-10 22:00:46 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-06-10 22:00:46 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-06-10 22:00:46 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-06-10 22:00:56 [restartedMain] DEBUG o.h.jpa.internal.util.LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@12a83a08
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/LT_Web/SpringBoot/java-banking-phase2/backend/transaction-service/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.example.transaction_service.entity.Transaction]
	Mapping files names []
	Properties [] MDC:[traceId=, spanId=]
2025-06-10 22:00:56 [restartedMain] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator]. MDC:[traceId=, spanId=]
2025-06-10 22:00:56 [restartedMain] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator]. MDC:[traceId=, spanId=]
2025-06-10 22:00:56 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final MDC:[traceId=, spanId=]
2025-06-10 22:00:56 [restartedMain] DEBUG org.hibernate.cfg.Environment - HHH000206: 'hibernate.properties' not found MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator] MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator] MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator] MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator] MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned] MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator] MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator] MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator] MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator] MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator] MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.h.c.i.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@714d9c1f MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@714d9c1f MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@714d9c1f MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@1998acf6 MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@1998acf6 MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@24591b41 MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@24591b41 MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@7b911c5d MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@7b911c5d MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@66a1ca54 MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@66a1ca54 MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@66a1ca54 MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@3a02256a MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@3a02256a MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@3a02256a MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@566db278 MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@566db278 MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@256d2f1c MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@4df6a28f MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@4df6a28f MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@66f4e72e MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@5db177fa MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@1168a69f MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@1168a69f MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@1168a69f MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@69f28ce7 MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@69f28ce7 MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@69f28ce7 MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@287ecb60 MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@287ecb60 MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@287ecb60 MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@7ea67732 MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@7ea67732 MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@7ea67732 MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@2a2e7a27 MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@2a2e7a27 MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@2a2e7a27 MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@57c64e31 MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@57c64e31 MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@9bdba62 MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@9bdba62 MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@44ef5380 MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@44ef5380 MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@44ef5380 MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@1dc9f678 MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@789b8436 MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@789b8436 MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@1c915fed MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@225c6cac MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@225c6cac MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@225c6cac MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@707424a9 MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@54eaa4a5 MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@4292f7e2 MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@36aca10 MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@36aca10 MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@52eae7b8 MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@52eae7b8 MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@5324aecc MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@6dc6ead MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@53330e2c MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@56e1f4d5 MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@20c5620b MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@4509c9b8 MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@e80ed5b MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@e80ed5b MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@579ee702 MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@579ee702 MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@5c4012c0 MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@5c4012c0 MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@570f44f9 MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@570f44f9 MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@5e6c8176 MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@5e6c8176 MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7eeadb4e MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@22e01041 MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@f65a068 MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@f65a068 MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@3538f7c3 MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1d206a81 MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3fe0137c MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@1da48208 MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@1da48208 MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6fd0f890 MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@71bae389 MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@4e7e6531 MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@4e7e6531 MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@77730a34 MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@77730a34 MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@1f8f6832 MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@1f8f6832 MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@1f8f6832 MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@398f76e1 MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@398f76e1 MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@398f76e1 MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@4e5cb0c MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@6b28430e MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@f0268a1 MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@f0268a1 MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@4d782fde MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@4d782fde MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@4d782fde MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@67ef30d6 MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@4e763f16 MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@522d0119 MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@522d0119 MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@5ea7c25d MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@5ea7c25d MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@5ea7c25d MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@40d020df MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@40d020df MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@3f21295c MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@3f21295c MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@5bec268 MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@5bec268 MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@656b4da8 MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@656b4da8 MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@247c5f02 MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@247c5f02 MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@1221f918 MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@61ffd4b6 MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@6fb0b148 MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@6fb0b148 MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@6f447029 MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@1bd40ed7 MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@eefa92e MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@54fa8234 MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@187375ba MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@236a62d5 MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@503f094f MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@5054ca5e MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@5309ab4b MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@56d32ea7] into BootstrapContext; was [null] MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@56d32ea7) [was null] MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@1c39e136] into BootstrapContext; was [null] MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@46413382] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@6bfcb8be] MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@56d32ea7] MDC:[traceId=, spanId=]
2025-06-10 22:00:57 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@56d32ea7] MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Database ->
	   name : MySQL
	version : 8.0.32
	  major : 8
	  minor : 0 MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Driver ->
	   name : MySQL Connector/J
	version : mysql-connector-j-8.3.0 (Revision: 805f872a57875f311cb82487efcfb070411a3fa0)
	  major : 8
	  minor : 3 MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - JDBC version : 4.2 MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default) MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG org.hibernate.orm.dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQL8Dialect, version: 8.0 MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@48c09aff) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@9d31a64) MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4397213) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@59ead36) MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4945d818) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@58d4fb6e) MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@17b2b38d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@67b54b50) MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@d7daa6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7f274e59) MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7d0bb4eb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@30299fd1) MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@e156198) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4b05a385) MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6b89fae2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@17a22755) MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@329e9d98) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@546109c5) MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor) MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor) MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor) MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT)) MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT)) MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@4e64f68b MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@6f447029` MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@47864275] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1839f6aa] MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.boot.model.relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}] MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Transaction MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity com.example.transaction_service.entity.Transaction on table tbl_transaction MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE') MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.example.transaction_service.entity.Transaction] is safe MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property id with lazy=false MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:id] MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for id MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.id MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property id MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, assigned, , ...) MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property amount with lazy=false MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:amount] MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for amount MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.amount MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property amount MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property bankType with lazy=false MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:bankType] MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for bankType MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.bank_type MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property bankType MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:createdAt] MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for createdAt MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.created_at MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property createdAt MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property createdBy with lazy=false MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:createdBy] MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for createdBy MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.created_by MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property createdBy MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property currency with lazy=false MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:currency] MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for currency MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.currency MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property currency MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property description with lazy=false MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:description] MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for description MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.description MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property description MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property destinationBankCode with lazy=false MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:destinationBankCode] MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for destinationBankCode MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.destination_bank_code MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property destinationBankCode MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property destinationBankName with lazy=false MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:destinationBankName] MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for destinationBankName MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.destination_bank_name MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property destinationBankName MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property failedReason with lazy=false MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:failedReason] MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for failedReason MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.failed_reason MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property failedReason MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property fromAccountNumber with lazy=false MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:fromAccountNumber] MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for fromAccountNumber MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.from_account_number MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property fromAccountNumber MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property referenceCode with lazy=false MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:referenceCode] MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for referenceCode MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.reference_code MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property referenceCode MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property status with lazy=false MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:status] MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for status MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.status MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property status MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property timestamp with lazy=false MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:timestamp] MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for timestamp MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.timestamp MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property timestamp MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property toAccountNumber with lazy=false MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:toAccountNumber] MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for toAccountNumber MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.to_account_number MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property toAccountNumber MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property type with lazy=false MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:type] MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for type MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.type MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property type MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:updatedAt] MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for updatedAt MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.updated_at MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property updatedAt MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property updatedBy with lazy=false MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:updatedBy] MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for updatedBy MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.updated_by MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property updatedBy MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: com.example.transaction_service.entity MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.j.e.i.CallbackDefinitionResolverLegacyImpl - Adding touchForUpdate as PreUpdate callback for entity com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.j.e.i.CallbackDefinitionResolverLegacyImpl - Adding prePersist as PrePersist callback for entity com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.j.e.i.CallbackDefinitionResolverLegacyImpl - Adding touchForCreate as PrePersist callback for entity com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bankType MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for createdAt MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for createdBy MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for currency MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for description MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for destinationBankCode MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for destinationBankName MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for failedReason MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for fromAccountNumber MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for referenceCode MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for timestamp MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for toAccountNumber MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for type MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for updatedAt MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for updatedBy MDC:[traceId=, spanId=]
2025-06-10 22:00:58 [restartedMain] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [tbl_transaction] MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Building session factory MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Instantiating SessionFactory with settings: {jdk.tls.rejectClientInitiatedRenegotiation=true, java.specification.version=17, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@21ad5fc4, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=D:\LT_Web\SpringBoot\java-banking-phase2\backend\transaction-service\target\classes;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-actuator\3.3.11\spring-boot-starter-actuator-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter\3.3.11\spring-boot-starter-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.3.11\spring-boot-starter-logging-3.3.11.jar;C:\Users\A715-42G\.m2\repository\ch\qos\logback\logback-classic\1.5.18\logback-classic-1.5.18.jar;C:\Users\A715-42G\.m2\repository\ch\qos\logback\logback-core\1.5.18\logback-core-1.5.18.jar;C:\Users\A715-42G\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.23.1\log4j-to-slf4j-2.23.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\logging\log4j\log4j-api\2.23.1\log4j-api-2.23.1.jar;C:\Users\A715-42G\.m2\repository\org\slf4j\jul-to-slf4j\2.0.17\jul-to-slf4j-2.0.17.jar;C:\Users\A715-42G\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\A715-42G\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-actuator-autoconfigure\3.3.11\spring-boot-actuator-autoconfigure-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-actuator\3.3.11\spring-boot-actuator-3.3.11.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-observation\1.13.13\micrometer-observation-1.13.13.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-commons\1.13.13\micrometer-commons-1.13.13.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-jakarta9\1.13.13\micrometer-jakarta9-1.13.13.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-core\1.13.13\micrometer-core-1.13.13.jar;C:\Users\A715-42G\.m2\repository\org\hdrhistogram\HdrHistogram\2.2.2\HdrHistogram-2.2.2.jar;C:\Users\A715-42G\.m2\repository\org\latencyutils\LatencyUtils\2.0.3\LatencyUtils-2.0.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.3.11\spring-boot-starter-data-jpa-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.3.11\spring-boot-starter-aop-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\aspectj\aspectjweaver\1.9.24\aspectjweaver-1.9.24.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.3.11\spring-boot-starter-jdbc-3.3.11.jar;C:\Users\A715-42G\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-jdbc\6.1.19\spring-jdbc-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\orm\hibernate-core\6.5.3.Final\hibernate-core-6.5.3.Final.jar;C:\Users\A715-42G\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\A715-42G\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\A715-42G\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\A715-42G\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\A715-42G\.m2\repository\net\bytebuddy\byte-buddy\1.14.19\byte-buddy-1.14.19.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\A715-42G\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\A715-42G\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-jpa\3.3.11\spring-data-jpa-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-commons\3.3.11\spring-data-commons-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-orm\6.1.19\spring-orm-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-context\6.1.19\spring-context-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-tx\6.1.19\spring-tx-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-beans\6.1.19\spring-beans-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-aspects\6.1.19\spring-aspects-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.3.11\spring-boot-starter-web-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.3.11\spring-boot-starter-json-3.3.11.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.17.3\jackson-module-parameter-names-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.3.11\spring-boot-starter-tomcat-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.40\tomcat-embed-core-10.1.40.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.40\tomcat-embed-websocket-10.1.40.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-web\6.1.19\spring-web-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-webmvc\6.1.19\spring-webmvc-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-expression\6.1.19\spring-expression-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-devtools\3.3.11\spring-boot-devtools-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot\3.3.11\spring-boot-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.3.11\spring-boot-autoconfigure-3.3.11.jar;C:\Users\A715-42G\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\A715-42G\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-core\6.1.19\spring-core-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-jcl\6.1.19\spring-jcl-6.1.19.jar;C:\Users\A715-42G\.m2\repository\com\mysql\mysql-connector-j\8.3.0\mysql-connector-j-8.3.0.jar;C:\Users\A715-42G\.m2\repository\org\projectlombok\lombok\1.18.38\lombok-1.18.38.jar;C:\Users\A715-42G\.m2\repository\org\mapstruct\mapstruct\1.5.5.Final\mapstruct-1.5.5.Final.jar;C:\Users\A715-42G\.m2\repository\org\mapstruct\mapstruct-processor\1.5.5.Final\mapstruct-processor-1.5.5.Final.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-validation\3.3.11\spring-boot-starter-validation-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.40\tomcat-embed-el-10.1.40.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\validator\hibernate-validator\8.0.2.Final\hibernate-validator-8.0.2.Final.jar;C:\Users\A715-42G\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-ui\2.0.2\springdoc-openapi-starter-webmvc-ui-2.0.2.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-api\2.0.2\springdoc-openapi-starter-webmvc-api-2.0.2.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-common\2.0.2\springdoc-openapi-starter-common-2.0.2.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-core-jakarta\2.2.7\swagger-core-jakarta-2.2.7.jar;C:\Users\A715-42G\.m2\repository\org\apache\commons\commons-lang3\3.14.0\commons-lang3-3.14.0.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-annotations-jakarta\2.2.7\swagger-annotations-jakarta-2.2.7.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-models-jakarta\2.2.7\swagger-models-jakarta-2.2.7.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-yaml\2.17.3\jackson-dataformat-yaml-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\webjars\swagger-ui\4.15.5\swagger-ui-4.15.5.jar;C:\Users\A715-42G\.m2\repository\org\webjars\webjars-locator-core\0.58\webjars-locator-core-0.58.jar;C:\Users\A715-42G\.m2\repository\io\github\classgraph\classgraph\4.8.149\classgraph-4.8.149.jar;D:\LT_Web\SpringBoot\java-banking-phase2\backend\common-service\target\classes;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.17.3\jackson-databind-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\apache\dubbo\dubbo-spring-boot-starter\3.3.2\dubbo-spring-boot-starter-3.3.2.jar;C:\Users\A715-42G\.m2\repository\org\apache\dubbo\dubbo-spring-boot-autoconfigure\3.3.2\dubbo-spring-boot-autoconfigure-3.3.2.jar;C:\Users\A715-42G\.m2\repository\org\apache\dubbo\dubbo-spring-boot-autoconfigure-compatible\3.3.2\dubbo-spring-boot-autoconfigure-compatible-3.3.2.jar;C:\Users\A715-42G\.m2\repository\org\apache\dubbo\dubbo\3.3.2\dubbo-3.3.2.jar;C:\Users\A715-42G\.m2\repository\org\javassist\javassist\3.30.2-GA\javassist-3.30.2-GA.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-all\4.1.119.Final\netty-all-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-dns\4.1.119.Final\netty-codec-dns-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-haproxy\4.1.119.Final\netty-codec-haproxy-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-http\4.1.119.Final\netty-codec-http-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-http2\4.1.119.Final\netty-codec-http2-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-memcache\4.1.119.Final\netty-codec-memcache-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-mqtt\4.1.119.Final\netty-codec-mqtt-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-redis\4.1.119.Final\netty-codec-redis-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-smtp\4.1.119.Final\netty-codec-smtp-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-socks\4.1.119.Final\netty-codec-socks-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-stomp\4.1.119.Final\netty-codec-stomp-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-xml\4.1.119.Final\netty-codec-xml-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-handler-proxy\4.1.119.Final\netty-handler-proxy-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-handler-ssl-ocsp\4.1.119.Final\netty-handler-ssl-ocsp-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-resolver-dns\4.1.119.Final\netty-resolver-dns-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-rxtx\4.1.119.Final\netty-transport-rxtx-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-sctp\4.1.119.Final\netty-transport-sctp-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-udt\4.1.119.Final\netty-transport-udt-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-classes-kqueue\4.1.119.Final\netty-transport-classes-kqueue-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-resolver-dns-classes-macos\4.1.119.Final\netty-resolver-dns-classes-macos-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final-linux-x86_64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final-linux-aarch_64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final-linux-riscv64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-kqueue\4.1.119.Final\netty-transport-native-kqueue-4.1.119.Final-osx-x86_64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-kqueue\4.1.119.Final\netty-transport-native-kqueue-4.1.119.Final-osx-aarch_64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-resolver-dns-native-macos\4.1.119.Final\netty-resolver-dns-native-macos-4.1.119.Final-osx-x86_64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-resolver-dns-native-macos\4.1.119.Final\netty-resolver-dns-native-macos-4.1.119.Final-osx-aarch_64.jar;C:\Users\A715-42G\.m2\repository\org\apache\dubbo\hessian-lite\4.0.3\hessian-lite-4.0.3.jar;C:\Users\A715-42G\.m2\repository\com\alibaba\fastjson2\fastjson2\2.0.53\fastjson2-2.0.53.jar;C:\Users\A715-42G\.m2\repository\com\google\protobuf\protobuf-java\3.25.5\protobuf-java-3.25.5.jar;C:\Users\A715-42G\.m2\repository\org\apache\curator\curator-framework\5.1.0\curator-framework-5.1.0.jar;C:\Users\A715-42G\.m2\repository\org\apache\curator\curator-client\5.1.0\curator-client-5.1.0.jar;C:\Users\A715-42G\.m2\repository\com\google\guava\guava\27.0.1-jre\guava-27.0.1-jre.jar;C:\Users\A715-42G\.m2\repository\com\google\guava\failureaccess\1.0.1\failureaccess-1.0.1.jar;C:\Users\A715-42G\.m2\repository\com\google\guava\listenablefuture\9999.0-empty-to-avoid-conflict-with-guava\listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar;C:\Users\A715-42G\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\A715-42G\.m2\repository\org\checkerframework\checker-qual\2.5.2\checker-qual-2.5.2.jar;C:\Users\A715-42G\.m2\repository\com\google\errorprone\error_prone_annotations\2.2.0\error_prone_annotations-2.2.0.jar;C:\Users\A715-42G\.m2\repository\com\google\j2objc\j2objc-annotations\1.1\j2objc-annotations-1.1.jar;C:\Users\A715-42G\.m2\repository\org\codehaus\mojo\animal-sniffer-annotations\1.17\animal-sniffer-annotations-1.17.jar;C:\Users\A715-42G\.m2\repository\org\apache\zookeeper\zookeeper\3.7.1\zookeeper-3.7.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\zookeeper\zookeeper-jute\3.7.1\zookeeper-jute-3.7.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\yetus\audience-annotations\0.12.0\audience-annotations-0.12.0.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-handler\4.1.119.Final\netty-handler-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-common\4.1.119.Final\netty-common-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-resolver\4.1.119.Final\netty-resolver-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-buffer\4.1.119.Final\netty-buffer-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport\4.1.119.Final\netty-transport-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-unix-common\4.1.119.Final\netty-transport-native-unix-common-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec\4.1.119.Final\netty-codec-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-classes-epoll\4.1.119.Final\netty-transport-classes-epoll-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\org\slf4j\slf4j-api\2.0.17\slf4j-api-2.0.17.jar;C:\Users\A715-42G\.m2\repository\org\apache\curator\curator-recipes\5.5.0\curator-recipes-5.5.0.jar;C:\Users\A715-42G\.m2\repository\org\apache\curator\curator-x-discovery\5.5.0\curator-x-discovery-5.5.0.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-starter-vault-config\4.1.1\spring-cloud-starter-vault-config-4.1.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\httpcomponents\client5\httpclient5\5.3.1\httpclient5-5.3.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\httpcomponents\core5\httpcore5-h2\5.2.5\httpcore5-h2-5.2.5.jar;C:\Users\A715-42G\.m2\repository\org\apache\httpcomponents\core5\httpcore5\5.2.5\httpcore5-5.2.5.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-starter\4.1.2\spring-cloud-starter-4.1.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-context\4.1.2\spring-cloud-context-4.1.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-commons\4.1.2\spring-cloud-commons-4.1.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-rsa\1.1.2\spring-security-rsa-1.1.2.jar;C:\Users\A715-42G\.m2\repository\org\bouncycastle\bcprov-jdk18on\1.77\bcprov-jdk18on-1.77.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-vault-config\4.1.1\spring-cloud-vault-config-4.1.1.jar;C:\Users\A715-42G\.m2\repository\org\springframework\vault\spring-vault-core\3.1.1\spring-vault-core-3.1.1.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-data-redis\3.3.11\spring-boot-starter-data-redis-3.3.11.jar;C:\Users\A715-42G\.m2\repository\io\lettuce\lettuce-core\6.3.2.RELEASE\lettuce-core-6.3.2.RELEASE.jar;C:\Users\A715-42G\.m2\repository\io\projectreactor\reactor-core\3.6.16\reactor-core-3.6.16.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-redis\3.3.11\spring-data-redis-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-keyvalue\3.3.11\spring-data-keyvalue-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-oxm\6.1.19\spring-oxm-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-context-support\6.1.19\spring-context-support-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-stream\4.2.1\spring-cloud-stream-4.2.1.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-messaging\6.1.19\spring-messaging-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\integration\spring-integration-core\6.3.9\spring-integration-core-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\integration\spring-integration-jmx\6.3.9\spring-integration-jmx-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\retry\spring-retry\2.0.11\spring-retry-2.0.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-function-context\4.2.2\spring-cloud-function-context-4.2.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-function-core\4.2.2\spring-cloud-function-core-4.2.2.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-joda\2.17.3\jackson-datatype-joda-2.17.3.jar;C:\Users\A715-42G\.m2\repository\joda-time\joda-time\2.10.14\joda-time-2.10.14.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-starter-stream-kafka\4.2.1\spring-cloud-starter-stream-kafka-4.2.1.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-stream-binder-kafka\4.2.1\spring-cloud-stream-binder-kafka-4.2.1.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-stream-binder-kafka-core\4.2.1\spring-cloud-stream-binder-kafka-core-4.2.1.jar;C:\Users\A715-42G\.m2\repository\org\springframework\integration\spring-integration-kafka\6.3.9\spring-integration-kafka-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\kafka\spring-kafka\3.2.8\spring-kafka-3.2.8.jar;C:\Users\A715-42G\.m2\repository\org\apache\kafka\kafka-clients\3.7.2\kafka-clients-3.7.2.jar;C:\Users\A715-42G\.m2\repository\com\github\luben\zstd-jni\1.5.6-4\zstd-jni-1.5.6-4.jar;C:\Users\A715-42G\.m2\repository\org\lz4\lz4-java\1.8.0\lz4-java-1.8.0.jar;C:\Users\A715-42G\.m2\repository\org\xerial\snappy\snappy-java\1.1.10.5\snappy-java-1.1.10.5.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.3.11\spring-boot-starter-security-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-aop\6.1.19\spring-aop-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-config\6.3.9\spring-security-config-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-web\6.3.9\spring-security-web-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-oauth2-resource-server\3.3.11\spring-boot-starter-oauth2-resource-server-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-core\6.3.9\spring-security-core-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-crypto\6.3.9\spring-security-crypto-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-oauth2-resource-server\6.3.9\spring-security-oauth2-resource-server-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-oauth2-core\6.3.9\spring-security-oauth2-core-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-oauth2-jose\6.3.9\spring-security-oauth2-jose-6.3.9.jar;C:\Users\A715-42G\.m2\repository\com\nimbusds\nimbus-jose-jwt\9.37.3\nimbus-jose-jwt-9.37.3.jar;C:\Users\A715-42G\.m2\repository\com\github\stephenc\jcip\jcip-annotations\1.0-1\jcip-annotations-1.0-1.jar;C:\Users\A715-42G\.m2\repository\org\keycloak\keycloak-admin-client\26.0.0\keycloak-admin-client-26.0.0.jar;C:\Users\A715-42G\.m2\repository\org\keycloak\keycloak-client-common-synced\26.0.0\keycloak-client-common-synced-26.0.0.jar;C:\Users\A715-42G\.m2\repository\org\jboss\logging\commons-logging-jboss-logging\1.0.0.Final\commons-logging-jboss-logging-1.0.0.Final.jar;C:\Users\A715-42G\.m2\repository\org\apache\httpcomponents\httpclient\4.5.14\httpclient-4.5.14.jar;C:\Users\A715-42G\.m2\repository\org\apache\httpcomponents\httpcore\4.4.16\httpcore-4.4.16.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.17.3\jackson-core-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.17.3\jackson-annotations-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.17.3\jackson-datatype-jdk8-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.17.3\jackson-datatype-jsr310-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\eclipse\microprofile\openapi\microprofile-openapi-api\3.1.1\microprofile-openapi-api-3.1.1.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-client\6.2.9.Final\resteasy-client-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-client-api\6.2.9.Final\resteasy-client-api-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-core-spi\6.2.9.Final\resteasy-core-spi-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-core\6.2.9.Final\resteasy-core-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\org\jboss\jandex\2.4.5.Final\jandex-2.4.5.Final.jar;C:\Users\A715-42G\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\A715-42G\.m2\repository\com\ibm\async\asyncutil\0.1.0\asyncutil-0.1.0.jar;C:\Users\A715-42G\.m2\repository\commons-codec\commons-codec\1.16.1\commons-codec-1.16.1.jar;C:\Users\A715-42G\.m2\repository\jakarta\ws\rs\jakarta.ws.rs-api\3.1.0\jakarta.ws.rs-api-3.1.0.jar;C:\Users\A715-42G\.m2\repository\org\reactivestreams\reactive-streams\1.0.4\reactive-streams-1.0.4.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-multipart-provider\6.2.9.Final\resteasy-multipart-provider-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\jakarta\mail\jakarta.mail-api\2.1.3\jakarta.mail-api-2.1.3.jar;C:\Users\A715-42G\.m2\repository\org\eclipse\angus\angus-mail\2.0.3\angus-mail-2.0.3.jar;C:\Users\A715-42G\.m2\repository\org\apache\james\apache-mime4j-dom\0.8.11\apache-mime4j-dom-0.8.11.jar;C:\Users\A715-42G\.m2\repository\org\apache\james\apache-mime4j-core\0.8.11\apache-mime4j-core-0.8.11.jar;C:\Users\A715-42G\.m2\repository\org\apache\james\apache-mime4j-storage\0.8.11\apache-mime4j-storage-0.8.11.jar;C:\Users\A715-42G\.m2\repository\commons-io\commons-io\2.11.0\commons-io-2.11.0.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-jackson2-provider\6.2.9.Final\resteasy-jackson2-provider-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\jakarta\rs\jackson-jakarta-rs-base\2.17.3\jackson-jakarta-rs-base-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\jakarta\rs\jackson-jakarta-rs-json-provider\2.17.3\jackson-jakarta-rs-json-provider-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\module\jackson-module-jakarta-xmlbind-annotations\2.17.3\jackson-module-jakarta-xmlbind-annotations-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\github\java-json-tools\json-patch\1.13\json-patch-1.13.jar;C:\Users\A715-42G\.m2\repository\com\github\java-json-tools\msg-simple\1.2\msg-simple-1.2.jar;C:\Users\A715-42G\.m2\repository\com\github\java-json-tools\btf\1.3\btf-1.3.jar;C:\Users\A715-42G\.m2\repository\com\github\java-json-tools\jackson-coreutils\2.0\jackson-coreutils-2.0.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-jaxb-provider\6.2.9.Final\resteasy-jaxb-provider-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\codemodel\4.0.5\codemodel-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-jxc\4.0.5\jaxb-jxc-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-xjc\4.0.5\jaxb-xjc-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\xsom\4.0.5\xsom-4.0.5.jar;C:\Users\A715-42G\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\A715-42G\.m2\repository\com\sun\istack\istack-commons-tools\4.1.2\istack-commons-tools-4.1.2.jar;C:\Users\A715-42G\.m2\repository\com\sun\xml\bind\external\relaxng-datatype\4.0.3\relaxng-datatype-4.0.3.jar;C:\Users\A715-42G\.m2\repository\com\sun\xml\bind\external\rngom\4.0.3\rngom-4.0.3.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Saigon, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, java.vm.specification.version=17, os.name=Windows 10, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-17\bin, sun.java.command=com.example.transaction_service.TransactionServiceApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@6ae72746, com.sun.management.jmxremote=, jdk.debug=release, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, hibernate.cdi.extensions=true, user.home=C:\Users\A715-42G, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-01-17, java.home=C:\Program Files\Java\jdk-17, file.separator=\, spring.output.ansi.enabled=always, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.6+9-LTS-190, user.name=A715-42G, spring.jmx.enabled=true, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\A715-42G\AppData\Local\Temp\, catalina.home=C:\Users\A715-42G\AppData\Local\Temp\tomcat.8088.15929169086236374366, java.version=17.0.6, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=D:\LT_Web\SpringBoot\java-banking-phase2, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=16612, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\A715-42G\AppData\Local\Temp\tomcat.8088.15929169086236374366, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@79c6d552, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-17\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;D:\Document\xxx\apache-maven-3.9.1\bin;C:\Program Files (x86)\Dev-Cpp\MinGW64\bin;C:\Program Files\Git\cmd;C:\Program Files\Java\jdk-17\bin;C:\XamPP\php;D:\LT_Web\SpringBoot\SpringBootCLI\spring-3.2.1\bin;D:\sqlite;D:\Document\Java\Maven\apache-maven-3.9.9\bin;D:\Document\Java\Maven\apache-maven-3.9.9\bin;C:\Program Files\Cloudflare\Cloudflare WARP\;C:\ProgramData\chocolatey\bin;D:\KienLongBank\Vault;D:\GrafanaLabs\grafana\bin;D:\KienLongBank\InfluxData\influxdb-1.8.10-1;D:\Document\Work\Redis;C:\Program Files\Docker\Docker\resources\bin;D:\nodejs\nvm;C:\nvm4w\nodejs;C:\Program Files\nodejs\;C:\Users\A715-42G\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\A715-42G\AppData\Local\Programs\Python\Python310\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\A715-42G\AppData\Local\Programs\Eclipse Adoptium\jdk-17.0.3.7-hotspot\bin;C:\Users\A715-42G\AppData\Local\Microsoft\WindowsApps;C:\Users\A715-42G\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\Azure Data Studio\bin;C:\Program Files\Git\bin;D:\Document\HQT_ATCSDL\MongoDB\mongosh-1.8.2-win32-x64\bin;C:\XamPP\php;C:\Program Files\Azure Data Studio\bin;D:\nodejs\nvm;C:\nvm4w\nodejs;C:\Users\A715-42G\AppData\Roaming\npm;D:\Document\cursor\resources\app\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, emulated-client, sharing, java.vm.version=17.0.6+9-LTS-190, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=61.0, LOGGED_APPLICATION_NAME=[transaction-service] } MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {} MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.example.transaction_service.entity.Transaction] is safe MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@69e14116] under count; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@1b7c3c1d] under every; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@2c080bad] under any; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@773c7fbb] under sinh; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@d384e9a] under cosh; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5a189f5b] under tanh; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2d5c3761] under pi; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@390944d6] under log; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : length -> character_length MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@17a6f577] under position; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@7e3c4b04] under overlay; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@1a3a504c] under trim; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@2b2220d2] under cast; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@276b7415] under collate; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@700182d7] under extract; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@75b0b348] under ifnull; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@5d8347a4] under pad; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@49d57e49] under str; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@2f50183e] under format; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@31727c09] under timestampadd; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@bbb9f6a] under timestampdiff; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1bcf327] under current_date; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@27f98fb1] under current_time; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4c2b8e15] under current_timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current date -> current_date MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current time -> current_time MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@41bfd089] under local_date; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@277c3652] under local_time; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4c13a10b] under local_datetime; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5cd8d5ba] under offset_datetime; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local date -> local_date MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local time -> local_time MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@635c6d30] under instant; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current_instant -> instant MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@6ec444c8] under sql; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@390944d6 MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@4609c688] under lpad; prior registration was NamedSqmFunctionTemplate(lpad) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@68f1d956] under rpad; prior registration was NamedSqmFunctionTemplate(rpad) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : day -> dayofmonth MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@502708ef] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@17a6f577 MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@547c6882] under trunc; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : truncate -> trunc MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@c2cc924] under bitand; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@34fb6f24] under bitor; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@55504d83] under bitxor; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@625f17d3] under bitnot; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@8508755] under format; prior registration was org.hibernate.dialect.function.FormatFunction@2f50183e MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@277c3652 MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@4c13a10b MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@67bd5b34] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2d5c3761 MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@30d62e15] under chr; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : char -> chr MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2a2d5653] under sysdate; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@6adafc50] under listagg; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - abs(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double acos(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - addtime(TIME datetime, TIME time) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean any(BOOLEAN arg) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer ascii(STRING arg) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double asin(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - avg(arg) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bit_and(arg) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bit_or(arg) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitand(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitnot(arg) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitor(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitxor(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - cast(arg as Type) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - ceiling(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Character char(INTEGER arg) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Character chr(INTEGER arg) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]]) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String collate(STRING string as COLLATION collation) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]]) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double cos(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double cosh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double cot(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Long count([distinct ]{arg|*}) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer crc32(arg) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date curdate() MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date current date MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time current time MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current timestamp MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date current_date MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Instant current_instant MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time current_time MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current_timestamp MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time curtime() MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date date(arg) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer datediff(DATE end, DATE start) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer day(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String dayname(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofmonth(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofweek(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofyear(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double degrees(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean every(BOOLEAN arg) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double exp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - floor(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]]) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer hour(TIME arg) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - ifnull(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Instant instant MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]]) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date last_day(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]]) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String left(STRING string, INTEGER length) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double ln(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local date MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local datetime MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local time MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local_date MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local_datetime MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local_time MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtime MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtimestamp MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start]) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1]) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double log10(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double log2(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String lower(STRING string) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String lpad(string, length[, padding]) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters]) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - max(COMPARABLE arg) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String md5(arg) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer microsecond(TIME arg) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - min(COMPARABLE arg) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer minute(TIME arg) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer month(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String monthname(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp now() MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - nullif(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset datetime MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset_datetime MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length]) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character]) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double pi MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer position(STRING pattern in STRING string) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer quarter(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double radians(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double rand([INTEGER seed]) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String repeat(STRING string, INTEGER times) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String reverse(STRING arg) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String right(STRING string, INTEGER length) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places]) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String rpad(string, length[, padding]) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters]) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer second(TIME arg) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String sha(arg) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String sha1(arg) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String sha2(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer sign(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double sin(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double sinh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String soundex(arg) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String space(INTEGER arg) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Object sql MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double sqrt(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String str(arg) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length]) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length]) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - subtime(TIME datetime, TIME time) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - sum(arg) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp sysdate() MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double tan(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double tanh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String time(arg) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1]) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - trunc( ... ) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - truncate( ... ) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String upper(STRING string) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date utc_date MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time utc_time MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp utc_timestamp MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_pop(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_samp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double variance(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer week(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer year(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG org.hibernate.orm.query.plan.cache - Starting QueryInterpretationCache(2048) MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.e.i.EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.example.transaction_service.entity.Transaction] is safe MDC:[traceId=, spanId=]
2025-06-10 22:00:59 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-10 22:01:00 [restartedMain] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.example.transaction_service.entity.Transaction]: private accessor [amount] MDC:[traceId=, spanId=]
2025-06-10 22:01:00 [restartedMain] DEBUG o.h.orm.model.mapping.creation - Starting post-init callbacks MDC:[traceId=, spanId=]
2025-06-10 22:01:00 [restartedMain] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(com.example.transaction_service.entity.Transaction) `staticFetchableList` generator MDC:[traceId=, spanId=]
2025-06-10 22:01:00 [restartedMain] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 22:01:00 [restartedMain] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction)] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 22:01:00 [restartedMain] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction.updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 22:01:00 [restartedMain] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 22:01:00 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-10 22:01:00 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select id from tbl_transaction where id=? MDC:[traceId=, spanId=]
2025-06-10 22:01:00 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into tbl_transaction (amount,bank_type,created_at,created_by,currency,description,destination_bank_code,destination_bank_name,failed_reason,from_account_number,reference_code,status,timestamp,to_account_number,type,updated_at,updated_by,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) MDC:[traceId=, spanId=]
2025-06-10 22:01:00 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update tbl_transaction set amount=?,bank_type=?,created_at=?,created_by=?,currency=?,description=?,destination_bank_code=?,destination_bank_name=?,failed_reason=?,from_account_number=?,reference_code=?,status=?,timestamp=?,to_account_number=?,type=?,updated_at=?,updated_by=? where id=? MDC:[traceId=, spanId=]
2025-06-10 22:01:00 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from tbl_transaction where id=? MDC:[traceId=, spanId=]
2025-06-10 22:01:00 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration) MDC:[traceId=, spanId=]
2025-06-10 22:01:00 [restartedMain] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@47864275] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@6644d2e] MDC:[traceId=, spanId=]
2025-06-10 22:01:00 [restartedMain] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named HQL queries MDC:[traceId=, spanId=]
2025-06-10 22:01:00 [restartedMain] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named SQL queries MDC:[traceId=, spanId=]
2025-06-10 22:01:01 [restartedMain] DEBUG org.hibernate.mapping.Table - No alter strings for table : tbl_transaction MDC:[traceId=, spanId=]
2025-06-10 22:01:01 [restartedMain] DEBUG o.h.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2871f1f5 MDC:[traceId=, spanId=]
2025-06-10 22:01:01 [restartedMain] DEBUG o.h.internal.SessionFactoryRegistry - Registering SessionFactory: 5bcfcbd2-f43a-479f-883c-9bdb7e4af409 (<unnamed>) MDC:[traceId=, spanId=]
2025-06-10 22:01:01 [restartedMain] DEBUG o.h.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured MDC:[traceId=, spanId=]
2025-06-10 22:01:01 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Instantiated SessionFactory MDC:[traceId=, spanId=]
2025-06-10 22:01:01 [restartedMain] DEBUG o.h.s.internal.StatisticsInitiator - Statistics initialized [enabled=false] MDC:[traceId=, spanId=]
2025-06-10 22:01:02 [restartedMain] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy3/jdk.proxy3.$Proxy223.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.getCountQuery(JpaQueryLookupStrategy.java:204)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:171)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.example.transaction_service.TransactionServiceApplication.main(TransactionServiceApplication.java:15)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-06-10 22:01:02 [restartedMain] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy3/jdk.proxy3.$Proxy223.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.getCountQuery(JpaQueryLookupStrategy.java:204)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:171)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.example.transaction_service.TransactionServiceApplication.main(TransactionServiceApplication.java:15)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-06-10 22:01:02 [restartedMain] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy3/jdk.proxy3.$Proxy223.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.example.transaction_service.TransactionServiceApplication.main(TransactionServiceApplication.java:15)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-06-10 22:01:02 [restartedMain] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy3/jdk.proxy3.$Proxy223.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.example.transaction_service.TransactionServiceApplication.main(TransactionServiceApplication.java:15)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-06-10 22:01:07 [restartedMain] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-06-10 22:01:07 [restartedMain] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator MDC:[traceId=, spanId=]
2025-06-10 22:01:07 [restartedMain] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory MDC:[traceId=, spanId=]
2025-06-10 22:01:07 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-06-10 22:01:07 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader MDC:[traceId=, spanId=]
2025-06-10 22:01:07 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-06-10 22:01:07 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-06-10 22:01:07 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-06-10 22:01:07 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-06-10 22:01:07 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-06-10 22:01:07 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-06-10 22:01:07 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-06-10 22:01:07 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-06-10 22:01:07 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-06-10 22:01:07 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-06-10 22:01:07 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-06-10 22:01:10 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 22:01:10 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 22:01:11 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 22:01:11 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 22:01:11 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@69b3c640 MDC:[traceId=, spanId=]
2025-06-10 22:01:11 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-10 22:01:11 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@81cf4b3 MDC:[traceId=, spanId=]
2025-06-10 22:01:11 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 22:01:11 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 22:01:11 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 22:01:11 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 22:01:11 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@200515041 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 22:01:11 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 22:01:11 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 22:02:10 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 22:02:10 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 22:02:10 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 22:02:10 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 22:02:10 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@422be57c MDC:[traceId=, spanId=]
2025-06-10 22:02:10 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-10 22:02:10 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@42edbf53 MDC:[traceId=, spanId=]
2025-06-10 22:02:10 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 22:02:10 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 22:02:10 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 22:02:10 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 22:02:10 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@1150212677 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 22:02:10 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 22:02:10 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 22:03:10 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 22:03:10 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 22:03:10 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 22:03:10 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 22:03:10 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4b0e4854 MDC:[traceId=, spanId=]
2025-06-10 22:03:10 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-10 22:03:10 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@69c45ee6 MDC:[traceId=, spanId=]
2025-06-10 22:03:10 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 22:03:10 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 22:03:10 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 22:03:10 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 22:03:10 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@1106967145 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 22:03:10 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 22:03:10 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(5))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@699962b0 MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(5).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3b04f90 MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(5).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5508c842 MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(5).type)  MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@26c28845 MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(5).status)  MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@77387be7 MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(5).currency)  MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(5)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(5).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(5).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(5).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(5).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(5).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(5).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(5).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(5).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(5).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(5).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(5).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(5).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(5).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(5).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(5).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(5).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(5).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(5)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(5) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(5))@1396894315 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) and t1_0.type=? and t1_0.status=? and t1_0.currency=? order by t1_0.timestamp desc limit ?,? MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [b88a97aa-b4ea-4c5b-901e-9315c412c554] MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(5)): b88a97aa-b4ea-4c5b-901e-9315c412c554 MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(5)#b88a97aa-b4ea-4c5b-901e-9315c412c554] : 1325474589 MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [23000.00] MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T13:55:06.439062] MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Chuyển tiền] MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-202506091355063d72d7f8] MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T13:55:06.236412] MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [87654321] MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T13:55:15.761254] MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(5)#b88a97aa-b4ea-4c5b-901e-9315c412c554 MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@acf5f1c MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [69eb51a4-db2f-49ab-acb9-073a0060ce38] MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(5)): 69eb51a4-db2f-49ab-acb9-073a0060ce38 MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(5)#69eb51a4-db2f-49ab-acb9-073a0060ce38] : 714906242 MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [10000.00] MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T13:17:40.592964] MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Chuyển tiền] MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-202506091317401be1dea3] MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T13:17:40.336221] MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [87654321] MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T13:17:50.910739] MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(5)#69eb51a4-db2f-49ab-acb9-073a0060ce38 MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@acf5f1c MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [7bc62a37-4e1d-4d5a-a411-7ab3b54c26ba] MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(5)): 7bc62a37-4e1d-4d5a-a411-7ab3b54c26ba MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(5)#7bc62a37-4e1d-4d5a-a411-7ab3b54c26ba] : 987831800 MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [30000.00] MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T11:01:03.744642] MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Đại Lê chuyển tiền] MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-20250609110103251c5a17] MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T11:01:03.632657] MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [87654321] MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T11:01:19.381894] MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(5)#7bc62a37-4e1d-4d5a-a411-7ab3b54c26ba MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@acf5f1c MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [d41a58db-a3d5-46ce-8424-1de5833b2b30] MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(5)): d41a58db-a3d5-46ce-8424-1de5833b2b30 MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(5)#d41a58db-a3d5-46ce-8424-1de5833b2b30] : 757796391 MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [222121.00] MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-06T14:55:17.181641] MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [] MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-2025060614551714b225e2] MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-06T14:55:17.070079] MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [27072000] MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-06T14:55:27.673405] MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(5)#d41a58db-a3d5-46ce-8424-1de5833b2b30 MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@acf5f1c MDC:[traceId=, spanId=]
2025-06-10 22:03:11 [http-nio-8088-exec-4] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(6))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@532d9267 MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(6).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7656c8e2 MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(6).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@135b6a10 MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(6).status)  MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2cf0996e MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(6).currency)  MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(6)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(6).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(6).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(6).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(6).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(6).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(6).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(6).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(6).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(6).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(6).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(6).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(6).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(6).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(6).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(6).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(6).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(6).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(6)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(6) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(6))@888323095 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) and t1_0.status=? and t1_0.currency=? order by t1_0.timestamp desc limit ?,? MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [6c52dec1-7727-4105-9521-7b140e4b9fe6] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(6)): 6c52dec1-7727-4105-9521-7b140e4b9fe6 MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(6)#6c52dec1-7727-4105-9521-7b140e4b9fe6] : 173250057 MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [21468.00] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T15:51:54.770845] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [LE VAN DAI RUT TIEN] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-20250609155154feba46a7] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T15:51:54.505223] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [WITHDRAW] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T15:52:11.861255] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(6)#6c52dec1-7727-4105-9521-7b140e4b9fe6 MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2b608150 MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [b88a97aa-b4ea-4c5b-901e-9315c412c554] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(6)): b88a97aa-b4ea-4c5b-901e-9315c412c554 MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(6)#b88a97aa-b4ea-4c5b-901e-9315c412c554] : 435588627 MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [23000.00] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T13:55:06.439062] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Chuyển tiền] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-202506091355063d72d7f8] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T13:55:06.236412] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [87654321] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T13:55:15.761254] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(6)#b88a97aa-b4ea-4c5b-901e-9315c412c554 MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2b608150 MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [67a7c3cd-f37f-4349-b15f-c544c58d6f9d] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(6)): 67a7c3cd-f37f-4349-b15f-c544c58d6f9d MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(6)#67a7c3cd-f37f-4349-b15f-c544c58d6f9d] : 1716424815 MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [20000.00] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T13:30:37.135201] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Nộp tiền] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-970452999999999-20250609133036a1299e4f] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T13:30:36.621149] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [DEPOSIT] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T13:30:53.218895] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(6)#67a7c3cd-f37f-4349-b15f-c544c58d6f9d MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2b608150 MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [7f1d5e96-1d5c-497b-8c1e-0dcc13cfb943] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(6)): 7f1d5e96-1d5c-497b-8c1e-0dcc13cfb943 MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(6)#7f1d5e96-1d5c-497b-8c1e-0dcc13cfb943] : 1882960241 MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [20000.00] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T13:18:10.375275] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Nộp tiền] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-970452999999999-2025060913181033dff6b6] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T13:18:10.280358] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [DEPOSIT] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T13:18:39.988512] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(6)#7f1d5e96-1d5c-497b-8c1e-0dcc13cfb943 MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2b608150 MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [69eb51a4-db2f-49ab-acb9-073a0060ce38] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(6)): 69eb51a4-db2f-49ab-acb9-073a0060ce38 MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(6)#69eb51a4-db2f-49ab-acb9-073a0060ce38] : 1602147367 MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [10000.00] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T13:17:40.592964] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Chuyển tiền] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-202506091317401be1dea3] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T13:17:40.336221] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [87654321] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T13:17:50.910739] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(6)#69eb51a4-db2f-49ab-acb9-073a0060ce38 MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2b608150 MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [3fe3fd28-b6bd-47e9-bf88-3dde7c475e04] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(6)): 3fe3fd28-b6bd-47e9-bf88-3dde7c475e04 MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(6)#3fe3fd28-b6bd-47e9-bf88-3dde7c475e04] : 1926582221 MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [10000.00] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T12:32:48.519810] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Nộp] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-970452999999999-202506091232481d6a1173] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T12:32:48.109591] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [DEPOSIT] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T12:32:59.786597] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(6)#3fe3fd28-b6bd-47e9-bf88-3dde7c475e04 MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2b608150 MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [60b48ba6-46c0-4498-bcc9-dc1811609ea2] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(6)): 60b48ba6-46c0-4498-bcc9-dc1811609ea2 MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(6)#60b48ba6-46c0-4498-bcc9-dc1811609ea2] : 1619682320 MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [100000.00] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T11:08:38.645157] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Nộp xiền] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-970452999999999-2025060911083877769034] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T11:08:38.578529] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [DEPOSIT] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T11:08:47.733949] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(6)#60b48ba6-46c0-4498-bcc9-dc1811609ea2 MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2b608150 MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [f8e292ca-c595-4f82-9bcf-443fcc8987a8] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(6)): f8e292ca-c595-4f82-9bcf-443fcc8987a8 MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(6)#f8e292ca-c595-4f82-9bcf-443fcc8987a8] : 1301803337 MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [50000.00] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T11:07:06.798744] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Nộp tiền
] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-970452999999999-2025060911070608f7d648] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T11:07:06.750533] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [DEPOSIT] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T11:07:19.906258] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(6)#f8e292ca-c595-4f82-9bcf-443fcc8987a8 MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2b608150 MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [cda6ebd8-49f6-43a5-bd96-0776189d31df] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(6)): cda6ebd8-49f6-43a5-bd96-0776189d31df MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(6)#cda6ebd8-49f6-43a5-bd96-0776189d31df] : 1692519216 MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [23000.00] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T11:02:58.124193] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Nộp tiền] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-970452999999999-20250609110258bd83f9b3] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T11:02:58.049014] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [DEPOSIT] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T11:03:07.756817] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(6)#cda6ebd8-49f6-43a5-bd96-0776189d31df MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2b608150 MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [7bc62a37-4e1d-4d5a-a411-7ab3b54c26ba] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(6)): 7bc62a37-4e1d-4d5a-a411-7ab3b54c26ba MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(6)#7bc62a37-4e1d-4d5a-a411-7ab3b54c26ba] : 1016224582 MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [30000.00] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T11:01:03.744642] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Đại Lê chuyển tiền] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-20250609110103251c5a17] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T11:01:03.632657] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [87654321] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T11:01:19.381894] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(6)#7bc62a37-4e1d-4d5a-a411-7ab3b54c26ba MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2b608150 MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(7))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@54cc65e3 MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(7).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1408df6b MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(7).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@34eaa40e MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(7).status)  MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3f59caee MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(7).currency)  MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-BasicResult
 MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(7)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.SQL - select count(t1_0.id) from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) and t1_0.status=? and t1_0.currency=? MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@6f28e537 MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [12] MDC:[traceId=, spanId=]
2025-06-10 22:03:35 [http-nio-8088-exec-3] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 22:04:10 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 22:04:10 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 22:04:10 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 22:04:10 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 22:04:10 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@33f570cc MDC:[traceId=, spanId=]
2025-06-10 22:04:10 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-10 22:04:10 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6f6da590 MDC:[traceId=, spanId=]
2025-06-10 22:04:10 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 22:04:10 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 22:04:10 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 22:04:10 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 22:04:10 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@776006793 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 22:04:10 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 22:04:10 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(8))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@26db4792 MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(8).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1d6455f4 MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(8).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@499954bf MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(8).type)  MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@43e027d2 MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(8).currency)  MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(8)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(8).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(8).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(8).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(8).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(8).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(8).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(8).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(8).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(8).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(8).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(8).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(8).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(8).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(8).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(8).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(8).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(8).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(8)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(8) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(8))@652632072 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) and t1_0.type=? and t1_0.currency=? order by t1_0.timestamp desc limit ?,? MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [9d5cbb7d-f680-4d07-9ba5-a52ceefa6fe9] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(8)): 9d5cbb7d-f680-4d07-9ba5-a52ceefa6fe9 MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(8)#9d5cbb7d-f680-4d07-9ba5-a52ceefa6fe9] : 1633356825 MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [12222.00] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T16:04:16.376253] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [LE VAN DAI CHUYEN KHOAN] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [Nhập sai OTP quá 3 lần] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-202506091604163c6584bd] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [FAILED] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T16:04:16.055789] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [27072000] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T16:04:22.630816] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(8)#9d5cbb7d-f680-4d07-9ba5-a52ceefa6fe9 MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7428d61a MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [b308a3ba-8c1b-4b7b-825c-e45a1a8bf1b6] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(8)): b308a3ba-8c1b-4b7b-825c-e45a1a8bf1b6 MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(8)#b308a3ba-8c1b-4b7b-825c-e45a1a8bf1b6] : 574033817 MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [1111.00] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T14:15:06.794013] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [Nhập sai OTP quá 3 lần] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-20250609141506b36f298f] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [FAILED] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T14:15:06.599044] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [27072000] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T14:15:11.779807] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(8)#b308a3ba-8c1b-4b7b-825c-e45a1a8bf1b6 MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7428d61a MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [bd5b8128-0bc4-42b8-a9da-c50482b778e6] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(8)): bd5b8128-0bc4-42b8-a9da-c50482b778e6 MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(8)#bd5b8128-0bc4-42b8-a9da-c50482b778e6] : 278758851 MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [12322.00] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T14:11:22.954420] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [Nhập sai OTP quá 3 lần] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-202506091411220dcb7f01] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [FAILED] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T14:11:22.710972] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [87654321] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T14:11:29.865614] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(8)#bd5b8128-0bc4-42b8-a9da-c50482b778e6 MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7428d61a MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [037df1f5-d073-4f9b-86fc-36d328b288a2] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(8)): 037df1f5-d073-4f9b-86fc-36d328b288a2 MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(8)#037df1f5-d073-4f9b-86fc-36d328b288a2] : 1155662113 MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [12342.00] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T14:01:18.138106] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Chuyển khoản] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [Nhập sai OTP quá 3 lần] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-2025060914011799fce967] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [FAILED] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T14:01:17.977419] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [87654321] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T14:01:24.318746] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(8)#037df1f5-d073-4f9b-86fc-36d328b288a2 MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7428d61a MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [b88a97aa-b4ea-4c5b-901e-9315c412c554] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(8)): b88a97aa-b4ea-4c5b-901e-9315c412c554 MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(8)#b88a97aa-b4ea-4c5b-901e-9315c412c554] : 1895487084 MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [23000.00] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T13:55:06.439062] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Chuyển tiền] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-202506091355063d72d7f8] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T13:55:06.236412] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [87654321] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T13:55:15.761254] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(8)#b88a97aa-b4ea-4c5b-901e-9315c412c554 MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7428d61a MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [69eb51a4-db2f-49ab-acb9-073a0060ce38] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(8)): 69eb51a4-db2f-49ab-acb9-073a0060ce38 MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(8)#69eb51a4-db2f-49ab-acb9-073a0060ce38] : 1789613101 MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [10000.00] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T13:17:40.592964] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Chuyển tiền] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-202506091317401be1dea3] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T13:17:40.336221] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [87654321] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T13:17:50.910739] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(8)#69eb51a4-db2f-49ab-acb9-073a0060ce38 MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7428d61a MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [7bc62a37-4e1d-4d5a-a411-7ab3b54c26ba] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(8)): 7bc62a37-4e1d-4d5a-a411-7ab3b54c26ba MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(8)#7bc62a37-4e1d-4d5a-a411-7ab3b54c26ba] : 375682854 MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [30000.00] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T11:01:03.744642] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Đại Lê chuyển tiền] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-20250609110103251c5a17] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T11:01:03.632657] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [87654321] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T11:01:19.381894] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(8)#7bc62a37-4e1d-4d5a-a411-7ab3b54c26ba MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7428d61a MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [147c25ce-f4bb-4e62-a3db-0fe7e61b16da] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(8)): 147c25ce-f4bb-4e62-a3db-0fe7e61b16da MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(8)#147c25ce-f4bb-4e62-a3db-0fe7e61b16da] : 1121687490 MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [111212.00] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-06T15:10:39.311458] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [Quá thời gian cho phép của giao dịch] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-20250606151039ee20157d] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [FAILED] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-06T15:10:39.081809] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [27072000] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-06T15:13:58.883446] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(8)#147c25ce-f4bb-4e62-a3db-0fe7e61b16da MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7428d61a MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [d41a58db-a3d5-46ce-8424-1de5833b2b30] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(8)): d41a58db-a3d5-46ce-8424-1de5833b2b30 MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(8)#d41a58db-a3d5-46ce-8424-1de5833b2b30] : 1681154115 MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [222121.00] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-06T14:55:17.181641] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-2025060614551714b225e2] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-06T14:55:17.070079] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [27072000] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-06T14:55:27.673405] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(8)#d41a58db-a3d5-46ce-8424-1de5833b2b30 MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7428d61a MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [f68527a8-92d7-4eb3-bc1e-029018e8df04] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(8)): f68527a8-92d7-4eb3-bc1e-029018e8df04 MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(8)#f68527a8-92d7-4eb3-bc1e-029018e8df04] : 1410222804 MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [63260.00] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-05T16:01:57.122103] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [Nhập sai OTP quá 3 lần] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-20250605160156231b8b12] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [FAILED] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-05T16:01:56.985819] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [87654321] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-05T16:02:05.089574] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(8)#f68527a8-92d7-4eb3-bc1e-029018e8df04 MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7428d61a MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(9))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2573f360 MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(9).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@10c0505d MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(9).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2350a798 MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(9).type)  MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7dcd248e MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(9).currency)  MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-BasicResult
 MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(9)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.SQL - select count(t1_0.id) from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) and t1_0.type=? and t1_0.currency=? MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@4cf66a52 MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [10] MDC:[traceId=, spanId=]
2025-06-10 22:04:37 [http-nio-8088-exec-6] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(10))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@17ebe7da MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(10).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4af88cc5 MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(10).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2512c286 MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(10).type)  MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@79109be8 MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(10).status)  MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5ed0f135 MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(10).currency)  MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(10)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(10).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(10).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(10).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(10).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(10).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(10).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(10).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(10).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(10).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(10).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(10).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(10).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(10).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(10).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(10).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(10).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(10).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(10)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(10) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(10))@1588844483 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) and t1_0.type=? and t1_0.status=? and t1_0.currency=? order by t1_0.timestamp desc limit ?,? MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [b88a97aa-b4ea-4c5b-901e-9315c412c554] MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(10)): b88a97aa-b4ea-4c5b-901e-9315c412c554 MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(10)#b88a97aa-b4ea-4c5b-901e-9315c412c554] : 1744429441 MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [23000.00] MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T13:55:06.439062] MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Chuyển tiền] MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-202506091355063d72d7f8] MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T13:55:06.236412] MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [87654321] MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T13:55:15.761254] MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(10)#b88a97aa-b4ea-4c5b-901e-9315c412c554 MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@27b43f72 MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [69eb51a4-db2f-49ab-acb9-073a0060ce38] MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(10)): 69eb51a4-db2f-49ab-acb9-073a0060ce38 MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(10)#69eb51a4-db2f-49ab-acb9-073a0060ce38] : 359412951 MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [10000.00] MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T13:17:40.592964] MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Chuyển tiền] MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-202506091317401be1dea3] MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T13:17:40.336221] MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [87654321] MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T13:17:50.910739] MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(10)#69eb51a4-db2f-49ab-acb9-073a0060ce38 MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@27b43f72 MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [7bc62a37-4e1d-4d5a-a411-7ab3b54c26ba] MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(10)): 7bc62a37-4e1d-4d5a-a411-7ab3b54c26ba MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(10)#7bc62a37-4e1d-4d5a-a411-7ab3b54c26ba] : 767405225 MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [30000.00] MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T11:01:03.744642] MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Đại Lê chuyển tiền] MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-20250609110103251c5a17] MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T11:01:03.632657] MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [87654321] MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T11:01:19.381894] MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(10)#7bc62a37-4e1d-4d5a-a411-7ab3b54c26ba MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@27b43f72 MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [d41a58db-a3d5-46ce-8424-1de5833b2b30] MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(10)): d41a58db-a3d5-46ce-8424-1de5833b2b30 MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(10)#d41a58db-a3d5-46ce-8424-1de5833b2b30] : 90219894 MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [222121.00] MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-06T14:55:17.181641] MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [] MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-2025060614551714b225e2] MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-06T14:55:17.070079] MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [27072000] MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-06T14:55:27.673405] MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(10)#d41a58db-a3d5-46ce-8424-1de5833b2b30 MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@27b43f72 MDC:[traceId=, spanId=]
2025-06-10 22:04:50 [http-nio-8088-exec-7] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(11))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5dd6a489 MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(11).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@278d58a9 MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(11).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7318463f MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(11).type)  MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7f7b29c2 MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(11).status)  MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@47b1ef48 MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(11).currency)  MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(11)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(11).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(11).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(11).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(11).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(11).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(11).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(11).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(11).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(11).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(11).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(11).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(11).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(11).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(11).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(11).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(11).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(11).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(11)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(11) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(11))@1211944465 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) and t1_0.type=? and t1_0.status=? and t1_0.currency=? order by t1_0.timestamp desc limit ?,? MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [b88a97aa-b4ea-4c5b-901e-9315c412c554] MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(11)): b88a97aa-b4ea-4c5b-901e-9315c412c554 MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(11)#b88a97aa-b4ea-4c5b-901e-9315c412c554] : 757699087 MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [23000.00] MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T13:55:06.439062] MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Chuyển tiền] MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-202506091355063d72d7f8] MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T13:55:06.236412] MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [87654321] MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T13:55:15.761254] MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(11)#b88a97aa-b4ea-4c5b-901e-9315c412c554 MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@34b8dfd MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [69eb51a4-db2f-49ab-acb9-073a0060ce38] MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(11)): 69eb51a4-db2f-49ab-acb9-073a0060ce38 MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(11)#69eb51a4-db2f-49ab-acb9-073a0060ce38] : 1813054542 MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [10000.00] MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T13:17:40.592964] MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Chuyển tiền] MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-202506091317401be1dea3] MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T13:17:40.336221] MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [87654321] MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T13:17:50.910739] MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(11)#69eb51a4-db2f-49ab-acb9-073a0060ce38 MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@34b8dfd MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [7bc62a37-4e1d-4d5a-a411-7ab3b54c26ba] MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(11)): 7bc62a37-4e1d-4d5a-a411-7ab3b54c26ba MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(11)#7bc62a37-4e1d-4d5a-a411-7ab3b54c26ba] : 1334562810 MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [30000.00] MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T11:01:03.744642] MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Đại Lê chuyển tiền] MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-20250609110103251c5a17] MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T11:01:03.632657] MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [87654321] MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T11:01:19.381894] MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(11)#7bc62a37-4e1d-4d5a-a411-7ab3b54c26ba MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@34b8dfd MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [d41a58db-a3d5-46ce-8424-1de5833b2b30] MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(11)): d41a58db-a3d5-46ce-8424-1de5833b2b30 MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(11)#d41a58db-a3d5-46ce-8424-1de5833b2b30] : 785614318 MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [222121.00] MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-06T14:55:17.181641] MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [] MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-2025060614551714b225e2] MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-06T14:55:17.070079] MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [27072000] MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-06T14:55:27.673405] MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(11)#d41a58db-a3d5-46ce-8424-1de5833b2b30 MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@34b8dfd MDC:[traceId=, spanId=]
2025-06-10 22:05:01 [http-nio-8088-exec-8] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 22:05:10 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 22:05:10 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 22:05:10 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 22:05:10 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 22:05:10 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@680a3a12 MDC:[traceId=, spanId=]
2025-06-10 22:05:10 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-10 22:05:10 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@42a7f01b MDC:[traceId=, spanId=]
2025-06-10 22:05:10 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 22:05:10 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 22:05:10 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 22:05:10 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 22:05:10 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@1122722568 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 22:05:10 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 22:05:10 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 22:06:10 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 22:06:10 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 22:06:10 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 22:06:10 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 22:06:10 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4903723e MDC:[traceId=, spanId=]
2025-06-10 22:06:10 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-10 22:06:10 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6251f0b5 MDC:[traceId=, spanId=]
2025-06-10 22:06:10 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 22:06:10 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 22:06:10 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 22:06:10 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 22:06:10 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@907706644 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 22:06:10 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 22:06:10 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 22:07:10 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 22:07:10 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 22:07:10 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 22:07:10 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 22:07:10 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@282eea8a MDC:[traceId=, spanId=]
2025-06-10 22:07:10 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-10 22:07:10 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@34083a2c MDC:[traceId=, spanId=]
2025-06-10 22:07:10 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 22:07:10 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 22:07:10 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 22:07:10 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 22:07:10 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@2062780342 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 22:07:10 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 22:07:10 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 22:08:10 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 22:08:10 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 22:08:10 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 22:08:10 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 22:08:10 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5f299401 MDC:[traceId=, spanId=]
2025-06-10 22:08:10 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-10 22:08:10 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7472bd63 MDC:[traceId=, spanId=]
2025-06-10 22:08:10 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 22:08:10 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 22:08:10 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 22:08:10 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 22:08:10 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@1265346854 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 22:08:10 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 22:08:10 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 22:09:10 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 22:09:10 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 22:09:10 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 22:09:10 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 22:09:10 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@65419c07 MDC:[traceId=, spanId=]
2025-06-10 22:09:10 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-10 22:09:10 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1bd30e68 MDC:[traceId=, spanId=]
2025-06-10 22:09:10 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 22:09:10 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 22:09:10 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 22:09:10 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 22:09:10 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@1130295058 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 22:09:10 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 22:09:10 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 22:10:10 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 22:10:10 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 22:10:10 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 22:10:10 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 22:10:10 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@807d8e2 MDC:[traceId=, spanId=]
2025-06-10 22:10:10 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-10 22:10:10 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1af533e7 MDC:[traceId=, spanId=]
2025-06-10 22:10:10 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 22:10:10 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 22:10:10 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 22:10:10 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 22:10:10 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@1345511232 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 22:10:10 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 22:10:10 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 22:11:10 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 22:11:10 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 22:11:10 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 22:11:10 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 22:11:10 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@12ea440f MDC:[traceId=, spanId=]
2025-06-10 22:11:10 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-10 22:11:10 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4789dea7 MDC:[traceId=, spanId=]
2025-06-10 22:11:10 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 22:11:10 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 22:11:10 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 22:11:10 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 22:11:10 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@717230100 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 22:11:10 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 22:11:10 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 22:12:10 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 22:12:10 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 22:12:10 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 22:12:10 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 22:12:10 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2d250de2 MDC:[traceId=, spanId=]
2025-06-10 22:12:10 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-10 22:12:10 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3ad30d83 MDC:[traceId=, spanId=]
2025-06-10 22:12:10 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 22:12:10 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 22:12:10 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 22:12:10 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 22:12:10 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@1275251878 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 22:12:10 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 22:12:10 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(12))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@53a5d6c7 MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(12).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@27243a9c MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(12).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@ac5c20d MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(12).type)  MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@63744755 MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(12).status)  MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@698ea1db MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(12).currency)  MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(12)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(12).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(12).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(12).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(12).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(12).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(12).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(12).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(12).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(12).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(12).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(12).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(12).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(12).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(12).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(12).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(12).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(12).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(12)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(12) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(12))@1843462735 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) and t1_0.type=? and t1_0.status=? and t1_0.currency=? order by t1_0.timestamp desc limit ?,? MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [b88a97aa-b4ea-4c5b-901e-9315c412c554] MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(12)): b88a97aa-b4ea-4c5b-901e-9315c412c554 MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(12)#b88a97aa-b4ea-4c5b-901e-9315c412c554] : 721336811 MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [23000.00] MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T13:55:06.439062] MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Chuyển tiền] MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-202506091355063d72d7f8] MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T13:55:06.236412] MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [87654321] MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T13:55:15.761254] MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(12)#b88a97aa-b4ea-4c5b-901e-9315c412c554 MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4f682581 MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [69eb51a4-db2f-49ab-acb9-073a0060ce38] MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(12)): 69eb51a4-db2f-49ab-acb9-073a0060ce38 MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(12)#69eb51a4-db2f-49ab-acb9-073a0060ce38] : 2047694971 MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [10000.00] MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T13:17:40.592964] MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Chuyển tiền] MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-202506091317401be1dea3] MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T13:17:40.336221] MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [87654321] MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T13:17:50.910739] MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(12)#69eb51a4-db2f-49ab-acb9-073a0060ce38 MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4f682581 MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [7bc62a37-4e1d-4d5a-a411-7ab3b54c26ba] MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(12)): 7bc62a37-4e1d-4d5a-a411-7ab3b54c26ba MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(12)#7bc62a37-4e1d-4d5a-a411-7ab3b54c26ba] : 1284483028 MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [30000.00] MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T11:01:03.744642] MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Đại Lê chuyển tiền] MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-20250609110103251c5a17] MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T11:01:03.632657] MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [87654321] MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T11:01:19.381894] MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(12)#7bc62a37-4e1d-4d5a-a411-7ab3b54c26ba MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4f682581 MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [d41a58db-a3d5-46ce-8424-1de5833b2b30] MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(12)): d41a58db-a3d5-46ce-8424-1de5833b2b30 MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(12)#d41a58db-a3d5-46ce-8424-1de5833b2b30] : 333540943 MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [222121.00] MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-06T14:55:17.181641] MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [] MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-2025060614551714b225e2] MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-06T14:55:17.070079] MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [27072000] MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-06T14:55:27.673405] MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(12)#d41a58db-a3d5-46ce-8424-1de5833b2b30 MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4f682581 MDC:[traceId=, spanId=]
2025-06-10 22:12:25 [http-nio-8088-exec-4] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 22:13:10 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 22:13:10 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 22:13:10 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 22:13:10 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 22:13:10 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2a33f38d MDC:[traceId=, spanId=]
2025-06-10 22:13:10 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-10 22:13:10 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7591b116 MDC:[traceId=, spanId=]
2025-06-10 22:13:10 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 22:13:10 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 22:13:10 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 22:13:10 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 22:13:10 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@16405389 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 22:13:10 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 22:13:10 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 22:14:10 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 22:14:10 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 22:14:10 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 22:14:10 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 22:14:10 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@280af43f MDC:[traceId=, spanId=]
2025-06-10 22:14:10 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-10 22:14:10 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@58729d7e MDC:[traceId=, spanId=]
2025-06-10 22:14:10 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 22:14:10 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 22:14:10 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 22:14:10 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 22:14:10 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@618995735 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 22:14:10 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 22:14:10 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 22:15:10 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 22:15:10 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 22:15:10 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 22:15:10 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 22:15:10 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@72457755 MDC:[traceId=, spanId=]
2025-06-10 22:15:10 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-10 22:15:10 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3a25bd5a MDC:[traceId=, spanId=]
2025-06-10 22:15:10 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 22:15:10 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 22:15:10 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 22:15:10 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 22:15:10 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@789178356 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 22:15:10 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 22:15:10 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 22:16:10 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 22:16:10 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 22:16:10 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 22:16:10 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 22:16:10 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5f937101 MDC:[traceId=, spanId=]
2025-06-10 22:16:10 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-10 22:16:10 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1241cd5f MDC:[traceId=, spanId=]
2025-06-10 22:16:10 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 22:16:10 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 22:16:10 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 22:16:10 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 22:16:10 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@1385194068 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 22:16:10 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 22:16:10 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(13))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@570ad356 MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(13).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@69fc3ffd MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(13).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(13)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(13).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(13).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(13).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(13).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(13).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(13).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(13).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(13).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(13).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(13).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(13).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(13).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(13).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(13).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(13).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(13).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(13).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(13)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(13) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(13))@715520803 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) order by t1_0.timestamp desc limit ?,? MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [9335422e-e447-4244-a28a-3f44abc76551] MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(13)): 9335422e-e447-4244-a28a-3f44abc76551 MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(13)#9335422e-e447-4244-a28a-3f44abc76551] : 1829022290 MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [100000.00] MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T16:04:45.540728] MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [LE VAN DAI RUT TIEN] MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [Nhập sai OTP quá 3 lần] MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-202506091604451762c0c7] MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [FAILED] MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T16:04:45.494744] MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [WITHDRAW] MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T16:04:50.731497] MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(13)#9335422e-e447-4244-a28a-3f44abc76551 MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@68fd2832 MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [9d5cbb7d-f680-4d07-9ba5-a52ceefa6fe9] MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(13)): 9d5cbb7d-f680-4d07-9ba5-a52ceefa6fe9 MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(13)#9d5cbb7d-f680-4d07-9ba5-a52ceefa6fe9] : 1148115909 MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [12222.00] MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T16:04:16.376253] MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [LE VAN DAI CHUYEN KHOAN] MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [Nhập sai OTP quá 3 lần] MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-202506091604163c6584bd] MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [FAILED] MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T16:04:16.055789] MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [27072000] MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T16:04:22.630816] MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(13)#9d5cbb7d-f680-4d07-9ba5-a52ceefa6fe9 MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@68fd2832 MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [6c52dec1-7727-4105-9521-7b140e4b9fe6] MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(13)): 6c52dec1-7727-4105-9521-7b140e4b9fe6 MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(13)#6c52dec1-7727-4105-9521-7b140e4b9fe6] : 362454202 MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [21468.00] MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T15:51:54.770845] MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [LE VAN DAI RUT TIEN] MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-20250609155154feba46a7] MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T15:51:54.505223] MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [WITHDRAW] MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T15:52:11.861255] MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(13)#6c52dec1-7727-4105-9521-7b140e4b9fe6 MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@68fd2832 MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [e1a28032-24bc-4730-afde-450cf41c6a55] MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(13)): e1a28032-24bc-4730-afde-450cf41c6a55 MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(13)#e1a28032-24bc-4730-afde-450cf41c6a55] : 1560601185 MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [1111.00] MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T15:42:37.016815] MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [LE VAN DAI RUT TIEN] MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [Quá thời gian cho phép của giao dịch] MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-202506091542360c5ce231] MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [FAILED] MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T15:42:36.864547] MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [WITHDRAW] MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T15:45:40.653921] MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(13)#e1a28032-24bc-4730-afde-450cf41c6a55 MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@68fd2832 MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [d98e555c-b698-4639-bf7b-5ffabdf1cd47] MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(13)): d98e555c-b698-4639-bf7b-5ffabdf1cd47 MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(13)#d98e555c-b698-4639-bf7b-5ffabdf1cd47] : 1547300171 MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [213213.00] MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T15:41:40.032707] MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [LE VAN DAI RUT TIEN] MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [Quá thời gian cho phép của giao dịch] MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-202506091541390ca83b6e] MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [FAILED] MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T15:41:39.710454] MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [WITHDRAW] MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T15:44:40.824344] MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(13)#d98e555c-b698-4639-bf7b-5ffabdf1cd47 MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@68fd2832 MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(14))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@35ee85c4 MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(14).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5cbf8015 MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(14).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-BasicResult
 MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(14)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.SQL - select count(t1_0.id) from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@5063f134 MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [30] MDC:[traceId=, spanId=]
2025-06-10 22:16:21 [http-nio-8088-exec-5] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(15))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4869f8e9 MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(15).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@63ee882c MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(15).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(15)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(15).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(15).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(15).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(15).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(15).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(15).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(15).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(15).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(15).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(15).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(15).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(15).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(15).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(15).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(15).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(15).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(15).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(15)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(15) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(15))@201499568 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) order by t1_0.timestamp desc limit ?,? MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [9335422e-e447-4244-a28a-3f44abc76551] MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(15)): 9335422e-e447-4244-a28a-3f44abc76551 MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(15)#9335422e-e447-4244-a28a-3f44abc76551] : 1074030026 MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [100000.00] MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T16:04:45.540728] MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [LE VAN DAI RUT TIEN] MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [Nhập sai OTP quá 3 lần] MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-202506091604451762c0c7] MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [FAILED] MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T16:04:45.494744] MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [WITHDRAW] MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T16:04:50.731497] MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(15)#9335422e-e447-4244-a28a-3f44abc76551 MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@59024159 MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [9d5cbb7d-f680-4d07-9ba5-a52ceefa6fe9] MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(15)): 9d5cbb7d-f680-4d07-9ba5-a52ceefa6fe9 MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(15)#9d5cbb7d-f680-4d07-9ba5-a52ceefa6fe9] : 1099465359 MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [12222.00] MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T16:04:16.376253] MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [LE VAN DAI CHUYEN KHOAN] MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [Nhập sai OTP quá 3 lần] MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-202506091604163c6584bd] MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [FAILED] MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T16:04:16.055789] MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [27072000] MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T16:04:22.630816] MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(15)#9d5cbb7d-f680-4d07-9ba5-a52ceefa6fe9 MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@59024159 MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [6c52dec1-7727-4105-9521-7b140e4b9fe6] MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(15)): 6c52dec1-7727-4105-9521-7b140e4b9fe6 MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(15)#6c52dec1-7727-4105-9521-7b140e4b9fe6] : 921781663 MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [21468.00] MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T15:51:54.770845] MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [LE VAN DAI RUT TIEN] MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-20250609155154feba46a7] MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T15:51:54.505223] MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [WITHDRAW] MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T15:52:11.861255] MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(15)#6c52dec1-7727-4105-9521-7b140e4b9fe6 MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@59024159 MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [e1a28032-24bc-4730-afde-450cf41c6a55] MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(15)): e1a28032-24bc-4730-afde-450cf41c6a55 MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(15)#e1a28032-24bc-4730-afde-450cf41c6a55] : 1429757118 MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [1111.00] MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T15:42:37.016815] MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [LE VAN DAI RUT TIEN] MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [Quá thời gian cho phép của giao dịch] MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-202506091542360c5ce231] MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [FAILED] MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T15:42:36.864547] MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [WITHDRAW] MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T15:45:40.653921] MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(15)#e1a28032-24bc-4730-afde-450cf41c6a55 MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@59024159 MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [d98e555c-b698-4639-bf7b-5ffabdf1cd47] MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(15)): d98e555c-b698-4639-bf7b-5ffabdf1cd47 MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(15)#d98e555c-b698-4639-bf7b-5ffabdf1cd47] : 519817161 MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [213213.00] MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T15:41:40.032707] MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [LE VAN DAI RUT TIEN] MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [Quá thời gian cho phép của giao dịch] MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-202506091541390ca83b6e] MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [FAILED] MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T15:41:39.710454] MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [WITHDRAW] MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T15:44:40.824344] MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(15)#d98e555c-b698-4639-bf7b-5ffabdf1cd47 MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@59024159 MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(16))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6e332573 MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(16).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3bbb85b5 MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(16).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-BasicResult
 MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(16)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.SQL - select count(t1_0.id) from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@6a98741e MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [30] MDC:[traceId=, spanId=]
2025-06-10 22:16:26 [http-nio-8088-exec-6] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(17))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4e4a6268 MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(17).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@41025f6d MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(17).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(17)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(17).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(17).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(17).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(17).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(17).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(17).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(17).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(17).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(17).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(17).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(17).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(17).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(17).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(17).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(17).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(17).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(17).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(17)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(17) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(17))@1602248184 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) order by t1_0.timestamp desc limit ?,? MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [9335422e-e447-4244-a28a-3f44abc76551] MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(17)): 9335422e-e447-4244-a28a-3f44abc76551 MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(17)#9335422e-e447-4244-a28a-3f44abc76551] : 44218464 MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [100000.00] MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T16:04:45.540728] MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [LE VAN DAI RUT TIEN] MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [Nhập sai OTP quá 3 lần] MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-202506091604451762c0c7] MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [FAILED] MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T16:04:45.494744] MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [WITHDRAW] MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T16:04:50.731497] MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(17)#9335422e-e447-4244-a28a-3f44abc76551 MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5f905a51 MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [9d5cbb7d-f680-4d07-9ba5-a52ceefa6fe9] MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(17)): 9d5cbb7d-f680-4d07-9ba5-a52ceefa6fe9 MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(17)#9d5cbb7d-f680-4d07-9ba5-a52ceefa6fe9] : 870720166 MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [12222.00] MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T16:04:16.376253] MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [LE VAN DAI CHUYEN KHOAN] MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [Nhập sai OTP quá 3 lần] MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-202506091604163c6584bd] MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [FAILED] MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T16:04:16.055789] MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [27072000] MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T16:04:22.630816] MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(17)#9d5cbb7d-f680-4d07-9ba5-a52ceefa6fe9 MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5f905a51 MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [6c52dec1-7727-4105-9521-7b140e4b9fe6] MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(17)): 6c52dec1-7727-4105-9521-7b140e4b9fe6 MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(17)#6c52dec1-7727-4105-9521-7b140e4b9fe6] : 281708390 MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [21468.00] MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T15:51:54.770845] MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [LE VAN DAI RUT TIEN] MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-20250609155154feba46a7] MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T15:51:54.505223] MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [WITHDRAW] MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T15:52:11.861255] MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(17)#6c52dec1-7727-4105-9521-7b140e4b9fe6 MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5f905a51 MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [e1a28032-24bc-4730-afde-450cf41c6a55] MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(17)): e1a28032-24bc-4730-afde-450cf41c6a55 MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(17)#e1a28032-24bc-4730-afde-450cf41c6a55] : 121396391 MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [1111.00] MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T15:42:37.016815] MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [LE VAN DAI RUT TIEN] MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [Quá thời gian cho phép của giao dịch] MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-202506091542360c5ce231] MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [FAILED] MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T15:42:36.864547] MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [WITHDRAW] MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T15:45:40.653921] MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(17)#e1a28032-24bc-4730-afde-450cf41c6a55 MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5f905a51 MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [d98e555c-b698-4639-bf7b-5ffabdf1cd47] MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(17)): d98e555c-b698-4639-bf7b-5ffabdf1cd47 MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(17)#d98e555c-b698-4639-bf7b-5ffabdf1cd47] : 1512299715 MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [213213.00] MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T15:41:40.032707] MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [LE VAN DAI RUT TIEN] MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [Quá thời gian cho phép của giao dịch] MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-202506091541390ca83b6e] MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [FAILED] MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T15:41:39.710454] MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [WITHDRAW] MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T15:44:40.824344] MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(17)#d98e555c-b698-4639-bf7b-5ffabdf1cd47 MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5f905a51 MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(18))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5fbd09d7 MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(18).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@135ead55 MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(18).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-BasicResult
 MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(18)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.SQL - select count(t1_0.id) from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@6ebb1031 MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [30] MDC:[traceId=, spanId=]
2025-06-10 22:16:56 [http-nio-8088-exec-7] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(19))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3e3c0355 MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(19).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@345fff1 MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(19).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(19)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(19).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(19).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(19).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(19).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(19).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(19).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(19).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(19).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(19).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(19).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(19).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(19).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(19).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(19).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(19).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(19).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(19).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(19)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(19) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(19))@301424451 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) order by t1_0.timestamp desc limit ?,? MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [9d5cbb7d-f680-4d07-9ba5-a52ceefa6fe9] MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(19)): 9d5cbb7d-f680-4d07-9ba5-a52ceefa6fe9 MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(19)#9d5cbb7d-f680-4d07-9ba5-a52ceefa6fe9] : 2090046088 MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [12222.00] MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T16:04:16.376253] MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [LE VAN DAI CHUYEN KHOAN] MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [Nhập sai OTP quá 3 lần] MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-202506091604163c6584bd] MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [FAILED] MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T16:04:16.055789] MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [27072000] MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T16:04:22.630816] MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(19)#9d5cbb7d-f680-4d07-9ba5-a52ceefa6fe9 MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5735c71e MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [b308a3ba-8c1b-4b7b-825c-e45a1a8bf1b6] MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(19)): b308a3ba-8c1b-4b7b-825c-e45a1a8bf1b6 MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(19)#b308a3ba-8c1b-4b7b-825c-e45a1a8bf1b6] : 2007170950 MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [1111.00] MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T14:15:06.794013] MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [] MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [Nhập sai OTP quá 3 lần] MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-20250609141506b36f298f] MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [FAILED] MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T14:15:06.599044] MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [27072000] MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T14:15:11.779807] MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(19)#b308a3ba-8c1b-4b7b-825c-e45a1a8bf1b6 MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5735c71e MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [11bac8ee-fcba-428f-8b72-640bb9f6c03b] MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(19)): 11bac8ee-fcba-428f-8b72-640bb9f6c03b MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(19)#11bac8ee-fcba-428f-8b72-640bb9f6c03b] : 2054406281 MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [23000.00] MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-06T15:20:29.117384] MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [] MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [27072000] MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-27072000-20250606152028ab0b2173] MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-06T15:20:28.988217] MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [87654321] MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-06T15:20:53.029319] MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(19)#11bac8ee-fcba-428f-8b72-640bb9f6c03b MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5735c71e MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [147c25ce-f4bb-4e62-a3db-0fe7e61b16da] MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(19)): 147c25ce-f4bb-4e62-a3db-0fe7e61b16da MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(19)#147c25ce-f4bb-4e62-a3db-0fe7e61b16da] : 437521053 MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [111212.00] MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-06T15:10:39.311458] MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [] MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [Quá thời gian cho phép của giao dịch] MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-20250606151039ee20157d] MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [FAILED] MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-06T15:10:39.081809] MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [27072000] MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-06T15:13:58.883446] MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(19)#147c25ce-f4bb-4e62-a3db-0fe7e61b16da MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5735c71e MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [d41a58db-a3d5-46ce-8424-1de5833b2b30] MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(19)): d41a58db-a3d5-46ce-8424-1de5833b2b30 MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(19)#d41a58db-a3d5-46ce-8424-1de5833b2b30] : 1675633654 MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [222121.00] MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-06T14:55:17.181641] MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [] MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-2025060614551714b225e2] MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-06T14:55:17.070079] MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [27072000] MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-06T14:55:27.673405] MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(19)#d41a58db-a3d5-46ce-8424-1de5833b2b30 MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5735c71e MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(20))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3cfd492a MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(20).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@74485491 MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(20).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-BasicResult
 MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(20)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.SQL - select count(t1_0.id) from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@6d41eeae MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [6] MDC:[traceId=, spanId=]
2025-06-10 22:17:06 [http-nio-8088-exec-9] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 22:17:10 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 22:17:10 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 22:17:10 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 22:17:10 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 22:17:10 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@f00d83d MDC:[traceId=, spanId=]
2025-06-10 22:17:10 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-10 22:17:10 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@21c480c5 MDC:[traceId=, spanId=]
2025-06-10 22:17:10 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 22:17:10 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 22:17:10 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 22:17:10 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 22:17:10 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@258513648 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 22:17:10 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 22:17:10 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(21))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7a1877c7 MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(21).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3b974c33 MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(21).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@351af11c MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(21).type)  MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(21)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(21).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(21).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(21).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(21).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(21).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(21).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(21).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(21).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(21).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(21).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(21).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(21).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(21).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(21).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(21).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(21).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(21).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(21)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(21) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(21))@1323183808 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) and t1_0.type=? order by t1_0.timestamp desc limit ?,? MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [9d5cbb7d-f680-4d07-9ba5-a52ceefa6fe9] MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(21)): 9d5cbb7d-f680-4d07-9ba5-a52ceefa6fe9 MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(21)#9d5cbb7d-f680-4d07-9ba5-a52ceefa6fe9] : 1959921371 MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [12222.00] MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T16:04:16.376253] MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [LE VAN DAI CHUYEN KHOAN] MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [Nhập sai OTP quá 3 lần] MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-202506091604163c6584bd] MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [FAILED] MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T16:04:16.055789] MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [27072000] MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T16:04:22.630816] MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(21)#9d5cbb7d-f680-4d07-9ba5-a52ceefa6fe9 MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4bc59eaf MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [b308a3ba-8c1b-4b7b-825c-e45a1a8bf1b6] MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(21)): b308a3ba-8c1b-4b7b-825c-e45a1a8bf1b6 MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(21)#b308a3ba-8c1b-4b7b-825c-e45a1a8bf1b6] : 1642807717 MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [1111.00] MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T14:15:06.794013] MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [] MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [Nhập sai OTP quá 3 lần] MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-20250609141506b36f298f] MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [FAILED] MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T14:15:06.599044] MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [27072000] MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T14:15:11.779807] MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(21)#b308a3ba-8c1b-4b7b-825c-e45a1a8bf1b6 MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4bc59eaf MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [11bac8ee-fcba-428f-8b72-640bb9f6c03b] MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(21)): 11bac8ee-fcba-428f-8b72-640bb9f6c03b MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(21)#11bac8ee-fcba-428f-8b72-640bb9f6c03b] : 1914888927 MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [23000.00] MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-06T15:20:29.117384] MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [] MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [27072000] MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-27072000-20250606152028ab0b2173] MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-06T15:20:28.988217] MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [87654321] MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-06T15:20:53.029319] MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(21)#11bac8ee-fcba-428f-8b72-640bb9f6c03b MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4bc59eaf MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [147c25ce-f4bb-4e62-a3db-0fe7e61b16da] MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(21)): 147c25ce-f4bb-4e62-a3db-0fe7e61b16da MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(21)#147c25ce-f4bb-4e62-a3db-0fe7e61b16da] : 379770526 MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [111212.00] MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-06T15:10:39.311458] MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [] MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [Quá thời gian cho phép của giao dịch] MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-20250606151039ee20157d] MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [FAILED] MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-06T15:10:39.081809] MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [27072000] MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-06T15:13:58.883446] MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(21)#147c25ce-f4bb-4e62-a3db-0fe7e61b16da MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4bc59eaf MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [d41a58db-a3d5-46ce-8424-1de5833b2b30] MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(21)): d41a58db-a3d5-46ce-8424-1de5833b2b30 MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(21)#d41a58db-a3d5-46ce-8424-1de5833b2b30] : 1911882243 MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [222121.00] MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-06T14:55:17.181641] MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [] MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-2025060614551714b225e2] MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-06T14:55:17.070079] MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [27072000] MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-06T14:55:27.673405] MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(21)#d41a58db-a3d5-46ce-8424-1de5833b2b30 MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4bc59eaf MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(22))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@516b0d16 MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(22).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@77679087 MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(22).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3fbcc8a3 MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(22).type)  MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-BasicResult
 MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(22)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.SQL - select count(t1_0.id) from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) and t1_0.type=? MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@5bd5e926 MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [6] MDC:[traceId=, spanId=]
2025-06-10 22:17:16 [http-nio-8088-exec-8] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 22:17:18 [http-nio-8088-exec-10] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 22:17:18 [http-nio-8088-exec-10] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 22:17:18 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 22:17:18 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(23))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 22:17:18 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2ba6f0d1 MDC:[traceId=, spanId=]
2025-06-10 22:17:18 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(23).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 22:17:18 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2da0e56c MDC:[traceId=, spanId=]
2025-06-10 22:17:18 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(23).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 22:17:18 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@35bc724f MDC:[traceId=, spanId=]
2025-06-10 22:17:18 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(23).type)  MDC:[traceId=, spanId=]
2025-06-10 22:17:18 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(23)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(23).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(23).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(23).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(23).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(23).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(23).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(23).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(23).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(23).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(23).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(23).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(23).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(23).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(23).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(23).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(23).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(23).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 22:17:18 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(23)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 22:17:18 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 22:17:18 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(23) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(23))@2136801906 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 22:17:18 [http-nio-8088-exec-10] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) and t1_0.type=? order by t1_0.timestamp desc limit ?,? MDC:[traceId=, spanId=]
2025-06-10 22:17:18 [http-nio-8088-exec-10] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(24))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@118386bc MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(24).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5c9420e6 MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(24).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@22ca3d2d MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(24).type)  MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(24)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(24).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(24).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(24).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(24).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(24).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(24).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(24).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(24).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(24).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(24).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(24).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(24).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(24).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(24).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(24).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(24).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(24).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(24)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(24) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(24))@360958790 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) and t1_0.type=? order by t1_0.timestamp desc limit ?,? MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [9d5cbb7d-f680-4d07-9ba5-a52ceefa6fe9] MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(24)): 9d5cbb7d-f680-4d07-9ba5-a52ceefa6fe9 MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(24)#9d5cbb7d-f680-4d07-9ba5-a52ceefa6fe9] : 865061708 MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [12222.00] MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T16:04:16.376253] MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [LE VAN DAI CHUYEN KHOAN] MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [Nhập sai OTP quá 3 lần] MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-202506091604163c6584bd] MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [FAILED] MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T16:04:16.055789] MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [27072000] MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T16:04:22.630816] MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(24)#9d5cbb7d-f680-4d07-9ba5-a52ceefa6fe9 MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@385def80 MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [b308a3ba-8c1b-4b7b-825c-e45a1a8bf1b6] MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(24)): b308a3ba-8c1b-4b7b-825c-e45a1a8bf1b6 MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(24)#b308a3ba-8c1b-4b7b-825c-e45a1a8bf1b6] : 2091938682 MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [1111.00] MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T14:15:06.794013] MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [] MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [Nhập sai OTP quá 3 lần] MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-20250609141506b36f298f] MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [FAILED] MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T14:15:06.599044] MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [27072000] MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T14:15:11.779807] MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(24)#b308a3ba-8c1b-4b7b-825c-e45a1a8bf1b6 MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@385def80 MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [11bac8ee-fcba-428f-8b72-640bb9f6c03b] MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(24)): 11bac8ee-fcba-428f-8b72-640bb9f6c03b MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(24)#11bac8ee-fcba-428f-8b72-640bb9f6c03b] : 925095465 MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [23000.00] MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-06T15:20:29.117384] MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [] MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [27072000] MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-27072000-20250606152028ab0b2173] MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-06T15:20:28.988217] MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [87654321] MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-06T15:20:53.029319] MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(24)#11bac8ee-fcba-428f-8b72-640bb9f6c03b MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@385def80 MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [147c25ce-f4bb-4e62-a3db-0fe7e61b16da] MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(24)): 147c25ce-f4bb-4e62-a3db-0fe7e61b16da MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(24)#147c25ce-f4bb-4e62-a3db-0fe7e61b16da] : 2059120170 MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [111212.00] MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-06T15:10:39.311458] MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [] MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [Quá thời gian cho phép của giao dịch] MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-20250606151039ee20157d] MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [FAILED] MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-06T15:10:39.081809] MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [27072000] MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-06T15:13:58.883446] MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(24)#147c25ce-f4bb-4e62-a3db-0fe7e61b16da MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@385def80 MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [d41a58db-a3d5-46ce-8424-1de5833b2b30] MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(24)): d41a58db-a3d5-46ce-8424-1de5833b2b30 MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(24)#d41a58db-a3d5-46ce-8424-1de5833b2b30] : 760049426 MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [222121.00] MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-06T14:55:17.181641] MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [] MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-2025060614551714b225e2] MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-06T14:55:17.070079] MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [27072000] MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-06T14:55:27.673405] MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(24)#d41a58db-a3d5-46ce-8424-1de5833b2b30 MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@385def80 MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(25))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7acd778f MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(25).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@579ad66e MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(25).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@18b54e2b MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(25).type)  MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-BasicResult
 MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(25)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.SQL - select count(t1_0.id) from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) and t1_0.type=? MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@2b1937c4 MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [6] MDC:[traceId=, spanId=]
2025-06-10 22:17:26 [http-nio-8088-exec-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 22:17:43 [SpringContextShutdownHook] DEBUG o.h.internal.SessionFactoryImpl - HHH000031: Closing MDC:[traceId=, spanId=]
2025-06-10 22:17:43 [SpringContextShutdownHook] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@53762462] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@6644d2e] MDC:[traceId=, spanId=]
2025-06-10 22:17:43 [SpringContextShutdownHook] DEBUG o.h.s.i.AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries MDC:[traceId=, spanId=]
2025-06-10 22:17:43 [SpringContextShutdownHook] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries MDC:[traceId=, spanId=]
2025-06-10 22:55:54 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final MDC:[traceId=, spanId=]
2025-06-10 22:55:54 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-06-10 22:55:54 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-06-10 22:55:54 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-06-10 22:55:54 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-06-10 22:55:54 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-06-10 22:55:54 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-06-10 22:55:54 [background-preinit] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-06-10 22:55:54 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-06-10 22:55:54 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-06-10 22:55:54 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-06-10 22:55:54 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-06-10 22:55:54 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-06-10 22:55:54 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.h.jpa.internal.util.LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@48f4e7f2
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/LT_Web/SpringBoot/java-banking-phase2/backend/transaction-service/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.example.transaction_service.entity.Transaction]
	Mapping files names []
	Properties [] MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator]. MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator]. MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG org.hibernate.cfg.Environment - HHH000206: 'hibernate.properties' not found MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator] MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator] MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator] MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator] MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned] MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator] MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator] MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator] MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator] MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator] MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.h.c.i.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@13bdbf29 MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@13bdbf29 MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@13bdbf29 MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@1557a46d MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@1557a46d MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@3aa2bb60 MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@3aa2bb60 MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@30527aa0 MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@30527aa0 MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@4ee8cf74 MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@4ee8cf74 MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@4ee8cf74 MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@66b46e08 MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@66b46e08 MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@66b46e08 MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@4962b005 MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@4962b005 MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@6a4644f3 MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@625da5a0 MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@625da5a0 MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@27dc43cd MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@7b623dab MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@23db8fe8 MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@23db8fe8 MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@23db8fe8 MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@2c244e96 MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@2c244e96 MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@2c244e96 MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@6923a2f4 MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@6923a2f4 MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@6923a2f4 MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@3c6551e MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@3c6551e MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@3c6551e MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@7c1d2e41 MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@7c1d2e41 MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@7c1d2e41 MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@72439faa MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@72439faa MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@683b714 MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@683b714 MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@375c7c7f MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@375c7c7f MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@375c7c7f MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@222623f3 MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@4c7646d2 MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@4c7646d2 MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@5756635f MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@3bd524e MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@3bd524e MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@3bd524e MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@1017d071 MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@6ea95477 MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@a018e66 MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@63c7924a MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@63c7924a MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@4d7d521b MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@4d7d521b MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@6953bd2f MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@6fa77cdd MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@30adf6a1 MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@17e78725 MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@63a9fa33 MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@373c330f MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@68fbd3b7 MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@68fbd3b7 MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@430ebf22 MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@430ebf22 MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@6fdabd12 MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@6fdabd12 MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@39a85fad MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@39a85fad MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@ff84544 MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@ff84544 MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@39b90c36 MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@331143e MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@789f66c2 MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@789f66c2 MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@3500def0 MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4429bcda MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4fb2d085 MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@4c9816c7 MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@4c9816c7 MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7f5cb6fa MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@761a1aa7 MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@2f75ca19 MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@2f75ca19 MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@23d7df1e MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@23d7df1e MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@39a656f8 MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@39a656f8 MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@39a656f8 MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@1f4fac49 MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@1f4fac49 MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@1f4fac49 MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@1e6b98bb MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@3d98b47 MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@8430c52 MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@8430c52 MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@6a8cd4f7 MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@6a8cd4f7 MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@6a8cd4f7 MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@28e0375d MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@67ac12b5 MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@771da38e MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@771da38e MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@7b3afaf6 MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@7b3afaf6 MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@7b3afaf6 MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@52c96013 MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@52c96013 MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@55f7e945 MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@55f7e945 MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@4fec31a6 MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@4fec31a6 MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@632d9fe7 MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@632d9fe7 MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@7afda269 MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7afda269 MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@10aad1b2 MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@3ee5a300 MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@2fdbe960 MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@2fdbe960 MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@36330687 MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@4f6d1a8 MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@23e86cc7 MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@57ef704b MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@79c6430f MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@4b8fa60e MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@2be175ec MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@7a025f3 MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@4c35d033 MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@2e163d42] into BootstrapContext; was [null] MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@2e163d42) [was null] MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@2c6df025] into BootstrapContext; was [null] MDC:[traceId=, spanId=]
2025-06-10 22:56:09 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@293e86c9] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@7c1f6e05] MDC:[traceId=, spanId=]
2025-06-10 22:56:10 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@2e163d42] MDC:[traceId=, spanId=]
2025-06-10 22:56:10 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@2e163d42] MDC:[traceId=, spanId=]
2025-06-10 22:56:10 [restartedMain] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Database ->
	   name : MySQL
	version : 8.0.32
	  major : 8
	  minor : 0 MDC:[traceId=, spanId=]
2025-06-10 22:56:10 [restartedMain] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Driver ->
	   name : MySQL Connector/J
	version : mysql-connector-j-8.3.0 (Revision: 805f872a57875f311cb82487efcfb070411a3fa0)
	  major : 8
	  minor : 3 MDC:[traceId=, spanId=]
2025-06-10 22:56:10 [restartedMain] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - JDBC version : 4.2 MDC:[traceId=, spanId=]
2025-06-10 22:56:10 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default) MDC:[traceId=, spanId=]
2025-06-10 22:56:10 [restartedMain] DEBUG org.hibernate.orm.dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQL8Dialect, version: 8.0 MDC:[traceId=, spanId=]
2025-06-10 22:56:10 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead MDC:[traceId=, spanId=]
2025-06-10 22:56:10 [restartedMain] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case MDC:[traceId=, spanId=]
2025-06-10 22:56:10 [restartedMain] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers MDC:[traceId=, spanId=]
2025-06-10 22:56:10 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3e35f27d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@54f684cc) MDC:[traceId=, spanId=]
2025-06-10 22:56:10 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2e7cf698) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2a6bdfbf) MDC:[traceId=, spanId=]
2025-06-10 22:56:10 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3b5c7695) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5b6c45d6) MDC:[traceId=, spanId=]
2025-06-10 22:56:10 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@12eda015) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@668f03d0) MDC:[traceId=, spanId=]
2025-06-10 22:56:10 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3ebf394a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@74499be) MDC:[traceId=, spanId=]
2025-06-10 22:56:10 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@78567c4b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@66d97112) MDC:[traceId=, spanId=]
2025-06-10 22:56:10 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@21eb71ea) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2418500) MDC:[traceId=, spanId=]
2025-06-10 22:56:10 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@49be0527) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@64c2ace3) MDC:[traceId=, spanId=]
2025-06-10 22:56:10 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1e5cf5b0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@10bb1afe) MDC:[traceId=, spanId=]
2025-06-10 22:56:10 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor) MDC:[traceId=, spanId=]
2025-06-10 22:56:10 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor) MDC:[traceId=, spanId=]
2025-06-10 22:56:10 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor) MDC:[traceId=, spanId=]
2025-06-10 22:56:10 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT)) MDC:[traceId=, spanId=]
2025-06-10 22:56:10 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT)) MDC:[traceId=, spanId=]
2025-06-10 22:56:10 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@7a8e866d MDC:[traceId=, spanId=]
2025-06-10 22:56:10 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@36330687` MDC:[traceId=, spanId=]
2025-06-10 22:56:10 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-06-10 22:56:10 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-06-10 22:56:10 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-06-10 22:56:10 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-06-10 22:56:10 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-06-10 22:56:10 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-06-10 22:56:10 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-06-10 22:56:10 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-06-10 22:56:10 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-06-10 22:56:10 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-06-10 22:56:10 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-06-10 22:56:10 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-06-10 22:56:10 [restartedMain] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@11190d21] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@168f169c] MDC:[traceId=, spanId=]
2025-06-10 22:56:10 [restartedMain] DEBUG o.h.boot.model.relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}] MDC:[traceId=, spanId=]
2025-06-10 22:56:10 [restartedMain] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-10 22:56:10 [restartedMain] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Transaction MDC:[traceId=, spanId=]
2025-06-10 22:56:10 [restartedMain] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity com.example.transaction_service.entity.Transaction on table tbl_transaction MDC:[traceId=, spanId=]
2025-06-10 22:56:10 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE') MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.example.transaction_service.entity.Transaction] is safe MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property id with lazy=false MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:id] MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for id MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.id MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property id MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, assigned, , ...) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property amount with lazy=false MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:amount] MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for amount MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.amount MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property amount MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property bankType with lazy=false MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:bankType] MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for bankType MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.bank_type MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property bankType MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:createdAt] MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for createdAt MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.created_at MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property createdAt MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property createdBy with lazy=false MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:createdBy] MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for createdBy MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.created_by MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property createdBy MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property currency with lazy=false MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:currency] MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for currency MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.currency MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property currency MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property description with lazy=false MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:description] MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for description MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.description MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property description MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property destinationBankCode with lazy=false MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:destinationBankCode] MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for destinationBankCode MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.destination_bank_code MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property destinationBankCode MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property destinationBankName with lazy=false MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:destinationBankName] MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for destinationBankName MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.destination_bank_name MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property destinationBankName MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property failedReason with lazy=false MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:failedReason] MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for failedReason MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.failed_reason MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property failedReason MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property fromAccountNumber with lazy=false MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:fromAccountNumber] MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for fromAccountNumber MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.from_account_number MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property fromAccountNumber MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property referenceCode with lazy=false MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:referenceCode] MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for referenceCode MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.reference_code MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property referenceCode MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property status with lazy=false MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:status] MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for status MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.status MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property status MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property timestamp with lazy=false MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:timestamp] MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for timestamp MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.timestamp MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property timestamp MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property toAccountNumber with lazy=false MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:toAccountNumber] MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for toAccountNumber MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.to_account_number MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property toAccountNumber MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property type with lazy=false MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:type] MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for type MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.type MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property type MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:updatedAt] MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for updatedAt MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.updated_at MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property updatedAt MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property updatedBy with lazy=false MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:updatedBy] MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for updatedBy MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.updated_by MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property updatedBy MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: com.example.transaction_service.entity MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.j.e.i.CallbackDefinitionResolverLegacyImpl - Adding touchForUpdate as PreUpdate callback for entity com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.j.e.i.CallbackDefinitionResolverLegacyImpl - Adding prePersist as PrePersist callback for entity com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.j.e.i.CallbackDefinitionResolverLegacyImpl - Adding touchForCreate as PrePersist callback for entity com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bankType MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for createdAt MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for createdBy MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for currency MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for description MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for destinationBankCode MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for destinationBankName MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for failedReason MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for fromAccountNumber MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for referenceCode MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for timestamp MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for toAccountNumber MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for type MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for updatedAt MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for updatedBy MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [tbl_transaction] MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Building session factory MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Instantiating SessionFactory with settings: {jdk.tls.rejectClientInitiatedRenegotiation=true, java.specification.version=17, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@4424f43d, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=D:\LT_Web\SpringBoot\java-banking-phase2\backend\transaction-service\target\classes;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-actuator\3.3.11\spring-boot-starter-actuator-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter\3.3.11\spring-boot-starter-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.3.11\spring-boot-starter-logging-3.3.11.jar;C:\Users\A715-42G\.m2\repository\ch\qos\logback\logback-classic\1.5.18\logback-classic-1.5.18.jar;C:\Users\A715-42G\.m2\repository\ch\qos\logback\logback-core\1.5.18\logback-core-1.5.18.jar;C:\Users\A715-42G\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.23.1\log4j-to-slf4j-2.23.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\logging\log4j\log4j-api\2.23.1\log4j-api-2.23.1.jar;C:\Users\A715-42G\.m2\repository\org\slf4j\jul-to-slf4j\2.0.17\jul-to-slf4j-2.0.17.jar;C:\Users\A715-42G\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\A715-42G\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-actuator-autoconfigure\3.3.11\spring-boot-actuator-autoconfigure-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-actuator\3.3.11\spring-boot-actuator-3.3.11.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-observation\1.13.13\micrometer-observation-1.13.13.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-commons\1.13.13\micrometer-commons-1.13.13.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-jakarta9\1.13.13\micrometer-jakarta9-1.13.13.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-core\1.13.13\micrometer-core-1.13.13.jar;C:\Users\A715-42G\.m2\repository\org\hdrhistogram\HdrHistogram\2.2.2\HdrHistogram-2.2.2.jar;C:\Users\A715-42G\.m2\repository\org\latencyutils\LatencyUtils\2.0.3\LatencyUtils-2.0.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.3.11\spring-boot-starter-data-jpa-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.3.11\spring-boot-starter-aop-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\aspectj\aspectjweaver\1.9.24\aspectjweaver-1.9.24.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.3.11\spring-boot-starter-jdbc-3.3.11.jar;C:\Users\A715-42G\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-jdbc\6.1.19\spring-jdbc-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\orm\hibernate-core\6.5.3.Final\hibernate-core-6.5.3.Final.jar;C:\Users\A715-42G\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\A715-42G\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\A715-42G\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\A715-42G\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\A715-42G\.m2\repository\net\bytebuddy\byte-buddy\1.14.19\byte-buddy-1.14.19.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\A715-42G\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\A715-42G\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-jpa\3.3.11\spring-data-jpa-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-commons\3.3.11\spring-data-commons-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-orm\6.1.19\spring-orm-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-context\6.1.19\spring-context-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-tx\6.1.19\spring-tx-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-beans\6.1.19\spring-beans-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-aspects\6.1.19\spring-aspects-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.3.11\spring-boot-starter-web-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.3.11\spring-boot-starter-json-3.3.11.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.17.3\jackson-module-parameter-names-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.3.11\spring-boot-starter-tomcat-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.40\tomcat-embed-core-10.1.40.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.40\tomcat-embed-websocket-10.1.40.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-web\6.1.19\spring-web-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-webmvc\6.1.19\spring-webmvc-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-expression\6.1.19\spring-expression-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-devtools\3.3.11\spring-boot-devtools-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot\3.3.11\spring-boot-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.3.11\spring-boot-autoconfigure-3.3.11.jar;C:\Users\A715-42G\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\A715-42G\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-core\6.1.19\spring-core-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-jcl\6.1.19\spring-jcl-6.1.19.jar;C:\Users\A715-42G\.m2\repository\com\mysql\mysql-connector-j\8.3.0\mysql-connector-j-8.3.0.jar;C:\Users\A715-42G\.m2\repository\org\projectlombok\lombok\1.18.38\lombok-1.18.38.jar;C:\Users\A715-42G\.m2\repository\org\mapstruct\mapstruct\1.5.5.Final\mapstruct-1.5.5.Final.jar;C:\Users\A715-42G\.m2\repository\org\mapstruct\mapstruct-processor\1.5.5.Final\mapstruct-processor-1.5.5.Final.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-validation\3.3.11\spring-boot-starter-validation-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.40\tomcat-embed-el-10.1.40.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\validator\hibernate-validator\8.0.2.Final\hibernate-validator-8.0.2.Final.jar;C:\Users\A715-42G\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-ui\2.0.2\springdoc-openapi-starter-webmvc-ui-2.0.2.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-api\2.0.2\springdoc-openapi-starter-webmvc-api-2.0.2.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-common\2.0.2\springdoc-openapi-starter-common-2.0.2.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-core-jakarta\2.2.7\swagger-core-jakarta-2.2.7.jar;C:\Users\A715-42G\.m2\repository\org\apache\commons\commons-lang3\3.14.0\commons-lang3-3.14.0.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-annotations-jakarta\2.2.7\swagger-annotations-jakarta-2.2.7.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-models-jakarta\2.2.7\swagger-models-jakarta-2.2.7.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-yaml\2.17.3\jackson-dataformat-yaml-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\webjars\swagger-ui\4.15.5\swagger-ui-4.15.5.jar;C:\Users\A715-42G\.m2\repository\org\webjars\webjars-locator-core\0.58\webjars-locator-core-0.58.jar;C:\Users\A715-42G\.m2\repository\io\github\classgraph\classgraph\4.8.149\classgraph-4.8.149.jar;D:\LT_Web\SpringBoot\java-banking-phase2\backend\common-service\target\classes;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.17.3\jackson-databind-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\apache\dubbo\dubbo-spring-boot-starter\3.3.2\dubbo-spring-boot-starter-3.3.2.jar;C:\Users\A715-42G\.m2\repository\org\apache\dubbo\dubbo-spring-boot-autoconfigure\3.3.2\dubbo-spring-boot-autoconfigure-3.3.2.jar;C:\Users\A715-42G\.m2\repository\org\apache\dubbo\dubbo-spring-boot-autoconfigure-compatible\3.3.2\dubbo-spring-boot-autoconfigure-compatible-3.3.2.jar;C:\Users\A715-42G\.m2\repository\org\apache\dubbo\dubbo\3.3.2\dubbo-3.3.2.jar;C:\Users\A715-42G\.m2\repository\org\javassist\javassist\3.30.2-GA\javassist-3.30.2-GA.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-all\4.1.119.Final\netty-all-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-dns\4.1.119.Final\netty-codec-dns-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-haproxy\4.1.119.Final\netty-codec-haproxy-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-http\4.1.119.Final\netty-codec-http-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-http2\4.1.119.Final\netty-codec-http2-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-memcache\4.1.119.Final\netty-codec-memcache-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-mqtt\4.1.119.Final\netty-codec-mqtt-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-redis\4.1.119.Final\netty-codec-redis-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-smtp\4.1.119.Final\netty-codec-smtp-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-socks\4.1.119.Final\netty-codec-socks-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-stomp\4.1.119.Final\netty-codec-stomp-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-xml\4.1.119.Final\netty-codec-xml-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-handler-proxy\4.1.119.Final\netty-handler-proxy-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-handler-ssl-ocsp\4.1.119.Final\netty-handler-ssl-ocsp-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-resolver-dns\4.1.119.Final\netty-resolver-dns-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-rxtx\4.1.119.Final\netty-transport-rxtx-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-sctp\4.1.119.Final\netty-transport-sctp-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-udt\4.1.119.Final\netty-transport-udt-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-classes-kqueue\4.1.119.Final\netty-transport-classes-kqueue-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-resolver-dns-classes-macos\4.1.119.Final\netty-resolver-dns-classes-macos-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final-linux-x86_64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final-linux-aarch_64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final-linux-riscv64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-kqueue\4.1.119.Final\netty-transport-native-kqueue-4.1.119.Final-osx-x86_64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-kqueue\4.1.119.Final\netty-transport-native-kqueue-4.1.119.Final-osx-aarch_64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-resolver-dns-native-macos\4.1.119.Final\netty-resolver-dns-native-macos-4.1.119.Final-osx-x86_64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-resolver-dns-native-macos\4.1.119.Final\netty-resolver-dns-native-macos-4.1.119.Final-osx-aarch_64.jar;C:\Users\A715-42G\.m2\repository\org\apache\dubbo\hessian-lite\4.0.3\hessian-lite-4.0.3.jar;C:\Users\A715-42G\.m2\repository\com\alibaba\fastjson2\fastjson2\2.0.53\fastjson2-2.0.53.jar;C:\Users\A715-42G\.m2\repository\com\google\protobuf\protobuf-java\3.25.5\protobuf-java-3.25.5.jar;C:\Users\A715-42G\.m2\repository\org\apache\curator\curator-framework\5.1.0\curator-framework-5.1.0.jar;C:\Users\A715-42G\.m2\repository\org\apache\curator\curator-client\5.1.0\curator-client-5.1.0.jar;C:\Users\A715-42G\.m2\repository\com\google\guava\guava\27.0.1-jre\guava-27.0.1-jre.jar;C:\Users\A715-42G\.m2\repository\com\google\guava\failureaccess\1.0.1\failureaccess-1.0.1.jar;C:\Users\A715-42G\.m2\repository\com\google\guava\listenablefuture\9999.0-empty-to-avoid-conflict-with-guava\listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar;C:\Users\A715-42G\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\A715-42G\.m2\repository\org\checkerframework\checker-qual\2.5.2\checker-qual-2.5.2.jar;C:\Users\A715-42G\.m2\repository\com\google\errorprone\error_prone_annotations\2.2.0\error_prone_annotations-2.2.0.jar;C:\Users\A715-42G\.m2\repository\com\google\j2objc\j2objc-annotations\1.1\j2objc-annotations-1.1.jar;C:\Users\A715-42G\.m2\repository\org\codehaus\mojo\animal-sniffer-annotations\1.17\animal-sniffer-annotations-1.17.jar;C:\Users\A715-42G\.m2\repository\org\apache\zookeeper\zookeeper\3.7.1\zookeeper-3.7.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\zookeeper\zookeeper-jute\3.7.1\zookeeper-jute-3.7.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\yetus\audience-annotations\0.12.0\audience-annotations-0.12.0.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-handler\4.1.119.Final\netty-handler-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-common\4.1.119.Final\netty-common-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-resolver\4.1.119.Final\netty-resolver-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-buffer\4.1.119.Final\netty-buffer-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport\4.1.119.Final\netty-transport-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-unix-common\4.1.119.Final\netty-transport-native-unix-common-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec\4.1.119.Final\netty-codec-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-classes-epoll\4.1.119.Final\netty-transport-classes-epoll-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\org\slf4j\slf4j-api\2.0.17\slf4j-api-2.0.17.jar;C:\Users\A715-42G\.m2\repository\org\apache\curator\curator-recipes\5.5.0\curator-recipes-5.5.0.jar;C:\Users\A715-42G\.m2\repository\org\apache\curator\curator-x-discovery\5.5.0\curator-x-discovery-5.5.0.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-starter-vault-config\4.1.1\spring-cloud-starter-vault-config-4.1.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\httpcomponents\client5\httpclient5\5.3.1\httpclient5-5.3.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\httpcomponents\core5\httpcore5-h2\5.2.5\httpcore5-h2-5.2.5.jar;C:\Users\A715-42G\.m2\repository\org\apache\httpcomponents\core5\httpcore5\5.2.5\httpcore5-5.2.5.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-starter\4.1.2\spring-cloud-starter-4.1.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-context\4.1.2\spring-cloud-context-4.1.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-commons\4.1.2\spring-cloud-commons-4.1.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-rsa\1.1.2\spring-security-rsa-1.1.2.jar;C:\Users\A715-42G\.m2\repository\org\bouncycastle\bcprov-jdk18on\1.77\bcprov-jdk18on-1.77.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-vault-config\4.1.1\spring-cloud-vault-config-4.1.1.jar;C:\Users\A715-42G\.m2\repository\org\springframework\vault\spring-vault-core\3.1.1\spring-vault-core-3.1.1.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-data-redis\3.3.11\spring-boot-starter-data-redis-3.3.11.jar;C:\Users\A715-42G\.m2\repository\io\lettuce\lettuce-core\6.3.2.RELEASE\lettuce-core-6.3.2.RELEASE.jar;C:\Users\A715-42G\.m2\repository\io\projectreactor\reactor-core\3.6.16\reactor-core-3.6.16.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-redis\3.3.11\spring-data-redis-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-keyvalue\3.3.11\spring-data-keyvalue-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-oxm\6.1.19\spring-oxm-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-context-support\6.1.19\spring-context-support-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-stream\4.2.1\spring-cloud-stream-4.2.1.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-messaging\6.1.19\spring-messaging-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\integration\spring-integration-core\6.3.9\spring-integration-core-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\integration\spring-integration-jmx\6.3.9\spring-integration-jmx-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\retry\spring-retry\2.0.11\spring-retry-2.0.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-function-context\4.2.2\spring-cloud-function-context-4.2.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-function-core\4.2.2\spring-cloud-function-core-4.2.2.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-joda\2.17.3\jackson-datatype-joda-2.17.3.jar;C:\Users\A715-42G\.m2\repository\joda-time\joda-time\2.10.14\joda-time-2.10.14.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-starter-stream-kafka\4.2.1\spring-cloud-starter-stream-kafka-4.2.1.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-stream-binder-kafka\4.2.1\spring-cloud-stream-binder-kafka-4.2.1.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-stream-binder-kafka-core\4.2.1\spring-cloud-stream-binder-kafka-core-4.2.1.jar;C:\Users\A715-42G\.m2\repository\org\springframework\integration\spring-integration-kafka\6.3.9\spring-integration-kafka-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\kafka\spring-kafka\3.2.8\spring-kafka-3.2.8.jar;C:\Users\A715-42G\.m2\repository\org\apache\kafka\kafka-clients\3.7.2\kafka-clients-3.7.2.jar;C:\Users\A715-42G\.m2\repository\com\github\luben\zstd-jni\1.5.6-4\zstd-jni-1.5.6-4.jar;C:\Users\A715-42G\.m2\repository\org\lz4\lz4-java\1.8.0\lz4-java-1.8.0.jar;C:\Users\A715-42G\.m2\repository\org\xerial\snappy\snappy-java\1.1.10.5\snappy-java-1.1.10.5.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.3.11\spring-boot-starter-security-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-aop\6.1.19\spring-aop-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-config\6.3.9\spring-security-config-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-web\6.3.9\spring-security-web-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-oauth2-resource-server\3.3.11\spring-boot-starter-oauth2-resource-server-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-core\6.3.9\spring-security-core-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-crypto\6.3.9\spring-security-crypto-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-oauth2-resource-server\6.3.9\spring-security-oauth2-resource-server-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-oauth2-core\6.3.9\spring-security-oauth2-core-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-oauth2-jose\6.3.9\spring-security-oauth2-jose-6.3.9.jar;C:\Users\A715-42G\.m2\repository\com\nimbusds\nimbus-jose-jwt\9.37.3\nimbus-jose-jwt-9.37.3.jar;C:\Users\A715-42G\.m2\repository\com\github\stephenc\jcip\jcip-annotations\1.0-1\jcip-annotations-1.0-1.jar;C:\Users\A715-42G\.m2\repository\org\keycloak\keycloak-admin-client\26.0.0\keycloak-admin-client-26.0.0.jar;C:\Users\A715-42G\.m2\repository\org\keycloak\keycloak-client-common-synced\26.0.0\keycloak-client-common-synced-26.0.0.jar;C:\Users\A715-42G\.m2\repository\org\jboss\logging\commons-logging-jboss-logging\1.0.0.Final\commons-logging-jboss-logging-1.0.0.Final.jar;C:\Users\A715-42G\.m2\repository\org\apache\httpcomponents\httpclient\4.5.14\httpclient-4.5.14.jar;C:\Users\A715-42G\.m2\repository\org\apache\httpcomponents\httpcore\4.4.16\httpcore-4.4.16.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.17.3\jackson-core-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.17.3\jackson-annotations-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.17.3\jackson-datatype-jdk8-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.17.3\jackson-datatype-jsr310-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\eclipse\microprofile\openapi\microprofile-openapi-api\3.1.1\microprofile-openapi-api-3.1.1.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-client\6.2.9.Final\resteasy-client-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-client-api\6.2.9.Final\resteasy-client-api-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-core-spi\6.2.9.Final\resteasy-core-spi-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-core\6.2.9.Final\resteasy-core-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\org\jboss\jandex\2.4.5.Final\jandex-2.4.5.Final.jar;C:\Users\A715-42G\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\A715-42G\.m2\repository\com\ibm\async\asyncutil\0.1.0\asyncutil-0.1.0.jar;C:\Users\A715-42G\.m2\repository\commons-codec\commons-codec\1.16.1\commons-codec-1.16.1.jar;C:\Users\A715-42G\.m2\repository\jakarta\ws\rs\jakarta.ws.rs-api\3.1.0\jakarta.ws.rs-api-3.1.0.jar;C:\Users\A715-42G\.m2\repository\org\reactivestreams\reactive-streams\1.0.4\reactive-streams-1.0.4.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-multipart-provider\6.2.9.Final\resteasy-multipart-provider-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\jakarta\mail\jakarta.mail-api\2.1.3\jakarta.mail-api-2.1.3.jar;C:\Users\A715-42G\.m2\repository\org\eclipse\angus\angus-mail\2.0.3\angus-mail-2.0.3.jar;C:\Users\A715-42G\.m2\repository\org\apache\james\apache-mime4j-dom\0.8.11\apache-mime4j-dom-0.8.11.jar;C:\Users\A715-42G\.m2\repository\org\apache\james\apache-mime4j-core\0.8.11\apache-mime4j-core-0.8.11.jar;C:\Users\A715-42G\.m2\repository\org\apache\james\apache-mime4j-storage\0.8.11\apache-mime4j-storage-0.8.11.jar;C:\Users\A715-42G\.m2\repository\commons-io\commons-io\2.11.0\commons-io-2.11.0.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-jackson2-provider\6.2.9.Final\resteasy-jackson2-provider-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\jakarta\rs\jackson-jakarta-rs-base\2.17.3\jackson-jakarta-rs-base-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\jakarta\rs\jackson-jakarta-rs-json-provider\2.17.3\jackson-jakarta-rs-json-provider-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\module\jackson-module-jakarta-xmlbind-annotations\2.17.3\jackson-module-jakarta-xmlbind-annotations-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\github\java-json-tools\json-patch\1.13\json-patch-1.13.jar;C:\Users\A715-42G\.m2\repository\com\github\java-json-tools\msg-simple\1.2\msg-simple-1.2.jar;C:\Users\A715-42G\.m2\repository\com\github\java-json-tools\btf\1.3\btf-1.3.jar;C:\Users\A715-42G\.m2\repository\com\github\java-json-tools\jackson-coreutils\2.0\jackson-coreutils-2.0.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-jaxb-provider\6.2.9.Final\resteasy-jaxb-provider-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\codemodel\4.0.5\codemodel-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-jxc\4.0.5\jaxb-jxc-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-xjc\4.0.5\jaxb-xjc-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\xsom\4.0.5\xsom-4.0.5.jar;C:\Users\A715-42G\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\A715-42G\.m2\repository\com\sun\istack\istack-commons-tools\4.1.2\istack-commons-tools-4.1.2.jar;C:\Users\A715-42G\.m2\repository\com\sun\xml\bind\external\relaxng-datatype\4.0.3\relaxng-datatype-4.0.3.jar;C:\Users\A715-42G\.m2\repository\com\sun\xml\bind\external\rngom\4.0.3\rngom-4.0.3.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Saigon, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, java.vm.specification.version=17, os.name=Windows 10, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-17\bin, sun.java.command=com.example.transaction_service.TransactionServiceApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@717b5080, com.sun.management.jmxremote=, jdk.debug=release, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, hibernate.cdi.extensions=true, user.home=C:\Users\A715-42G, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-01-17, java.home=C:\Program Files\Java\jdk-17, file.separator=\, spring.output.ansi.enabled=always, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.6+9-LTS-190, user.name=A715-42G, spring.jmx.enabled=true, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\A715-42G\AppData\Local\Temp\, catalina.home=C:\Users\A715-42G\AppData\Local\Temp\tomcat.8088.12843162135732227209, java.version=17.0.6, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=D:\LT_Web\SpringBoot\java-banking-phase2, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=17732, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\A715-42G\AppData\Local\Temp\tomcat.8088.12843162135732227209, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@7e3ebed3, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-17\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;D:\Document\xxx\apache-maven-3.9.1\bin;C:\Program Files (x86)\Dev-Cpp\MinGW64\bin;C:\Program Files\Git\cmd;C:\Program Files\Java\jdk-17\bin;C:\XamPP\php;D:\LT_Web\SpringBoot\SpringBootCLI\spring-3.2.1\bin;D:\sqlite;D:\Document\Java\Maven\apache-maven-3.9.9\bin;D:\Document\Java\Maven\apache-maven-3.9.9\bin;C:\Program Files\Cloudflare\Cloudflare WARP\;C:\ProgramData\chocolatey\bin;D:\KienLongBank\Vault;D:\GrafanaLabs\grafana\bin;D:\KienLongBank\InfluxData\influxdb-1.8.10-1;D:\Document\Work\Redis;C:\Program Files\Docker\Docker\resources\bin;D:\nodejs\nvm;C:\nvm4w\nodejs;C:\Program Files\nodejs\;C:\Users\A715-42G\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\A715-42G\AppData\Local\Programs\Python\Python310\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\A715-42G\AppData\Local\Programs\Eclipse Adoptium\jdk-17.0.3.7-hotspot\bin;C:\Users\A715-42G\AppData\Local\Microsoft\WindowsApps;C:\Users\A715-42G\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\Azure Data Studio\bin;C:\Program Files\Git\bin;D:\Document\HQT_ATCSDL\MongoDB\mongosh-1.8.2-win32-x64\bin;C:\XamPP\php;C:\Program Files\Azure Data Studio\bin;D:\nodejs\nvm;C:\nvm4w\nodejs;C:\Users\A715-42G\AppData\Roaming\npm;D:\Document\cursor\resources\app\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, emulated-client, sharing, java.vm.version=17.0.6+9-LTS-190, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=61.0, LOGGED_APPLICATION_NAME=[transaction-service] } MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {} MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.example.transaction_service.entity.Transaction] is safe MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@721fa19b] under count; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@3b528d7e] under every; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@5cf3884c] under any; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2c1721d5] under sinh; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6163217b] under cosh; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@f985653] under tanh; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6f50ca6e] under pi; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7a5c47d8] under log; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : length -> character_length MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@b32571c] under position; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@20bceace] under overlay; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@25d478aa] under trim; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@3dbe2b83] under cast; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@76316040] under collate; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@5e30905d] under extract; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@d6ce976] under ifnull; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@50df5a50] under pad; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@2446c98c] under str; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@1ef4eb11] under format; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@78e1619a] under timestampadd; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@4ed5cf6c] under timestampdiff; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@219e7c75] under current_date; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5ce0c14e] under current_time; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@52c9468b] under current_timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current date -> current_date MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current time -> current_time MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1077a55b] under local_date; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@42d81ef4] under local_time; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@18684d50] under local_datetime; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@dadc8] under offset_datetime; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local date -> local_date MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local time -> local_time MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2d7d9def] under instant; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current_instant -> instant MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@59d537f3] under sql; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7a5c47d8 MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@1f6b09e8] under lpad; prior registration was NamedSqmFunctionTemplate(lpad) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@7a80b9a2] under rpad; prior registration was NamedSqmFunctionTemplate(rpad) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : day -> dayofmonth MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@294d6339] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@b32571c MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@560c8314] under trunc; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : truncate -> trunc MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@23dc8a07] under bitand; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@39d24ab8] under bitor; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@293982d4] under bitxor; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1b1fb0c4] under bitnot; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@5c548d12] under format; prior registration was org.hibernate.dialect.function.FormatFunction@1ef4eb11 MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@42d81ef4 MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@18684d50 MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@77789baa] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6f50ca6e MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@12b298b3] under chr; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : char -> chr MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@74cd83b1] under sysdate; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@21266f10] under listagg; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - abs(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double acos(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - addtime(TIME datetime, TIME time) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean any(BOOLEAN arg) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer ascii(STRING arg) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double asin(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - avg(arg) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bit_and(arg) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bit_or(arg) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitand(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitnot(arg) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitor(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitxor(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - cast(arg as Type) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - ceiling(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Character char(INTEGER arg) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Character chr(INTEGER arg) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]]) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String collate(STRING string as COLLATION collation) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]]) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double cos(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double cosh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double cot(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Long count([distinct ]{arg|*}) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer crc32(arg) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date curdate() MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date current date MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time current time MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current timestamp MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date current_date MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Instant current_instant MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time current_time MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current_timestamp MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time curtime() MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date date(arg) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer datediff(DATE end, DATE start) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer day(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String dayname(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofmonth(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofweek(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofyear(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double degrees(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean every(BOOLEAN arg) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double exp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - floor(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]]) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer hour(TIME arg) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - ifnull(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Instant instant MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]]) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date last_day(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]]) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String left(STRING string, INTEGER length) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double ln(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local date MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local datetime MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local time MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local_date MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local_datetime MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local_time MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtime MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtimestamp MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start]) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1]) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double log10(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double log2(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String lower(STRING string) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String lpad(string, length[, padding]) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters]) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - max(COMPARABLE arg) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String md5(arg) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer microsecond(TIME arg) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - min(COMPARABLE arg) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer minute(TIME arg) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer month(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String monthname(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp now() MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - nullif(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset datetime MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset_datetime MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length]) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character]) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double pi MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer position(STRING pattern in STRING string) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer quarter(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double radians(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double rand([INTEGER seed]) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String repeat(STRING string, INTEGER times) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String reverse(STRING arg) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String right(STRING string, INTEGER length) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places]) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String rpad(string, length[, padding]) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters]) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer second(TIME arg) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String sha(arg) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String sha1(arg) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String sha2(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer sign(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double sin(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double sinh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String soundex(arg) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String space(INTEGER arg) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Object sql MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double sqrt(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String str(arg) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length]) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length]) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - subtime(TIME datetime, TIME time) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - sum(arg) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp sysdate() MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double tan(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double tanh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String time(arg) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1]) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - trunc( ... ) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - truncate( ... ) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String upper(STRING string) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date utc_date MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time utc_time MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp utc_timestamp MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_pop(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_samp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double variance(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer week(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer year(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.orm.query.plan.cache - Starting QueryInterpretationCache(2048) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.e.i.EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.example.transaction_service.entity.Transaction] is safe MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.example.transaction_service.entity.Transaction]: private accessor [amount] MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.orm.model.mapping.creation - Starting post-init callbacks MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(com.example.transaction_service.entity.Transaction) `staticFetchableList` generator MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction)] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction.updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select id from tbl_transaction where id=? MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into tbl_transaction (amount,bank_type,created_at,created_by,currency,description,destination_bank_code,destination_bank_name,failed_reason,from_account_number,reference_code,status,timestamp,to_account_number,type,updated_at,updated_by,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update tbl_transaction set amount=?,bank_type=?,created_at=?,created_by=?,currency=?,description=?,destination_bank_code=?,destination_bank_name=?,failed_reason=?,from_account_number=?,reference_code=?,status=?,timestamp=?,to_account_number=?,type=?,updated_at=?,updated_by=? where id=? MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from tbl_transaction where id=? MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration) MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@11190d21] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@4fb88d1c] MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named HQL queries MDC:[traceId=, spanId=]
2025-06-10 22:56:11 [restartedMain] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named SQL queries MDC:[traceId=, spanId=]
2025-06-10 22:56:12 [restartedMain] DEBUG org.hibernate.mapping.Table - No alter strings for table : tbl_transaction MDC:[traceId=, spanId=]
2025-06-10 22:56:12 [restartedMain] DEBUG o.h.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2053d1c7 MDC:[traceId=, spanId=]
2025-06-10 22:56:12 [restartedMain] DEBUG o.h.internal.SessionFactoryRegistry - Registering SessionFactory: 7a11add7-d785-4707-8886-e866db4760a1 (<unnamed>) MDC:[traceId=, spanId=]
2025-06-10 22:56:12 [restartedMain] DEBUG o.h.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured MDC:[traceId=, spanId=]
2025-06-10 22:56:12 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Instantiated SessionFactory MDC:[traceId=, spanId=]
2025-06-10 22:56:12 [restartedMain] DEBUG o.h.s.internal.StatisticsInitiator - Statistics initialized [enabled=false] MDC:[traceId=, spanId=]
2025-06-10 22:56:12 [restartedMain] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy3/jdk.proxy3.$Proxy223.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.example.transaction_service.TransactionServiceApplication.main(TransactionServiceApplication.java:15)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-06-10 22:56:12 [restartedMain] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy3/jdk.proxy3.$Proxy223.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.getCountQuery(JpaQueryLookupStrategy.java:204)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:171)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.example.transaction_service.TransactionServiceApplication.main(TransactionServiceApplication.java:15)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-06-10 22:56:12 [restartedMain] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy3/jdk.proxy3.$Proxy223.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.getCountQuery(JpaQueryLookupStrategy.java:204)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:171)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.example.transaction_service.TransactionServiceApplication.main(TransactionServiceApplication.java:15)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-06-10 22:56:12 [restartedMain] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy3/jdk.proxy3.$Proxy223.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.example.transaction_service.TransactionServiceApplication.main(TransactionServiceApplication.java:15)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-06-10 22:56:15 [restartedMain] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-06-10 22:56:15 [restartedMain] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator MDC:[traceId=, spanId=]
2025-06-10 22:56:15 [restartedMain] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory MDC:[traceId=, spanId=]
2025-06-10 22:56:15 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-06-10 22:56:15 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader MDC:[traceId=, spanId=]
2025-06-10 22:56:15 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-06-10 22:56:15 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-06-10 22:56:15 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-06-10 22:56:15 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-06-10 22:56:15 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-06-10 22:56:15 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-06-10 22:56:15 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-06-10 22:56:15 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-06-10 22:56:15 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-06-10 22:56:15 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-06-10 22:56:15 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-06-10 22:56:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 22:56:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 22:56:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 22:56:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 22:56:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6bfcfe91 MDC:[traceId=, spanId=]
2025-06-10 22:56:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 22:56:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@944037 MDC:[traceId=, spanId=]
2025-06-10 22:56:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 22:56:17 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 22:56:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 22:56:17 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 22:56:17 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1365156784 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 22:56:17 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 22:56:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 22:57:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 22:57:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 22:57:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 22:57:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 22:57:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7888d037 MDC:[traceId=, spanId=]
2025-06-10 22:57:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 22:57:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3d4f9a2 MDC:[traceId=, spanId=]
2025-06-10 22:57:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 22:57:17 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 22:57:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 22:57:17 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 22:57:17 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@147798883 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 22:57:17 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 22:57:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(5))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5afa7c58 MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(5).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@268c71d4 MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(5).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(5)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(5).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(5).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(5).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(5).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(5).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(5).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(5).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(5).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(5).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(5).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(5).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(5).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(5).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(5).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(5).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(5).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(5).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(5)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(5) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(5))@421455632 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) order by t1_0.timestamp desc limit ?,? MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [9335422e-e447-4244-a28a-3f44abc76551] MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(5)): 9335422e-e447-4244-a28a-3f44abc76551 MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(5)#9335422e-e447-4244-a28a-3f44abc76551] : 1097712089 MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [100000.00] MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T16:04:45.540728] MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [LE VAN DAI RUT TIEN] MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [Nhập sai OTP quá 3 lần] MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-202506091604451762c0c7] MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [FAILED] MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T16:04:45.494744] MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [WITHDRAW] MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T16:04:50.731497] MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(5)#9335422e-e447-4244-a28a-3f44abc76551 MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@d395865 MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [9d5cbb7d-f680-4d07-9ba5-a52ceefa6fe9] MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(5)): 9d5cbb7d-f680-4d07-9ba5-a52ceefa6fe9 MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(5)#9d5cbb7d-f680-4d07-9ba5-a52ceefa6fe9] : 587884246 MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [12222.00] MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T16:04:16.376253] MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [LE VAN DAI CHUYEN KHOAN] MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [Nhập sai OTP quá 3 lần] MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-202506091604163c6584bd] MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [FAILED] MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T16:04:16.055789] MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [27072000] MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T16:04:22.630816] MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(5)#9d5cbb7d-f680-4d07-9ba5-a52ceefa6fe9 MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@d395865 MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [6c52dec1-7727-4105-9521-7b140e4b9fe6] MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(5)): 6c52dec1-7727-4105-9521-7b140e4b9fe6 MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(5)#6c52dec1-7727-4105-9521-7b140e4b9fe6] : 1322504066 MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [21468.00] MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T15:51:54.770845] MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [LE VAN DAI RUT TIEN] MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-20250609155154feba46a7] MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T15:51:54.505223] MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [WITHDRAW] MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T15:52:11.861255] MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(5)#6c52dec1-7727-4105-9521-7b140e4b9fe6 MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@d395865 MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [e1a28032-24bc-4730-afde-450cf41c6a55] MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(5)): e1a28032-24bc-4730-afde-450cf41c6a55 MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(5)#e1a28032-24bc-4730-afde-450cf41c6a55] : 2040441102 MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [1111.00] MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T15:42:37.016815] MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [LE VAN DAI RUT TIEN] MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [Quá thời gian cho phép của giao dịch] MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-202506091542360c5ce231] MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [FAILED] MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T15:42:36.864547] MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [WITHDRAW] MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T15:45:40.653921] MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(5)#e1a28032-24bc-4730-afde-450cf41c6a55 MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@d395865 MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [d98e555c-b698-4639-bf7b-5ffabdf1cd47] MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(5)): d98e555c-b698-4639-bf7b-5ffabdf1cd47 MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(5)#d98e555c-b698-4639-bf7b-5ffabdf1cd47] : 1042492456 MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [213213.00] MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T15:41:40.032707] MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [LE VAN DAI RUT TIEN] MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [Quá thời gian cho phép của giao dịch] MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-202506091541390ca83b6e] MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [FAILED] MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T15:41:39.710454] MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [WITHDRAW] MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T15:44:40.824344] MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(5)#d98e555c-b698-4639-bf7b-5ffabdf1cd47 MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@d395865 MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(6))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@263c1183 MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(6).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@171f64f3 MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(6).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-BasicResult
 MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(6)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.SQL - select count(t1_0.id) from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@36e148d8 MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [30] MDC:[traceId=, spanId=]
2025-06-10 22:57:57 [http-nio-8088-exec-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 22:58:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 22:58:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 22:58:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 22:58:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 22:58:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7521f039 MDC:[traceId=, spanId=]
2025-06-10 22:58:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 22:58:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5997a1e MDC:[traceId=, spanId=]
2025-06-10 22:58:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 22:58:17 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 22:58:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 22:58:17 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 22:58:17 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1692187625 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 22:58:17 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 22:58:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(7))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@51e26d1c MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(7).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@135fd60e MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(7).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@473de280 MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(7).status)  MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(7)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(7).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(7).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(7).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(7).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(7).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(7).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(7).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(7).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(7).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(7).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(7).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(7).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(7).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(7).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(7).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(7).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(7).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(7)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(7) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(7))@2067184335 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) and t1_0.status=? order by t1_0.timestamp desc limit ?,? MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [6c52dec1-7727-4105-9521-7b140e4b9fe6] MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(7)): 6c52dec1-7727-4105-9521-7b140e4b9fe6 MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(7)#6c52dec1-7727-4105-9521-7b140e4b9fe6] : 588001275 MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [21468.00] MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T15:51:54.770845] MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [LE VAN DAI RUT TIEN] MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-20250609155154feba46a7] MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T15:51:54.505223] MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [WITHDRAW] MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T15:52:11.861255] MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(7)#6c52dec1-7727-4105-9521-7b140e4b9fe6 MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6d220997 MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [b88a97aa-b4ea-4c5b-901e-9315c412c554] MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(7)): b88a97aa-b4ea-4c5b-901e-9315c412c554 MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(7)#b88a97aa-b4ea-4c5b-901e-9315c412c554] : 1405433106 MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [23000.00] MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T13:55:06.439062] MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Chuyển tiền] MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-202506091355063d72d7f8] MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T13:55:06.236412] MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [87654321] MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T13:55:15.761254] MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(7)#b88a97aa-b4ea-4c5b-901e-9315c412c554 MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6d220997 MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [67a7c3cd-f37f-4349-b15f-c544c58d6f9d] MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(7)): 67a7c3cd-f37f-4349-b15f-c544c58d6f9d MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(7)#67a7c3cd-f37f-4349-b15f-c544c58d6f9d] : 653591243 MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [20000.00] MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T13:30:37.135201] MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Nộp tiền] MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-970452999999999-20250609133036a1299e4f] MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T13:30:36.621149] MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [DEPOSIT] MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T13:30:53.218895] MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(7)#67a7c3cd-f37f-4349-b15f-c544c58d6f9d MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6d220997 MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [7f1d5e96-1d5c-497b-8c1e-0dcc13cfb943] MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(7)): 7f1d5e96-1d5c-497b-8c1e-0dcc13cfb943 MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(7)#7f1d5e96-1d5c-497b-8c1e-0dcc13cfb943] : 1690604057 MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [20000.00] MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T13:18:10.375275] MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Nộp tiền] MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-970452999999999-2025060913181033dff6b6] MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T13:18:10.280358] MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [DEPOSIT] MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T13:18:39.988512] MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(7)#7f1d5e96-1d5c-497b-8c1e-0dcc13cfb943 MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6d220997 MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [69eb51a4-db2f-49ab-acb9-073a0060ce38] MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(7)): 69eb51a4-db2f-49ab-acb9-073a0060ce38 MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(7)#69eb51a4-db2f-49ab-acb9-073a0060ce38] : 425152935 MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [10000.00] MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T13:17:40.592964] MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Chuyển tiền] MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-202506091317401be1dea3] MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T13:17:40.336221] MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [87654321] MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T13:17:50.910739] MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(7)#69eb51a4-db2f-49ab-acb9-073a0060ce38 MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6d220997 MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(8))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7cab1e75 MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(8).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6357a5b4 MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(8).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1510fc MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(8).status)  MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-BasicResult
 MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(8)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.SQL - select count(t1_0.id) from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) and t1_0.status=? MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@15fb2f96 MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [12] MDC:[traceId=, spanId=]
2025-06-10 22:58:28 [http-nio-8088-exec-2] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(9))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@29648ab9 MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(9).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@217b9c5c MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(9).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(9)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(9).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(9).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(9).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(9).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(9).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(9).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(9).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(9).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(9).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(9).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(9).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(9).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(9).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(9).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(9).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(9).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(9).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(9)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(9) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(9))@254176703 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) order by t1_0.timestamp desc limit ?,? MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [9335422e-e447-4244-a28a-3f44abc76551] MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(9)): 9335422e-e447-4244-a28a-3f44abc76551 MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(9)#9335422e-e447-4244-a28a-3f44abc76551] : 949641175 MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [100000.00] MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T16:04:45.540728] MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [LE VAN DAI RUT TIEN] MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [Nhập sai OTP quá 3 lần] MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-202506091604451762c0c7] MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [FAILED] MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T16:04:45.494744] MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [WITHDRAW] MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T16:04:50.731497] MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(9)#9335422e-e447-4244-a28a-3f44abc76551 MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@46d96ee MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [9d5cbb7d-f680-4d07-9ba5-a52ceefa6fe9] MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(9)): 9d5cbb7d-f680-4d07-9ba5-a52ceefa6fe9 MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(9)#9d5cbb7d-f680-4d07-9ba5-a52ceefa6fe9] : 1493224853 MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [12222.00] MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T16:04:16.376253] MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [LE VAN DAI CHUYEN KHOAN] MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [Nhập sai OTP quá 3 lần] MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-202506091604163c6584bd] MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [FAILED] MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T16:04:16.055789] MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [27072000] MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T16:04:22.630816] MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(9)#9d5cbb7d-f680-4d07-9ba5-a52ceefa6fe9 MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@46d96ee MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [6c52dec1-7727-4105-9521-7b140e4b9fe6] MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(9)): 6c52dec1-7727-4105-9521-7b140e4b9fe6 MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(9)#6c52dec1-7727-4105-9521-7b140e4b9fe6] : 1683169373 MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [21468.00] MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T15:51:54.770845] MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [LE VAN DAI RUT TIEN] MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-20250609155154feba46a7] MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T15:51:54.505223] MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [WITHDRAW] MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T15:52:11.861255] MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(9)#6c52dec1-7727-4105-9521-7b140e4b9fe6 MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@46d96ee MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [e1a28032-24bc-4730-afde-450cf41c6a55] MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(9)): e1a28032-24bc-4730-afde-450cf41c6a55 MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(9)#e1a28032-24bc-4730-afde-450cf41c6a55] : 241024999 MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [1111.00] MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T15:42:37.016815] MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [LE VAN DAI RUT TIEN] MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [Quá thời gian cho phép của giao dịch] MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-202506091542360c5ce231] MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [FAILED] MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T15:42:36.864547] MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [WITHDRAW] MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T15:45:40.653921] MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(9)#e1a28032-24bc-4730-afde-450cf41c6a55 MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@46d96ee MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [d98e555c-b698-4639-bf7b-5ffabdf1cd47] MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(9)): d98e555c-b698-4639-bf7b-5ffabdf1cd47 MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(9)#d98e555c-b698-4639-bf7b-5ffabdf1cd47] : 1726976548 MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [213213.00] MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T15:41:40.032707] MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [LE VAN DAI RUT TIEN] MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [Quá thời gian cho phép của giao dịch] MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-202506091541390ca83b6e] MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [FAILED] MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T15:41:39.710454] MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [WITHDRAW] MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T15:44:40.824344] MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(9)#d98e555c-b698-4639-bf7b-5ffabdf1cd47 MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@46d96ee MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(10))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3e85c466 MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(10).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@51e900ad MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(10).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-BasicResult
 MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(10)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.SQL - select count(t1_0.id) from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@3f44b302 MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [30] MDC:[traceId=, spanId=]
2025-06-10 22:59:04 [http-nio-8088-exec-4] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 22:59:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 22:59:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 22:59:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 22:59:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 22:59:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@19168102 MDC:[traceId=, spanId=]
2025-06-10 22:59:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 22:59:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@35bc0bb5 MDC:[traceId=, spanId=]
2025-06-10 22:59:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 22:59:17 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 22:59:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 22:59:17 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 22:59:17 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@94340694 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 22:59:17 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 22:59:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(11))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@18ff84bb MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(11).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3d090bf0 MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(11).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(11)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(11).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(11).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(11).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(11).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(11).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(11).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(11).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(11).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(11).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(11).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(11).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(11).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(11).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(11).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(11).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(11).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(11).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(11)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(11) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(11))@336801535 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) order by t1_0.timestamp desc limit ?,? MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [9335422e-e447-4244-a28a-3f44abc76551] MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(11)): 9335422e-e447-4244-a28a-3f44abc76551 MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(11)#9335422e-e447-4244-a28a-3f44abc76551] : 57111547 MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [100000.00] MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T16:04:45.540728] MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [LE VAN DAI RUT TIEN] MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [Nhập sai OTP quá 3 lần] MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-202506091604451762c0c7] MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [FAILED] MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T16:04:45.494744] MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [WITHDRAW] MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T16:04:50.731497] MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(11)#9335422e-e447-4244-a28a-3f44abc76551 MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@75501a2c MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [9d5cbb7d-f680-4d07-9ba5-a52ceefa6fe9] MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(11)): 9d5cbb7d-f680-4d07-9ba5-a52ceefa6fe9 MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(11)#9d5cbb7d-f680-4d07-9ba5-a52ceefa6fe9] : 186394177 MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [12222.00] MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T16:04:16.376253] MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [LE VAN DAI CHUYEN KHOAN] MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [Nhập sai OTP quá 3 lần] MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-202506091604163c6584bd] MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [FAILED] MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T16:04:16.055789] MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [27072000] MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T16:04:22.630816] MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(11)#9d5cbb7d-f680-4d07-9ba5-a52ceefa6fe9 MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@75501a2c MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [6c52dec1-7727-4105-9521-7b140e4b9fe6] MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(11)): 6c52dec1-7727-4105-9521-7b140e4b9fe6 MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(11)#6c52dec1-7727-4105-9521-7b140e4b9fe6] : 892577587 MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [21468.00] MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T15:51:54.770845] MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [LE VAN DAI RUT TIEN] MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-20250609155154feba46a7] MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T15:51:54.505223] MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [WITHDRAW] MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T15:52:11.861255] MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(11)#6c52dec1-7727-4105-9521-7b140e4b9fe6 MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@75501a2c MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [e1a28032-24bc-4730-afde-450cf41c6a55] MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(11)): e1a28032-24bc-4730-afde-450cf41c6a55 MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(11)#e1a28032-24bc-4730-afde-450cf41c6a55] : 234087109 MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [1111.00] MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T15:42:37.016815] MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [LE VAN DAI RUT TIEN] MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [Quá thời gian cho phép của giao dịch] MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-202506091542360c5ce231] MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [FAILED] MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T15:42:36.864547] MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [WITHDRAW] MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T15:45:40.653921] MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(11)#e1a28032-24bc-4730-afde-450cf41c6a55 MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@75501a2c MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [d98e555c-b698-4639-bf7b-5ffabdf1cd47] MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(11)): d98e555c-b698-4639-bf7b-5ffabdf1cd47 MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(11)#d98e555c-b698-4639-bf7b-5ffabdf1cd47] : 2013726765 MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [213213.00] MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T15:41:40.032707] MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [LE VAN DAI RUT TIEN] MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [Quá thời gian cho phép của giao dịch] MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-202506091541390ca83b6e] MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [FAILED] MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T15:41:39.710454] MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [WITHDRAW] MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T15:44:40.824344] MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(11)#d98e555c-b698-4639-bf7b-5ffabdf1cd47 MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@75501a2c MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(12))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1666fd40 MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(12).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@689ece4f MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(12).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-BasicResult
 MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(12)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.SQL - select count(t1_0.id) from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@48706df5 MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [30] MDC:[traceId=, spanId=]
2025-06-10 23:00:10 [http-nio-8088-exec-5] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 23:00:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 23:00:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 23:00:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 23:00:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 23:00:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@23a6b403 MDC:[traceId=, spanId=]
2025-06-10 23:00:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 23:00:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@44bf7729 MDC:[traceId=, spanId=]
2025-06-10 23:00:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 23:00:17 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 23:00:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 23:00:17 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 23:00:17 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1524599394 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 23:00:17 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 23:00:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 23:01:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 23:01:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 23:01:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 23:01:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 23:01:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@276d5ba7 MDC:[traceId=, spanId=]
2025-06-10 23:01:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 23:01:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@23f031ca MDC:[traceId=, spanId=]
2025-06-10 23:01:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 23:01:17 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 23:01:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 23:01:17 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 23:01:17 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1541544149 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 23:01:17 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 23:01:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 23:02:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 23:02:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 23:02:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 23:02:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 23:02:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1829ec0d MDC:[traceId=, spanId=]
2025-06-10 23:02:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 23:02:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@785229fc MDC:[traceId=, spanId=]
2025-06-10 23:02:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 23:02:17 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 23:02:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 23:02:17 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 23:02:17 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1649619640 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 23:02:17 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 23:02:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(13))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6edf0ecf MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(13).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6edd5c40 MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(13).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(13)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(13).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(13).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(13).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(13).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(13).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(13).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(13).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(13).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(13).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(13).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(13).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(13).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(13).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(13).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(13).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(13).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(13).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(13)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(13) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(13))@1694957157 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) order by t1_0.timestamp desc limit ?,? MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [9335422e-e447-4244-a28a-3f44abc76551] MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(13)): 9335422e-e447-4244-a28a-3f44abc76551 MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(13)#9335422e-e447-4244-a28a-3f44abc76551] : 1276519868 MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [100000.00] MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T16:04:45.540728] MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [LE VAN DAI RUT TIEN] MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [Nhập sai OTP quá 3 lần] MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-202506091604451762c0c7] MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [FAILED] MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T16:04:45.494744] MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [WITHDRAW] MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T16:04:50.731497] MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(13)#9335422e-e447-4244-a28a-3f44abc76551 MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1e310f8d MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [9d5cbb7d-f680-4d07-9ba5-a52ceefa6fe9] MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(13)): 9d5cbb7d-f680-4d07-9ba5-a52ceefa6fe9 MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(13)#9d5cbb7d-f680-4d07-9ba5-a52ceefa6fe9] : 11757060 MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [12222.00] MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T16:04:16.376253] MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [LE VAN DAI CHUYEN KHOAN] MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [Nhập sai OTP quá 3 lần] MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-202506091604163c6584bd] MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [FAILED] MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T16:04:16.055789] MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [27072000] MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T16:04:22.630816] MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(13)#9d5cbb7d-f680-4d07-9ba5-a52ceefa6fe9 MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1e310f8d MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [6c52dec1-7727-4105-9521-7b140e4b9fe6] MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(13)): 6c52dec1-7727-4105-9521-7b140e4b9fe6 MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(13)#6c52dec1-7727-4105-9521-7b140e4b9fe6] : 608453090 MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [21468.00] MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T15:51:54.770845] MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [LE VAN DAI RUT TIEN] MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-20250609155154feba46a7] MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T15:51:54.505223] MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [WITHDRAW] MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T15:52:11.861255] MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(13)#6c52dec1-7727-4105-9521-7b140e4b9fe6 MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1e310f8d MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [e1a28032-24bc-4730-afde-450cf41c6a55] MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(13)): e1a28032-24bc-4730-afde-450cf41c6a55 MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(13)#e1a28032-24bc-4730-afde-450cf41c6a55] : 1501739795 MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [1111.00] MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T15:42:37.016815] MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [LE VAN DAI RUT TIEN] MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [Quá thời gian cho phép của giao dịch] MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-202506091542360c5ce231] MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [FAILED] MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T15:42:36.864547] MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [WITHDRAW] MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T15:45:40.653921] MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(13)#e1a28032-24bc-4730-afde-450cf41c6a55 MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1e310f8d MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [d98e555c-b698-4639-bf7b-5ffabdf1cd47] MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(13)): d98e555c-b698-4639-bf7b-5ffabdf1cd47 MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(13)#d98e555c-b698-4639-bf7b-5ffabdf1cd47] : 1339656905 MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [213213.00] MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T15:41:40.032707] MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [LE VAN DAI RUT TIEN] MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [Quá thời gian cho phép của giao dịch] MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-202506091541390ca83b6e] MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [FAILED] MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T15:41:39.710454] MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [WITHDRAW] MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T15:44:40.824344] MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(13)#d98e555c-b698-4639-bf7b-5ffabdf1cd47 MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1e310f8d MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(14))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@30e75781 MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(14).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4a35523d MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(14).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-BasicResult
 MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(14)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.SQL - select count(t1_0.id) from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@22737580 MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [30] MDC:[traceId=, spanId=]
2025-06-10 23:02:55 [http-nio-8088-exec-3] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 23:03:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 23:03:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 23:03:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 23:03:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 23:03:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@74cc0cc0 MDC:[traceId=, spanId=]
2025-06-10 23:03:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 23:03:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4fbe12c8 MDC:[traceId=, spanId=]
2025-06-10 23:03:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 23:03:17 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 23:03:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 23:03:17 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 23:03:17 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@57898216 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 23:03:17 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 23:03:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(15))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@30061fea MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(15).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1099f22f MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(15).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(15)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(15).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(15).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(15).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(15).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(15).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(15).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(15).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(15).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(15).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(15).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(15).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(15).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(15).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(15).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(15).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(15).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(15).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(15)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(15) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(15))@1819746248 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) order by t1_0.timestamp desc limit ?,? MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [9335422e-e447-4244-a28a-3f44abc76551] MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(15)): 9335422e-e447-4244-a28a-3f44abc76551 MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(15)#9335422e-e447-4244-a28a-3f44abc76551] : 395698313 MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [100000.00] MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T16:04:45.540728] MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [LE VAN DAI RUT TIEN] MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [Nhập sai OTP quá 3 lần] MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-202506091604451762c0c7] MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [FAILED] MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T16:04:45.494744] MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [WITHDRAW] MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T16:04:50.731497] MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(15)#9335422e-e447-4244-a28a-3f44abc76551 MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@434834ec MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [9d5cbb7d-f680-4d07-9ba5-a52ceefa6fe9] MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(15)): 9d5cbb7d-f680-4d07-9ba5-a52ceefa6fe9 MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(15)#9d5cbb7d-f680-4d07-9ba5-a52ceefa6fe9] : 1695749022 MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [12222.00] MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T16:04:16.376253] MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [LE VAN DAI CHUYEN KHOAN] MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [Nhập sai OTP quá 3 lần] MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-202506091604163c6584bd] MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [FAILED] MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T16:04:16.055789] MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [27072000] MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T16:04:22.630816] MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(15)#9d5cbb7d-f680-4d07-9ba5-a52ceefa6fe9 MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@434834ec MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [6c52dec1-7727-4105-9521-7b140e4b9fe6] MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(15)): 6c52dec1-7727-4105-9521-7b140e4b9fe6 MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(15)#6c52dec1-7727-4105-9521-7b140e4b9fe6] : 792115336 MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [21468.00] MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T15:51:54.770845] MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [LE VAN DAI RUT TIEN] MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-20250609155154feba46a7] MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T15:51:54.505223] MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [WITHDRAW] MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T15:52:11.861255] MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(15)#6c52dec1-7727-4105-9521-7b140e4b9fe6 MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@434834ec MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [e1a28032-24bc-4730-afde-450cf41c6a55] MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(15)): e1a28032-24bc-4730-afde-450cf41c6a55 MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(15)#e1a28032-24bc-4730-afde-450cf41c6a55] : 387945551 MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [1111.00] MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T15:42:37.016815] MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [LE VAN DAI RUT TIEN] MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [Quá thời gian cho phép của giao dịch] MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-202506091542360c5ce231] MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [FAILED] MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T15:42:36.864547] MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [WITHDRAW] MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T15:45:40.653921] MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(15)#e1a28032-24bc-4730-afde-450cf41c6a55 MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@434834ec MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [d98e555c-b698-4639-bf7b-5ffabdf1cd47] MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(15)): d98e555c-b698-4639-bf7b-5ffabdf1cd47 MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(15)#d98e555c-b698-4639-bf7b-5ffabdf1cd47] : 368192788 MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [213213.00] MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T15:41:40.032707] MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [LE VAN DAI RUT TIEN] MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [Quá thời gian cho phép của giao dịch] MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-202506091541390ca83b6e] MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [FAILED] MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T15:41:39.710454] MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [WITHDRAW] MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T15:44:40.824344] MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(15)#d98e555c-b698-4639-bf7b-5ffabdf1cd47 MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@434834ec MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(16))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4239dc09 MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(16).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@526ae822 MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(16).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-BasicResult
 MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(16)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.SQL - select count(t1_0.id) from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@3eac7af0 MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [30] MDC:[traceId=, spanId=]
2025-06-10 23:03:18 [http-nio-8088-exec-8] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 23:04:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 23:04:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 23:04:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 23:04:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 23:04:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2bd22c5c MDC:[traceId=, spanId=]
2025-06-10 23:04:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 23:04:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@254e0d1 MDC:[traceId=, spanId=]
2025-06-10 23:04:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 23:04:17 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 23:04:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 23:04:17 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 23:04:17 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@998761192 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 23:04:17 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 23:04:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 23:05:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 23:05:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 23:05:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 23:05:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 23:05:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6320df8 MDC:[traceId=, spanId=]
2025-06-10 23:05:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 23:05:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@46a9e556 MDC:[traceId=, spanId=]
2025-06-10 23:05:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 23:05:17 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 23:05:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 23:05:17 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 23:05:17 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1694698459 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 23:05:17 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 23:05:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 23:06:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 23:06:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 23:06:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 23:06:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 23:06:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5b7fb880 MDC:[traceId=, spanId=]
2025-06-10 23:06:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 23:06:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1cdb205c MDC:[traceId=, spanId=]
2025-06-10 23:06:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 23:06:17 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 23:06:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 23:06:17 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 23:06:17 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@285434918 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 23:06:17 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 23:06:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 23:07:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 23:07:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 23:07:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 23:07:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 23:07:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@78ee216d MDC:[traceId=, spanId=]
2025-06-10 23:07:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 23:07:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@33ad68fa MDC:[traceId=, spanId=]
2025-06-10 23:07:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 23:07:17 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 23:07:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 23:07:17 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 23:07:17 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@17359106 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 23:07:17 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 23:07:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 23:08:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 23:08:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 23:08:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 23:08:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 23:08:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6ca98210 MDC:[traceId=, spanId=]
2025-06-10 23:08:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 23:08:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@59c85aca MDC:[traceId=, spanId=]
2025-06-10 23:08:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 23:08:17 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 23:08:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 23:08:17 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 23:08:17 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1164914356 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 23:08:17 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 23:08:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(17))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@51d5b296 MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(17).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@25befa5b MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(17).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(17)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(17).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(17).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(17).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(17).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(17).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(17).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(17).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(17).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(17).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(17).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(17).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(17).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(17).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(17).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(17).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(17).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(17).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(17)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(17) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(17))@2040601338 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) order by t1_0.timestamp desc limit ?,? MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [9335422e-e447-4244-a28a-3f44abc76551] MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(17)): 9335422e-e447-4244-a28a-3f44abc76551 MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(17)#9335422e-e447-4244-a28a-3f44abc76551] : 260420698 MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [100000.00] MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T16:04:45.540728] MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [LE VAN DAI RUT TIEN] MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [Nhập sai OTP quá 3 lần] MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-202506091604451762c0c7] MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [FAILED] MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T16:04:45.494744] MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [WITHDRAW] MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T16:04:50.731497] MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(17)#9335422e-e447-4244-a28a-3f44abc76551 MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7e02099a MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [9d5cbb7d-f680-4d07-9ba5-a52ceefa6fe9] MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(17)): 9d5cbb7d-f680-4d07-9ba5-a52ceefa6fe9 MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(17)#9d5cbb7d-f680-4d07-9ba5-a52ceefa6fe9] : 1006014164 MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [12222.00] MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T16:04:16.376253] MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [LE VAN DAI CHUYEN KHOAN] MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [Nhập sai OTP quá 3 lần] MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-202506091604163c6584bd] MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [FAILED] MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T16:04:16.055789] MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [27072000] MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T16:04:22.630816] MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(17)#9d5cbb7d-f680-4d07-9ba5-a52ceefa6fe9 MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7e02099a MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [6c52dec1-7727-4105-9521-7b140e4b9fe6] MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(17)): 6c52dec1-7727-4105-9521-7b140e4b9fe6 MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(17)#6c52dec1-7727-4105-9521-7b140e4b9fe6] : 1788084822 MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [21468.00] MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T15:51:54.770845] MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [LE VAN DAI RUT TIEN] MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-20250609155154feba46a7] MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T15:51:54.505223] MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [WITHDRAW] MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T15:52:11.861255] MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(17)#6c52dec1-7727-4105-9521-7b140e4b9fe6 MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7e02099a MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [e1a28032-24bc-4730-afde-450cf41c6a55] MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(17)): e1a28032-24bc-4730-afde-450cf41c6a55 MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(17)#e1a28032-24bc-4730-afde-450cf41c6a55] : 1217485882 MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [1111.00] MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T15:42:37.016815] MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [LE VAN DAI RUT TIEN] MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [Quá thời gian cho phép của giao dịch] MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-202506091542360c5ce231] MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [FAILED] MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T15:42:36.864547] MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [WITHDRAW] MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T15:45:40.653921] MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(17)#e1a28032-24bc-4730-afde-450cf41c6a55 MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7e02099a MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [d98e555c-b698-4639-bf7b-5ffabdf1cd47] MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(17)): d98e555c-b698-4639-bf7b-5ffabdf1cd47 MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(17)#d98e555c-b698-4639-bf7b-5ffabdf1cd47] : 640799339 MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [213213.00] MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T15:41:40.032707] MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [LE VAN DAI RUT TIEN] MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [Quá thời gian cho phép của giao dịch] MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-202506091541390ca83b6e] MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [FAILED] MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T15:41:39.710454] MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [WITHDRAW] MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T15:44:40.824344] MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(17)#d98e555c-b698-4639-bf7b-5ffabdf1cd47 MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7e02099a MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(18))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1708b520 MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(18).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@17f4afc8 MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(18).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-BasicResult
 MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(18)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.SQL - select count(t1_0.id) from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@4c278ce0 MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [30] MDC:[traceId=, spanId=]
2025-06-10 23:09:00 [http-nio-8088-exec-10] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 23:09:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 23:09:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 23:09:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 23:09:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 23:09:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7d6b88bb MDC:[traceId=, spanId=]
2025-06-10 23:09:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 23:09:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2e3cd83a MDC:[traceId=, spanId=]
2025-06-10 23:09:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 23:09:17 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 23:09:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 23:09:17 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 23:09:17 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@203238442 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 23:09:17 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 23:09:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(19))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4dfdbdbb MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(19).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@48aadc55 MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(19).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(19)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(19).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(19).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(19).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(19).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(19).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(19).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(19).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(19).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(19).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(19).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(19).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(19).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(19).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(19).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(19).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(19).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(19).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(19)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(19) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(19))@1505389798 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) order by t1_0.timestamp desc limit ?,? MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [9335422e-e447-4244-a28a-3f44abc76551] MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(19)): 9335422e-e447-4244-a28a-3f44abc76551 MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(19)#9335422e-e447-4244-a28a-3f44abc76551] : 1275505960 MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [100000.00] MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T16:04:45.540728] MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [LE VAN DAI RUT TIEN] MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [Nhập sai OTP quá 3 lần] MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-202506091604451762c0c7] MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [FAILED] MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T16:04:45.494744] MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [WITHDRAW] MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T16:04:50.731497] MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(19)#9335422e-e447-4244-a28a-3f44abc76551 MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@46d13512 MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [9d5cbb7d-f680-4d07-9ba5-a52ceefa6fe9] MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(19)): 9d5cbb7d-f680-4d07-9ba5-a52ceefa6fe9 MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(19)#9d5cbb7d-f680-4d07-9ba5-a52ceefa6fe9] : 1863457019 MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [12222.00] MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T16:04:16.376253] MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [LE VAN DAI CHUYEN KHOAN] MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [Nhập sai OTP quá 3 lần] MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-202506091604163c6584bd] MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [FAILED] MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T16:04:16.055789] MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [27072000] MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T16:04:22.630816] MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(19)#9d5cbb7d-f680-4d07-9ba5-a52ceefa6fe9 MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@46d13512 MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [6c52dec1-7727-4105-9521-7b140e4b9fe6] MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(19)): 6c52dec1-7727-4105-9521-7b140e4b9fe6 MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(19)#6c52dec1-7727-4105-9521-7b140e4b9fe6] : 735366995 MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [21468.00] MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T15:51:54.770845] MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [LE VAN DAI RUT TIEN] MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-20250609155154feba46a7] MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T15:51:54.505223] MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [WITHDRAW] MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T15:52:11.861255] MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(19)#6c52dec1-7727-4105-9521-7b140e4b9fe6 MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@46d13512 MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [e1a28032-24bc-4730-afde-450cf41c6a55] MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(19)): e1a28032-24bc-4730-afde-450cf41c6a55 MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(19)#e1a28032-24bc-4730-afde-450cf41c6a55] : 1380079852 MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [1111.00] MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T15:42:37.016815] MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [LE VAN DAI RUT TIEN] MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [Quá thời gian cho phép của giao dịch] MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-202506091542360c5ce231] MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [FAILED] MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T15:42:36.864547] MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [WITHDRAW] MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T15:45:40.653921] MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(19)#e1a28032-24bc-4730-afde-450cf41c6a55 MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@46d13512 MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [d98e555c-b698-4639-bf7b-5ffabdf1cd47] MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(19)): d98e555c-b698-4639-bf7b-5ffabdf1cd47 MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(19)#d98e555c-b698-4639-bf7b-5ffabdf1cd47] : 494177811 MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [213213.00] MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T15:41:40.032707] MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [LE VAN DAI RUT TIEN] MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [Quá thời gian cho phép của giao dịch] MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-202506091541390ca83b6e] MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [FAILED] MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T15:41:39.710454] MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [WITHDRAW] MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T15:44:40.824344] MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(19)#d98e555c-b698-4639-bf7b-5ffabdf1cd47 MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@46d13512 MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(20))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@58586a4b MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(20).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@35e817bf MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(20).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-BasicResult
 MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(20)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.SQL - select count(t1_0.id) from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@f7f6272 MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [30] MDC:[traceId=, spanId=]
2025-06-10 23:09:57 [http-nio-8088-exec-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 23:10:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 23:10:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 23:10:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 23:10:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 23:10:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4fec61dc MDC:[traceId=, spanId=]
2025-06-10 23:10:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 23:10:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2cf91eac MDC:[traceId=, spanId=]
2025-06-10 23:10:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 23:10:17 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 23:10:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 23:10:17 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 23:10:17 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1452181276 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 23:10:17 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 23:10:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(21))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@cd5a278 MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(21).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5de58228 MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(21).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(21)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(21).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(21).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(21).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(21).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(21).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(21).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(21).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(21).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(21).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(21).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(21).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(21).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(21).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(21).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(21).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(21).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(21).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(21)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(21) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(21))@36441006 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) order by t1_0.timestamp desc limit ?,? MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [9335422e-e447-4244-a28a-3f44abc76551] MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(21)): 9335422e-e447-4244-a28a-3f44abc76551 MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(21)#9335422e-e447-4244-a28a-3f44abc76551] : 44486217 MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [100000.00] MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T16:04:45.540728] MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [LE VAN DAI RUT TIEN] MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [Nhập sai OTP quá 3 lần] MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-202506091604451762c0c7] MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [FAILED] MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T16:04:45.494744] MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [WITHDRAW] MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T16:04:50.731497] MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(21)#9335422e-e447-4244-a28a-3f44abc76551 MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6035c4c8 MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [9d5cbb7d-f680-4d07-9ba5-a52ceefa6fe9] MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(21)): 9d5cbb7d-f680-4d07-9ba5-a52ceefa6fe9 MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(21)#9d5cbb7d-f680-4d07-9ba5-a52ceefa6fe9] : 551399842 MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [12222.00] MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T16:04:16.376253] MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [LE VAN DAI CHUYEN KHOAN] MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [Nhập sai OTP quá 3 lần] MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-202506091604163c6584bd] MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [FAILED] MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T16:04:16.055789] MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [27072000] MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T16:04:22.630816] MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(21)#9d5cbb7d-f680-4d07-9ba5-a52ceefa6fe9 MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6035c4c8 MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [6c52dec1-7727-4105-9521-7b140e4b9fe6] MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(21)): 6c52dec1-7727-4105-9521-7b140e4b9fe6 MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(21)#6c52dec1-7727-4105-9521-7b140e4b9fe6] : 870747551 MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [21468.00] MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T15:51:54.770845] MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [LE VAN DAI RUT TIEN] MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-20250609155154feba46a7] MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T15:51:54.505223] MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [WITHDRAW] MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T15:52:11.861255] MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(21)#6c52dec1-7727-4105-9521-7b140e4b9fe6 MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6035c4c8 MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [e1a28032-24bc-4730-afde-450cf41c6a55] MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(21)): e1a28032-24bc-4730-afde-450cf41c6a55 MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(21)#e1a28032-24bc-4730-afde-450cf41c6a55] : 117885228 MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [1111.00] MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T15:42:37.016815] MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [LE VAN DAI RUT TIEN] MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [Quá thời gian cho phép của giao dịch] MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-202506091542360c5ce231] MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [FAILED] MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T15:42:36.864547] MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [WITHDRAW] MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T15:45:40.653921] MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(21)#e1a28032-24bc-4730-afde-450cf41c6a55 MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6035c4c8 MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [d98e555c-b698-4639-bf7b-5ffabdf1cd47] MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(21)): d98e555c-b698-4639-bf7b-5ffabdf1cd47 MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(21)#d98e555c-b698-4639-bf7b-5ffabdf1cd47] : 1230720640 MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [213213.00] MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T15:41:40.032707] MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [LE VAN DAI RUT TIEN] MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [Quá thời gian cho phép của giao dịch] MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-202506091541390ca83b6e] MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [FAILED] MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T15:41:39.710454] MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [WITHDRAW] MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T15:44:40.824344] MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(21)#d98e555c-b698-4639-bf7b-5ffabdf1cd47 MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6035c4c8 MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(22))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@45b981fa MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(22).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1bd468ad MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(22).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-BasicResult
 MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(22)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.SQL - select count(t1_0.id) from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@2201158 MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [30] MDC:[traceId=, spanId=]
2025-06-10 23:10:20 [http-nio-8088-exec-2] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(23))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6e9aff50 MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(23).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@62b63e9d MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(23).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(23)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(23).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(23).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(23).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(23).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(23).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(23).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(23).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(23).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(23).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(23).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(23).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(23).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(23).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(23).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(23).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(23).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(23).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(23)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(23) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(23))@878102050 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) order by t1_0.timestamp desc limit ?,? MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [9335422e-e447-4244-a28a-3f44abc76551] MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(23)): 9335422e-e447-4244-a28a-3f44abc76551 MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(23)#9335422e-e447-4244-a28a-3f44abc76551] : 1256827884 MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [100000.00] MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T16:04:45.540728] MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [LE VAN DAI RUT TIEN] MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [Nhập sai OTP quá 3 lần] MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-202506091604451762c0c7] MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [FAILED] MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T16:04:45.494744] MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [WITHDRAW] MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T16:04:50.731497] MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(23)#9335422e-e447-4244-a28a-3f44abc76551 MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@488c0345 MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [9d5cbb7d-f680-4d07-9ba5-a52ceefa6fe9] MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(23)): 9d5cbb7d-f680-4d07-9ba5-a52ceefa6fe9 MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(23)#9d5cbb7d-f680-4d07-9ba5-a52ceefa6fe9] : 26887036 MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [12222.00] MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T16:04:16.376253] MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [LE VAN DAI CHUYEN KHOAN] MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [Nhập sai OTP quá 3 lần] MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-202506091604163c6584bd] MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [FAILED] MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T16:04:16.055789] MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [27072000] MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T16:04:22.630816] MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(23)#9d5cbb7d-f680-4d07-9ba5-a52ceefa6fe9 MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@488c0345 MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [6c52dec1-7727-4105-9521-7b140e4b9fe6] MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(23)): 6c52dec1-7727-4105-9521-7b140e4b9fe6 MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(23)#6c52dec1-7727-4105-9521-7b140e4b9fe6] : 192779861 MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [21468.00] MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T15:51:54.770845] MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [LE VAN DAI RUT TIEN] MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-20250609155154feba46a7] MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T15:51:54.505223] MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [WITHDRAW] MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T15:52:11.861255] MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(23)#6c52dec1-7727-4105-9521-7b140e4b9fe6 MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@488c0345 MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [e1a28032-24bc-4730-afde-450cf41c6a55] MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(23)): e1a28032-24bc-4730-afde-450cf41c6a55 MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(23)#e1a28032-24bc-4730-afde-450cf41c6a55] : 206367261 MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [1111.00] MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T15:42:37.016815] MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [LE VAN DAI RUT TIEN] MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [Quá thời gian cho phép của giao dịch] MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-202506091542360c5ce231] MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [FAILED] MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T15:42:36.864547] MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [WITHDRAW] MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T15:45:40.653921] MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(23)#e1a28032-24bc-4730-afde-450cf41c6a55 MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@488c0345 MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [d98e555c-b698-4639-bf7b-5ffabdf1cd47] MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(23)): d98e555c-b698-4639-bf7b-5ffabdf1cd47 MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(23)#d98e555c-b698-4639-bf7b-5ffabdf1cd47] : 611469050 MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [213213.00] MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T15:41:40.032707] MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [LE VAN DAI RUT TIEN] MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [Quá thời gian cho phép của giao dịch] MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-202506091541390ca83b6e] MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [FAILED] MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T15:41:39.710454] MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [WITHDRAW] MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T15:44:40.824344] MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(23)#d98e555c-b698-4639-bf7b-5ffabdf1cd47 MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@488c0345 MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(24))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@302465fe MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(24).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@810b616 MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(24).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-BasicResult
 MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(24)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.SQL - select count(t1_0.id) from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@57eb82e2 MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [30] MDC:[traceId=, spanId=]
2025-06-10 23:10:44 [http-nio-8088-exec-4] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 23:11:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 23:11:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 23:11:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 23:11:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 23:11:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@69e18dca MDC:[traceId=, spanId=]
2025-06-10 23:11:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 23:11:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@78d8096 MDC:[traceId=, spanId=]
2025-06-10 23:11:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 23:11:17 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 23:11:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 23:11:17 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 23:11:17 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@32878015 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 23:11:17 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 23:11:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 23:11:39 [http-nio-8088-exec-7] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 23:11:39 [http-nio-8088-exec-7] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 23:11:39 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 23:11:39 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(25))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 23:11:39 [http-nio-8088-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@39ab1468 MDC:[traceId=, spanId=]
2025-06-10 23:11:39 [http-nio-8088-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(25).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 23:11:39 [http-nio-8088-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5e3b4b4d MDC:[traceId=, spanId=]
2025-06-10 23:11:39 [http-nio-8088-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(25).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 23:11:39 [http-nio-8088-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1e1f1c95 MDC:[traceId=, spanId=]
2025-06-10 23:11:39 [http-nio-8088-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(25).currency)  MDC:[traceId=, spanId=]
2025-06-10 23:11:39 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(25)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(25).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(25).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(25).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(25).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(25).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(25).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(25).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(25).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(25).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(25).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(25).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(25).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(25).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(25).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(25).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(25).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(25).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 23:11:39 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(25)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 23:11:39 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 23:11:39 [http-nio-8088-exec-7] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(25) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(25))@1469570650 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 23:11:39 [http-nio-8088-exec-7] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) and t1_0.currency=? order by t1_0.timestamp desc limit ?,? MDC:[traceId=, spanId=]
2025-06-10 23:11:39 [http-nio-8088-exec-7] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(26))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@e3f4eb6 MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(26).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7fc2ac91 MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(26).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@62263377 MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(26).currency)  MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(26)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(26).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(26).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(26).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(26).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(26).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(26).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(26).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(26).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(26).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(26).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(26).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(26).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(26).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(26).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(26).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(26).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(26).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(26)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(26) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(26))@327862278 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) and t1_0.currency=? order by t1_0.timestamp desc limit ?,? MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [9335422e-e447-4244-a28a-3f44abc76551] MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(26)): 9335422e-e447-4244-a28a-3f44abc76551 MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(26)#9335422e-e447-4244-a28a-3f44abc76551] : 22310489 MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [100000.00] MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T16:04:45.540728] MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [LE VAN DAI RUT TIEN] MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [Nhập sai OTP quá 3 lần] MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-202506091604451762c0c7] MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [FAILED] MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T16:04:45.494744] MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [WITHDRAW] MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T16:04:50.731497] MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(26)#9335422e-e447-4244-a28a-3f44abc76551 MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@445b4c8d MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [9d5cbb7d-f680-4d07-9ba5-a52ceefa6fe9] MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(26)): 9d5cbb7d-f680-4d07-9ba5-a52ceefa6fe9 MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(26)#9d5cbb7d-f680-4d07-9ba5-a52ceefa6fe9] : 1698106069 MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [12222.00] MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T16:04:16.376253] MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [LE VAN DAI CHUYEN KHOAN] MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [Nhập sai OTP quá 3 lần] MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-202506091604163c6584bd] MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [FAILED] MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T16:04:16.055789] MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [27072000] MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T16:04:22.630816] MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(26)#9d5cbb7d-f680-4d07-9ba5-a52ceefa6fe9 MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@445b4c8d MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [6c52dec1-7727-4105-9521-7b140e4b9fe6] MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(26)): 6c52dec1-7727-4105-9521-7b140e4b9fe6 MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(26)#6c52dec1-7727-4105-9521-7b140e4b9fe6] : 2025093645 MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [21468.00] MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T15:51:54.770845] MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [LE VAN DAI RUT TIEN] MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-20250609155154feba46a7] MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T15:51:54.505223] MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [WITHDRAW] MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T15:52:11.861255] MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(26)#6c52dec1-7727-4105-9521-7b140e4b9fe6 MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@445b4c8d MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [e1a28032-24bc-4730-afde-450cf41c6a55] MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(26)): e1a28032-24bc-4730-afde-450cf41c6a55 MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(26)#e1a28032-24bc-4730-afde-450cf41c6a55] : 1521546724 MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [1111.00] MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T15:42:37.016815] MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [LE VAN DAI RUT TIEN] MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [Quá thời gian cho phép của giao dịch] MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-202506091542360c5ce231] MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [FAILED] MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T15:42:36.864547] MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [WITHDRAW] MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T15:45:40.653921] MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(26)#e1a28032-24bc-4730-afde-450cf41c6a55 MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@445b4c8d MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [d98e555c-b698-4639-bf7b-5ffabdf1cd47] MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(26)): d98e555c-b698-4639-bf7b-5ffabdf1cd47 MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(26)#d98e555c-b698-4639-bf7b-5ffabdf1cd47] : 1142023451 MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [213213.00] MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T15:41:40.032707] MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [LE VAN DAI RUT TIEN] MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [Quá thời gian cho phép của giao dịch] MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-202506091541390ca83b6e] MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [FAILED] MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T15:41:39.710454] MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [WITHDRAW] MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T15:44:40.824344] MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(26)#d98e555c-b698-4639-bf7b-5ffabdf1cd47 MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@445b4c8d MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(27))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@44975985 MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(27).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5ed92cfa MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(27).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@f861f2 MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(27).currency)  MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-BasicResult
 MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(27)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.SQL - select count(t1_0.id) from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) and t1_0.currency=? MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@76544c85 MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [30] MDC:[traceId=, spanId=]
2025-06-10 23:11:43 [http-nio-8088-exec-5] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 23:12:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 23:12:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 23:12:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 23:12:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 23:12:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1fef316a MDC:[traceId=, spanId=]
2025-06-10 23:12:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 23:12:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@a695b31 MDC:[traceId=, spanId=]
2025-06-10 23:12:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 23:12:17 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 23:12:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 23:12:17 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 23:12:17 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@688205008 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 23:12:17 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 23:12:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 23:13:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 23:13:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 23:13:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 23:13:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 23:13:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7245a1f6 MDC:[traceId=, spanId=]
2025-06-10 23:13:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 23:13:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5de28020 MDC:[traceId=, spanId=]
2025-06-10 23:13:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 23:13:17 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 23:13:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 23:13:17 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 23:13:17 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1040367277 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 23:13:17 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 23:13:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 23:14:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 23:14:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 23:14:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 23:14:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 23:14:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6c1ab367 MDC:[traceId=, spanId=]
2025-06-10 23:14:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 23:14:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5706e7c2 MDC:[traceId=, spanId=]
2025-06-10 23:14:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 23:14:17 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 23:14:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 23:14:17 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 23:14:17 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@246537947 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 23:14:17 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 23:14:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 23:15:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 23:15:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 23:15:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 23:15:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 23:15:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4ea2f361 MDC:[traceId=, spanId=]
2025-06-10 23:15:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 23:15:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@58d56b7e MDC:[traceId=, spanId=]
2025-06-10 23:15:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 23:15:17 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 23:15:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 23:15:17 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 23:15:17 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@540899287 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 23:15:17 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 23:15:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 23:16:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 23:16:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 23:16:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 23:16:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 23:16:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3036b9e7 MDC:[traceId=, spanId=]
2025-06-10 23:16:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 23:16:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@69806e5c MDC:[traceId=, spanId=]
2025-06-10 23:16:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 23:16:17 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 23:16:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 23:16:17 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 23:16:17 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1200343790 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 23:16:17 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 23:16:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 23:17:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 23:17:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 23:17:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 23:17:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 23:17:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@50caa2c1 MDC:[traceId=, spanId=]
2025-06-10 23:17:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 23:17:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@c450686 MDC:[traceId=, spanId=]
2025-06-10 23:17:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 23:17:17 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 23:17:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 23:17:17 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 23:17:17 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1663272737 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 23:17:17 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 23:17:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 23:18:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 23:18:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 23:18:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 23:18:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 23:18:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7247f6a3 MDC:[traceId=, spanId=]
2025-06-10 23:18:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 23:18:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@177d9cbd MDC:[traceId=, spanId=]
2025-06-10 23:18:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 23:18:17 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 23:18:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 23:18:17 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 23:18:17 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1961258034 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 23:18:17 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 23:18:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(28))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2cb7fd4c MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(28).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@68650e16 MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(28).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(28)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(28).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(28).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(28).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(28).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(28).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(28).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(28).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(28).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(28).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(28).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(28).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(28).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(28).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(28).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(28).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(28).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(28).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(28)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(28) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(28))@1123551969 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) order by t1_0.timestamp desc limit ?,? MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [9335422e-e447-4244-a28a-3f44abc76551] MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(28)): 9335422e-e447-4244-a28a-3f44abc76551 MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(28)#9335422e-e447-4244-a28a-3f44abc76551] : 52741753 MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [100000.00] MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T16:04:45.540728] MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [LE VAN DAI RUT TIEN] MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [Nhập sai OTP quá 3 lần] MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-202506091604451762c0c7] MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [FAILED] MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T16:04:45.494744] MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [WITHDRAW] MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T16:04:50.731497] MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(28)#9335422e-e447-4244-a28a-3f44abc76551 MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1896bfe MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [9d5cbb7d-f680-4d07-9ba5-a52ceefa6fe9] MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(28)): 9d5cbb7d-f680-4d07-9ba5-a52ceefa6fe9 MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(28)#9d5cbb7d-f680-4d07-9ba5-a52ceefa6fe9] : 1482394518 MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [12222.00] MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T16:04:16.376253] MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [LE VAN DAI CHUYEN KHOAN] MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [Nhập sai OTP quá 3 lần] MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-202506091604163c6584bd] MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [FAILED] MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T16:04:16.055789] MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [27072000] MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T16:04:22.630816] MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(28)#9d5cbb7d-f680-4d07-9ba5-a52ceefa6fe9 MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1896bfe MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [6c52dec1-7727-4105-9521-7b140e4b9fe6] MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(28)): 6c52dec1-7727-4105-9521-7b140e4b9fe6 MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(28)#6c52dec1-7727-4105-9521-7b140e4b9fe6] : 580951782 MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [21468.00] MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T15:51:54.770845] MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [LE VAN DAI RUT TIEN] MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-20250609155154feba46a7] MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T15:51:54.505223] MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [WITHDRAW] MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T15:52:11.861255] MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(28)#6c52dec1-7727-4105-9521-7b140e4b9fe6 MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1896bfe MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [e1a28032-24bc-4730-afde-450cf41c6a55] MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(28)): e1a28032-24bc-4730-afde-450cf41c6a55 MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(28)#e1a28032-24bc-4730-afde-450cf41c6a55] : 127042501 MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [1111.00] MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T15:42:37.016815] MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [LE VAN DAI RUT TIEN] MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [Quá thời gian cho phép của giao dịch] MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-202506091542360c5ce231] MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [FAILED] MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T15:42:36.864547] MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [WITHDRAW] MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T15:45:40.653921] MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(28)#e1a28032-24bc-4730-afde-450cf41c6a55 MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1896bfe MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [d98e555c-b698-4639-bf7b-5ffabdf1cd47] MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(28)): d98e555c-b698-4639-bf7b-5ffabdf1cd47 MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(28)#d98e555c-b698-4639-bf7b-5ffabdf1cd47] : 1292815954 MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [213213.00] MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T15:41:40.032707] MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [LE VAN DAI RUT TIEN] MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [Quá thời gian cho phép của giao dịch] MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-202506091541390ca83b6e] MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [FAILED] MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T15:41:39.710454] MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [970452999999999] MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [WITHDRAW] MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T15:44:40.824344] MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(28)#d98e555c-b698-4639-bf7b-5ffabdf1cd47 MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1896bfe MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(29))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@695b62f0 MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(29).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6d85f1f9 MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(29).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-BasicResult
 MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(29)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.SQL - select count(t1_0.id) from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@531ab8e MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [30] MDC:[traceId=, spanId=]
2025-06-10 23:18:21 [http-nio-8088-exec-3] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 23:19:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 23:19:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 23:19:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 23:19:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 23:19:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@46c3dc4d MDC:[traceId=, spanId=]
2025-06-10 23:19:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 23:19:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3de08aae MDC:[traceId=, spanId=]
2025-06-10 23:19:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 23:19:17 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 23:19:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 23:19:17 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 23:19:17 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@233477336 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 23:19:17 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 23:19:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 23:20:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 23:20:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 23:20:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 23:20:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 23:20:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5e21c14a MDC:[traceId=, spanId=]
2025-06-10 23:20:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 23:20:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1cb71741 MDC:[traceId=, spanId=]
2025-06-10 23:20:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 23:20:17 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 23:20:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 23:20:17 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 23:20:17 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@135444871 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 23:20:17 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 23:20:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 23:21:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 23:21:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 23:21:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 23:21:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 23:21:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@240f2183 MDC:[traceId=, spanId=]
2025-06-10 23:21:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 23:21:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@10fd1926 MDC:[traceId=, spanId=]
2025-06-10 23:21:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 23:21:17 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 23:21:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 23:21:17 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 23:21:17 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@68291244 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 23:21:17 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 23:21:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 23:22:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 23:22:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 23:22:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 23:22:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 23:22:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1ab563ff MDC:[traceId=, spanId=]
2025-06-10 23:22:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 23:22:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3c8b6fbd MDC:[traceId=, spanId=]
2025-06-10 23:22:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 23:22:17 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 23:22:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 23:22:17 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 23:22:17 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@2025661706 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 23:22:17 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 23:22:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 23:23:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 23:23:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 23:23:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 23:23:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 23:23:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3829893 MDC:[traceId=, spanId=]
2025-06-10 23:23:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 23:23:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7ebb56f4 MDC:[traceId=, spanId=]
2025-06-10 23:23:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 23:23:17 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 23:23:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 23:23:17 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 23:23:17 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1336793571 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 23:23:17 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 23:23:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 23:24:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 23:24:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 23:24:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 23:24:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 23:24:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1b0c1cfc MDC:[traceId=, spanId=]
2025-06-10 23:24:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 23:24:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@61e26807 MDC:[traceId=, spanId=]
2025-06-10 23:24:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 23:24:17 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 23:24:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 23:24:17 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 23:24:17 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@881650686 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 23:24:17 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 23:24:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 23:25:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 23:25:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 23:25:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 23:25:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 23:25:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@66b42c87 MDC:[traceId=, spanId=]
2025-06-10 23:25:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 23:25:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@79d54a43 MDC:[traceId=, spanId=]
2025-06-10 23:25:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 23:25:17 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 23:25:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 23:25:17 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 23:25:17 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1106222573 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 23:25:17 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 23:25:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 23:26:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 23:26:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 23:26:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 23:26:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 23:26:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2592bee6 MDC:[traceId=, spanId=]
2025-06-10 23:26:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 23:26:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4675c8b6 MDC:[traceId=, spanId=]
2025-06-10 23:26:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 23:26:17 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 23:26:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 23:26:17 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 23:26:17 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1695570744 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 23:26:17 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 23:26:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 23:27:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 23:27:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 23:27:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 23:27:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 23:27:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7e0a154d MDC:[traceId=, spanId=]
2025-06-10 23:27:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 23:27:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3a0d90a7 MDC:[traceId=, spanId=]
2025-06-10 23:27:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 23:27:17 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 23:27:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 23:27:17 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 23:27:17 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@921375145 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 23:27:17 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 23:27:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 23:28:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 23:28:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 23:28:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 23:28:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 23:28:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@627f483d MDC:[traceId=, spanId=]
2025-06-10 23:28:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 23:28:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@793dc17 MDC:[traceId=, spanId=]
2025-06-10 23:28:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 23:28:17 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 23:28:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 23:28:17 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 23:28:17 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1088770432 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 23:28:17 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 23:28:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 23:29:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 23:29:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 23:29:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 23:29:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 23:29:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3893b1e7 MDC:[traceId=, spanId=]
2025-06-10 23:29:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 23:29:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@31a47e8f MDC:[traceId=, spanId=]
2025-06-10 23:29:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 23:29:17 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 23:29:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 23:29:17 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 23:29:17 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1082714129 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 23:29:17 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 23:29:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 23:30:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 23:30:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 23:30:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 23:30:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 23:30:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@671730cb MDC:[traceId=, spanId=]
2025-06-10 23:30:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 23:30:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@49528088 MDC:[traceId=, spanId=]
2025-06-10 23:30:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 23:30:17 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 23:30:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 23:30:17 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 23:30:17 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@398782468 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 23:30:17 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 23:30:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 23:31:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 23:31:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 23:31:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 23:31:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 23:31:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@79bd2e34 MDC:[traceId=, spanId=]
2025-06-10 23:31:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 23:31:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@63fdd7a0 MDC:[traceId=, spanId=]
2025-06-10 23:31:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 23:31:17 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 23:31:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 23:31:17 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 23:31:17 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@2022891487 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 23:31:17 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 23:31:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 23:32:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 23:32:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 23:32:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 23:32:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 23:32:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3a0b60 MDC:[traceId=, spanId=]
2025-06-10 23:32:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 23:32:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2ff47a8b MDC:[traceId=, spanId=]
2025-06-10 23:32:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 23:32:17 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 23:32:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 23:32:17 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 23:32:17 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@2045550203 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 23:32:17 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 23:32:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 23:33:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 23:33:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 23:33:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 23:33:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 23:33:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4a5b301a MDC:[traceId=, spanId=]
2025-06-10 23:33:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 23:33:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6d0163fe MDC:[traceId=, spanId=]
2025-06-10 23:33:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 23:33:17 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 23:33:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 23:33:17 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 23:33:17 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@2111432940 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 23:33:17 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 23:33:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 23:34:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 23:34:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 23:34:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 23:34:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 23:34:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@19d8d768 MDC:[traceId=, spanId=]
2025-06-10 23:34:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 23:34:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2a5856ac MDC:[traceId=, spanId=]
2025-06-10 23:34:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 23:34:17 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 23:34:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 23:34:17 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 23:34:17 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1061153900 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 23:34:17 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 23:34:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 23:35:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 23:35:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 23:35:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 23:35:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 23:35:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@20e87a68 MDC:[traceId=, spanId=]
2025-06-10 23:35:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 23:35:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1eb3bb9 MDC:[traceId=, spanId=]
2025-06-10 23:35:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 23:35:17 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 23:35:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 23:35:17 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 23:35:17 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@527932244 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 23:35:17 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 23:35:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 23:36:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 23:36:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 23:36:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 23:36:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 23:36:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5ae1ce57 MDC:[traceId=, spanId=]
2025-06-10 23:36:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 23:36:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5758308e MDC:[traceId=, spanId=]
2025-06-10 23:36:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 23:36:17 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 23:36:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 23:36:17 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 23:36:17 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1428031 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 23:36:17 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 23:36:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 23:37:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 23:37:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 23:37:18 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 23:37:18 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 23:37:18 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@60193151 MDC:[traceId=, spanId=]
2025-06-10 23:37:18 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 23:37:18 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@65d34592 MDC:[traceId=, spanId=]
2025-06-10 23:37:18 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 23:37:18 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 23:37:18 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 23:37:18 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 23:37:18 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1223903871 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 23:37:18 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 23:37:18 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 23:38:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 23:38:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 23:38:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 23:38:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 23:38:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7c7136d7 MDC:[traceId=, spanId=]
2025-06-10 23:38:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 23:38:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@69a23646 MDC:[traceId=, spanId=]
2025-06-10 23:38:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 23:38:17 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 23:38:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 23:38:17 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 23:38:17 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@74445114 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 23:38:17 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 23:38:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 23:39:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 23:39:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 23:39:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 23:39:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 23:39:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5cf004c0 MDC:[traceId=, spanId=]
2025-06-10 23:39:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 23:39:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4004ad7f MDC:[traceId=, spanId=]
2025-06-10 23:39:17 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 23:39:17 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 23:39:17 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 23:39:17 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 23:39:17 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@561865087 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 23:39:17 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 23:39:17 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 23:40:04 [SpringContextShutdownHook] DEBUG o.h.internal.SessionFactoryImpl - HHH000031: Closing MDC:[traceId=, spanId=]
2025-06-10 23:40:04 [SpringContextShutdownHook] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@1687c0af] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@4fb88d1c] MDC:[traceId=, spanId=]
2025-06-10 23:40:04 [SpringContextShutdownHook] DEBUG o.h.s.i.AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries MDC:[traceId=, spanId=]
2025-06-10 23:40:04 [SpringContextShutdownHook] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries MDC:[traceId=, spanId=]
2025-06-10 23:40:20 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final MDC:[traceId=, spanId=]
2025-06-10 23:40:20 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-06-10 23:40:20 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-06-10 23:40:20 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-06-10 23:40:20 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-06-10 23:40:20 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-06-10 23:40:20 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-06-10 23:40:20 [background-preinit] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-06-10 23:40:20 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-06-10 23:40:20 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-06-10 23:40:20 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-06-10 23:40:20 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-06-10 23:40:20 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-06-10 23:40:20 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.h.jpa.internal.util.LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@75e44db0
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/LT_Web/SpringBoot/java-banking-phase2/backend/transaction-service/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.example.transaction_service.entity.Transaction]
	Mapping files names []
	Properties [] MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator]. MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator]. MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG org.hibernate.cfg.Environment - HHH000206: 'hibernate.properties' not found MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator] MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator] MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator] MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator] MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned] MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator] MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator] MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator] MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator] MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator] MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.h.c.i.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@40878235 MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@40878235 MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@40878235 MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@33dec4a1 MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@33dec4a1 MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@604ed95f MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@604ed95f MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@2715ee1a MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@2715ee1a MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@5bff46e7 MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@5bff46e7 MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@5bff46e7 MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@1ec16af5 MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@1ec16af5 MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@1ec16af5 MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@853cc53 MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@853cc53 MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@3e967d MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@21d720e3 MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@21d720e3 MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@345470ee MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@22f31363 MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@568af43e MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@568af43e MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@568af43e MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@4ec21634 MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@4ec21634 MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@4ec21634 MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@5986dc02 MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@5986dc02 MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@5986dc02 MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@63d4b45a MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@63d4b45a MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@63d4b45a MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@62fe971a MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@62fe971a MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@62fe971a MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@3c535ec7 MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@3c535ec7 MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@535ae383 MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@535ae383 MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@15eaebd6 MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@15eaebd6 MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@15eaebd6 MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@33ae836 MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@25b93bf0 MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@25b93bf0 MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@21fb923f MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@630d698d MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@630d698d MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@630d698d MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@37225682 MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@5b289d2d MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@263f861d MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@2ef6d256 MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@2ef6d256 MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@bc5074c MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@bc5074c MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@149b22ec MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@4ece410c MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@56324ee1 MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@756ecc0c MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@382f0c0f MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@4d5fc27 MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@40d4ef1a MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@40d4ef1a MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@43d955a0 MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@43d955a0 MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@35676a0 MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@35676a0 MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@28498629 MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@28498629 MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@4f821005 MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@4f821005 MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@46ff3800 MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@76aca509 MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@12b00d3b MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@12b00d3b MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@4ded2550 MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@726d3bd5 MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@617a5c7c MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@73b14cbd MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@73b14cbd MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@57d2303e MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4c7a1a82 MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@7fd036cd MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@7fd036cd MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@67d492e MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@67d492e MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@40e8da1f MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@40e8da1f MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@40e8da1f MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@5cda668a MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@5cda668a MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@5cda668a MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@22425582 MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@4e9a4cdd MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@48245f33 MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@48245f33 MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@47459e8b MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@47459e8b MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@47459e8b MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@771b3da4 MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@6b7b7b3e MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@14c6ca5 MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@14c6ca5 MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@6a960bc1 MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@6a960bc1 MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@6a960bc1 MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@444efd2a MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@444efd2a MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@745ccc16 MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@745ccc16 MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@1697af7c MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@1697af7c MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@4c05766c MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@4c05766c MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@7f11656b MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7f11656b MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@6dbf2ae3 MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@46789467 MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@4f1be432 MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@4f1be432 MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@1ecfcf5 MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@74c7331f MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@67f441bb MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@325e7726 MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@54b32ecc MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@1921a08e MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@5c1dc388 MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@1d3b786a MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@50b3f04f MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@1d294126] into BootstrapContext; was [null] MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@1d294126) [was null] MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@cbcad7c] into BootstrapContext; was [null] MDC:[traceId=, spanId=]
2025-06-10 23:40:28 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@1ba3c71f] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@7b7e0cc3] MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@1d294126] MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@1d294126] MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Database ->
	   name : MySQL
	version : 8.0.32
	  major : 8
	  minor : 0 MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Driver ->
	   name : MySQL Connector/J
	version : mysql-connector-j-8.3.0 (Revision: 805f872a57875f311cb82487efcfb070411a3fa0)
	  major : 8
	  minor : 3 MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - JDBC version : 4.2 MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default) MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG org.hibernate.orm.dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQL8Dialect, version: 8.0 MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3f7dd5fe) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@784c1f03) MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3c27a9a8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@255846e9) MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@745bb599) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6cf71816) MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6d1c86c9) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@a94ea8d) MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@234a713b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7729faec) MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7e8a000e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@53674dd0) MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@23542d2e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1b125d32) MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@35b6a42e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5cd66685) MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5ee90d6c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@579b304e) MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor) MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor) MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor) MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT)) MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT)) MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@3886df32 MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@1ecfcf5` MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@14fea212] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1e3bf2f3] MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.boot.model.relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}] MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Transaction MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity com.example.transaction_service.entity.Transaction on table tbl_transaction MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE') MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.example.transaction_service.entity.Transaction] is safe MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property id with lazy=false MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:id] MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for id MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.id MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property id MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, assigned, , ...) MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property amount with lazy=false MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:amount] MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for amount MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.amount MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property amount MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property bankType with lazy=false MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:bankType] MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for bankType MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.bank_type MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property bankType MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:createdAt] MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for createdAt MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.created_at MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property createdAt MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property createdBy with lazy=false MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:createdBy] MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for createdBy MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.created_by MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property createdBy MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property currency with lazy=false MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:currency] MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for currency MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.currency MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property currency MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property description with lazy=false MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:description] MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for description MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.description MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property description MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property destinationBankCode with lazy=false MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:destinationBankCode] MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for destinationBankCode MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.destination_bank_code MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property destinationBankCode MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property destinationBankName with lazy=false MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:destinationBankName] MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for destinationBankName MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.destination_bank_name MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property destinationBankName MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property failedReason with lazy=false MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:failedReason] MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for failedReason MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.failed_reason MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property failedReason MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property fromAccountNumber with lazy=false MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:fromAccountNumber] MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for fromAccountNumber MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.from_account_number MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property fromAccountNumber MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property referenceCode with lazy=false MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:referenceCode] MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for referenceCode MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.reference_code MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property referenceCode MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property status with lazy=false MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:status] MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for status MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.status MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property status MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property timestamp with lazy=false MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:timestamp] MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for timestamp MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.timestamp MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property timestamp MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property toAccountNumber with lazy=false MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:toAccountNumber] MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for toAccountNumber MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.to_account_number MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property toAccountNumber MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property type with lazy=false MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:type] MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for type MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.type MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property type MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:updatedAt] MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for updatedAt MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.updated_at MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property updatedAt MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property updatedBy with lazy=false MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:updatedBy] MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for updatedBy MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.updated_by MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property updatedBy MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: com.example.transaction_service.entity MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.j.e.i.CallbackDefinitionResolverLegacyImpl - Adding touchForUpdate as PreUpdate callback for entity com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.j.e.i.CallbackDefinitionResolverLegacyImpl - Adding prePersist as PrePersist callback for entity com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.j.e.i.CallbackDefinitionResolverLegacyImpl - Adding touchForCreate as PrePersist callback for entity com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bankType MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for createdAt MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for createdBy MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for currency MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for description MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for destinationBankCode MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for destinationBankName MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for failedReason MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for fromAccountNumber MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for referenceCode MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for timestamp MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for toAccountNumber MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for type MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for updatedAt MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for updatedBy MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [tbl_transaction] MDC:[traceId=, spanId=]
2025-06-10 23:40:29 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Building session factory MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Instantiating SessionFactory with settings: {jdk.tls.rejectClientInitiatedRenegotiation=true, java.specification.version=17, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@7d8c7443, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=D:\LT_Web\SpringBoot\java-banking-phase2\backend\transaction-service\target\classes;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-actuator\3.3.11\spring-boot-starter-actuator-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter\3.3.11\spring-boot-starter-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.3.11\spring-boot-starter-logging-3.3.11.jar;C:\Users\A715-42G\.m2\repository\ch\qos\logback\logback-classic\1.5.18\logback-classic-1.5.18.jar;C:\Users\A715-42G\.m2\repository\ch\qos\logback\logback-core\1.5.18\logback-core-1.5.18.jar;C:\Users\A715-42G\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.23.1\log4j-to-slf4j-2.23.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\logging\log4j\log4j-api\2.23.1\log4j-api-2.23.1.jar;C:\Users\A715-42G\.m2\repository\org\slf4j\jul-to-slf4j\2.0.17\jul-to-slf4j-2.0.17.jar;C:\Users\A715-42G\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\A715-42G\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-actuator-autoconfigure\3.3.11\spring-boot-actuator-autoconfigure-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-actuator\3.3.11\spring-boot-actuator-3.3.11.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-observation\1.13.13\micrometer-observation-1.13.13.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-commons\1.13.13\micrometer-commons-1.13.13.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-jakarta9\1.13.13\micrometer-jakarta9-1.13.13.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-core\1.13.13\micrometer-core-1.13.13.jar;C:\Users\A715-42G\.m2\repository\org\hdrhistogram\HdrHistogram\2.2.2\HdrHistogram-2.2.2.jar;C:\Users\A715-42G\.m2\repository\org\latencyutils\LatencyUtils\2.0.3\LatencyUtils-2.0.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.3.11\spring-boot-starter-data-jpa-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.3.11\spring-boot-starter-aop-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\aspectj\aspectjweaver\1.9.24\aspectjweaver-1.9.24.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.3.11\spring-boot-starter-jdbc-3.3.11.jar;C:\Users\A715-42G\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-jdbc\6.1.19\spring-jdbc-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\orm\hibernate-core\6.5.3.Final\hibernate-core-6.5.3.Final.jar;C:\Users\A715-42G\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\A715-42G\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\A715-42G\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\A715-42G\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\A715-42G\.m2\repository\net\bytebuddy\byte-buddy\1.14.19\byte-buddy-1.14.19.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\A715-42G\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\A715-42G\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-jpa\3.3.11\spring-data-jpa-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-commons\3.3.11\spring-data-commons-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-orm\6.1.19\spring-orm-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-context\6.1.19\spring-context-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-tx\6.1.19\spring-tx-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-beans\6.1.19\spring-beans-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-aspects\6.1.19\spring-aspects-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.3.11\spring-boot-starter-web-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.3.11\spring-boot-starter-json-3.3.11.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.17.3\jackson-module-parameter-names-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.3.11\spring-boot-starter-tomcat-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.40\tomcat-embed-core-10.1.40.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.40\tomcat-embed-websocket-10.1.40.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-web\6.1.19\spring-web-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-webmvc\6.1.19\spring-webmvc-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-expression\6.1.19\spring-expression-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-devtools\3.3.11\spring-boot-devtools-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot\3.3.11\spring-boot-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.3.11\spring-boot-autoconfigure-3.3.11.jar;C:\Users\A715-42G\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\A715-42G\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-core\6.1.19\spring-core-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-jcl\6.1.19\spring-jcl-6.1.19.jar;C:\Users\A715-42G\.m2\repository\com\mysql\mysql-connector-j\8.3.0\mysql-connector-j-8.3.0.jar;C:\Users\A715-42G\.m2\repository\org\projectlombok\lombok\1.18.38\lombok-1.18.38.jar;C:\Users\A715-42G\.m2\repository\org\mapstruct\mapstruct\1.5.5.Final\mapstruct-1.5.5.Final.jar;C:\Users\A715-42G\.m2\repository\org\mapstruct\mapstruct-processor\1.5.5.Final\mapstruct-processor-1.5.5.Final.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-validation\3.3.11\spring-boot-starter-validation-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.40\tomcat-embed-el-10.1.40.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\validator\hibernate-validator\8.0.2.Final\hibernate-validator-8.0.2.Final.jar;C:\Users\A715-42G\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-ui\2.0.2\springdoc-openapi-starter-webmvc-ui-2.0.2.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-api\2.0.2\springdoc-openapi-starter-webmvc-api-2.0.2.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-common\2.0.2\springdoc-openapi-starter-common-2.0.2.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-core-jakarta\2.2.7\swagger-core-jakarta-2.2.7.jar;C:\Users\A715-42G\.m2\repository\org\apache\commons\commons-lang3\3.14.0\commons-lang3-3.14.0.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-annotations-jakarta\2.2.7\swagger-annotations-jakarta-2.2.7.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-models-jakarta\2.2.7\swagger-models-jakarta-2.2.7.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-yaml\2.17.3\jackson-dataformat-yaml-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\webjars\swagger-ui\4.15.5\swagger-ui-4.15.5.jar;C:\Users\A715-42G\.m2\repository\org\webjars\webjars-locator-core\0.58\webjars-locator-core-0.58.jar;C:\Users\A715-42G\.m2\repository\io\github\classgraph\classgraph\4.8.149\classgraph-4.8.149.jar;D:\LT_Web\SpringBoot\java-banking-phase2\backend\common-service\target\classes;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.17.3\jackson-databind-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\apache\dubbo\dubbo-spring-boot-starter\3.3.2\dubbo-spring-boot-starter-3.3.2.jar;C:\Users\A715-42G\.m2\repository\org\apache\dubbo\dubbo-spring-boot-autoconfigure\3.3.2\dubbo-spring-boot-autoconfigure-3.3.2.jar;C:\Users\A715-42G\.m2\repository\org\apache\dubbo\dubbo-spring-boot-autoconfigure-compatible\3.3.2\dubbo-spring-boot-autoconfigure-compatible-3.3.2.jar;C:\Users\A715-42G\.m2\repository\org\apache\dubbo\dubbo\3.3.2\dubbo-3.3.2.jar;C:\Users\A715-42G\.m2\repository\org\javassist\javassist\3.30.2-GA\javassist-3.30.2-GA.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-all\4.1.119.Final\netty-all-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-dns\4.1.119.Final\netty-codec-dns-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-haproxy\4.1.119.Final\netty-codec-haproxy-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-http\4.1.119.Final\netty-codec-http-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-http2\4.1.119.Final\netty-codec-http2-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-memcache\4.1.119.Final\netty-codec-memcache-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-mqtt\4.1.119.Final\netty-codec-mqtt-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-redis\4.1.119.Final\netty-codec-redis-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-smtp\4.1.119.Final\netty-codec-smtp-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-socks\4.1.119.Final\netty-codec-socks-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-stomp\4.1.119.Final\netty-codec-stomp-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-xml\4.1.119.Final\netty-codec-xml-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-handler-proxy\4.1.119.Final\netty-handler-proxy-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-handler-ssl-ocsp\4.1.119.Final\netty-handler-ssl-ocsp-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-resolver-dns\4.1.119.Final\netty-resolver-dns-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-rxtx\4.1.119.Final\netty-transport-rxtx-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-sctp\4.1.119.Final\netty-transport-sctp-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-udt\4.1.119.Final\netty-transport-udt-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-classes-kqueue\4.1.119.Final\netty-transport-classes-kqueue-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-resolver-dns-classes-macos\4.1.119.Final\netty-resolver-dns-classes-macos-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final-linux-x86_64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final-linux-aarch_64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final-linux-riscv64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-kqueue\4.1.119.Final\netty-transport-native-kqueue-4.1.119.Final-osx-x86_64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-kqueue\4.1.119.Final\netty-transport-native-kqueue-4.1.119.Final-osx-aarch_64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-resolver-dns-native-macos\4.1.119.Final\netty-resolver-dns-native-macos-4.1.119.Final-osx-x86_64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-resolver-dns-native-macos\4.1.119.Final\netty-resolver-dns-native-macos-4.1.119.Final-osx-aarch_64.jar;C:\Users\A715-42G\.m2\repository\org\apache\dubbo\hessian-lite\4.0.3\hessian-lite-4.0.3.jar;C:\Users\A715-42G\.m2\repository\com\alibaba\fastjson2\fastjson2\2.0.53\fastjson2-2.0.53.jar;C:\Users\A715-42G\.m2\repository\com\google\protobuf\protobuf-java\3.25.5\protobuf-java-3.25.5.jar;C:\Users\A715-42G\.m2\repository\org\apache\curator\curator-framework\5.1.0\curator-framework-5.1.0.jar;C:\Users\A715-42G\.m2\repository\org\apache\curator\curator-client\5.1.0\curator-client-5.1.0.jar;C:\Users\A715-42G\.m2\repository\com\google\guava\guava\27.0.1-jre\guava-27.0.1-jre.jar;C:\Users\A715-42G\.m2\repository\com\google\guava\failureaccess\1.0.1\failureaccess-1.0.1.jar;C:\Users\A715-42G\.m2\repository\com\google\guava\listenablefuture\9999.0-empty-to-avoid-conflict-with-guava\listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar;C:\Users\A715-42G\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\A715-42G\.m2\repository\org\checkerframework\checker-qual\2.5.2\checker-qual-2.5.2.jar;C:\Users\A715-42G\.m2\repository\com\google\errorprone\error_prone_annotations\2.2.0\error_prone_annotations-2.2.0.jar;C:\Users\A715-42G\.m2\repository\com\google\j2objc\j2objc-annotations\1.1\j2objc-annotations-1.1.jar;C:\Users\A715-42G\.m2\repository\org\codehaus\mojo\animal-sniffer-annotations\1.17\animal-sniffer-annotations-1.17.jar;C:\Users\A715-42G\.m2\repository\org\apache\zookeeper\zookeeper\3.7.1\zookeeper-3.7.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\zookeeper\zookeeper-jute\3.7.1\zookeeper-jute-3.7.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\yetus\audience-annotations\0.12.0\audience-annotations-0.12.0.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-handler\4.1.119.Final\netty-handler-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-common\4.1.119.Final\netty-common-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-resolver\4.1.119.Final\netty-resolver-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-buffer\4.1.119.Final\netty-buffer-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport\4.1.119.Final\netty-transport-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-unix-common\4.1.119.Final\netty-transport-native-unix-common-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec\4.1.119.Final\netty-codec-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-classes-epoll\4.1.119.Final\netty-transport-classes-epoll-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\org\slf4j\slf4j-api\2.0.17\slf4j-api-2.0.17.jar;C:\Users\A715-42G\.m2\repository\org\apache\curator\curator-recipes\5.5.0\curator-recipes-5.5.0.jar;C:\Users\A715-42G\.m2\repository\org\apache\curator\curator-x-discovery\5.5.0\curator-x-discovery-5.5.0.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-starter-vault-config\4.1.1\spring-cloud-starter-vault-config-4.1.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\httpcomponents\client5\httpclient5\5.3.1\httpclient5-5.3.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\httpcomponents\core5\httpcore5-h2\5.2.5\httpcore5-h2-5.2.5.jar;C:\Users\A715-42G\.m2\repository\org\apache\httpcomponents\core5\httpcore5\5.2.5\httpcore5-5.2.5.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-starter\4.1.2\spring-cloud-starter-4.1.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-context\4.1.2\spring-cloud-context-4.1.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-commons\4.1.2\spring-cloud-commons-4.1.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-rsa\1.1.2\spring-security-rsa-1.1.2.jar;C:\Users\A715-42G\.m2\repository\org\bouncycastle\bcprov-jdk18on\1.77\bcprov-jdk18on-1.77.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-vault-config\4.1.1\spring-cloud-vault-config-4.1.1.jar;C:\Users\A715-42G\.m2\repository\org\springframework\vault\spring-vault-core\3.1.1\spring-vault-core-3.1.1.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-data-redis\3.3.11\spring-boot-starter-data-redis-3.3.11.jar;C:\Users\A715-42G\.m2\repository\io\lettuce\lettuce-core\6.3.2.RELEASE\lettuce-core-6.3.2.RELEASE.jar;C:\Users\A715-42G\.m2\repository\io\projectreactor\reactor-core\3.6.16\reactor-core-3.6.16.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-redis\3.3.11\spring-data-redis-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-keyvalue\3.3.11\spring-data-keyvalue-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-oxm\6.1.19\spring-oxm-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-context-support\6.1.19\spring-context-support-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-stream\4.2.1\spring-cloud-stream-4.2.1.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-messaging\6.1.19\spring-messaging-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\integration\spring-integration-core\6.3.9\spring-integration-core-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\integration\spring-integration-jmx\6.3.9\spring-integration-jmx-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\retry\spring-retry\2.0.11\spring-retry-2.0.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-function-context\4.2.2\spring-cloud-function-context-4.2.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-function-core\4.2.2\spring-cloud-function-core-4.2.2.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-joda\2.17.3\jackson-datatype-joda-2.17.3.jar;C:\Users\A715-42G\.m2\repository\joda-time\joda-time\2.10.14\joda-time-2.10.14.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-starter-stream-kafka\4.2.1\spring-cloud-starter-stream-kafka-4.2.1.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-stream-binder-kafka\4.2.1\spring-cloud-stream-binder-kafka-4.2.1.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-stream-binder-kafka-core\4.2.1\spring-cloud-stream-binder-kafka-core-4.2.1.jar;C:\Users\A715-42G\.m2\repository\org\springframework\integration\spring-integration-kafka\6.3.9\spring-integration-kafka-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\kafka\spring-kafka\3.2.8\spring-kafka-3.2.8.jar;C:\Users\A715-42G\.m2\repository\org\apache\kafka\kafka-clients\3.7.2\kafka-clients-3.7.2.jar;C:\Users\A715-42G\.m2\repository\com\github\luben\zstd-jni\1.5.6-4\zstd-jni-1.5.6-4.jar;C:\Users\A715-42G\.m2\repository\org\lz4\lz4-java\1.8.0\lz4-java-1.8.0.jar;C:\Users\A715-42G\.m2\repository\org\xerial\snappy\snappy-java\1.1.10.5\snappy-java-1.1.10.5.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.3.11\spring-boot-starter-security-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-aop\6.1.19\spring-aop-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-config\6.3.9\spring-security-config-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-web\6.3.9\spring-security-web-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-oauth2-resource-server\3.3.11\spring-boot-starter-oauth2-resource-server-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-core\6.3.9\spring-security-core-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-crypto\6.3.9\spring-security-crypto-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-oauth2-resource-server\6.3.9\spring-security-oauth2-resource-server-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-oauth2-core\6.3.9\spring-security-oauth2-core-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-oauth2-jose\6.3.9\spring-security-oauth2-jose-6.3.9.jar;C:\Users\A715-42G\.m2\repository\com\nimbusds\nimbus-jose-jwt\9.37.3\nimbus-jose-jwt-9.37.3.jar;C:\Users\A715-42G\.m2\repository\com\github\stephenc\jcip\jcip-annotations\1.0-1\jcip-annotations-1.0-1.jar;C:\Users\A715-42G\.m2\repository\org\keycloak\keycloak-admin-client\26.0.0\keycloak-admin-client-26.0.0.jar;C:\Users\A715-42G\.m2\repository\org\keycloak\keycloak-client-common-synced\26.0.0\keycloak-client-common-synced-26.0.0.jar;C:\Users\A715-42G\.m2\repository\org\jboss\logging\commons-logging-jboss-logging\1.0.0.Final\commons-logging-jboss-logging-1.0.0.Final.jar;C:\Users\A715-42G\.m2\repository\org\apache\httpcomponents\httpclient\4.5.14\httpclient-4.5.14.jar;C:\Users\A715-42G\.m2\repository\org\apache\httpcomponents\httpcore\4.4.16\httpcore-4.4.16.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.17.3\jackson-core-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.17.3\jackson-annotations-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.17.3\jackson-datatype-jdk8-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.17.3\jackson-datatype-jsr310-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\eclipse\microprofile\openapi\microprofile-openapi-api\3.1.1\microprofile-openapi-api-3.1.1.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-client\6.2.9.Final\resteasy-client-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-client-api\6.2.9.Final\resteasy-client-api-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-core-spi\6.2.9.Final\resteasy-core-spi-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-core\6.2.9.Final\resteasy-core-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\org\jboss\jandex\2.4.5.Final\jandex-2.4.5.Final.jar;C:\Users\A715-42G\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\A715-42G\.m2\repository\com\ibm\async\asyncutil\0.1.0\asyncutil-0.1.0.jar;C:\Users\A715-42G\.m2\repository\commons-codec\commons-codec\1.16.1\commons-codec-1.16.1.jar;C:\Users\A715-42G\.m2\repository\jakarta\ws\rs\jakarta.ws.rs-api\3.1.0\jakarta.ws.rs-api-3.1.0.jar;C:\Users\A715-42G\.m2\repository\org\reactivestreams\reactive-streams\1.0.4\reactive-streams-1.0.4.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-multipart-provider\6.2.9.Final\resteasy-multipart-provider-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\jakarta\mail\jakarta.mail-api\2.1.3\jakarta.mail-api-2.1.3.jar;C:\Users\A715-42G\.m2\repository\org\eclipse\angus\angus-mail\2.0.3\angus-mail-2.0.3.jar;C:\Users\A715-42G\.m2\repository\org\apache\james\apache-mime4j-dom\0.8.11\apache-mime4j-dom-0.8.11.jar;C:\Users\A715-42G\.m2\repository\org\apache\james\apache-mime4j-core\0.8.11\apache-mime4j-core-0.8.11.jar;C:\Users\A715-42G\.m2\repository\org\apache\james\apache-mime4j-storage\0.8.11\apache-mime4j-storage-0.8.11.jar;C:\Users\A715-42G\.m2\repository\commons-io\commons-io\2.11.0\commons-io-2.11.0.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-jackson2-provider\6.2.9.Final\resteasy-jackson2-provider-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\jakarta\rs\jackson-jakarta-rs-base\2.17.3\jackson-jakarta-rs-base-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\jakarta\rs\jackson-jakarta-rs-json-provider\2.17.3\jackson-jakarta-rs-json-provider-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\module\jackson-module-jakarta-xmlbind-annotations\2.17.3\jackson-module-jakarta-xmlbind-annotations-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\github\java-json-tools\json-patch\1.13\json-patch-1.13.jar;C:\Users\A715-42G\.m2\repository\com\github\java-json-tools\msg-simple\1.2\msg-simple-1.2.jar;C:\Users\A715-42G\.m2\repository\com\github\java-json-tools\btf\1.3\btf-1.3.jar;C:\Users\A715-42G\.m2\repository\com\github\java-json-tools\jackson-coreutils\2.0\jackson-coreutils-2.0.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-jaxb-provider\6.2.9.Final\resteasy-jaxb-provider-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\codemodel\4.0.5\codemodel-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-jxc\4.0.5\jaxb-jxc-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-xjc\4.0.5\jaxb-xjc-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\xsom\4.0.5\xsom-4.0.5.jar;C:\Users\A715-42G\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\A715-42G\.m2\repository\com\sun\istack\istack-commons-tools\4.1.2\istack-commons-tools-4.1.2.jar;C:\Users\A715-42G\.m2\repository\com\sun\xml\bind\external\relaxng-datatype\4.0.3\relaxng-datatype-4.0.3.jar;C:\Users\A715-42G\.m2\repository\com\sun\xml\bind\external\rngom\4.0.3\rngom-4.0.3.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Saigon, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, java.vm.specification.version=17, os.name=Windows 10, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-17\bin, sun.java.command=com.example.transaction_service.TransactionServiceApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@684dd44b, com.sun.management.jmxremote=, jdk.debug=release, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, hibernate.cdi.extensions=true, user.home=C:\Users\A715-42G, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-01-17, java.home=C:\Program Files\Java\jdk-17, file.separator=\, spring.output.ansi.enabled=always, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.6+9-LTS-190, user.name=A715-42G, spring.jmx.enabled=true, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\A715-42G\AppData\Local\Temp\, catalina.home=C:\Users\A715-42G\AppData\Local\Temp\tomcat.8088.6219298751805377146, java.version=17.0.6, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=D:\LT_Web\SpringBoot\java-banking-phase2, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=19044, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\A715-42G\AppData\Local\Temp\tomcat.8088.6219298751805377146, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@2646cd0a, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-17\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;D:\Document\xxx\apache-maven-3.9.1\bin;C:\Program Files (x86)\Dev-Cpp\MinGW64\bin;C:\Program Files\Git\cmd;C:\Program Files\Java\jdk-17\bin;C:\XamPP\php;D:\LT_Web\SpringBoot\SpringBootCLI\spring-3.2.1\bin;D:\sqlite;D:\Document\Java\Maven\apache-maven-3.9.9\bin;D:\Document\Java\Maven\apache-maven-3.9.9\bin;C:\Program Files\Cloudflare\Cloudflare WARP\;C:\ProgramData\chocolatey\bin;D:\KienLongBank\Vault;D:\GrafanaLabs\grafana\bin;D:\KienLongBank\InfluxData\influxdb-1.8.10-1;D:\Document\Work\Redis;C:\Program Files\Docker\Docker\resources\bin;D:\nodejs\nvm;C:\nvm4w\nodejs;C:\Program Files\nodejs\;C:\Users\A715-42G\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\A715-42G\AppData\Local\Programs\Python\Python310\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\A715-42G\AppData\Local\Programs\Eclipse Adoptium\jdk-17.0.3.7-hotspot\bin;C:\Users\A715-42G\AppData\Local\Microsoft\WindowsApps;C:\Users\A715-42G\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\Azure Data Studio\bin;C:\Program Files\Git\bin;D:\Document\HQT_ATCSDL\MongoDB\mongosh-1.8.2-win32-x64\bin;C:\XamPP\php;C:\Program Files\Azure Data Studio\bin;D:\nodejs\nvm;C:\nvm4w\nodejs;C:\Users\A715-42G\AppData\Roaming\npm;D:\Document\cursor\resources\app\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, emulated-client, sharing, java.vm.version=17.0.6+9-LTS-190, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=61.0, LOGGED_APPLICATION_NAME=[transaction-service] } MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {} MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.example.transaction_service.entity.Transaction] is safe MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@7841feed] under count; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@2aac82f5] under every; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@2d30ead] under any; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3ff3b539] under sinh; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@56980057] under cosh; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5e1931aa] under tanh; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@32370f35] under pi; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@104f3e37] under log; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : length -> character_length MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@7b3147e5] under position; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@4f8eea3a] under overlay; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@58b45008] under trim; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@57916333] under cast; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@14edb7bf] under collate; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@6b5675d5] under extract; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@145a4d8] under ifnull; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@3eb10375] under pad; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@77e55692] under str; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@2df4493] under format; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@114a0425] under timestampadd; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@1f6ac901] under timestampdiff; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3cd361a9] under current_date; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6b30c040] under current_time; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2afe02cc] under current_timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current date -> current_date MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current time -> current_time MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1b11a5a1] under local_date; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3ce84143] under local_time; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@51b7a45e] under local_datetime; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@b8534c6] under offset_datetime; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local date -> local_date MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local time -> local_time MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1dafa4ba] under instant; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current_instant -> instant MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@4da11c25] under sql; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@104f3e37 MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@589740f5] under lpad; prior registration was NamedSqmFunctionTemplate(lpad) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@21f6b1b5] under rpad; prior registration was NamedSqmFunctionTemplate(rpad) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : day -> dayofmonth MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@47e160be] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@7b3147e5 MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@75d2ecdd] under trunc; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : truncate -> trunc MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1e264e22] under bitand; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@794adb25] under bitor; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4e789ea] under bitxor; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@663129af] under bitnot; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@4aca3c15] under format; prior registration was org.hibernate.dialect.function.FormatFunction@2df4493 MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@3ce84143 MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@51b7a45e MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@65f6559a] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@32370f35 MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5de63817] under chr; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : char -> chr MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@32f51e55] under sysdate; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@81e6650] under listagg; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - abs(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double acos(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - addtime(TIME datetime, TIME time) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean any(BOOLEAN arg) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer ascii(STRING arg) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double asin(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - avg(arg) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bit_and(arg) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bit_or(arg) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitand(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitnot(arg) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitor(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitxor(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - cast(arg as Type) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - ceiling(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Character char(INTEGER arg) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Character chr(INTEGER arg) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]]) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String collate(STRING string as COLLATION collation) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]]) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double cos(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double cosh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double cot(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Long count([distinct ]{arg|*}) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer crc32(arg) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date curdate() MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date current date MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time current time MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current timestamp MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date current_date MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Instant current_instant MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time current_time MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current_timestamp MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time curtime() MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date date(arg) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer datediff(DATE end, DATE start) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer day(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String dayname(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofmonth(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofweek(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofyear(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double degrees(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean every(BOOLEAN arg) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double exp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - floor(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]]) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer hour(TIME arg) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - ifnull(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Instant instant MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]]) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date last_day(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]]) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String left(STRING string, INTEGER length) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double ln(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local date MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local datetime MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local time MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local_date MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local_datetime MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local_time MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtime MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtimestamp MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start]) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1]) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double log10(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double log2(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String lower(STRING string) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String lpad(string, length[, padding]) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters]) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - max(COMPARABLE arg) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String md5(arg) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer microsecond(TIME arg) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - min(COMPARABLE arg) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer minute(TIME arg) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer month(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String monthname(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp now() MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - nullif(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset datetime MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset_datetime MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length]) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character]) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double pi MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer position(STRING pattern in STRING string) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer quarter(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double radians(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double rand([INTEGER seed]) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String repeat(STRING string, INTEGER times) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String reverse(STRING arg) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String right(STRING string, INTEGER length) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places]) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String rpad(string, length[, padding]) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters]) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer second(TIME arg) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String sha(arg) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String sha1(arg) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String sha2(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer sign(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double sin(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double sinh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String soundex(arg) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String space(INTEGER arg) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Object sql MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double sqrt(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String str(arg) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length]) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length]) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - subtime(TIME datetime, TIME time) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - sum(arg) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp sysdate() MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double tan(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double tanh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String time(arg) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1]) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - trunc( ... ) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - truncate( ... ) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String upper(STRING string) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date utc_date MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time utc_time MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp utc_timestamp MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_pop(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_samp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double variance(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer week(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer year(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.orm.query.plan.cache - Starting QueryInterpretationCache(2048) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.e.i.EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.example.transaction_service.entity.Transaction] is safe MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.example.transaction_service.entity.Transaction]: private accessor [amount] MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.orm.model.mapping.creation - Starting post-init callbacks MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(com.example.transaction_service.entity.Transaction) `staticFetchableList` generator MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction)] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction.updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select id from tbl_transaction where id=? MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into tbl_transaction (amount,bank_type,created_at,created_by,currency,description,destination_bank_code,destination_bank_name,failed_reason,from_account_number,reference_code,status,timestamp,to_account_number,type,updated_at,updated_by,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update tbl_transaction set amount=?,bank_type=?,created_at=?,created_by=?,currency=?,description=?,destination_bank_code=?,destination_bank_name=?,failed_reason=?,from_account_number=?,reference_code=?,status=?,timestamp=?,to_account_number=?,type=?,updated_at=?,updated_by=? where id=? MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from tbl_transaction where id=? MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@14fea212] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@7a808396] MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named HQL queries MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named SQL queries MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG org.hibernate.mapping.Table - No alter strings for table : tbl_transaction MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6b976f8e MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.internal.SessionFactoryRegistry - Registering SessionFactory: 7d374b69-ed06-48d0-ab21-91b42bc539e5 (<unnamed>) MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured MDC:[traceId=, spanId=]
2025-06-10 23:40:30 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Instantiated SessionFactory MDC:[traceId=, spanId=]
2025-06-10 23:40:31 [restartedMain] DEBUG o.h.s.internal.StatisticsInitiator - Statistics initialized [enabled=false] MDC:[traceId=, spanId=]
2025-06-10 23:40:31 [restartedMain] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy3/jdk.proxy3.$Proxy223.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.getCountQuery(JpaQueryLookupStrategy.java:204)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:171)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.example.transaction_service.TransactionServiceApplication.main(TransactionServiceApplication.java:15)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-06-10 23:40:31 [restartedMain] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy3/jdk.proxy3.$Proxy223.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.getCountQuery(JpaQueryLookupStrategy.java:204)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:171)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.example.transaction_service.TransactionServiceApplication.main(TransactionServiceApplication.java:15)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-06-10 23:40:31 [restartedMain] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy3/jdk.proxy3.$Proxy223.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.example.transaction_service.TransactionServiceApplication.main(TransactionServiceApplication.java:15)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-06-10 23:40:31 [restartedMain] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy3/jdk.proxy3.$Proxy223.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.example.transaction_service.TransactionServiceApplication.main(TransactionServiceApplication.java:15)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-06-10 23:40:34 [restartedMain] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-06-10 23:40:34 [restartedMain] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator MDC:[traceId=, spanId=]
2025-06-10 23:40:34 [restartedMain] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory MDC:[traceId=, spanId=]
2025-06-10 23:40:34 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-06-10 23:40:34 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader MDC:[traceId=, spanId=]
2025-06-10 23:40:34 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-06-10 23:40:34 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-06-10 23:40:34 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-06-10 23:40:34 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-06-10 23:40:34 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-06-10 23:40:34 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-06-10 23:40:34 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-06-10 23:40:34 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-06-10 23:40:34 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-06-10 23:40:34 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-06-10 23:40:34 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-06-10 23:40:37 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 23:40:37 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 23:40:37 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 23:40:37 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 23:40:37 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2e27ce1e MDC:[traceId=, spanId=]
2025-06-10 23:40:37 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-10 23:40:37 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@56501b66 MDC:[traceId=, spanId=]
2025-06-10 23:40:37 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 23:40:37 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 23:40:37 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 23:40:37 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 23:40:37 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@1159949792 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 23:40:37 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 23:40:37 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(5))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@20f114ec MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(5).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3fc01162 MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(5).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4f1a3cba MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(5).type)  MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5f08c7a9 MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(5).status)  MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6dc4ca5 MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(5).currency)  MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(5)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(5).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(5).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(5).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(5).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(5).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(5).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(5).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(5).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(5).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(5).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(5).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(5).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(5).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(5).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(5).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(5).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(5).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(5)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(5) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(5))@1832991794 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) and t1_0.type=? and t1_0.status=? and t1_0.currency=? order by t1_0.timestamp desc limit ?,? MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [b88a97aa-b4ea-4c5b-901e-9315c412c554] MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(5)): b88a97aa-b4ea-4c5b-901e-9315c412c554 MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(5)#b88a97aa-b4ea-4c5b-901e-9315c412c554] : 437310101 MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [23000.00] MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T13:55:06.439062] MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Chuyển tiền] MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-202506091355063d72d7f8] MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T13:55:06.236412] MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [87654321] MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T13:55:15.761254] MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(5)#b88a97aa-b4ea-4c5b-901e-9315c412c554 MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@53bd82f9 MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [69eb51a4-db2f-49ab-acb9-073a0060ce38] MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(5)): 69eb51a4-db2f-49ab-acb9-073a0060ce38 MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(5)#69eb51a4-db2f-49ab-acb9-073a0060ce38] : 817763123 MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [10000.00] MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T13:17:40.592964] MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Chuyển tiền] MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-202506091317401be1dea3] MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T13:17:40.336221] MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [87654321] MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T13:17:50.910739] MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(5)#69eb51a4-db2f-49ab-acb9-073a0060ce38 MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@53bd82f9 MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [7bc62a37-4e1d-4d5a-a411-7ab3b54c26ba] MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(5)): 7bc62a37-4e1d-4d5a-a411-7ab3b54c26ba MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(5)#7bc62a37-4e1d-4d5a-a411-7ab3b54c26ba] : 1698965627 MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [30000.00] MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T11:01:03.744642] MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Đại Lê chuyển tiền] MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-20250609110103251c5a17] MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T11:01:03.632657] MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [87654321] MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T11:01:19.381894] MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(5)#7bc62a37-4e1d-4d5a-a411-7ab3b54c26ba MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@53bd82f9 MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [d41a58db-a3d5-46ce-8424-1de5833b2b30] MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(5)): d41a58db-a3d5-46ce-8424-1de5833b2b30 MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(5)#d41a58db-a3d5-46ce-8424-1de5833b2b30] : 726314528 MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [222121.00] MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-06T14:55:17.181641] MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [] MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-2025060614551714b225e2] MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-06T14:55:17.070079] MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [27072000] MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-06T14:55:27.673405] MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(5)#d41a58db-a3d5-46ce-8424-1de5833b2b30 MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@53bd82f9 MDC:[traceId=, spanId=]
2025-06-10 23:41:28 [http-nio-8088-exec-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 23:41:37 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 23:41:37 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 23:41:37 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 23:41:37 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 23:41:37 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@10d65a0c MDC:[traceId=, spanId=]
2025-06-10 23:41:37 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-10 23:41:37 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4fd6d467 MDC:[traceId=, spanId=]
2025-06-10 23:41:37 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 23:41:37 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 23:41:37 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 23:41:37 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 23:41:37 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@1162660601 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 23:41:37 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 23:41:37 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(6))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@16363363 MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(6).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7e7193c1 MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(6).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@33debf97 MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(6).type)  MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@14f66df6 MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(6).status)  MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@67a9c397 MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(6).currency)  MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(6)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(6).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(6).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(6).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(6).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(6).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(6).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(6).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(6).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(6).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(6).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(6).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(6).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(6).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(6).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(6).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(6).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(6).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(6)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(6) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(6))@1885615741 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) and t1_0.type=? and t1_0.status=? and t1_0.currency=? order by t1_0.timestamp desc limit ?,? MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [b88a97aa-b4ea-4c5b-901e-9315c412c554] MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(6)): b88a97aa-b4ea-4c5b-901e-9315c412c554 MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(6)#b88a97aa-b4ea-4c5b-901e-9315c412c554] : 982304845 MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [23000.00] MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T13:55:06.439062] MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Chuyển tiền] MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-202506091355063d72d7f8] MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T13:55:06.236412] MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [87654321] MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T13:55:15.761254] MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(6)#b88a97aa-b4ea-4c5b-901e-9315c412c554 MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6b8ac6bf MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [69eb51a4-db2f-49ab-acb9-073a0060ce38] MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(6)): 69eb51a4-db2f-49ab-acb9-073a0060ce38 MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(6)#69eb51a4-db2f-49ab-acb9-073a0060ce38] : 1547503023 MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [10000.00] MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T13:17:40.592964] MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Chuyển tiền] MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-202506091317401be1dea3] MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T13:17:40.336221] MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [87654321] MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T13:17:50.910739] MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(6)#69eb51a4-db2f-49ab-acb9-073a0060ce38 MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6b8ac6bf MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [7bc62a37-4e1d-4d5a-a411-7ab3b54c26ba] MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(6)): 7bc62a37-4e1d-4d5a-a411-7ab3b54c26ba MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(6)#7bc62a37-4e1d-4d5a-a411-7ab3b54c26ba] : 1532782228 MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [30000.00] MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T11:01:03.744642] MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Đại Lê chuyển tiền] MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-20250609110103251c5a17] MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T11:01:03.632657] MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [87654321] MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T11:01:19.381894] MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(6)#7bc62a37-4e1d-4d5a-a411-7ab3b54c26ba MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6b8ac6bf MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [d41a58db-a3d5-46ce-8424-1de5833b2b30] MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(6)): d41a58db-a3d5-46ce-8424-1de5833b2b30 MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(6)#d41a58db-a3d5-46ce-8424-1de5833b2b30] : 130945810 MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [222121.00] MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-06T14:55:17.181641] MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [] MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-2025060614551714b225e2] MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-06T14:55:17.070079] MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [27072000] MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-06T14:55:27.673405] MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(6)#d41a58db-a3d5-46ce-8424-1de5833b2b30 MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6b8ac6bf MDC:[traceId=, spanId=]
2025-06-10 23:42:14 [http-nio-8088-exec-3] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 23:42:37 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 23:42:37 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 23:42:37 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 23:42:37 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 23:42:37 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3eb1ab04 MDC:[traceId=, spanId=]
2025-06-10 23:42:37 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-10 23:42:37 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2ce134f3 MDC:[traceId=, spanId=]
2025-06-10 23:42:37 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 23:42:37 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 23:42:37 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 23:42:37 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 23:42:37 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@1263275043 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 23:42:37 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 23:42:37 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(7))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@a568e3c MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(7).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@495dc1aa MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(7).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5cc78362 MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(7).type)  MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7acc97f6 MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(7).status)  MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@e8939ed MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(7).currency)  MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(7)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(7).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(7).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(7).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(7).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(7).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(7).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(7).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(7).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(7).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(7).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(7).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(7).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(7).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(7).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(7).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(7).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(7).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(7)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(7) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(7))@1883765974 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) and t1_0.type=? and t1_0.status=? and t1_0.currency=? order by t1_0.timestamp desc limit ?,? MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [b88a97aa-b4ea-4c5b-901e-9315c412c554] MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(7)): b88a97aa-b4ea-4c5b-901e-9315c412c554 MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(7)#b88a97aa-b4ea-4c5b-901e-9315c412c554] : 351373599 MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [23000.00] MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T13:55:06.439062] MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Chuyển tiền] MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-202506091355063d72d7f8] MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T13:55:06.236412] MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [87654321] MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T13:55:15.761254] MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(7)#b88a97aa-b4ea-4c5b-901e-9315c412c554 MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5b9f661b MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [69eb51a4-db2f-49ab-acb9-073a0060ce38] MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(7)): 69eb51a4-db2f-49ab-acb9-073a0060ce38 MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(7)#69eb51a4-db2f-49ab-acb9-073a0060ce38] : 206517890 MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [10000.00] MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T13:17:40.592964] MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Chuyển tiền] MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-202506091317401be1dea3] MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T13:17:40.336221] MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [87654321] MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T13:17:50.910739] MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(7)#69eb51a4-db2f-49ab-acb9-073a0060ce38 MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5b9f661b MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [7bc62a37-4e1d-4d5a-a411-7ab3b54c26ba] MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(7)): 7bc62a37-4e1d-4d5a-a411-7ab3b54c26ba MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(7)#7bc62a37-4e1d-4d5a-a411-7ab3b54c26ba] : 1985741065 MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [30000.00] MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T11:01:03.744642] MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Đại Lê chuyển tiền] MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-20250609110103251c5a17] MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T11:01:03.632657] MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [87654321] MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T11:01:19.381894] MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(7)#7bc62a37-4e1d-4d5a-a411-7ab3b54c26ba MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5b9f661b MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [d41a58db-a3d5-46ce-8424-1de5833b2b30] MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(7)): d41a58db-a3d5-46ce-8424-1de5833b2b30 MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(7)#d41a58db-a3d5-46ce-8424-1de5833b2b30] : 1853736876 MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [222121.00] MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-06T14:55:17.181641] MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [] MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-2025060614551714b225e2] MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-06T14:55:17.070079] MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [27072000] MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-06T14:55:27.673405] MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(7)#d41a58db-a3d5-46ce-8424-1de5833b2b30 MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5b9f661b MDC:[traceId=, spanId=]
2025-06-10 23:43:17 [http-nio-8088-exec-5] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 23:43:37 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 23:43:37 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 23:43:37 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 23:43:37 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 23:43:37 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3f2db0f0 MDC:[traceId=, spanId=]
2025-06-10 23:43:37 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-10 23:43:37 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@cfba5c2 MDC:[traceId=, spanId=]
2025-06-10 23:43:37 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 23:43:37 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 23:43:37 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 23:43:37 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 23:43:37 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@81947307 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 23:43:37 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 23:43:37 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 23:44:37 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 23:44:37 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 23:44:37 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 23:44:37 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 23:44:37 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@71e1a757 MDC:[traceId=, spanId=]
2025-06-10 23:44:37 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-10 23:44:37 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@75419620 MDC:[traceId=, spanId=]
2025-06-10 23:44:37 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 23:44:37 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 23:44:37 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 23:44:37 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 23:44:37 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@379692869 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 23:44:37 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 23:44:37 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 23:44:58 [SpringContextShutdownHook] DEBUG o.h.internal.SessionFactoryImpl - HHH000031: Closing MDC:[traceId=, spanId=]
2025-06-10 23:44:58 [SpringContextShutdownHook] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@42b1bcbe] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@7a808396] MDC:[traceId=, spanId=]
2025-06-10 23:44:58 [SpringContextShutdownHook] DEBUG o.h.s.i.AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries MDC:[traceId=, spanId=]
2025-06-10 23:44:58 [SpringContextShutdownHook] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries MDC:[traceId=, spanId=]
2025-06-10 23:45:16 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final MDC:[traceId=, spanId=]
2025-06-10 23:45:16 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-06-10 23:45:16 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-06-10 23:45:16 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-06-10 23:45:16 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-06-10 23:45:16 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-06-10 23:45:16 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-06-10 23:45:16 [background-preinit] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-06-10 23:45:16 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-06-10 23:45:16 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-06-10 23:45:16 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-06-10 23:45:16 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-06-10 23:45:16 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-06-10 23:45:16 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.h.jpa.internal.util.LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@12a83a08
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/LT_Web/SpringBoot/java-banking-phase2/backend/transaction-service/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.example.transaction_service.entity.Transaction]
	Mapping files names []
	Properties [] MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator]. MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator]. MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG org.hibernate.cfg.Environment - HHH000206: 'hibernate.properties' not found MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator] MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator] MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator] MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator] MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned] MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator] MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator] MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator] MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator] MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator] MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.h.c.i.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@6c12dc6b MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@6c12dc6b MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@6c12dc6b MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@3b84e455 MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@3b84e455 MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@7bf4d5c7 MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@7bf4d5c7 MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@70bc5999 MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@70bc5999 MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@ab73261 MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@ab73261 MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@ab73261 MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@168dd92e MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@168dd92e MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@168dd92e MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@4b0a7cd5 MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@4b0a7cd5 MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@596894bc MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@6aff81ca MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@6aff81ca MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@12437112 MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@ab74b5b MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@1767f3c5 MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@1767f3c5 MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@1767f3c5 MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@180d132 MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@180d132 MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@180d132 MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@842fbf1 MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@842fbf1 MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@842fbf1 MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@381f8431 MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@381f8431 MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@381f8431 MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@10ceb12c MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@10ceb12c MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@10ceb12c MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@17c0eb46 MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@17c0eb46 MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@842173c MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@842173c MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@4c383409 MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@4c383409 MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@4c383409 MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@299abb73 MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@3990ffdd MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@3990ffdd MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@21f3e424 MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@2c66046f MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@2c66046f MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@2c66046f MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@50db63b3 MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@6e8b0062 MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@50e70b53 MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@4cbe385c MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@4cbe385c MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@47730c83 MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@47730c83 MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@714d9c1f MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@1998acf6 MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@24591b41 MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@7b911c5d MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@66a1ca54 MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@3a02256a MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@566db278 MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@566db278 MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@256d2f1c MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@256d2f1c MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@4df6a28f MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@4df6a28f MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@66f4e72e MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@66f4e72e MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@5db177fa MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@5db177fa MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1168a69f MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@69f28ce7 MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@287ecb60 MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@287ecb60 MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@7ea67732 MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2a2e7a27 MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@57c64e31 MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@9bdba62 MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@9bdba62 MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@44ef5380 MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1dc9f678 MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@789b8436 MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@789b8436 MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@1c915fed MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@1c915fed MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@225c6cac MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@225c6cac MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@225c6cac MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@707424a9 MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@707424a9 MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@707424a9 MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@54eaa4a5 MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@4292f7e2 MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@36aca10 MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@36aca10 MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@52eae7b8 MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@52eae7b8 MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@52eae7b8 MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@5324aecc MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@6dc6ead MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@53330e2c MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@53330e2c MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@56e1f4d5 MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@56e1f4d5 MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@56e1f4d5 MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@20c5620b MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@20c5620b MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@4509c9b8 MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@4509c9b8 MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@e80ed5b MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@e80ed5b MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@579ee702 MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@579ee702 MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@5c4012c0 MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@5c4012c0 MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@570f44f9 MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@5e6c8176 MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@575c82c9 MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@575c82c9 MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@1d4cb706 MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@54a515aa MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@3a6ec7ad MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@485357bb MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@30df2d30 MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@4cab66c4 MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@349353 MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@5208e261 MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@1b77f3bd MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@63659569] into BootstrapContext; was [null] MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@63659569) [was null] MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@2842a019] into BootstrapContext; was [null] MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@5e173513] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@2fae383f] MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@63659569] MDC:[traceId=, spanId=]
2025-06-10 23:45:25 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@63659569] MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Database ->
	   name : MySQL
	version : 8.0.32
	  major : 8
	  minor : 0 MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Driver ->
	   name : MySQL Connector/J
	version : mysql-connector-j-8.3.0 (Revision: 805f872a57875f311cb82487efcfb070411a3fa0)
	  major : 8
	  minor : 3 MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - JDBC version : 4.2 MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.orm.dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQL8Dialect, version: 8.0 MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@494a7ee7) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@37ae988d) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1127a5fb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@63b5008b) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7912e75c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3abb6203) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@161f10d2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5de5ebc2) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@33a3df25) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@52e91828) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3c1e0b27) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4e574c9d) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@63a0f885) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@79928481) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3519ffa7) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@415e7e3d) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@255ed243) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4805fce5) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT)) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT)) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@5c6ae805 MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@1d4cb706` MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@20e3df11] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1284828b] MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.boot.model.relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}] MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Transaction MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity com.example.transaction_service.entity.Transaction on table tbl_transaction MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE') MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.example.transaction_service.entity.Transaction] is safe MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property id with lazy=false MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:id] MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for id MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.id MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property id MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, assigned, , ...) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property amount with lazy=false MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:amount] MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for amount MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.amount MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property amount MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property bankType with lazy=false MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:bankType] MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for bankType MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.bank_type MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property bankType MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:createdAt] MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for createdAt MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.created_at MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property createdAt MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property createdBy with lazy=false MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:createdBy] MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for createdBy MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.created_by MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property createdBy MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property currency with lazy=false MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:currency] MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for currency MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.currency MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property currency MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property description with lazy=false MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:description] MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for description MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.description MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property description MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property destinationBankCode with lazy=false MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:destinationBankCode] MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for destinationBankCode MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.destination_bank_code MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property destinationBankCode MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property destinationBankName with lazy=false MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:destinationBankName] MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for destinationBankName MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.destination_bank_name MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property destinationBankName MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property failedReason with lazy=false MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:failedReason] MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for failedReason MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.failed_reason MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property failedReason MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property fromAccountNumber with lazy=false MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:fromAccountNumber] MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for fromAccountNumber MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.from_account_number MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property fromAccountNumber MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property referenceCode with lazy=false MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:referenceCode] MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for referenceCode MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.reference_code MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property referenceCode MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property status with lazy=false MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:status] MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for status MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.status MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property status MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property timestamp with lazy=false MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:timestamp] MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for timestamp MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.timestamp MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property timestamp MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property toAccountNumber with lazy=false MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:toAccountNumber] MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for toAccountNumber MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.to_account_number MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property toAccountNumber MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property type with lazy=false MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:type] MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for type MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.type MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property type MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:updatedAt] MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for updatedAt MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.updated_at MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property updatedAt MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property updatedBy with lazy=false MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:updatedBy] MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for updatedBy MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.updated_by MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property updatedBy MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: com.example.transaction_service.entity MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.j.e.i.CallbackDefinitionResolverLegacyImpl - Adding touchForUpdate as PreUpdate callback for entity com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.j.e.i.CallbackDefinitionResolverLegacyImpl - Adding prePersist as PrePersist callback for entity com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.j.e.i.CallbackDefinitionResolverLegacyImpl - Adding touchForCreate as PrePersist callback for entity com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bankType MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for createdAt MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for createdBy MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for currency MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for description MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for destinationBankCode MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for destinationBankName MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for failedReason MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for fromAccountNumber MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for referenceCode MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for timestamp MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for toAccountNumber MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for type MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for updatedAt MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for updatedBy MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [tbl_transaction] MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Building session factory MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Instantiating SessionFactory with settings: {jdk.tls.rejectClientInitiatedRenegotiation=true, java.specification.version=17, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@a4c4c7f, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=D:\LT_Web\SpringBoot\java-banking-phase2\backend\transaction-service\target\classes;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-actuator\3.3.11\spring-boot-starter-actuator-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter\3.3.11\spring-boot-starter-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.3.11\spring-boot-starter-logging-3.3.11.jar;C:\Users\A715-42G\.m2\repository\ch\qos\logback\logback-classic\1.5.18\logback-classic-1.5.18.jar;C:\Users\A715-42G\.m2\repository\ch\qos\logback\logback-core\1.5.18\logback-core-1.5.18.jar;C:\Users\A715-42G\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.23.1\log4j-to-slf4j-2.23.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\logging\log4j\log4j-api\2.23.1\log4j-api-2.23.1.jar;C:\Users\A715-42G\.m2\repository\org\slf4j\jul-to-slf4j\2.0.17\jul-to-slf4j-2.0.17.jar;C:\Users\A715-42G\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\A715-42G\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-actuator-autoconfigure\3.3.11\spring-boot-actuator-autoconfigure-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-actuator\3.3.11\spring-boot-actuator-3.3.11.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-observation\1.13.13\micrometer-observation-1.13.13.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-commons\1.13.13\micrometer-commons-1.13.13.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-jakarta9\1.13.13\micrometer-jakarta9-1.13.13.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-core\1.13.13\micrometer-core-1.13.13.jar;C:\Users\A715-42G\.m2\repository\org\hdrhistogram\HdrHistogram\2.2.2\HdrHistogram-2.2.2.jar;C:\Users\A715-42G\.m2\repository\org\latencyutils\LatencyUtils\2.0.3\LatencyUtils-2.0.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.3.11\spring-boot-starter-data-jpa-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.3.11\spring-boot-starter-aop-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\aspectj\aspectjweaver\1.9.24\aspectjweaver-1.9.24.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.3.11\spring-boot-starter-jdbc-3.3.11.jar;C:\Users\A715-42G\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-jdbc\6.1.19\spring-jdbc-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\orm\hibernate-core\6.5.3.Final\hibernate-core-6.5.3.Final.jar;C:\Users\A715-42G\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\A715-42G\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\A715-42G\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\A715-42G\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\A715-42G\.m2\repository\net\bytebuddy\byte-buddy\1.14.19\byte-buddy-1.14.19.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\A715-42G\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\A715-42G\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-jpa\3.3.11\spring-data-jpa-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-commons\3.3.11\spring-data-commons-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-orm\6.1.19\spring-orm-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-context\6.1.19\spring-context-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-tx\6.1.19\spring-tx-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-beans\6.1.19\spring-beans-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-aspects\6.1.19\spring-aspects-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.3.11\spring-boot-starter-web-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.3.11\spring-boot-starter-json-3.3.11.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.17.3\jackson-module-parameter-names-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.3.11\spring-boot-starter-tomcat-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.40\tomcat-embed-core-10.1.40.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.40\tomcat-embed-websocket-10.1.40.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-web\6.1.19\spring-web-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-webmvc\6.1.19\spring-webmvc-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-expression\6.1.19\spring-expression-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-devtools\3.3.11\spring-boot-devtools-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot\3.3.11\spring-boot-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.3.11\spring-boot-autoconfigure-3.3.11.jar;C:\Users\A715-42G\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\A715-42G\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-core\6.1.19\spring-core-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-jcl\6.1.19\spring-jcl-6.1.19.jar;C:\Users\A715-42G\.m2\repository\com\mysql\mysql-connector-j\8.3.0\mysql-connector-j-8.3.0.jar;C:\Users\A715-42G\.m2\repository\org\projectlombok\lombok\1.18.38\lombok-1.18.38.jar;C:\Users\A715-42G\.m2\repository\org\mapstruct\mapstruct\1.5.5.Final\mapstruct-1.5.5.Final.jar;C:\Users\A715-42G\.m2\repository\org\mapstruct\mapstruct-processor\1.5.5.Final\mapstruct-processor-1.5.5.Final.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-validation\3.3.11\spring-boot-starter-validation-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.40\tomcat-embed-el-10.1.40.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\validator\hibernate-validator\8.0.2.Final\hibernate-validator-8.0.2.Final.jar;C:\Users\A715-42G\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-ui\2.0.2\springdoc-openapi-starter-webmvc-ui-2.0.2.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-api\2.0.2\springdoc-openapi-starter-webmvc-api-2.0.2.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-common\2.0.2\springdoc-openapi-starter-common-2.0.2.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-core-jakarta\2.2.7\swagger-core-jakarta-2.2.7.jar;C:\Users\A715-42G\.m2\repository\org\apache\commons\commons-lang3\3.14.0\commons-lang3-3.14.0.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-annotations-jakarta\2.2.7\swagger-annotations-jakarta-2.2.7.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-models-jakarta\2.2.7\swagger-models-jakarta-2.2.7.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-yaml\2.17.3\jackson-dataformat-yaml-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\webjars\swagger-ui\4.15.5\swagger-ui-4.15.5.jar;C:\Users\A715-42G\.m2\repository\org\webjars\webjars-locator-core\0.58\webjars-locator-core-0.58.jar;C:\Users\A715-42G\.m2\repository\io\github\classgraph\classgraph\4.8.149\classgraph-4.8.149.jar;D:\LT_Web\SpringBoot\java-banking-phase2\backend\common-service\target\classes;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.17.3\jackson-databind-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\apache\dubbo\dubbo-spring-boot-starter\3.3.2\dubbo-spring-boot-starter-3.3.2.jar;C:\Users\A715-42G\.m2\repository\org\apache\dubbo\dubbo-spring-boot-autoconfigure\3.3.2\dubbo-spring-boot-autoconfigure-3.3.2.jar;C:\Users\A715-42G\.m2\repository\org\apache\dubbo\dubbo-spring-boot-autoconfigure-compatible\3.3.2\dubbo-spring-boot-autoconfigure-compatible-3.3.2.jar;C:\Users\A715-42G\.m2\repository\org\apache\dubbo\dubbo\3.3.2\dubbo-3.3.2.jar;C:\Users\A715-42G\.m2\repository\org\javassist\javassist\3.30.2-GA\javassist-3.30.2-GA.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-all\4.1.119.Final\netty-all-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-dns\4.1.119.Final\netty-codec-dns-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-haproxy\4.1.119.Final\netty-codec-haproxy-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-http\4.1.119.Final\netty-codec-http-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-http2\4.1.119.Final\netty-codec-http2-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-memcache\4.1.119.Final\netty-codec-memcache-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-mqtt\4.1.119.Final\netty-codec-mqtt-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-redis\4.1.119.Final\netty-codec-redis-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-smtp\4.1.119.Final\netty-codec-smtp-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-socks\4.1.119.Final\netty-codec-socks-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-stomp\4.1.119.Final\netty-codec-stomp-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-xml\4.1.119.Final\netty-codec-xml-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-handler-proxy\4.1.119.Final\netty-handler-proxy-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-handler-ssl-ocsp\4.1.119.Final\netty-handler-ssl-ocsp-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-resolver-dns\4.1.119.Final\netty-resolver-dns-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-rxtx\4.1.119.Final\netty-transport-rxtx-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-sctp\4.1.119.Final\netty-transport-sctp-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-udt\4.1.119.Final\netty-transport-udt-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-classes-kqueue\4.1.119.Final\netty-transport-classes-kqueue-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-resolver-dns-classes-macos\4.1.119.Final\netty-resolver-dns-classes-macos-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final-linux-x86_64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final-linux-aarch_64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final-linux-riscv64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-kqueue\4.1.119.Final\netty-transport-native-kqueue-4.1.119.Final-osx-x86_64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-kqueue\4.1.119.Final\netty-transport-native-kqueue-4.1.119.Final-osx-aarch_64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-resolver-dns-native-macos\4.1.119.Final\netty-resolver-dns-native-macos-4.1.119.Final-osx-x86_64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-resolver-dns-native-macos\4.1.119.Final\netty-resolver-dns-native-macos-4.1.119.Final-osx-aarch_64.jar;C:\Users\A715-42G\.m2\repository\org\apache\dubbo\hessian-lite\4.0.3\hessian-lite-4.0.3.jar;C:\Users\A715-42G\.m2\repository\com\alibaba\fastjson2\fastjson2\2.0.53\fastjson2-2.0.53.jar;C:\Users\A715-42G\.m2\repository\com\google\protobuf\protobuf-java\3.25.5\protobuf-java-3.25.5.jar;C:\Users\A715-42G\.m2\repository\org\apache\curator\curator-framework\5.1.0\curator-framework-5.1.0.jar;C:\Users\A715-42G\.m2\repository\org\apache\curator\curator-client\5.1.0\curator-client-5.1.0.jar;C:\Users\A715-42G\.m2\repository\com\google\guava\guava\27.0.1-jre\guava-27.0.1-jre.jar;C:\Users\A715-42G\.m2\repository\com\google\guava\failureaccess\1.0.1\failureaccess-1.0.1.jar;C:\Users\A715-42G\.m2\repository\com\google\guava\listenablefuture\9999.0-empty-to-avoid-conflict-with-guava\listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar;C:\Users\A715-42G\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\A715-42G\.m2\repository\org\checkerframework\checker-qual\2.5.2\checker-qual-2.5.2.jar;C:\Users\A715-42G\.m2\repository\com\google\errorprone\error_prone_annotations\2.2.0\error_prone_annotations-2.2.0.jar;C:\Users\A715-42G\.m2\repository\com\google\j2objc\j2objc-annotations\1.1\j2objc-annotations-1.1.jar;C:\Users\A715-42G\.m2\repository\org\codehaus\mojo\animal-sniffer-annotations\1.17\animal-sniffer-annotations-1.17.jar;C:\Users\A715-42G\.m2\repository\org\apache\zookeeper\zookeeper\3.7.1\zookeeper-3.7.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\zookeeper\zookeeper-jute\3.7.1\zookeeper-jute-3.7.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\yetus\audience-annotations\0.12.0\audience-annotations-0.12.0.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-handler\4.1.119.Final\netty-handler-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-common\4.1.119.Final\netty-common-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-resolver\4.1.119.Final\netty-resolver-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-buffer\4.1.119.Final\netty-buffer-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport\4.1.119.Final\netty-transport-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-unix-common\4.1.119.Final\netty-transport-native-unix-common-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec\4.1.119.Final\netty-codec-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-classes-epoll\4.1.119.Final\netty-transport-classes-epoll-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\org\slf4j\slf4j-api\2.0.17\slf4j-api-2.0.17.jar;C:\Users\A715-42G\.m2\repository\org\apache\curator\curator-recipes\5.5.0\curator-recipes-5.5.0.jar;C:\Users\A715-42G\.m2\repository\org\apache\curator\curator-x-discovery\5.5.0\curator-x-discovery-5.5.0.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-starter-vault-config\4.1.1\spring-cloud-starter-vault-config-4.1.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\httpcomponents\client5\httpclient5\5.3.1\httpclient5-5.3.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\httpcomponents\core5\httpcore5-h2\5.2.5\httpcore5-h2-5.2.5.jar;C:\Users\A715-42G\.m2\repository\org\apache\httpcomponents\core5\httpcore5\5.2.5\httpcore5-5.2.5.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-starter\4.1.2\spring-cloud-starter-4.1.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-context\4.1.2\spring-cloud-context-4.1.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-commons\4.1.2\spring-cloud-commons-4.1.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-rsa\1.1.2\spring-security-rsa-1.1.2.jar;C:\Users\A715-42G\.m2\repository\org\bouncycastle\bcprov-jdk18on\1.77\bcprov-jdk18on-1.77.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-vault-config\4.1.1\spring-cloud-vault-config-4.1.1.jar;C:\Users\A715-42G\.m2\repository\org\springframework\vault\spring-vault-core\3.1.1\spring-vault-core-3.1.1.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-data-redis\3.3.11\spring-boot-starter-data-redis-3.3.11.jar;C:\Users\A715-42G\.m2\repository\io\lettuce\lettuce-core\6.3.2.RELEASE\lettuce-core-6.3.2.RELEASE.jar;C:\Users\A715-42G\.m2\repository\io\projectreactor\reactor-core\3.6.16\reactor-core-3.6.16.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-redis\3.3.11\spring-data-redis-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-keyvalue\3.3.11\spring-data-keyvalue-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-oxm\6.1.19\spring-oxm-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-context-support\6.1.19\spring-context-support-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-stream\4.2.1\spring-cloud-stream-4.2.1.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-messaging\6.1.19\spring-messaging-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\integration\spring-integration-core\6.3.9\spring-integration-core-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\integration\spring-integration-jmx\6.3.9\spring-integration-jmx-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\retry\spring-retry\2.0.11\spring-retry-2.0.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-function-context\4.2.2\spring-cloud-function-context-4.2.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-function-core\4.2.2\spring-cloud-function-core-4.2.2.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-joda\2.17.3\jackson-datatype-joda-2.17.3.jar;C:\Users\A715-42G\.m2\repository\joda-time\joda-time\2.10.14\joda-time-2.10.14.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-starter-stream-kafka\4.2.1\spring-cloud-starter-stream-kafka-4.2.1.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-stream-binder-kafka\4.2.1\spring-cloud-stream-binder-kafka-4.2.1.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-stream-binder-kafka-core\4.2.1\spring-cloud-stream-binder-kafka-core-4.2.1.jar;C:\Users\A715-42G\.m2\repository\org\springframework\integration\spring-integration-kafka\6.3.9\spring-integration-kafka-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\kafka\spring-kafka\3.2.8\spring-kafka-3.2.8.jar;C:\Users\A715-42G\.m2\repository\org\apache\kafka\kafka-clients\3.7.2\kafka-clients-3.7.2.jar;C:\Users\A715-42G\.m2\repository\com\github\luben\zstd-jni\1.5.6-4\zstd-jni-1.5.6-4.jar;C:\Users\A715-42G\.m2\repository\org\lz4\lz4-java\1.8.0\lz4-java-1.8.0.jar;C:\Users\A715-42G\.m2\repository\org\xerial\snappy\snappy-java\1.1.10.5\snappy-java-1.1.10.5.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.3.11\spring-boot-starter-security-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-aop\6.1.19\spring-aop-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-config\6.3.9\spring-security-config-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-web\6.3.9\spring-security-web-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-oauth2-resource-server\3.3.11\spring-boot-starter-oauth2-resource-server-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-core\6.3.9\spring-security-core-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-crypto\6.3.9\spring-security-crypto-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-oauth2-resource-server\6.3.9\spring-security-oauth2-resource-server-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-oauth2-core\6.3.9\spring-security-oauth2-core-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-oauth2-jose\6.3.9\spring-security-oauth2-jose-6.3.9.jar;C:\Users\A715-42G\.m2\repository\com\nimbusds\nimbus-jose-jwt\9.37.3\nimbus-jose-jwt-9.37.3.jar;C:\Users\A715-42G\.m2\repository\com\github\stephenc\jcip\jcip-annotations\1.0-1\jcip-annotations-1.0-1.jar;C:\Users\A715-42G\.m2\repository\org\keycloak\keycloak-admin-client\26.0.0\keycloak-admin-client-26.0.0.jar;C:\Users\A715-42G\.m2\repository\org\keycloak\keycloak-client-common-synced\26.0.0\keycloak-client-common-synced-26.0.0.jar;C:\Users\A715-42G\.m2\repository\org\jboss\logging\commons-logging-jboss-logging\1.0.0.Final\commons-logging-jboss-logging-1.0.0.Final.jar;C:\Users\A715-42G\.m2\repository\org\apache\httpcomponents\httpclient\4.5.14\httpclient-4.5.14.jar;C:\Users\A715-42G\.m2\repository\org\apache\httpcomponents\httpcore\4.4.16\httpcore-4.4.16.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.17.3\jackson-core-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.17.3\jackson-annotations-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.17.3\jackson-datatype-jdk8-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.17.3\jackson-datatype-jsr310-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\eclipse\microprofile\openapi\microprofile-openapi-api\3.1.1\microprofile-openapi-api-3.1.1.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-client\6.2.9.Final\resteasy-client-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-client-api\6.2.9.Final\resteasy-client-api-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-core-spi\6.2.9.Final\resteasy-core-spi-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-core\6.2.9.Final\resteasy-core-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\org\jboss\jandex\2.4.5.Final\jandex-2.4.5.Final.jar;C:\Users\A715-42G\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\A715-42G\.m2\repository\com\ibm\async\asyncutil\0.1.0\asyncutil-0.1.0.jar;C:\Users\A715-42G\.m2\repository\commons-codec\commons-codec\1.16.1\commons-codec-1.16.1.jar;C:\Users\A715-42G\.m2\repository\jakarta\ws\rs\jakarta.ws.rs-api\3.1.0\jakarta.ws.rs-api-3.1.0.jar;C:\Users\A715-42G\.m2\repository\org\reactivestreams\reactive-streams\1.0.4\reactive-streams-1.0.4.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-multipart-provider\6.2.9.Final\resteasy-multipart-provider-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\jakarta\mail\jakarta.mail-api\2.1.3\jakarta.mail-api-2.1.3.jar;C:\Users\A715-42G\.m2\repository\org\eclipse\angus\angus-mail\2.0.3\angus-mail-2.0.3.jar;C:\Users\A715-42G\.m2\repository\org\apache\james\apache-mime4j-dom\0.8.11\apache-mime4j-dom-0.8.11.jar;C:\Users\A715-42G\.m2\repository\org\apache\james\apache-mime4j-core\0.8.11\apache-mime4j-core-0.8.11.jar;C:\Users\A715-42G\.m2\repository\org\apache\james\apache-mime4j-storage\0.8.11\apache-mime4j-storage-0.8.11.jar;C:\Users\A715-42G\.m2\repository\commons-io\commons-io\2.11.0\commons-io-2.11.0.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-jackson2-provider\6.2.9.Final\resteasy-jackson2-provider-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\jakarta\rs\jackson-jakarta-rs-base\2.17.3\jackson-jakarta-rs-base-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\jakarta\rs\jackson-jakarta-rs-json-provider\2.17.3\jackson-jakarta-rs-json-provider-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\module\jackson-module-jakarta-xmlbind-annotations\2.17.3\jackson-module-jakarta-xmlbind-annotations-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\github\java-json-tools\json-patch\1.13\json-patch-1.13.jar;C:\Users\A715-42G\.m2\repository\com\github\java-json-tools\msg-simple\1.2\msg-simple-1.2.jar;C:\Users\A715-42G\.m2\repository\com\github\java-json-tools\btf\1.3\btf-1.3.jar;C:\Users\A715-42G\.m2\repository\com\github\java-json-tools\jackson-coreutils\2.0\jackson-coreutils-2.0.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-jaxb-provider\6.2.9.Final\resteasy-jaxb-provider-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\codemodel\4.0.5\codemodel-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-jxc\4.0.5\jaxb-jxc-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-xjc\4.0.5\jaxb-xjc-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\xsom\4.0.5\xsom-4.0.5.jar;C:\Users\A715-42G\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\A715-42G\.m2\repository\com\sun\istack\istack-commons-tools\4.1.2\istack-commons-tools-4.1.2.jar;C:\Users\A715-42G\.m2\repository\com\sun\xml\bind\external\relaxng-datatype\4.0.3\relaxng-datatype-4.0.3.jar;C:\Users\A715-42G\.m2\repository\com\sun\xml\bind\external\rngom\4.0.3\rngom-4.0.3.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Saigon, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, java.vm.specification.version=17, os.name=Windows 10, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-17\bin, sun.java.command=com.example.transaction_service.TransactionServiceApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@519e649c, com.sun.management.jmxremote=, jdk.debug=release, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, hibernate.cdi.extensions=true, user.home=C:\Users\A715-42G, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-01-17, java.home=C:\Program Files\Java\jdk-17, file.separator=\, spring.output.ansi.enabled=always, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.6+9-LTS-190, user.name=A715-42G, spring.jmx.enabled=true, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\A715-42G\AppData\Local\Temp\, catalina.home=C:\Users\A715-42G\AppData\Local\Temp\tomcat.8088.7699002437063996728, java.version=17.0.6, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=D:\LT_Web\SpringBoot\java-banking-phase2, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=9080, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\A715-42G\AppData\Local\Temp\tomcat.8088.7699002437063996728, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@22656604, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-17\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;D:\Document\xxx\apache-maven-3.9.1\bin;C:\Program Files (x86)\Dev-Cpp\MinGW64\bin;C:\Program Files\Git\cmd;C:\Program Files\Java\jdk-17\bin;C:\XamPP\php;D:\LT_Web\SpringBoot\SpringBootCLI\spring-3.2.1\bin;D:\sqlite;D:\Document\Java\Maven\apache-maven-3.9.9\bin;D:\Document\Java\Maven\apache-maven-3.9.9\bin;C:\Program Files\Cloudflare\Cloudflare WARP\;C:\ProgramData\chocolatey\bin;D:\KienLongBank\Vault;D:\GrafanaLabs\grafana\bin;D:\KienLongBank\InfluxData\influxdb-1.8.10-1;D:\Document\Work\Redis;C:\Program Files\Docker\Docker\resources\bin;D:\nodejs\nvm;C:\nvm4w\nodejs;C:\Program Files\nodejs\;C:\Users\A715-42G\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\A715-42G\AppData\Local\Programs\Python\Python310\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\A715-42G\AppData\Local\Programs\Eclipse Adoptium\jdk-17.0.3.7-hotspot\bin;C:\Users\A715-42G\AppData\Local\Microsoft\WindowsApps;C:\Users\A715-42G\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\Azure Data Studio\bin;C:\Program Files\Git\bin;D:\Document\HQT_ATCSDL\MongoDB\mongosh-1.8.2-win32-x64\bin;C:\XamPP\php;C:\Program Files\Azure Data Studio\bin;D:\nodejs\nvm;C:\nvm4w\nodejs;C:\Users\A715-42G\AppData\Roaming\npm;D:\Document\cursor\resources\app\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, emulated-client, sharing, java.vm.version=17.0.6+9-LTS-190, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=61.0, LOGGED_APPLICATION_NAME=[transaction-service] } MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {} MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.example.transaction_service.entity.Transaction] is safe MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@11ef7cc3] under count; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@3a3328c3] under every; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@4bc79794] under any; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1bfed93] under sinh; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1c29e0ef] under cosh; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@32206743] under tanh; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@69e14116] under pi; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@174cfacc] under log; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : length -> character_length MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@79eefd9] under position; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@3e139f2b] under overlay; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@773c7fbb] under trim; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@24ddef6e] under cast; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@578120d7] under collate; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@39ecea5e] under extract; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@174f303] under ifnull; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@4284b971] under pad; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@7e3c4b04] under str; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@36a8063f] under format; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@31f1cffc] under timestampadd; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@4da68c01] under timestampdiff; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@306a25f6] under current_date; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@13a1178e] under current_time; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@78d4457b] under current_timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current date -> current_date MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current time -> current_time MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1a914b1e] under local_date; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7b35882f] under local_time; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6033fda0] under local_datetime; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3a969340] under offset_datetime; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local date -> local_date MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local time -> local_time MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2a4fe6b7] under instant; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current_instant -> instant MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@5960f12b] under sql; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@174cfacc MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@3f8b738] under lpad; prior registration was NamedSqmFunctionTemplate(lpad) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@1e4c0616] under rpad; prior registration was NamedSqmFunctionTemplate(rpad) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : day -> dayofmonth MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@31727c09] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@79eefd9 MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@35cd7e75] under trunc; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : truncate -> trunc MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@76cf8aa0] under bitand; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@198f3448] under bitor; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6a669a31] under bitxor; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@34866fde] under bitnot; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@3e167964] under format; prior registration was org.hibernate.dialect.function.FormatFunction@36a8063f MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@7b35882f MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@6033fda0 MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5e5b279a] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@69e14116 MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@328972] under chr; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : char -> chr MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7cdfe35] under sysdate; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@71c4f34a] under listagg; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - abs(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double acos(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - addtime(TIME datetime, TIME time) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean any(BOOLEAN arg) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer ascii(STRING arg) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double asin(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - avg(arg) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bit_and(arg) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bit_or(arg) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitand(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitnot(arg) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitor(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitxor(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - cast(arg as Type) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - ceiling(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Character char(INTEGER arg) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Character chr(INTEGER arg) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]]) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String collate(STRING string as COLLATION collation) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]]) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double cos(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double cosh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double cot(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Long count([distinct ]{arg|*}) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer crc32(arg) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date curdate() MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date current date MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time current time MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current timestamp MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date current_date MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Instant current_instant MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time current_time MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current_timestamp MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time curtime() MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date date(arg) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer datediff(DATE end, DATE start) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer day(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String dayname(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofmonth(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofweek(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofyear(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double degrees(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean every(BOOLEAN arg) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double exp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - floor(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]]) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer hour(TIME arg) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - ifnull(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Instant instant MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]]) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date last_day(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]]) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String left(STRING string, INTEGER length) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double ln(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local date MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local datetime MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local time MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local_date MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local_datetime MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local_time MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtime MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtimestamp MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start]) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1]) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double log10(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double log2(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String lower(STRING string) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String lpad(string, length[, padding]) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters]) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - max(COMPARABLE arg) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String md5(arg) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer microsecond(TIME arg) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - min(COMPARABLE arg) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer minute(TIME arg) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer month(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String monthname(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp now() MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - nullif(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset datetime MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset_datetime MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length]) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character]) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double pi MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer position(STRING pattern in STRING string) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer quarter(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double radians(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double rand([INTEGER seed]) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String repeat(STRING string, INTEGER times) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String reverse(STRING arg) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String right(STRING string, INTEGER length) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places]) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String rpad(string, length[, padding]) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters]) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer second(TIME arg) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String sha(arg) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String sha1(arg) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String sha2(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer sign(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double sin(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double sinh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String soundex(arg) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String space(INTEGER arg) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Object sql MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double sqrt(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String str(arg) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length]) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length]) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - subtime(TIME datetime, TIME time) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - sum(arg) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp sysdate() MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double tan(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double tanh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String time(arg) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1]) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - trunc( ... ) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - truncate( ... ) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String upper(STRING string) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date utc_date MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time utc_time MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp utc_timestamp MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_pop(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_samp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double variance(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer week(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer year(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG org.hibernate.orm.query.plan.cache - Starting QueryInterpretationCache(2048) MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-06-10 23:45:26 [restartedMain] DEBUG o.h.e.i.EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow MDC:[traceId=, spanId=]
2025-06-10 23:45:27 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.example.transaction_service.entity.Transaction] is safe MDC:[traceId=, spanId=]
2025-06-10 23:45:27 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-10 23:45:27 [restartedMain] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.example.transaction_service.entity.Transaction]: private accessor [amount] MDC:[traceId=, spanId=]
2025-06-10 23:45:27 [restartedMain] DEBUG o.h.orm.model.mapping.creation - Starting post-init callbacks MDC:[traceId=, spanId=]
2025-06-10 23:45:27 [restartedMain] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(com.example.transaction_service.entity.Transaction) `staticFetchableList` generator MDC:[traceId=, spanId=]
2025-06-10 23:45:27 [restartedMain] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 23:45:27 [restartedMain] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction)] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 23:45:27 [restartedMain] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction.updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 23:45:27 [restartedMain] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 23:45:27 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-10 23:45:27 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select id from tbl_transaction where id=? MDC:[traceId=, spanId=]
2025-06-10 23:45:27 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into tbl_transaction (amount,bank_type,created_at,created_by,currency,description,destination_bank_code,destination_bank_name,failed_reason,from_account_number,reference_code,status,timestamp,to_account_number,type,updated_at,updated_by,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) MDC:[traceId=, spanId=]
2025-06-10 23:45:27 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update tbl_transaction set amount=?,bank_type=?,created_at=?,created_by=?,currency=?,description=?,destination_bank_code=?,destination_bank_name=?,failed_reason=?,from_account_number=?,reference_code=?,status=?,timestamp=?,to_account_number=?,type=?,updated_at=?,updated_by=? where id=? MDC:[traceId=, spanId=]
2025-06-10 23:45:27 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from tbl_transaction where id=? MDC:[traceId=, spanId=]
2025-06-10 23:45:27 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration) MDC:[traceId=, spanId=]
2025-06-10 23:45:27 [restartedMain] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@20e3df11] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@26b207bd] MDC:[traceId=, spanId=]
2025-06-10 23:45:27 [restartedMain] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named HQL queries MDC:[traceId=, spanId=]
2025-06-10 23:45:27 [restartedMain] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named SQL queries MDC:[traceId=, spanId=]
2025-06-10 23:45:27 [restartedMain] DEBUG org.hibernate.mapping.Table - No alter strings for table : tbl_transaction MDC:[traceId=, spanId=]
2025-06-10 23:45:27 [restartedMain] DEBUG o.h.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@40d61520 MDC:[traceId=, spanId=]
2025-06-10 23:45:27 [restartedMain] DEBUG o.h.internal.SessionFactoryRegistry - Registering SessionFactory: 9d8f5c77-3242-44a5-b86b-6f45a754a828 (<unnamed>) MDC:[traceId=, spanId=]
2025-06-10 23:45:27 [restartedMain] DEBUG o.h.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured MDC:[traceId=, spanId=]
2025-06-10 23:45:27 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Instantiated SessionFactory MDC:[traceId=, spanId=]
2025-06-10 23:45:27 [restartedMain] DEBUG o.h.s.internal.StatisticsInitiator - Statistics initialized [enabled=false] MDC:[traceId=, spanId=]
2025-06-10 23:45:28 [restartedMain] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy3/jdk.proxy3.$Proxy223.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.example.transaction_service.TransactionServiceApplication.main(TransactionServiceApplication.java:15)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-06-10 23:45:28 [restartedMain] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy3/jdk.proxy3.$Proxy223.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.getCountQuery(JpaQueryLookupStrategy.java:204)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:171)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.example.transaction_service.TransactionServiceApplication.main(TransactionServiceApplication.java:15)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-06-10 23:45:28 [restartedMain] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy3/jdk.proxy3.$Proxy223.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.getCountQuery(JpaQueryLookupStrategy.java:204)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:171)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.example.transaction_service.TransactionServiceApplication.main(TransactionServiceApplication.java:15)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-06-10 23:45:28 [restartedMain] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy3/jdk.proxy3.$Proxy223.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.example.transaction_service.TransactionServiceApplication.main(TransactionServiceApplication.java:15)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-06-10 23:45:32 [restartedMain] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-06-10 23:45:32 [restartedMain] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator MDC:[traceId=, spanId=]
2025-06-10 23:45:32 [restartedMain] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory MDC:[traceId=, spanId=]
2025-06-10 23:45:32 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-06-10 23:45:32 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader MDC:[traceId=, spanId=]
2025-06-10 23:45:32 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-06-10 23:45:32 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-06-10 23:45:32 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-06-10 23:45:32 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-06-10 23:45:32 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-06-10 23:45:32 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-06-10 23:45:32 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-06-10 23:45:32 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-06-10 23:45:32 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-06-10 23:45:32 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-06-10 23:45:32 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-06-10 23:45:37 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 23:45:37 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 23:45:37 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 23:45:37 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(4))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 23:45:37 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3b1e581a MDC:[traceId=, spanId=]
2025-06-10 23:45:37 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).status)  MDC:[traceId=, spanId=]
2025-06-10 23:45:37 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@155e1087 MDC:[traceId=, spanId=]
2025-06-10 23:45:37 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(4).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 23:45:37 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(4)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(4).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 23:45:37 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(4)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 23:45:37 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 23:45:37 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(4) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(4))@1672496227 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 23:45:37 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 23:45:37 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 23:45:48 [SpringContextShutdownHook] DEBUG o.h.internal.SessionFactoryImpl - HHH000031: Closing MDC:[traceId=, spanId=]
2025-06-10 23:45:48 [SpringContextShutdownHook] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@6b202733] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@26b207bd] MDC:[traceId=, spanId=]
2025-06-10 23:45:48 [SpringContextShutdownHook] DEBUG o.h.s.i.AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries MDC:[traceId=, spanId=]
2025-06-10 23:45:48 [SpringContextShutdownHook] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries MDC:[traceId=, spanId=]
2025-06-10 23:46:07 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final MDC:[traceId=, spanId=]
2025-06-10 23:46:07 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-06-10 23:46:07 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-06-10 23:46:07 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-06-10 23:46:07 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-06-10 23:46:07 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-06-10 23:46:07 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-06-10 23:46:07 [background-preinit] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-06-10 23:46:07 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-06-10 23:46:07 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-06-10 23:46:07 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-06-10 23:46:07 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-06-10 23:46:07 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-06-10 23:46:07 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.h.jpa.internal.util.LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@245ba335
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/LT_Web/SpringBoot/java-banking-phase2/backend/transaction-service/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.example.transaction_service.entity.Transaction]
	Mapping files names []
	Properties [] MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator]. MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator]. MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG org.hibernate.cfg.Environment - HHH000206: 'hibernate.properties' not found MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator] MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator] MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator] MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator] MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned] MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator] MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator] MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator] MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator] MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator] MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.h.c.i.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5df459f0 MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5df459f0 MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@5df459f0 MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@4f79e585 MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@4f79e585 MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@2a3e262f MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@2a3e262f MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@7c2c83ca MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@7c2c83ca MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@3686e66 MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@3686e66 MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@3686e66 MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@3bdf643 MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@3bdf643 MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@3bdf643 MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@58e9b745 MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@58e9b745 MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@40c34d41 MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@981061 MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@981061 MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@6cfbe1df MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@793d309a MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@234ed3b9 MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@234ed3b9 MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@234ed3b9 MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@6315c4a9 MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@6315c4a9 MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@6315c4a9 MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@50d3340d MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@50d3340d MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@50d3340d MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@40fa776d MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@40fa776d MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@40fa776d MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@15fcb7d0 MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@15fcb7d0 MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@15fcb7d0 MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@5881194a MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@5881194a MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@11bb2d0b MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@11bb2d0b MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@269614e MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@269614e MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@269614e MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@725b14e4 MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@22c018ac MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@22c018ac MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@6a5baa8a MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@2371c59e MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@2371c59e MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@2371c59e MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@9271920 MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@2b8065d0 MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@1cb885d0 MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@31c8feec MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@31c8feec MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@171fec MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@171fec MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@281144db MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@70dfd20c MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6167d65 MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@3ec6fa34 MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@1c5346ab MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@1292b89f MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@275a02fd MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@275a02fd MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@2ec45b78 MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@2ec45b78 MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@28242615 MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@28242615 MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@2f7525ce MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@2f7525ce MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@584f9737 MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@584f9737 MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@545c08dd MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5dc188cd MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@5b9c8dee MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@5b9c8dee MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@7fce5f85 MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4be0ba41 MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1a36c410 MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@257ad945 MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@257ad945 MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@28c59818 MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@66390df3 MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@4a035360 MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@4a035360 MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@39401b94 MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@39401b94 MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@3dc151fc MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@3dc151fc MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@3dc151fc MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@13399522 MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@13399522 MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@13399522 MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@43f14c76 MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@7ad47327 MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@4dad8330 MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@4dad8330 MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@12629f22 MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@12629f22 MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@12629f22 MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@5bb9f3e4 MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@22dfeff MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@23b85989 MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@23b85989 MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@25255953 MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@25255953 MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@25255953 MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@3197b8c0 MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@3197b8c0 MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@5ca0620b MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@5ca0620b MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@3db51c07 MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@3db51c07 MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@32d52523 MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@32d52523 MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@3e08ca01 MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@3e08ca01 MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@616757f1 MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@74272afe MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@5b05c0e5 MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5b05c0e5 MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@15d31b2c MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@38ef325 MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@35803feb MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@103e7e8b MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@1d390ddb MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@69dac282 MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@5d11c735 MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@3e38203a MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@6bbab5f3 MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@71ef59f1] into BootstrapContext; was [null] MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@71ef59f1) [was null] MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@589adf0e] into BootstrapContext; was [null] MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@2a692ef3] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@53202a07] MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@71ef59f1] MDC:[traceId=, spanId=]
2025-06-10 23:46:17 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@71ef59f1] MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Database ->
	   name : MySQL
	version : 8.0.32
	  major : 8
	  minor : 0 MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Driver ->
	   name : MySQL Connector/J
	version : mysql-connector-j-8.3.0 (Revision: 805f872a57875f311cb82487efcfb070411a3fa0)
	  major : 8
	  minor : 3 MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - JDBC version : 4.2 MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default) MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG org.hibernate.orm.dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQL8Dialect, version: 8.0 MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3edd8e68) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@72ad5a35) MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5a71de8e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@b6f3ab) MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@52ca931b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4a2e0785) MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1eff25e0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2963a63f) MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2fb7aa43) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@159f921f) MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@72a86569) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@464e775d) MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@54392865) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3ddf5797) MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@cedfe68) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@392c8437) MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@244be977) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@63ef7186) MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor) MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor) MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor) MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT)) MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT)) MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@419037f4 MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@15d31b2c` MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1e9c55f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7538427] MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.boot.model.relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}] MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Transaction MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity com.example.transaction_service.entity.Transaction on table tbl_transaction MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE') MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.example.transaction_service.entity.Transaction] is safe MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property id with lazy=false MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:id] MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for id MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.id MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property id MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, assigned, , ...) MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property amount with lazy=false MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:amount] MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for amount MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.amount MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property amount MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property bankType with lazy=false MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:bankType] MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for bankType MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.bank_type MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property bankType MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:createdAt] MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for createdAt MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.created_at MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property createdAt MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property createdBy with lazy=false MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:createdBy] MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for createdBy MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.created_by MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property createdBy MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property currency with lazy=false MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:currency] MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for currency MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.currency MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property currency MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property description with lazy=false MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:description] MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for description MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.description MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property description MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property destinationBankCode with lazy=false MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:destinationBankCode] MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for destinationBankCode MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.destination_bank_code MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property destinationBankCode MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property destinationBankName with lazy=false MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:destinationBankName] MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for destinationBankName MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.destination_bank_name MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property destinationBankName MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property failedReason with lazy=false MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:failedReason] MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for failedReason MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.failed_reason MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property failedReason MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property fromAccountNumber with lazy=false MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:fromAccountNumber] MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for fromAccountNumber MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.from_account_number MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property fromAccountNumber MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property referenceCode with lazy=false MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:referenceCode] MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for referenceCode MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.reference_code MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property referenceCode MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property status with lazy=false MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:status] MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for status MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.status MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property status MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property timestamp with lazy=false MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:timestamp] MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for timestamp MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.timestamp MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property timestamp MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property toAccountNumber with lazy=false MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:toAccountNumber] MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for toAccountNumber MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.to_account_number MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property toAccountNumber MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property type with lazy=false MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:type] MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for type MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.type MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property type MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property updatedAt with lazy=false MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:updatedAt] MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for updatedAt MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.updated_at MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property updatedAt MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property updatedBy with lazy=false MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.example.transaction_service.entity.Transaction:updatedBy] MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for updatedBy MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_transaction.updated_by MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.model.internal.PropertyBinder - Building property updatedBy MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: com.example.transaction_service.entity MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.j.e.i.CallbackDefinitionResolverLegacyImpl - Adding touchForUpdate as PreUpdate callback for entity com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.j.e.i.CallbackDefinitionResolverLegacyImpl - Adding prePersist as PrePersist callback for entity com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.j.e.i.CallbackDefinitionResolverLegacyImpl - Adding touchForCreate as PrePersist callback for entity com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bankType MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for createdAt MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for createdBy MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for currency MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for description MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for destinationBankCode MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for destinationBankName MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for failedReason MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for fromAccountNumber MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for referenceCode MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for timestamp MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for toAccountNumber MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for type MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for updatedAt MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for updatedBy MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [tbl_transaction] MDC:[traceId=, spanId=]
2025-06-10 23:46:18 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Building session factory MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Instantiating SessionFactory with settings: {jdk.tls.rejectClientInitiatedRenegotiation=true, java.specification.version=17, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@2622de72, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=D:\LT_Web\SpringBoot\java-banking-phase2\backend\transaction-service\target\classes;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-actuator\3.3.11\spring-boot-starter-actuator-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter\3.3.11\spring-boot-starter-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.3.11\spring-boot-starter-logging-3.3.11.jar;C:\Users\A715-42G\.m2\repository\ch\qos\logback\logback-classic\1.5.18\logback-classic-1.5.18.jar;C:\Users\A715-42G\.m2\repository\ch\qos\logback\logback-core\1.5.18\logback-core-1.5.18.jar;C:\Users\A715-42G\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.23.1\log4j-to-slf4j-2.23.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\logging\log4j\log4j-api\2.23.1\log4j-api-2.23.1.jar;C:\Users\A715-42G\.m2\repository\org\slf4j\jul-to-slf4j\2.0.17\jul-to-slf4j-2.0.17.jar;C:\Users\A715-42G\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\A715-42G\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-actuator-autoconfigure\3.3.11\spring-boot-actuator-autoconfigure-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-actuator\3.3.11\spring-boot-actuator-3.3.11.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-observation\1.13.13\micrometer-observation-1.13.13.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-commons\1.13.13\micrometer-commons-1.13.13.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-jakarta9\1.13.13\micrometer-jakarta9-1.13.13.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-core\1.13.13\micrometer-core-1.13.13.jar;C:\Users\A715-42G\.m2\repository\org\hdrhistogram\HdrHistogram\2.2.2\HdrHistogram-2.2.2.jar;C:\Users\A715-42G\.m2\repository\org\latencyutils\LatencyUtils\2.0.3\LatencyUtils-2.0.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.3.11\spring-boot-starter-data-jpa-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.3.11\spring-boot-starter-aop-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\aspectj\aspectjweaver\1.9.24\aspectjweaver-1.9.24.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.3.11\spring-boot-starter-jdbc-3.3.11.jar;C:\Users\A715-42G\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-jdbc\6.1.19\spring-jdbc-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\orm\hibernate-core\6.5.3.Final\hibernate-core-6.5.3.Final.jar;C:\Users\A715-42G\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\A715-42G\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\A715-42G\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\A715-42G\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\A715-42G\.m2\repository\net\bytebuddy\byte-buddy\1.14.19\byte-buddy-1.14.19.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\A715-42G\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\A715-42G\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-jpa\3.3.11\spring-data-jpa-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-commons\3.3.11\spring-data-commons-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-orm\6.1.19\spring-orm-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-context\6.1.19\spring-context-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-tx\6.1.19\spring-tx-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-beans\6.1.19\spring-beans-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-aspects\6.1.19\spring-aspects-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.3.11\spring-boot-starter-web-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.3.11\spring-boot-starter-json-3.3.11.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.17.3\jackson-module-parameter-names-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.3.11\spring-boot-starter-tomcat-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.40\tomcat-embed-core-10.1.40.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.40\tomcat-embed-websocket-10.1.40.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-web\6.1.19\spring-web-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-webmvc\6.1.19\spring-webmvc-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-expression\6.1.19\spring-expression-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-devtools\3.3.11\spring-boot-devtools-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot\3.3.11\spring-boot-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.3.11\spring-boot-autoconfigure-3.3.11.jar;C:\Users\A715-42G\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\A715-42G\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-core\6.1.19\spring-core-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-jcl\6.1.19\spring-jcl-6.1.19.jar;C:\Users\A715-42G\.m2\repository\com\mysql\mysql-connector-j\8.3.0\mysql-connector-j-8.3.0.jar;C:\Users\A715-42G\.m2\repository\org\projectlombok\lombok\1.18.38\lombok-1.18.38.jar;C:\Users\A715-42G\.m2\repository\org\mapstruct\mapstruct\1.5.5.Final\mapstruct-1.5.5.Final.jar;C:\Users\A715-42G\.m2\repository\org\mapstruct\mapstruct-processor\1.5.5.Final\mapstruct-processor-1.5.5.Final.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-validation\3.3.11\spring-boot-starter-validation-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.40\tomcat-embed-el-10.1.40.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\validator\hibernate-validator\8.0.2.Final\hibernate-validator-8.0.2.Final.jar;C:\Users\A715-42G\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-ui\2.0.2\springdoc-openapi-starter-webmvc-ui-2.0.2.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-api\2.0.2\springdoc-openapi-starter-webmvc-api-2.0.2.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-common\2.0.2\springdoc-openapi-starter-common-2.0.2.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-core-jakarta\2.2.7\swagger-core-jakarta-2.2.7.jar;C:\Users\A715-42G\.m2\repository\org\apache\commons\commons-lang3\3.14.0\commons-lang3-3.14.0.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-annotations-jakarta\2.2.7\swagger-annotations-jakarta-2.2.7.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-models-jakarta\2.2.7\swagger-models-jakarta-2.2.7.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-yaml\2.17.3\jackson-dataformat-yaml-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\webjars\swagger-ui\4.15.5\swagger-ui-4.15.5.jar;C:\Users\A715-42G\.m2\repository\org\webjars\webjars-locator-core\0.58\webjars-locator-core-0.58.jar;C:\Users\A715-42G\.m2\repository\io\github\classgraph\classgraph\4.8.149\classgraph-4.8.149.jar;D:\LT_Web\SpringBoot\java-banking-phase2\backend\common-service\target\classes;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.17.3\jackson-databind-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\apache\dubbo\dubbo-spring-boot-starter\3.3.2\dubbo-spring-boot-starter-3.3.2.jar;C:\Users\A715-42G\.m2\repository\org\apache\dubbo\dubbo-spring-boot-autoconfigure\3.3.2\dubbo-spring-boot-autoconfigure-3.3.2.jar;C:\Users\A715-42G\.m2\repository\org\apache\dubbo\dubbo-spring-boot-autoconfigure-compatible\3.3.2\dubbo-spring-boot-autoconfigure-compatible-3.3.2.jar;C:\Users\A715-42G\.m2\repository\org\apache\dubbo\dubbo\3.3.2\dubbo-3.3.2.jar;C:\Users\A715-42G\.m2\repository\org\javassist\javassist\3.30.2-GA\javassist-3.30.2-GA.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-all\4.1.119.Final\netty-all-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-dns\4.1.119.Final\netty-codec-dns-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-haproxy\4.1.119.Final\netty-codec-haproxy-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-http\4.1.119.Final\netty-codec-http-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-http2\4.1.119.Final\netty-codec-http2-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-memcache\4.1.119.Final\netty-codec-memcache-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-mqtt\4.1.119.Final\netty-codec-mqtt-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-redis\4.1.119.Final\netty-codec-redis-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-smtp\4.1.119.Final\netty-codec-smtp-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-socks\4.1.119.Final\netty-codec-socks-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-stomp\4.1.119.Final\netty-codec-stomp-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec-xml\4.1.119.Final\netty-codec-xml-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-handler-proxy\4.1.119.Final\netty-handler-proxy-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-handler-ssl-ocsp\4.1.119.Final\netty-handler-ssl-ocsp-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-resolver-dns\4.1.119.Final\netty-resolver-dns-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-rxtx\4.1.119.Final\netty-transport-rxtx-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-sctp\4.1.119.Final\netty-transport-sctp-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-udt\4.1.119.Final\netty-transport-udt-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-classes-kqueue\4.1.119.Final\netty-transport-classes-kqueue-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-resolver-dns-classes-macos\4.1.119.Final\netty-resolver-dns-classes-macos-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final-linux-x86_64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final-linux-aarch_64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final-linux-riscv64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-kqueue\4.1.119.Final\netty-transport-native-kqueue-4.1.119.Final-osx-x86_64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-kqueue\4.1.119.Final\netty-transport-native-kqueue-4.1.119.Final-osx-aarch_64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-resolver-dns-native-macos\4.1.119.Final\netty-resolver-dns-native-macos-4.1.119.Final-osx-x86_64.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-resolver-dns-native-macos\4.1.119.Final\netty-resolver-dns-native-macos-4.1.119.Final-osx-aarch_64.jar;C:\Users\A715-42G\.m2\repository\org\apache\dubbo\hessian-lite\4.0.3\hessian-lite-4.0.3.jar;C:\Users\A715-42G\.m2\repository\com\alibaba\fastjson2\fastjson2\2.0.53\fastjson2-2.0.53.jar;C:\Users\A715-42G\.m2\repository\com\google\protobuf\protobuf-java\3.25.5\protobuf-java-3.25.5.jar;C:\Users\A715-42G\.m2\repository\org\apache\curator\curator-framework\5.1.0\curator-framework-5.1.0.jar;C:\Users\A715-42G\.m2\repository\org\apache\curator\curator-client\5.1.0\curator-client-5.1.0.jar;C:\Users\A715-42G\.m2\repository\com\google\guava\guava\27.0.1-jre\guava-27.0.1-jre.jar;C:\Users\A715-42G\.m2\repository\com\google\guava\failureaccess\1.0.1\failureaccess-1.0.1.jar;C:\Users\A715-42G\.m2\repository\com\google\guava\listenablefuture\9999.0-empty-to-avoid-conflict-with-guava\listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar;C:\Users\A715-42G\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\A715-42G\.m2\repository\org\checkerframework\checker-qual\2.5.2\checker-qual-2.5.2.jar;C:\Users\A715-42G\.m2\repository\com\google\errorprone\error_prone_annotations\2.2.0\error_prone_annotations-2.2.0.jar;C:\Users\A715-42G\.m2\repository\com\google\j2objc\j2objc-annotations\1.1\j2objc-annotations-1.1.jar;C:\Users\A715-42G\.m2\repository\org\codehaus\mojo\animal-sniffer-annotations\1.17\animal-sniffer-annotations-1.17.jar;C:\Users\A715-42G\.m2\repository\org\apache\zookeeper\zookeeper\3.7.1\zookeeper-3.7.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\zookeeper\zookeeper-jute\3.7.1\zookeeper-jute-3.7.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\yetus\audience-annotations\0.12.0\audience-annotations-0.12.0.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-handler\4.1.119.Final\netty-handler-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-common\4.1.119.Final\netty-common-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-resolver\4.1.119.Final\netty-resolver-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-buffer\4.1.119.Final\netty-buffer-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport\4.1.119.Final\netty-transport-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-unix-common\4.1.119.Final\netty-transport-native-unix-common-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-codec\4.1.119.Final\netty-codec-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\io\netty\netty-transport-classes-epoll\4.1.119.Final\netty-transport-classes-epoll-4.1.119.Final.jar;C:\Users\A715-42G\.m2\repository\org\slf4j\slf4j-api\2.0.17\slf4j-api-2.0.17.jar;C:\Users\A715-42G\.m2\repository\org\apache\curator\curator-recipes\5.5.0\curator-recipes-5.5.0.jar;C:\Users\A715-42G\.m2\repository\org\apache\curator\curator-x-discovery\5.5.0\curator-x-discovery-5.5.0.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-starter-vault-config\4.1.1\spring-cloud-starter-vault-config-4.1.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\httpcomponents\client5\httpclient5\5.3.1\httpclient5-5.3.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\httpcomponents\core5\httpcore5-h2\5.2.5\httpcore5-h2-5.2.5.jar;C:\Users\A715-42G\.m2\repository\org\apache\httpcomponents\core5\httpcore5\5.2.5\httpcore5-5.2.5.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-starter\4.1.2\spring-cloud-starter-4.1.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-context\4.1.2\spring-cloud-context-4.1.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-commons\4.1.2\spring-cloud-commons-4.1.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-rsa\1.1.2\spring-security-rsa-1.1.2.jar;C:\Users\A715-42G\.m2\repository\org\bouncycastle\bcprov-jdk18on\1.77\bcprov-jdk18on-1.77.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-vault-config\4.1.1\spring-cloud-vault-config-4.1.1.jar;C:\Users\A715-42G\.m2\repository\org\springframework\vault\spring-vault-core\3.1.1\spring-vault-core-3.1.1.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-data-redis\3.3.11\spring-boot-starter-data-redis-3.3.11.jar;C:\Users\A715-42G\.m2\repository\io\lettuce\lettuce-core\6.3.2.RELEASE\lettuce-core-6.3.2.RELEASE.jar;C:\Users\A715-42G\.m2\repository\io\projectreactor\reactor-core\3.6.16\reactor-core-3.6.16.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-redis\3.3.11\spring-data-redis-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-keyvalue\3.3.11\spring-data-keyvalue-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-oxm\6.1.19\spring-oxm-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-context-support\6.1.19\spring-context-support-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-stream\4.2.1\spring-cloud-stream-4.2.1.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-messaging\6.1.19\spring-messaging-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\integration\spring-integration-core\6.3.9\spring-integration-core-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\integration\spring-integration-jmx\6.3.9\spring-integration-jmx-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\retry\spring-retry\2.0.11\spring-retry-2.0.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-function-context\4.2.2\spring-cloud-function-context-4.2.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-function-core\4.2.2\spring-cloud-function-core-4.2.2.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-joda\2.17.3\jackson-datatype-joda-2.17.3.jar;C:\Users\A715-42G\.m2\repository\joda-time\joda-time\2.10.14\joda-time-2.10.14.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-starter-stream-kafka\4.2.1\spring-cloud-starter-stream-kafka-4.2.1.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-stream-binder-kafka\4.2.1\spring-cloud-stream-binder-kafka-4.2.1.jar;C:\Users\A715-42G\.m2\repository\org\springframework\cloud\spring-cloud-stream-binder-kafka-core\4.2.1\spring-cloud-stream-binder-kafka-core-4.2.1.jar;C:\Users\A715-42G\.m2\repository\org\springframework\integration\spring-integration-kafka\6.3.9\spring-integration-kafka-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\kafka\spring-kafka\3.2.8\spring-kafka-3.2.8.jar;C:\Users\A715-42G\.m2\repository\org\apache\kafka\kafka-clients\3.7.2\kafka-clients-3.7.2.jar;C:\Users\A715-42G\.m2\repository\com\github\luben\zstd-jni\1.5.6-4\zstd-jni-1.5.6-4.jar;C:\Users\A715-42G\.m2\repository\org\lz4\lz4-java\1.8.0\lz4-java-1.8.0.jar;C:\Users\A715-42G\.m2\repository\org\xerial\snappy\snappy-java\1.1.10.5\snappy-java-1.1.10.5.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.3.11\spring-boot-starter-security-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-aop\6.1.19\spring-aop-6.1.19.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-config\6.3.9\spring-security-config-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-web\6.3.9\spring-security-web-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-oauth2-resource-server\3.3.11\spring-boot-starter-oauth2-resource-server-3.3.11.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-core\6.3.9\spring-security-core-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-crypto\6.3.9\spring-security-crypto-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-oauth2-resource-server\6.3.9\spring-security-oauth2-resource-server-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-oauth2-core\6.3.9\spring-security-oauth2-core-6.3.9.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-oauth2-jose\6.3.9\spring-security-oauth2-jose-6.3.9.jar;C:\Users\A715-42G\.m2\repository\com\nimbusds\nimbus-jose-jwt\9.37.3\nimbus-jose-jwt-9.37.3.jar;C:\Users\A715-42G\.m2\repository\com\github\stephenc\jcip\jcip-annotations\1.0-1\jcip-annotations-1.0-1.jar;C:\Users\A715-42G\.m2\repository\org\keycloak\keycloak-admin-client\26.0.0\keycloak-admin-client-26.0.0.jar;C:\Users\A715-42G\.m2\repository\org\keycloak\keycloak-client-common-synced\26.0.0\keycloak-client-common-synced-26.0.0.jar;C:\Users\A715-42G\.m2\repository\org\jboss\logging\commons-logging-jboss-logging\1.0.0.Final\commons-logging-jboss-logging-1.0.0.Final.jar;C:\Users\A715-42G\.m2\repository\org\apache\httpcomponents\httpclient\4.5.14\httpclient-4.5.14.jar;C:\Users\A715-42G\.m2\repository\org\apache\httpcomponents\httpcore\4.4.16\httpcore-4.4.16.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.17.3\jackson-core-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.17.3\jackson-annotations-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.17.3\jackson-datatype-jdk8-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.17.3\jackson-datatype-jsr310-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\eclipse\microprofile\openapi\microprofile-openapi-api\3.1.1\microprofile-openapi-api-3.1.1.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-client\6.2.9.Final\resteasy-client-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-client-api\6.2.9.Final\resteasy-client-api-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-core-spi\6.2.9.Final\resteasy-core-spi-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-core\6.2.9.Final\resteasy-core-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\org\jboss\jandex\2.4.5.Final\jandex-2.4.5.Final.jar;C:\Users\A715-42G\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\A715-42G\.m2\repository\com\ibm\async\asyncutil\0.1.0\asyncutil-0.1.0.jar;C:\Users\A715-42G\.m2\repository\commons-codec\commons-codec\1.16.1\commons-codec-1.16.1.jar;C:\Users\A715-42G\.m2\repository\jakarta\ws\rs\jakarta.ws.rs-api\3.1.0\jakarta.ws.rs-api-3.1.0.jar;C:\Users\A715-42G\.m2\repository\org\reactivestreams\reactive-streams\1.0.4\reactive-streams-1.0.4.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-multipart-provider\6.2.9.Final\resteasy-multipart-provider-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\jakarta\mail\jakarta.mail-api\2.1.3\jakarta.mail-api-2.1.3.jar;C:\Users\A715-42G\.m2\repository\org\eclipse\angus\angus-mail\2.0.3\angus-mail-2.0.3.jar;C:\Users\A715-42G\.m2\repository\org\apache\james\apache-mime4j-dom\0.8.11\apache-mime4j-dom-0.8.11.jar;C:\Users\A715-42G\.m2\repository\org\apache\james\apache-mime4j-core\0.8.11\apache-mime4j-core-0.8.11.jar;C:\Users\A715-42G\.m2\repository\org\apache\james\apache-mime4j-storage\0.8.11\apache-mime4j-storage-0.8.11.jar;C:\Users\A715-42G\.m2\repository\commons-io\commons-io\2.11.0\commons-io-2.11.0.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-jackson2-provider\6.2.9.Final\resteasy-jackson2-provider-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\jakarta\rs\jackson-jakarta-rs-base\2.17.3\jackson-jakarta-rs-base-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\jakarta\rs\jackson-jakarta-rs-json-provider\2.17.3\jackson-jakarta-rs-json-provider-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\module\jackson-module-jakarta-xmlbind-annotations\2.17.3\jackson-module-jakarta-xmlbind-annotations-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\github\java-json-tools\json-patch\1.13\json-patch-1.13.jar;C:\Users\A715-42G\.m2\repository\com\github\java-json-tools\msg-simple\1.2\msg-simple-1.2.jar;C:\Users\A715-42G\.m2\repository\com\github\java-json-tools\btf\1.3\btf-1.3.jar;C:\Users\A715-42G\.m2\repository\com\github\java-json-tools\jackson-coreutils\2.0\jackson-coreutils-2.0.jar;C:\Users\A715-42G\.m2\repository\org\jboss\resteasy\resteasy-jaxb-provider\6.2.9.Final\resteasy-jaxb-provider-6.2.9.Final.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\codemodel\4.0.5\codemodel-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-jxc\4.0.5\jaxb-jxc-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-xjc\4.0.5\jaxb-xjc-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\xsom\4.0.5\xsom-4.0.5.jar;C:\Users\A715-42G\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\A715-42G\.m2\repository\com\sun\istack\istack-commons-tools\4.1.2\istack-commons-tools-4.1.2.jar;C:\Users\A715-42G\.m2\repository\com\sun\xml\bind\external\relaxng-datatype\4.0.3\relaxng-datatype-4.0.3.jar;C:\Users\A715-42G\.m2\repository\com\sun\xml\bind\external\rngom\4.0.3\rngom-4.0.3.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Saigon, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, java.vm.specification.version=17, os.name=Windows 10, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-17\bin, sun.java.command=com.example.transaction_service.TransactionServiceApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@30636922, com.sun.management.jmxremote=, jdk.debug=release, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, hibernate.cdi.extensions=true, user.home=C:\Users\A715-42G, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-01-17, java.home=C:\Program Files\Java\jdk-17, file.separator=\, spring.output.ansi.enabled=always, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.6+9-LTS-190, user.name=A715-42G, spring.jmx.enabled=true, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\A715-42G\AppData\Local\Temp\, catalina.home=C:\Users\A715-42G\AppData\Local\Temp\tomcat.8088.3192576738296908824, java.version=17.0.6, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=D:\LT_Web\SpringBoot\java-banking-phase2, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=9144, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\A715-42G\AppData\Local\Temp\tomcat.8088.3192576738296908824, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@688ca03f, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-17\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;D:\Document\xxx\apache-maven-3.9.1\bin;C:\Program Files (x86)\Dev-Cpp\MinGW64\bin;C:\Program Files\Git\cmd;C:\Program Files\Java\jdk-17\bin;C:\XamPP\php;D:\LT_Web\SpringBoot\SpringBootCLI\spring-3.2.1\bin;D:\sqlite;D:\Document\Java\Maven\apache-maven-3.9.9\bin;D:\Document\Java\Maven\apache-maven-3.9.9\bin;C:\Program Files\Cloudflare\Cloudflare WARP\;C:\ProgramData\chocolatey\bin;D:\KienLongBank\Vault;D:\GrafanaLabs\grafana\bin;D:\KienLongBank\InfluxData\influxdb-1.8.10-1;D:\Document\Work\Redis;C:\Program Files\Docker\Docker\resources\bin;D:\nodejs\nvm;C:\nvm4w\nodejs;C:\Program Files\nodejs\;C:\Users\A715-42G\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\A715-42G\AppData\Local\Programs\Python\Python310\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\A715-42G\AppData\Local\Programs\Eclipse Adoptium\jdk-17.0.3.7-hotspot\bin;C:\Users\A715-42G\AppData\Local\Microsoft\WindowsApps;C:\Users\A715-42G\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\Azure Data Studio\bin;C:\Program Files\Git\bin;D:\Document\HQT_ATCSDL\MongoDB\mongosh-1.8.2-win32-x64\bin;C:\XamPP\php;C:\Program Files\Azure Data Studio\bin;D:\nodejs\nvm;C:\nvm4w\nodejs;C:\Users\A715-42G\AppData\Roaming\npm;D:\Document\cursor\resources\app\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, emulated-client, sharing, java.vm.version=17.0.6+9-LTS-190, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=61.0, LOGGED_APPLICATION_NAME=[transaction-service] } MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {} MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.example.transaction_service.entity.Transaction] is safe MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@751c4034] under count; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@113f3b5e] under every; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@674e27e9] under any; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4fdcfc75] under sinh; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@594df9c3] under cosh; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@72ef63e6] under tanh; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3090134b] under pi; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@18876e78] under log; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : length -> character_length MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@5076c1c4] under position; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@78a18f1] under overlay; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@1a2223aa] under trim; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@55917e9a] under cast; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@31d1e2d0] under collate; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@139535c0] under extract; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@3457faf] under ifnull; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@28d8bdca] under pad; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@74746ef9] under str; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@79184ceb] under format; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@3c5997bb] under timestampadd; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@5e7785ef] under timestampdiff; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1c514789] under current_date; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@529796dd] under current_time; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@388ee390] under current_timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current date -> current_date MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current time -> current_time MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@19ae289a] under local_date; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@fd55929] under local_time; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@611a1770] under local_datetime; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2ec7eaa0] under offset_datetime; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local date -> local_date MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local time -> local_time MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@46c5fd1a] under instant; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current_instant -> instant MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@2aabb82f] under sql; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@18876e78 MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@53904f92] under lpad; prior registration was NamedSqmFunctionTemplate(lpad) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@5cfecab6] under rpad; prior registration was NamedSqmFunctionTemplate(rpad) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : day -> dayofmonth MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3ef5eea5] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@5076c1c4 MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@7e71ad7e] under trunc; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : truncate -> trunc MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3f3cb426] under bitand; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@98ba070] under bitor; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@60b00f3] under bitxor; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@75625711] under bitnot; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@2fa5501f] under format; prior registration was org.hibernate.dialect.function.FormatFunction@79184ceb MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@fd55929 MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@611a1770 MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7bf9edbb] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3090134b MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@252b76af] under chr; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : char -> chr MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@421667c4] under sysdate; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@7c2fbba7] under listagg; prior registration was null MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - abs(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double acos(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - addtime(TIME datetime, TIME time) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean any(BOOLEAN arg) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer ascii(STRING arg) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double asin(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - avg(arg) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bit_and(arg) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bit_or(arg) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitand(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitnot(arg) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitor(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - bitxor(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - cast(arg as Type) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - ceiling(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Character char(INTEGER arg) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Character chr(INTEGER arg) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]]) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String collate(STRING string as COLLATION collation) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]]) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double cos(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double cosh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double cot(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Long count([distinct ]{arg|*}) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer crc32(arg) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date curdate() MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date current date MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time current time MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current timestamp MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date current_date MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Instant current_instant MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time current_time MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current_timestamp MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time curtime() MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date date(arg) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer datediff(DATE end, DATE start) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer day(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String dayname(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofmonth(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofweek(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofyear(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double degrees(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean every(BOOLEAN arg) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double exp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - floor(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]]) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer hour(TIME arg) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - ifnull(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Instant instant MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]]) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date last_day(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]]) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String left(STRING string, INTEGER length) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double ln(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local date MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local datetime MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local time MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local_date MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local_datetime MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local_time MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtime MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtimestamp MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start]) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1]) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double log10(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double log2(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String lower(STRING string) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String lpad(string, length[, padding]) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters]) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - max(COMPARABLE arg) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String md5(arg) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer microsecond(TIME arg) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - min(COMPARABLE arg) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer minute(TIME arg) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer month(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String monthname(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp now() MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - nullif(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset datetime MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset_datetime MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length]) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character]) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double pi MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer position(STRING pattern in STRING string) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer quarter(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double radians(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double rand([INTEGER seed]) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String repeat(STRING string, INTEGER times) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String reverse(STRING arg) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String right(STRING string, INTEGER length) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places]) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String rpad(string, length[, padding]) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters]) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer second(TIME arg) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String sha(arg) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String sha1(arg) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String sha2(arg0, arg1) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer sign(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double sin(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double sinh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String soundex(arg) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String space(INTEGER arg) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Object sql MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double sqrt(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String str(arg) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length]) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length]) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - subtime(TIME datetime, TIME time) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - sum(arg) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp sysdate() MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double tan(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double tanh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String time(arg) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1]) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - trunc( ... ) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - truncate( ... ) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - String upper(STRING string) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Date utc_date MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Time utc_time MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp utc_timestamp MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_pop(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_samp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Double variance(NUMERIC arg) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer week(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.HQL_FUNCTIONS - Integer year(DATE arg) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG org.hibernate.orm.query.plan.cache - Starting QueryInterpretationCache(2048) MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.e.i.EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.example.transaction_service.entity.Transaction] is safe MDC:[traceId=, spanId=]
2025-06-10 23:46:19 [restartedMain] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-10 23:46:20 [restartedMain] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.example.transaction_service.entity.Transaction]: private accessor [amount] MDC:[traceId=, spanId=]
2025-06-10 23:46:20 [restartedMain] DEBUG o.h.orm.model.mapping.creation - Starting post-init callbacks MDC:[traceId=, spanId=]
2025-06-10 23:46:20 [restartedMain] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(com.example.transaction_service.entity.Transaction) `staticFetchableList` generator MDC:[traceId=, spanId=]
2025-06-10 23:46:20 [restartedMain] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 23:46:20 [restartedMain] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction)] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 23:46:20 [restartedMain] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction.updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction.updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 23:46:20 [restartedMain] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 23:46:20 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: com.example.transaction_service.entity.Transaction MDC:[traceId=, spanId=]
2025-06-10 23:46:20 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select id from tbl_transaction where id=? MDC:[traceId=, spanId=]
2025-06-10 23:46:20 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into tbl_transaction (amount,bank_type,created_at,created_by,currency,description,destination_bank_code,destination_bank_name,failed_reason,from_account_number,reference_code,status,timestamp,to_account_number,type,updated_at,updated_by,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) MDC:[traceId=, spanId=]
2025-06-10 23:46:20 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update tbl_transaction set amount=?,bank_type=?,created_at=?,created_by=?,currency=?,description=?,destination_bank_code=?,destination_bank_name=?,failed_reason=?,from_account_number=?,reference_code=?,status=?,timestamp=?,to_account_number=?,type=?,updated_at=?,updated_by=? where id=? MDC:[traceId=, spanId=]
2025-06-10 23:46:20 [restartedMain] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from tbl_transaction where id=? MDC:[traceId=, spanId=]
2025-06-10 23:46:20 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration) MDC:[traceId=, spanId=]
2025-06-10 23:46:20 [restartedMain] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1e9c55f] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@1aff8652] MDC:[traceId=, spanId=]
2025-06-10 23:46:20 [restartedMain] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named HQL queries MDC:[traceId=, spanId=]
2025-06-10 23:46:20 [restartedMain] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named SQL queries MDC:[traceId=, spanId=]
2025-06-10 23:46:21 [restartedMain] DEBUG org.hibernate.mapping.Table - No alter strings for table : tbl_transaction MDC:[traceId=, spanId=]
2025-06-10 23:46:21 [restartedMain] DEBUG o.h.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4e1a352a MDC:[traceId=, spanId=]
2025-06-10 23:46:21 [restartedMain] DEBUG o.h.internal.SessionFactoryRegistry - Registering SessionFactory: 5a15f928-0e7c-4302-8179-ee9eb8e890a9 (<unnamed>) MDC:[traceId=, spanId=]
2025-06-10 23:46:21 [restartedMain] DEBUG o.h.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured MDC:[traceId=, spanId=]
2025-06-10 23:46:21 [restartedMain] DEBUG o.h.internal.SessionFactoryImpl - Instantiated SessionFactory MDC:[traceId=, spanId=]
2025-06-10 23:46:21 [restartedMain] DEBUG o.h.s.internal.StatisticsInitiator - Statistics initialized [enabled=false] MDC:[traceId=, spanId=]
2025-06-10 23:46:22 [restartedMain] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy3/jdk.proxy3.$Proxy223.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.getCountQuery(JpaQueryLookupStrategy.java:204)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:171)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.example.transaction_service.TransactionServiceApplication.main(TransactionServiceApplication.java:15)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-06-10 23:46:22 [restartedMain] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy3/jdk.proxy3.$Proxy223.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.example.transaction_service.TransactionServiceApplication.main(TransactionServiceApplication.java:15)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-06-10 23:46:22 [restartedMain] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy3/jdk.proxy3.$Proxy223.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.getCountQuery(JpaQueryLookupStrategy.java:204)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:171)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.example.transaction_service.TransactionServiceApplication.main(TransactionServiceApplication.java:15)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-06-10 23:46:22 [restartedMain] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy3/jdk.proxy3.$Proxy223.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.example.transaction_service.TransactionServiceApplication.main(TransactionServiceApplication.java:15)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-06-10 23:46:27 [restartedMain] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-06-10 23:46:27 [restartedMain] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator MDC:[traceId=, spanId=]
2025-06-10 23:46:27 [restartedMain] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory MDC:[traceId=, spanId=]
2025-06-10 23:46:27 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-06-10 23:46:27 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader MDC:[traceId=, spanId=]
2025-06-10 23:46:27 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-06-10 23:46:27 [restartedMain] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-06-10 23:46:27 [restartedMain] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-06-10 23:46:27 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-06-10 23:46:27 [restartedMain] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-06-10 23:46:27 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-06-10 23:46:27 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-06-10 23:46:27 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-06-10 23:46:27 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-06-10 23:46:27 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-06-10 23:46:27 [restartedMain] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-06-10 23:46:31 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 23:46:31 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 23:46:31 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 23:46:31 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 23:46:31 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3cba4879 MDC:[traceId=, spanId=]
2025-06-10 23:46:31 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-10 23:46:31 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3326c9ac MDC:[traceId=, spanId=]
2025-06-10 23:46:31 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 23:46:31 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 23:46:31 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 23:46:31 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 23:46:31 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@567841577 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 23:46:31 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 23:46:31 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(5))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@41db5853 MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(5).fromAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@73537676 MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(5).toAccountNumber)  MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@11f4b9d8 MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(5).type)  MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5418ad3c MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(5).status)  MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@59d1cee9 MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(5).currency)  MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(5)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(5).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(5).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(5).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(5).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(5).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(5).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(5).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(5).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(5).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(5).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(5).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(5).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(5).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(5).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(5).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(5).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(5).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(5)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(5) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(5))@2086843768 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where (t1_0.from_account_number=? or t1_0.to_account_number=?) and t1_0.type=? and t1_0.status=? and t1_0.currency=? order by t1_0.amount limit ?,? MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [69eb51a4-db2f-49ab-acb9-073a0060ce38] MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(5)): 69eb51a4-db2f-49ab-acb9-073a0060ce38 MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(5)#69eb51a4-db2f-49ab-acb9-073a0060ce38] : 372866406 MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [10000.00] MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T13:17:40.592964] MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Chuyển tiền] MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-202506091317401be1dea3] MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T13:17:40.336221] MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [87654321] MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T13:17:50.910739] MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(5)#69eb51a4-db2f-49ab-acb9-073a0060ce38 MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3d65efde MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [b88a97aa-b4ea-4c5b-901e-9315c412c554] MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(5)): b88a97aa-b4ea-4c5b-901e-9315c412c554 MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(5)#b88a97aa-b4ea-4c5b-901e-9315c412c554] : 836452459 MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [23000.00] MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T13:55:06.439062] MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Chuyển tiền] MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-202506091355063d72d7f8] MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T13:55:06.236412] MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [87654321] MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T13:55:15.761254] MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(5)#b88a97aa-b4ea-4c5b-901e-9315c412c554 MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3d65efde MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [7bc62a37-4e1d-4d5a-a411-7ab3b54c26ba] MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(5)): 7bc62a37-4e1d-4d5a-a411-7ab3b54c26ba MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(5)#7bc62a37-4e1d-4d5a-a411-7ab3b54c26ba] : 200676717 MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [30000.00] MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-09T11:01:03.744642] MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [Đại Lê chuyển tiền] MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-20250609110103251c5a17] MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-09T11:01:03.632657] MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [87654321] MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-09T11:01:19.381894] MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(5)#7bc62a37-4e1d-4d5a-a411-7ab3b54c26ba MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3d65efde MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [d41a58db-a3d5-46ce-8424-1de5833b2b30] MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.example.transaction_service.entity.Transaction(5)): d41a58db-a3d5-46ce-8424-1de5833b2b30 MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.example.transaction_service.entity.Transaction(5)#d41a58db-a3d5-46ce-8424-1de5833b2b30] : 51160185 MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [222121.00] MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [INTERNAL] MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [2025-06-06T14:55:17.181641] MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [5] - [VND] MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [6] - [] MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [7] - [970452] MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [8] - [Ngân hàng TMCP Kiên Long (KienLong Bank)] MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [9] - [null] MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [10] - [12345678] MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [11] - [TXN-12345678-2025060614551714b225e2] MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [12] - [COMPLETED] MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [13] - [2025-06-06T14:55:17.070079] MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [14] - [27072000] MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [15] - [TRANSFER] MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [16] - [2025-06-06T14:55:27.673405] MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [17] - [test123] MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.example.transaction_service.entity.Transaction(5)#d41a58db-a3d5-46ce-8424-1de5833b2b30 MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3d65efde MDC:[traceId=, spanId=]
2025-06-10 23:46:44 [http-nio-8088-exec-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 23:47:30 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 23:47:30 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 23:47:30 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 23:47:30 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 23:47:30 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3cad56a9 MDC:[traceId=, spanId=]
2025-06-10 23:47:31 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-10 23:47:31 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6c1fe07a MDC:[traceId=, spanId=]
2025-06-10 23:47:31 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 23:47:31 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 23:47:31 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 23:47:31 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 23:47:31 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@320199491 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 23:47:31 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 23:47:31 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 23:48:30 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 23:48:30 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 23:48:30 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 23:48:30 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 23:48:30 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1386eb07 MDC:[traceId=, spanId=]
2025-06-10 23:48:30 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-10 23:48:30 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6623f4c5 MDC:[traceId=, spanId=]
2025-06-10 23:48:30 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 23:48:30 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 23:48:30 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 23:48:30 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 23:48:31 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@1090484526 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 23:48:31 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 23:48:31 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 23:49:31 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 23:49:31 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 23:49:31 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 23:49:31 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 23:49:31 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2c82a844 MDC:[traceId=, spanId=]
2025-06-10 23:49:31 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-10 23:49:31 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@598012bf MDC:[traceId=, spanId=]
2025-06-10 23:49:31 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 23:49:31 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 23:49:31 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 23:49:31 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 23:49:31 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@1145327190 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 23:49:31 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 23:49:31 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 23:50:30 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 23:50:30 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 23:50:30 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 23:50:30 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 23:50:30 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@50c8be9f MDC:[traceId=, spanId=]
2025-06-10 23:50:30 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-10 23:50:30 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@10689e53 MDC:[traceId=, spanId=]
2025-06-10 23:50:30 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 23:50:30 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 23:50:30 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 23:50:30 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 23:50:30 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@606720850 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 23:50:30 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 23:50:30 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 23:51:30 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 23:51:30 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 23:51:30 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 23:51:30 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 23:51:30 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@23f19490 MDC:[traceId=, spanId=]
2025-06-10 23:51:30 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-10 23:51:30 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@54f316b3 MDC:[traceId=, spanId=]
2025-06-10 23:51:30 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 23:51:30 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 23:51:30 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 23:51:30 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 23:51:30 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@1383133087 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 23:51:30 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 23:51:30 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 23:52:30 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 23:52:30 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 23:52:30 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 23:52:30 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 23:52:30 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3afeccc6 MDC:[traceId=, spanId=]
2025-06-10 23:52:30 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-10 23:52:30 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@47fb2fb9 MDC:[traceId=, spanId=]
2025-06-10 23:52:30 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 23:52:30 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 23:52:30 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 23:52:30 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 23:52:30 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@1850937345 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 23:52:30 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 23:52:30 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 23:53:30 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 23:53:30 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 23:53:31 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 23:53:31 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 23:53:31 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@59b5b94d MDC:[traceId=, spanId=]
2025-06-10 23:53:31 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-10 23:53:31 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@33bf17b1 MDC:[traceId=, spanId=]
2025-06-10 23:53:31 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 23:53:31 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 23:53:31 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 23:53:31 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 23:53:31 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@505054004 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 23:53:31 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 23:53:31 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 23:54:30 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 23:54:30 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 23:54:30 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 23:54:30 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 23:54:30 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@26a78d87 MDC:[traceId=, spanId=]
2025-06-10 23:54:30 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-10 23:54:30 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@28b57d9a MDC:[traceId=, spanId=]
2025-06-10 23:54:30 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 23:54:30 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 23:54:30 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 23:54:30 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 23:54:30 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@656668720 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 23:54:30 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 23:54:30 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 23:55:30 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 23:55:30 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 23:55:30 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 23:55:30 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 23:55:30 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@576e31ed MDC:[traceId=, spanId=]
2025-06-10 23:55:30 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-10 23:55:30 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@72c22458 MDC:[traceId=, spanId=]
2025-06-10 23:55:30 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 23:55:30 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 23:55:30 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 23:55:30 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 23:55:30 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@1419337883 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 23:55:30 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 23:55:30 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 23:56:30 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 23:56:30 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 23:56:30 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 23:56:30 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 23:56:30 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@48806f4 MDC:[traceId=, spanId=]
2025-06-10 23:56:30 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-10 23:56:30 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@17ed26b4 MDC:[traceId=, spanId=]
2025-06-10 23:56:30 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 23:56:30 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 23:56:30 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 23:56:30 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 23:56:30 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@200348336 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 23:56:30 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 23:56:30 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 23:57:31 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 23:57:31 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 23:57:31 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 23:57:31 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 23:57:31 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@213e30ec MDC:[traceId=, spanId=]
2025-06-10 23:57:31 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-10 23:57:31 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3493db2b MDC:[traceId=, spanId=]
2025-06-10 23:57:31 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 23:57:31 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 23:57:31 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 23:57:31 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 23:57:31 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@1340010695 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 23:57:31 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 23:57:31 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 23:58:30 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 23:58:30 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 23:58:30 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 23:58:30 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 23:58:30 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@69cfdc5 MDC:[traceId=, spanId=]
2025-06-10 23:58:30 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-10 23:58:30 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3677fbe6 MDC:[traceId=, spanId=]
2025-06-10 23:58:30 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 23:58:30 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 23:58:30 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 23:58:30 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 23:58:30 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@1769294115 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 23:58:30 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 23:58:30 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-06-10 23:59:31 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-06-10 23:59:31 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-06-10 23:59:31 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0 MDC:[traceId=, spanId=]
2025-06-10 23:59:31 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.example.transaction_service.entity.Transaction(2))] with identifierForTableGroup [com.example.transaction_service.entity.Transaction] for NavigablePath [com.example.transaction_service.entity.Transaction]  MDC:[traceId=, spanId=]
2025-06-10 23:59:31 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1909aa64 MDC:[traceId=, spanId=]
2025-06-10 23:59:31 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).status)  MDC:[traceId=, spanId=]
2025-06-10 23:59:31 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2f5e2737 MDC:[traceId=, spanId=]
2025-06-10 23:59:31 [scheduling-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.transaction_service.entity.Transaction(2).timestamp)  MDC:[traceId=, spanId=]
2025-06-10 23:59:31 [scheduling-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.example.transaction_service.entity.Transaction(2)]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).amount]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).bankType]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdAt]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).createdBy]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).currency]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).description]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).destinationBankName]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).failedReason]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).fromAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).referenceCode]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).status]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).timestamp]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).toAccountNumber]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).type]
 |  +-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedAt]
 |  \-BasicFetch [com.example.transaction_service.entity.Transaction(2).updatedBy]
 MDC:[traceId=, spanId=]
2025-06-10 23:59:31 [scheduling-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.transaction_service.entity.Transaction(2)) {
          primaryTableReference : tbl_transaction as t1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-06-10 23:59:31 [scheduling-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-06-10 23:59:31 [scheduling-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.example.transaction_service.entity.Transaction(2) -> EntityResultInitializer(com.example.transaction_service.entity.Transaction(2))@1058572595 (SingleTableEntityPersister(com.example.transaction_service.entity.Transaction))
 MDC:[traceId=, spanId=]
2025-06-10 23:59:31 [scheduling-1] DEBUG org.hibernate.SQL - select t1_0.id,t1_0.amount,t1_0.bank_type,t1_0.created_at,t1_0.created_by,t1_0.currency,t1_0.description,t1_0.destination_bank_code,t1_0.destination_bank_name,t1_0.failed_reason,t1_0.from_account_number,t1_0.reference_code,t1_0.status,t1_0.timestamp,t1_0.to_account_number,t1_0.type,t1_0.updated_at,t1_0.updated_by from tbl_transaction t1_0 where t1_0.status=? and t1_0.timestamp<? MDC:[traceId=, spanId=]
2025-06-10 23:59:31 [scheduling-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
